{"pages":[{"text":"CV/Resume source code John Pfeiffer began with DOS on a 486, tweaking DOS to make games work and BBS's... Then there was Internet -> University -> Linux -> Football (aka soccer) Interesting places and cultures I've enjoyed: California -> Tennessee -> France -> Los Angeles -> Bulgaria -> England -> SF Bay Area Interesting things I've learned: Football (soccer) -> Piano -> Karate -> Guitar -> French -> Bulgarian Still working on: Be Good, Change the World","tags":"pages","loc":"/about-john-pfeiffer","title":"About John Pfeiffer"},{"text":"html <em> is markdown *emphasis* or _italics_ = emphasis or italics html <strong> is markdown **strong* or __bold__ = strong or bold html strikethrough is not supported but can just be <del>strikethrough</del> = strikethrough html <blockquote> is markdown > at the start of each line unordered list - item or alternatives: + item , * item html <hr /> is markdown - - - or alternatives: * * * , *** , ***** html <a href= for hyper links is: [an example](http://example.com/ \"ExampleTitle\") an example both absolute and relative links are supported, as well as reference links that are defined elsewhere: This is [an example][someid] [someid]: http://example.com/ \"Optional Title Here\" numbered list 1 at the beginning of each line any digit will do, the numbering is rendered in order ensure the numbered list is surrounded by empty lines Inline code is markdown `backtick around the text` = backtick around the text A code block is markdown indent 4 spaces or 1 tab a blank line in the code block still needs to be indented ensure the code block is surrounded by empty lines H1 # H1 H6 ###### H6 more info","tags":"programming","loc":"/markdown-syntax-cheatsheet","title":"Markdown syntax cheatsheet"},{"text":"While you can use a CNAME for HTTP, (usually a subdomain like blog.example.com), it will not work with HTTPS (no option to upload your own cert). create a bitbucket account with username create a repo named username.bitbucket.org mkdir username.bitbucket.org cd username.bitbucket.org echo \"hi\" > index.html git init . git add git commit -m \"first site index\" git remote add origin git@bitbucket.org:username/username.bitbucket.org.git git push origin master git branch --set-upstream master origin/master git pull https://username.bitbucket.org","tags":"programming","loc":"/creating-a-static-web-site-with-bitbucket","title":"Creating a static web site with Bitbucket"},{"text":"Pelican is an open source project that converts static text files into an html site. Install Pelican sudo pip install pelican Markdown installing both the pelican and the Markdown packages optionally use virtualenv venv; source venv/bin/activate pelican-quickstart Welcome to pelican-quickstart v3.3.0. This script will help you create a new Pelican-based website. Please answer the following questions so this script can generate the files needed by Pelican. > Where do you want to create your new web site? [.] > What will be the title of this web site? johnpfeiffer.bitbucket.org > Who will be the author of this web site? john pfeiffer > What will be the default language of this web site? [en] > Do you want to specify a URL prefix? e.g., http://example.com (Y/n) > What is your URL prefix? (see above example; no trailing slash) https://johnpfeiffer.bitbucket.org > Do you want to enable article pagination? (Y/n) > Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) > Do you want an auto-reload & simpleHTTP script to assist with theme and site development? (Y/n) > Do you want to upload your website using FTP? (y/N) > Do you want to upload your website using SSH? (y/N) > Do you want to upload your website using Dropbox? (y/N) > Do you want to upload your website using S3? (y/N) > Do you want to upload your website using Rackspace Cloud Files? (y/N) Done. Your new project is available at /home/ubuntu/BLOG tree . \u251c\u2500\u2500 content \u251c\u2500\u2500 develop_server.sh \u251c\u2500\u2500 fabfile.py \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 output \u251c\u2500\u2500 pelicanconf.py \u2514\u2500\u2500 publishconf.py 2 directories, 5 files mkdir -p images mkdir -p content/pages vi content/hello_world.md Title: My first blog post Date: 2014-06-21 20:20 Tags: python Slug: my-first-blog-post Author: John Pfeiffer Summary: Short version for index and feeds This is the content of my first blog post. make devserver ...Starting up Pelican and pelican.server... ./develop_server.sh stop stop the dev server (required if reloading the .conf file) This only works with the basic first setup, after that it is better to manually use multiple screens: make clean make regenerate auto detects any content changes and reloads itself cd output; python -m SimpleHTTPServer Serving HTTP on 0.0.0.0 port 8000 ... (Control + C to quit) http://localhost:8000 vi pelicanconf.py DEFAULT_PAGINATION = 10 Uncomment following line if you want document-relative URLs when developing RELATIVE_URLS = True THEME = 'themes/pelican-elegant' PLUGIN_PATHS = 'plugins' PLUGINS = ['sitemap', 'extract_toc', 'tipue_search'] MD_EXTENSIONS = ['codehilite(css_class=highlight)', 'extra', 'headerid', 'toc'] DIRECT_TEMPLATES = (('index', 'tags', 'categories','archives', 'search', '404')) STATIC_PATHS = ['theme/images', 'images'] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #!/usr/bin/env python # -*- coding: utf-8 -*- # from __future__ import unicode_literals AUTHOR = u'john pfeiffer' SITENAME = u'johnpfeiffer' SITEURL = '' OUTPUT_PATH = 'output/' DEFAULT_DATE_FORMAT = '%Y-%m- %d ' # Feed generation is usually not desired when developing FEED_ALL_ATOM = None CATEGORY_FEED_ATOM = None TRANSLATION_FEED_ATOM = None LINKS = (( 'About John Pfeiffer' , 'http://johnpfeiffer.bitbucket.org/pages/about-john-pfeiffer.html' ), ( 'CV' , 'https://www.linkedin.com/in/foupfeiffer' ), ( 'source code' , 'https://bitbucket.org/johnpfeiffer' )) # DEFAULT_PAGINATION = 10 # Uncomment following line if you want document-relative URLs when developing #RELATIVE_URLS = True STATIC_PATHS = [ 'images' ] Importing from drupal Hack the Drupal files to allow a lot more than 10 items per feed: grep -r 'items per feed' . learned from drupal-7.28/modules/system/system.module vi modules/system/system.admin.inc $form['feed_default_items'] Add to the dropdown choices of 10, 15, 30 etc. the option of 999 sudo apt-get install pandoc sudo pip install feedparser pelican-import -h pelican-import --feed http://blog.example.com/rss.xml -o output/ -m markdown https://github.com/getpelican/pelican-themes git clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes http://pelican.readthedocs.org/en/latest/pelican-themes.html sudo pelican-themes --install ~/pelican-themes/foundation-default-colours Installing themes... Copying /home/ubuntu/pelican-themes/foundation-default-colours to /usr/local/lib/python2.7/dist-packages/pelican/themes/foundation-default-colours... pelican-themes --list vi pelicanconf.py THEME = \"/home/ubuntu/pelican-themes/foundation-default-colours\" Tweaking default syntax highlighting: http://pygments.org/docs/lexers/ https://github.com/getpelican/pelican-plugins git clone https://github.com/getpelican/pelican-plugins PLUGIN_PATHS = [ ' / home / ubuntu / Desktop / repos / pelican - plugins ' ] PLUGINS = [ ' sitemap ' ] SITEMAP = { ' format ' : ' xml ' , ' priorities ' : { ' articles ' : 0.5 , ' indexes ' : 0.5 , ' pages ' : 0.5 }, ' changefreqs ' : { ' articles ' : ' monthly ' , ' indexes ' : ' daily ' , ' pages ' : ' monthly ' } }","tags":"programming","loc":"/how-to-set-up-a-pelican-static-blog-site","title":"How to set up a Pelican static blog site"},{"text":"Security is risk management: the hundreds of articles about \"changing passwords doesn't improve security\" are just hype/noise without context. While \"changing the highly complex password every 90 days\" is considered inefficient and draconian... But what about changing the password once a year? While it's likely that an external attacker or disgruntled employee will use a compromised password immediately, it doesn't mean there isn't a good reason to choose a frequency of password change: If a sticky note attached to a laptop sold at a garage sale is still valid for the company's online bank account then you're in trouble. Reduce the risk, have a policy to manage that window of access to something you're comfortable with. Plus, Dependency Visibility and the opportunity to improve your infrastructure is well worth the cost of finding every hard coded place that a password is embedded in your organization (e.g. you know that you just changed the password and you quickly find something not working as opposed to a random event like a forgotten password reset by one individual in the organization that creates a mystery problem in mission critical systems for IT to track down). tags: IT","tags":"content","loc":"/yes-change-your-password-regularly","title":"Yes, Change your Password regularly"}]}