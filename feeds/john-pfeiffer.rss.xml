<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>johnpfeiffer</title><link>https://blog.john-pfeiffer.com/</link><description></description><lastBuildDate>Tue, 23 May 2017 22:24:00 -0700</lastBuildDate><item><title>Continuous Delivery with Bitbucket Pipelines and Google App Engine Deployment and the storage.objects.list error</title><link>https://blog.john-pfeiffer.com/continuous-delivery-with-bitbucket-pipelines-and-google-app-engine-deployment-and-the-storageobjectslist-error/</link><description>
&lt;p&gt;One thing that critical to writing software is actually delivering value.  That means shipping the bits, luckily the internet makes the cost of moving 1's and 0's near zero.&lt;/p&gt;
&lt;p&gt;Like any other chore or drudge work the release process should be automated.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Continuous_delivery"&gt;https://en.wikipedia.org/wiki/Continuous_delivery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I attempted to follow Google App Engine's documentation on how to setup Bitbucket Pipelines (yeah it's crazy how much free compute there is in the world such that I can tie together a free Continuous Integration service with a free Application Hosting service) but ran into a few snags I thought I'd document.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Leveraging SaaS source control, CI, and CD means inherently placing trust in those vendors (and their ops and security teams)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="google-cloud-setup"&gt;Google Cloud Setup&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://cloud.google.com/solutions/continuous-delivery-bitbucket-app-engine"&gt;https://cloud.google.com/solutions/continuous-delivery-bitbucket-app-engine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Besides creating an App Engine Project (python) also create the credentials to allow the automated deployment.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new Cloud project in Google: &lt;a href="https://console.cloud.google.com/projectcreate"&gt;https://console.cloud.google.com/projectcreate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Also create a new App Engine Project: &lt;a href="https://console.cloud.google.com/projectselector/appengine/create?lang=python&amp;amp;st=true"&gt;https://console.cloud.google.com/projectselector/appengine/create?lang=python&amp;amp;st=true&lt;/a&gt; (you will need to choose your region such as us-central, or use the Web UI &lt;a href="https://console.cloud.google.com/iam-admin/iam/project?project=example-john"&gt;https://console.cloud.google.com/iam-admin/iam/project?project=example-john&lt;/a&gt; (Use the "Select a project dropdown" in the middle and in the Select menu use the + symbol on the right to "Create project")&lt;/li&gt;
&lt;li&gt;Note the ID: &lt;a href="https://console.cloud.google.com/home/dashboard?project=example-john"&gt;https://console.cloud.google.com/home/dashboard?project=example-john&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BILLING on the left, enable that (and link your credit card I guess, Google are moving everything away from free - and the credit card is another way to track and correlate everything you do)&lt;/li&gt;
&lt;li&gt;Enable the App Engine Admin API &lt;a href="https://console.cloud.google.com/apis/library?project=example-john"&gt;https://console.cloud.google.com/apis/library?project=example-john&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Navigate to the Google Cloud Platform Console credentials page &lt;a href="https://console.cloud.google.com/apis/credentials?project=example-john"&gt;https://console.cloud.google.com/apis/credentials?project=example-john&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click Create credentials -&amp;gt; Service account key&lt;/li&gt;
&lt;li&gt;Select "New service account" from the Service account dropdown&lt;/li&gt;
&lt;li&gt;Input a name like "Bitbucket authorization" in the Service account name field&lt;/li&gt;
&lt;li&gt;ENSURE the ROLES contain at least: App Engine -&amp;gt; &lt;strong&gt;App Engine Admin&lt;/strong&gt; and Storage -&amp;gt; &lt;strong&gt;Storage Admin&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click the Create button. A copy of the JSON file will automatically download to your computer.   (if necessary on the right three dots choose "create key" -&amp;gt; create private key for "..." JSON&lt;/li&gt;
&lt;li&gt;Click Create credentials &amp;gt; API key&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="bitbucket-setup"&gt;Bitbucket Setup&lt;/h2&gt;
&lt;p&gt;Create a new repository in bitbucket that will contain the code deployed to Google App Engine (in my example I'll use the Python native one but I know soon everything will Docker based)&lt;/p&gt;
&lt;p&gt;The minimum version of the two app engine python app you will need are:&lt;/p&gt;
&lt;h3 id="appyaml"&gt;app.yaml&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.*&lt;/span&gt;
  &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;
  &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more info &lt;a href="https://developers.google.com/appengine/docs/python/config/appconfig"&gt;https://developers.google.com/appengine/docs/python/config/appconfig&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mainpy"&gt;main.py&lt;/h3&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;A previous example of writing a Python web app with Google App Engine &lt;a href="https://blog.john-pfeiffer.com/google-app-engine-python/"&gt;https://blog.john-pfeiffer.com/google-app-engine-python/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="bitbucket-pipelines-configuration"&gt;Bitbucket Pipelines Configuration&lt;/h2&gt;
&lt;p&gt;Enable the Pipelines feature: &lt;a href="https://bitbucket.org/johnpfeiffer/continuous-deployment-bitbucket/addon/pipelines/home#!/getting-started"&gt;https://bitbucket.org/johnpfeiffer/continuous-deployment-bitbucket/addon/pipelines/home#!/getting-started&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="configuring-the-secure-environment-variables-in-bitbucket-pipelines"&gt;Configuring the secure environment variables in Bitbucket Pipelines&lt;/h3&gt;
&lt;p&gt;Use the Bitbucket WebUI in order to securely add the three variables (project id, api key, secrets json).&lt;/p&gt;
&lt;p&gt;i.e. &lt;a href="https://bitbucket.org/johnpfeiffer/continuous-deployment-bitbucket/admin/addon/admin/pipelines/repository-variables"&gt;https://bitbucket.org/johnpfeiffer/continuous-deployment-bitbucket/admin/addon/admin/pipelines/repository-variables&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CLOUDSDK_CORE_PROJECT (the app engine project id)&lt;/li&gt;
&lt;li&gt;GOOGLE_API_KEY&lt;/li&gt;
&lt;li&gt;GOOGLE_CLIENT_SECRET (all of the contents of the json file pasted in)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Ensure the Pipelines Environment variable of GOOGLE_CLIENT_SECRET is "Secured"&lt;/strong&gt; so it is encrypted (i.e. all asterisks in the forms or in the log output)&lt;/p&gt;
&lt;p&gt;Full instructions: &lt;a href="https://cloud.google.com/solutions/continuous-delivery-bitbucket-app-engine#setting_up_environment_variables"&gt;https://cloud.google.com/solutions/continuous-delivery-bitbucket-app-engine#setting_up_environment_variables&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="bitbucket-pipelinesyml-file"&gt;bitbucket-pipelines.yml file&lt;/h3&gt;
&lt;p&gt;A yaml configuration file describes the work that you instruct Bitbucket Pipelines to do, in this case we are doing the extra work of grabbing the remote google cloud SDK and installing it so that we use it with the credentials to deploy the app.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;2.7&lt;/span&gt;

&lt;span class="n"&gt;pipelines&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;CLOUDSDK_CORE_DISABLE_PROMPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;SDK_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;SDK_FILENAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cloud&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;SDK_VERSION&lt;/span&gt;&lt;span class="o"&gt;}-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gz&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;J&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;dl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/dl/cloudsdk/channels/rapid/downloads/&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;SDK_FILENAME&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;zxvf&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;SDK_FILENAME&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;}:&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;}/&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cloud&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sdk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;GAE_PYTHONPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;}/&lt;/span&gt;&lt;span class="n"&gt;google_appengine&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PYTHONPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;PYTHONPATH&lt;/span&gt;&lt;span class="o"&gt;}:&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;GAE_PYTHONPATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fetch_gae_sdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="s2"&gt;"${GAE_PYTHONPATH}"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"${PYTHONPATH}"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;GAE_PYTHONPATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"key = '${GOOGLE_API_KEY}'"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;api_key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;GOOGLE_CLIENT_SECRET&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;json&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gcloud&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;json&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gcloud&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;verbosity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;yaml&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;promote&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A best practice is to pull the dependency from storage you have control over (or simply vendor the SDK in the source code) rather than downloading it every time and risking the upstream pinned version being removed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="scriptsfetch_gae_sdkpy"&gt;scripts/fetch_gae_sdk.py&lt;/h3&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# Copyright 2015 Google Inc. All rights reserved.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Licensed under the Apache License, Version 2.0 (the "License");&lt;/span&gt;
&lt;span class="c1"&gt;# you may not use this file except in compliance with the License.&lt;/span&gt;
&lt;span class="c1"&gt;# You may obtain a copy of the License at&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#     http://www.apache.org/licenses/LICENSE-2.0&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Unless required by applicable law or agreed to in writing, software&lt;/span&gt;
&lt;span class="c1"&gt;# distributed under the License is distributed on an "AS IS" BASIS,&lt;/span&gt;
&lt;span class="c1"&gt;# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/span&gt;
&lt;span class="c1"&gt;# See the License for the specific language governing permissions and&lt;/span&gt;
&lt;span class="c1"&gt;# limitations under the License.&lt;/span&gt;

&lt;span class="c1"&gt;# Retrieved from https://github.com/Google/oauth2client&lt;/span&gt;
&lt;span class="sd"&gt;"""Fetch the most recent GAE SDK and decompress it in the current directory.&lt;/span&gt;
&lt;span class="sd"&gt;Usage:&lt;/span&gt;
&lt;span class="sd"&gt;    fetch_gae_sdk.py [&amp;lt;dest_dir&amp;gt;]&lt;/span&gt;
&lt;span class="sd"&gt;Current releases are listed here:&lt;/span&gt;
&lt;span class="sd"&gt;    https://www.googleapis.com/storage/v1/b/appengine-sdks/o?prefix=featured&lt;/span&gt;
&lt;span class="sd"&gt;"""&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;StringIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zipfile&lt;/span&gt;

&lt;span class="n"&gt;_SDK_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'https://www.googleapis.com/storage/v1/b/appengine-sdks/o?prefix=featured'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_gae_versions&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;version_info_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_SDK_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;version_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version_info_json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;version_info&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'items'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_version_tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;version_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rpartition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'_'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;version_string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_sdk_urls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sdk_versions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;python_releases&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sdk_versions&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'featured/google_appengine'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="n"&gt;current_releases&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;python_releases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_version_tuple&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'mediaLink'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;release&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;current_releases&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Usage: {} [&amp;lt;destination_dir&amp;gt;]'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;dest_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;'.'&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest_dir&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'google_appengine'&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GAE SDK already installed at {}, exiting.'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest_dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="n"&gt;sdk_versions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_gae_versions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;sdk_versions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Error fetching GAE SDK version info'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;sdk_urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_sdk_urls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sdk_versions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sdk_url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sdk_urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;sdk_contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sdk_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;pass&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Could not read SDK from any of {}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sdk_urls&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;sdk_contents&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;zip_contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zipfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ZipFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sdk_contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;zip_contents&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extractall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GAE SDK Installed to {}.'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest_dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Error extracting SDK contents'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[:]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This is google's script to download and extract their App Engine SDK , included here only for completeness&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="push-a-commit-to-trigger-a-deployment"&gt;Push a commit to trigger a deployment&lt;/h2&gt;
&lt;p&gt;The whole point of all of that work is to make life easier for every commit that follows.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add --all .
git commit -m 'example google app engine app deployed via bitbucket pipelines'
git push
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can monitor the results of every change in the Addon's output logs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/continuous-deployment-bitbucket/addon/pipelines/home#!/"&gt;https://bitbucket.org/johnpfeiffer/continuous-deployment-bitbucket/addon/pipelines/home#!/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can monitor the deployment history in Google App Engine's console:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://console.cloud.google.com/appengine/versions?project=bitbucket-pipelines&amp;amp;serviceId=default"&gt;https://console.cloud.google.com/appengine/versions?project=bitbucket-pipelines&amp;amp;serviceId=default&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course see the currently deployed application in action:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket-pipelines.appspot.com/"&gt;https://bitbucket-pipelines.appspot.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="actually-using-automated-testing"&gt;Actually using automated testing&lt;/h2&gt;
&lt;p&gt;CI (continuous integration) testing is the ideal next thing to add as this allows you to automatically prevent critical errors from being deployed to production.&lt;/p&gt;
&lt;p&gt;This means adding unit tests (test_main.py) and then running them by updating bitbucket-pipelines.yml&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;- python test_main.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to keep extending the work required by installing any requirements.txt dependencies (i.e. only required for testing) or running post deployment end-to-end smoke tests.&lt;/p&gt;
&lt;h2 id="double-checking-security"&gt;Double checking security&lt;/h2&gt;
&lt;p&gt;If your repository is public the pipelines log outputs will be public.  Double check that you are not "leaking" your API key, secrets, or hardcoded passwords. =|&lt;/p&gt;
&lt;h2 id="troubleshooting"&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The current Google Cloud project [go-lanscan] does not contain an App Engine application. Use &lt;code&gt;gcloud app create&lt;/code&gt; to initialize an App Engine application within the project.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You need to create the initial app engine project, either with the WebUI &lt;a href="https://console.cloud.google.com/appengine/start?project=bitbucket-pipelines"&gt;https://console.cloud.google.com/appengine/start?project=bitbucket-pipelines&lt;/a&gt; or using the GCloud CLI&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;You will need to be prompted for your region, i.e. us-central&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;"Does not contain a valid app engine project"&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most likely the app.yaml has deprecated fields or invalid characters&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;"does not contain an App Engine application."&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most likely the app.yaml has deprecated fields or invalid characters, or maybe missing a main.py altogether&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;"ERROR: The [application] field is specified in file [/opt/atlassian/pipelines/agent/build/app.yaml]"&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is because previously app.yaml included "application" and "version" but those lines are now deprecated, delete them&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;"You do not have permission to access app "&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most likely the Role of "App Engine Admin" still needs to be added, use the IAM for the project to update the Permissions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;e.g. &lt;a href="https://console.cloud.google.com/iam-admin/iam/project?project=bitbucket-pipelines"&gt;https://console.cloud.google.com/iam-admin/iam/project?project=bitbucket-pipelines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or ensure you have an API key generated and added to the Bitbucket Pipelines environment ... or delete all API keys and service accounts and do them again (because it seems to get stuck if you have encrypted API key or something)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://console.cloud.google.com/apis/credentials?project=bitbucket-pipelines"&gt;https://console.cloud.google.com/apis/credentials?project=bitbucket-pipelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://console.cloud.google.com/iam-admin/serviceaccounts/project?project=bitbucket-pipelines"&gt;https://console.cloud.google.com/iam-admin/serviceaccounts/project?project=bitbucket-pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;"Caller does not have storage.objects.list access to bucket staging.bitbucket-pipelines.appspot.com."&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ensure the Role "Storage Object Admin" was added to the Roles during creation, see above&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This guy got really close and helped me find the hint about Storage Object Admin: &lt;a href="http://www.deadunicornz.org/blog/2017/01/31/travis-ci-and-deploying-golang-apps-to-gae/"&gt;http://www.deadunicornz.org/blog/2017/01/31/travis-ci-and-deploying-golang-apps-to-gae/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="using-docker-with-bitbucket-pipelines"&gt;Using Docker with Bitbucket Pipelines&lt;/h2&gt;
&lt;p&gt;I could reduce the time required to build (and decouple the build stages) by using a Docker image that already contains the GCloud SDK.&lt;/p&gt;
&lt;p&gt;This also extends the flexibility if part of your build flow is to build and tag a Docker image as an artifact that can be used for multiple tests (i.e. parallelization) and especially if you are already using Docker in Production.&lt;/p&gt;
&lt;h3 id="create-an-automated-docker-image-build-in-docker-hub"&gt;Create an automated docker image build in Docker Hub&lt;/h3&gt;
&lt;p&gt;Link a source code repository to Docker (sadly the bitbucket one requires overly broad permissions whereas the github one only requires public read)&lt;/p&gt;
&lt;p&gt;Follow the steps in their tutorial to create a repository with a Dockerfile and then have it auto-build an image and upload it to Docker Hub&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/docker-hub/builds/"&gt;https://docs.docker.com/docker-hub/builds/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/foupfeiffer/gcloud-sdk/~/dockerfile/"&gt;https://hub.docker.com/r/foupfeiffer/gcloud-sdk/~/dockerfile/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="using-a-public-image-from-docker-hub"&gt;Using a public image from Docker Hub&lt;/h3&gt;
&lt;p&gt;To verify App Engine publishing from the Docker container manually: 
&lt;code&gt;docker run --rm -it --volume /opt/mysecrets:/opt/mysecrets --volume /opt/myrepo:/opt/myrepo foupfeiffer/gcloud-sdk /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Run these commands in the Docker container...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp -a /opt/mysecrets/api_key.py /opt/myrepo
export CLOUDSDK_CORE_DISABLE_PROMPTS=1
export CLOUDSDK_CORE_PROJECT=example-gae-id
cd /opt/myrepo
gcloud auth activate-service-account --key-file /opt/mysecrets/client-secret.json
gcloud --verbosity=error app deploy app.yaml --promote
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You are about to deploy the following services: Uploading 7 files to Google Cloud Storage&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;This assumes you have already correctly setup your Google Cloud Project, Google App Engine Project, Google Permissions, and that your repository has the correct app.yaml and main.py&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="updating-your-bitbucket-pipelinesyml-to-use-a-public-docker-image"&gt;Updating your bitbucket-pipelines.yml to use a public docker image&lt;/h3&gt;
&lt;p&gt;With your open sourced Dockerfile and docker image built in docker hub we can simplify some of the steps in our previous bitbucket-pipelines.yml file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;foupfeiffer&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gcloud&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sdk&lt;/span&gt;

&lt;span class="n"&gt;pipelines&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;CLOUDSDK_CORE_DISABLE_PROMPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"key = '${GOOGLE_API_KEY}'"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;api_key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;GOOGLE_CLIENT_SECRET&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;json&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gcloud&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;json&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gcloud&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;verbosity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;yaml&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;promote&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;One you have pushed this change every future build will have the capabilities of your docker image (i.e. go build)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/bitbucket/use-docker-images-as-build-environments-in-bitbucket-pipelines-792298897.html"&gt;https://confluence.atlassian.com/bitbucket/use-docker-images-as-build-environments-in-bitbucket-pipelines-792298897.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/bitbucket/debug-your-pipelines-locally-with-docker-838273569.html"&gt;https://confluence.atlassian.com/bitbucket/debug-your-pipelines-locally-with-docker-838273569.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 23 May 2017 22:24:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2017-05-23:continuous-delivery-with-bitbucket-pipelines-and-google-app-engine-deployment-and-the-storageobjectslist-error/</guid><category>bitbucket</category><category>google app engine</category><category>gae</category><category>bitbucket</category><category>pipelines</category><category>ci</category><category>cd</category><category>deployment</category><category>storage.objects.list</category></item><item><title>Mid 2017 technology and business prediction for 2018 and beyond</title><link>https://blog.john-pfeiffer.com/mid-2017-technology-and-business-prediction-for-2018-and-beyond/</link><description>
&lt;h1 id="the-future-already-happened"&gt;The future already happened&lt;/h1&gt;
&lt;p&gt;The internet boom has arrived silently and the "everything is online" happened while we were all looking down at our smart phones.&lt;/p&gt;
&lt;p&gt;New giants have emerged to rule the economic landscape that have eclipsed, at least in virtual specie, their physical-and-brick-and-mortar competitors: Apple, Alphabet (Google), Microsoft, Amazon.com... Facebook...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_public_corporations_by_market_capitalization#2017"&gt;https://en.wikipedia.org/wiki/List_of_public_corporations_by_market_capitalization#2017&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="the-market-can-stay-irrational-longer-than-you-can-stay-solvent"&gt;The market can stay irrational longer than you can stay solvent&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;-John Maynard Keynes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We have entered into an uncharted area in terms of economics; much financial data and many models indicate that 2017 is very near the peak of a trend.&lt;/p&gt;
&lt;p&gt;The Case-Shiller Home Price Index is topping the maximums of 2006 and almost double the "normal" of 100 and the CyclicallyAdjustedPriceEarnings ratio is at 29, also soon to be double the median of 16.  Neither of these tools are intended for "timing the market" or identifying the end of a trend, but they certainly indicate a longer wait for expected return on investment and higher level of risk of a "return to the mean".&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The CAPE ratio hit 44 right before the "dot-com" bust (pokerface)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fred.stlouisfed.org/series/CSUSHPINSA"&gt;https://fred.stlouisfed.org/series/CSUSHPINSA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://us.spindices.com/index-family/real-estate/sp-corelogic-case-shiller"&gt;https://us.spindices.com/index-family/real-estate/sp-corelogic-case-shiller&lt;/a&gt; 188 is near an all time high (of 195 in 2006)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Case%E2%80%93Shiller_index#History_and_methodology"&gt;https://en.wikipedia.org/wiki/Case%E2%80%93Shiller_index#History_and_methodology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ycharts.com/indicators/pe10"&gt;https://ycharts.com/indicators/pe10&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cyclically_adjusted_price-to-earnings_ratio"&gt;https://en.wikipedia.org/wiki/Cyclically_adjusted_price-to-earnings_ratio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.businessinsider.com/robert-shiller-explains-how-to-use-cape-2013-11"&gt;http://www.businessinsider.com/robert-shiller-explains-how-to-use-cape-2013-11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Dot-com_bubble#Stock_market_bubble"&gt;https://en.wikipedia.org/wiki/Dot-com_bubble#Stock_market_bubble&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The most optimistic perspective is that globalization and technology have dramatically increasing efficiencies, though that same combination drove the "Roaring 20's" and (along with political and economic factors) created the "Great Depression".&lt;/p&gt;
&lt;h1 id="prediction-of-a-crash"&gt;Prediction of a Crash&lt;/h1&gt;
&lt;p&gt;I'll make a prediction (not that it will change the future in any way).  Given the cyclical nature of economies, it has to come to pass sometime ;]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The United States is due for an economic crash soon&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At a minimum a recession, most likely another "Great Recession", hopefully not another "Great Depression".&lt;/p&gt;
&lt;p&gt;There will most likely be a catalyst like unexpected political collapse (Presidential impeachment), armed conflict (i.e. North Korea), or environmental disaster (i.e. global pandemic or solar flare).&lt;/p&gt;
&lt;p&gt;Technology is not a root cause but creates the sense of instability in society and economics as efficiencies disrupt existing balances.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A "perfect storm" of global economic weakness with globalization that interconnects all economies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://web-beta.archive.org/web/20170409211343/https://www.visualcapitalist.com/chart-epic-collapse-deutsche-bank/"&gt;https://web-beta.archive.org/web/20170409211343/https://www.visualcapitalist.com/chart-epic-collapse-deutsche-bank/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.telegraph.co.uk/business/2016/07/16/why-italys-banking-crisis-will-shake-the-eurozone-to-its-core/"&gt;http://www.telegraph.co.uk/business/2016/07/16/why-italys-banking-crisis-will-shake-the-eurozone-to-its-core/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fortune.com/2016/01/23/china-collapse/"&gt;https://fortune.com/2016/01/23/china-collapse/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Populist moves to nationalism and tariffs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.theguardian.com/business/2016/aug/17/brexit-trade-deals-gruelling-challenge-taking-back-control"&gt;https://www.theguardian.com/business/2016/aug/17/brexit-trade-deals-gruelling-challenge-taking-back-control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bloomberg.com/politics/articles/2017-01-18/why-trump-s-tariff-threats-get-taken-so-seriously-quicktake-q-a"&gt;https://www.bloomberg.com/politics/articles/2017-01-18/why-trump-s-tariff-threats-get-taken-so-seriously-quicktake-q-a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Smoot%E2%80%93Hawley_Tariff_Act"&gt;https://en.wikipedia.org/wiki/Smoot%E2%80%93Hawley_Tariff_Act&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Deregulation and "pro-business" policies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nytimes.com/2017/02/03/business/dealbook/trump-congress-financial-regulations.html"&gt;https://www.nytimes.com/2017/02/03/business/dealbook/trump-congress-financial-regulations.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Warren_G._Harding#Scandals"&gt;https://en.wikipedia.org/wiki/Warren_G._Harding#Scandals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Calvin_Coolidge#Taxation_and_government_spending"&gt;https://en.wikipedia.org/wiki/Calvin_Coolidge#Taxation_and_government_spending&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Herbert_Hoover#Presidential_election_of_1928"&gt;https://en.wikipedia.org/wiki/Herbert_Hoover#Presidential_election_of_1928&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Minsky_moment"&gt;https://en.wikipedia.org/wiki/Minsky_moment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Great_Depression"&gt;https://en.wikipedia.org/wiki/Great_Depression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="increased-migration"&gt;Increased Migration&lt;/h2&gt;
&lt;p&gt;In the wake of global instability people will seek, in ever larger numbers, societies and infrastructure that are stable.&lt;/p&gt;
&lt;p&gt;Those places that adopt policies and mechanisms to successfully integrate and take advantage of the influx of newcomers will do quite well.&lt;/p&gt;
&lt;p&gt;Those places that attempt to remain isolated will incur ever growing costs and simultaneously be outcompeted by places that have successfully leveraged new ideas, new labor, and new capital.&lt;/p&gt;
&lt;h1 id="technology-predictions"&gt;Technology Predictions&lt;/h1&gt;
&lt;p&gt;We are rapidly moving into a new era of technology and information where energy is becoming cheaper than ever and computing has become more powerful and ubiquitous than ever.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bloomberg.com/news/articles/2016-12-15/world-energy-hits-a-turning-point-solar-that-s-cheaper-than-wind"&gt;https://www.bloomberg.com/news/articles/2016-12-15/world-energy-hits-a-turning-point-solar-that-s-cheaper-than-wind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_countries_by_number_of_mobile_phones_in_use"&gt;https://en.wikipedia.org/wiki/List_of_countries_by_number_of_mobile_phones_in_use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pewinternet.org/2015/04/01/us-smartphone-use-in-2015/"&gt;http://www.pewinternet.org/2015/04/01/us-smartphone-use-in-2015/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.businessinsider.com/24-mind-blowing-facts-about-business-2013-6?op=1"&gt;http://www.businessinsider.com/24-mind-blowing-facts-about-business-2013-6?op=1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="scarcity-of-privacy"&gt;Scarcity of Privacy&lt;/h2&gt;
&lt;p&gt;The proliferation of smart phones with cameras everywhere, drones, actively listening devices like Siri/Alexa/Google means that it is far harder than ever to be alone, unwatched, and unheard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.businessinsider.com/siri-vs-google-assistant-cortana-alexa-2016-11/"&gt;http://www.businessinsider.com/siri-vs-google-assistant-cortana-alexa-2016-11/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.economist.com/news/science-and-technology/21666118-miniature-pilotless-aircraft-are-verge-becoming-commonplace-welcome"&gt;http://www.economist.com/news/science-and-technology/21666118-miniature-pilotless-aircraft-are-verge-becoming-commonplace-welcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://money.cnn.com/2017/03/28/technology/us-drone-registrations/index.html"&gt;http://money.cnn.com/2017/03/28/technology/us-drone-registrations/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Big data means an unprecedented amoutn of correlation can be created.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.nytimes.com/2012/02/19/magazine/shopping-habits.html"&gt;http://www.nytimes.com/2012/02/19/magazine/shopping-habits.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wired.com/2012/08/apple-amazon-mat-honan-hacking/"&gt;https://www.wired.com/2012/08/apple-amazon-mat-honan-hacking/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theguardian.com/technology/2014/apr/05/google-flu-big-data-help-make-gigantic-mistakes"&gt;https://www.theguardian.com/technology/2014/apr/05/google-flu-big-data-help-make-gigantic-mistakes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While this benefits society in emergency situations (i.e. earthquakes, fire, crime, etc.) it also means there will be a lucrative business opportunity in technology that can actually &lt;strong&gt;restore privacy&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://timelines.latimes.com/snapchat-stanford-ipo/"&gt;http://timelines.latimes.com/snapchat-stanford-ipo/&lt;/a&gt; (&lt;em&gt;a $30B+ social network that makes data ephemeral&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Faraday_cage"&gt;https://en.wikipedia.org/wiki/Faraday_cage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="pendulum-swings-back-to-decentralization"&gt;Pendulum swings back to decentralization&lt;/h2&gt;
&lt;p&gt;"The Cloud" is very popular now, the availability of energy and local compute (including smartphones) means it will become cheaper and cheaper to compute things locally.&lt;/p&gt;
&lt;p&gt;Even as the internet has allowed incredible flows of data and exchange of information the amount of locally generated information ("internet of things") is growing very large very quickly as well.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://techcrunch.com/2017/02/02/aws-still-owns-the-cloud/"&gt;https://techcrunch.com/2017/02/02/aws-still-owns-the-cloud/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnbc.com/2017/04/27/microsoft-azure-growing-faster-than-aws-google-cloud-behind.html"&gt;http://www.cnbc.com/2017/04/27/microsoft-azure-growing-faster-than-aws-google-cloud-behind.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Moore%27s_law"&gt;https://en.wikipedia.org/wiki/Moore%27s_law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://royal.pingdom.com/2010/10/22/incredible-growth-of-the-internet-since-2000/"&gt;http://royal.pingdom.com/2010/10/22/incredible-growth-of-the-internet-since-2000/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ncta.com/sites/prod/files/GROWTH_IOT_091616_IF-800w.png"&gt;https://www.ncta.com/sites/prod/files/GROWTH_IOT_091616_IF-800w.png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yet given the increasing requirement for security (and privacy) it makes a lot more sense to keep data and compute inside a protected space.  One of the simplest ways to prevent hacking, keep data secure, and increase privacy is to never have the data leave its place of origin.&lt;/p&gt;
&lt;p&gt;Homes, and more importantly businesses, will not want every camera, microphone, and sensor sending data into "The Cloud" to centralized (and often vulnerable) warehouses.  Instead there is an opportunity for businesses and technology that leverage cheap compute to create &lt;strong&gt;"mini private clouds"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The slow deprecation of SMTP and HTTP (both unencrypted plaintext) being the backbone of the internet will be increasingly replaced with secure alternatives (encrypted, dedicated networks, extra authentication layers like 2FA and MFA) to create &lt;strong&gt;virtual tunnels&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The companies and tools that allow redundancy and accessibility of data in a secure fashion will profit from the abundance of local compute/storage and scarcity of security and privacy.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 07 May 2017 20:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2017-05-07:mid-2017-technology-and-business-prediction-for-2018-and-beyond/</guid><category>prediction</category><category>business model</category><category>minsky cycle</category><category>crash</category><category>privacy</category><category>decentralization</category></item><item><title>Golang Concurrency Goroutines and Channels</title><link>https://blog.john-pfeiffer.com/golang-concurrency-goroutines-and-channels/</link><description>
&lt;p&gt;If there is a killer feature to Go it is the focus on concurrency.  This article captures some of the basics and I hope to someday write a follow-up article on more advanced topics.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Go is a compiled, concurrent, garbage-collected, statically typed language"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://talks.golang.org/2012/splash.article"&gt;https://talks.golang.org/2012/splash.article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Distributed systems and large data sizes mean developers are forced to think in parallelism, or are they?&lt;/p&gt;
&lt;p&gt;Using Go channels (based upon Communicating Sequential Processes &lt;a href="https://en.wikipedia.org/wiki/Communicating_sequential_processes"&gt;https://en.wikipedia.org/wiki/Communicating_sequential_processes&lt;/a&gt;, &lt;a href="http://www.cs.cmu.edu/~crary/819-f09/Hoare78.pdf"&gt;http://www.cs.cmu.edu/~crary/819-f09/Hoare78.pdf&lt;/a&gt;) developers can write code that feels very imperative and sequential, but designed in such a way that parallelism comes easily.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/doc/effective_go.html#concurrency"&gt;https://golang.org/doc/effective_go.html#concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/concurrency-is-not-parallelism"&gt;https://blog.golang.org/concurrency-is-not-parallelism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="go-and-goroutines"&gt;Go and Goroutines&lt;/h2&gt;
&lt;p&gt;A goroutine is a "lightweight thread" that allows for a far higher amount of concurrency than just depending on OS processes or even traditional threading (and much simpler than attempting to explicitly organize around a defined number of processors or threads).&lt;/p&gt;
&lt;p&gt;In a very meta sense every Go program uses concurrency because the main function itself is an implicit goroutine (and will not wait or might block forever ;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"example"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"done"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will exit without printing "example" because using the "go" keyword runs the example function in a new goroutine&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/h6_B0whHxE"&gt;https://play.golang.org/p/h6_B0whHxE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/testing/#hdr-Main"&gt;https://golang.org/pkg/testing/#hdr-Main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/"&gt;http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Green_threads"&gt;https://en.wikipedia.org/wiki/Green_threads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no explicit external management of a goroutine once it has started, terminating a goroutine is implemented via an exception or exit in the code that the goroutine is running, usually signalled via a channel&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since Goroutines are cooperative they are not pre-empt-able...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dave.cheney.net/2016/12/22/never-start-a-goroutine-without-knowing-how-it-will-stop"&gt;https://dave.cheney.net/2016/12/22/never-start-a-goroutine-without-knowing-how-it-will-stop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Preemption_(computing)"&gt;https://en.wikipedia.org/wiki/Preemption_(computing)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/go/issues/10958"&gt;https://github.com/golang/go/issues/10958&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sync-with-a-waitgroup"&gt;Sync with a WaitGroup&lt;/h2&gt;
&lt;p&gt;The most straightforward way to fix the previous trivial example is to specify in advance that the implicit main goroutine should wait before continuing...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"sync"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"example"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WaitGroup&lt;/span&gt;
    &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;
    &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"done"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;The example function remains unchanged&lt;/li&gt;
&lt;li&gt;The waitgroup will expect one call of "Done"&lt;/li&gt;
&lt;li&gt;The go keyword now calls an anonymous function that calls wg.Done() (accessed using closure) after example()&lt;/li&gt;
&lt;li&gt;The waitgroup.Wait() blocks until the correct number of Done() calls have been made&lt;/li&gt;
&lt;li&gt;The example function sleep and print finally finish&lt;/li&gt;
&lt;li&gt;The waitgroup unblocks and the main goroutine can finally print "done" and exit&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/p0jDoiGBT4"&gt;https://play.golang.org/p/p0jDoiGBT4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/sync/#example_WaitGroup"&gt;https://golang.org/pkg/sync/#example_WaitGroup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="channels"&gt;Channels&lt;/h2&gt;
&lt;p&gt;Channels are the recommended way of communicating when using goroutines (and sharing resources).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;- the arrow always points to the left&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sleeping..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
        &lt;span class="nb"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// IF NOT CLOSED THEN DEADLOCK&lt;/span&gt;
        &lt;span class="c1"&gt;// c &amp;lt;- 2  DO NOT SEND TO A CLOSED CHANNEL, IT WILL PANIC&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"anonymous function, a channel passed a value via closure"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;since a channel is a reference type "make" is used and the &amp;lt;- sends a value to the channel, later &amp;lt;- is used to receive a value&lt;/li&gt;
&lt;li&gt;a closed channel cannot be written to further and will PANIC "send on a closed channel"&lt;/li&gt;
&lt;li&gt;if you forget to close a channel, later reading from an open unbuffered channel which does not have data will exit "fatal error: all goroutines are asleep - deadlock!"&lt;/li&gt;
&lt;li&gt;an "unbuffered" channel "blocks" until both the sender and receiver are ready&lt;/li&gt;
&lt;li&gt;the Println function reads from the channel, in this case the channel acts as a synchronization tool that blocks at the Print statement and prevents the main goroutine from exiting&lt;/li&gt;
&lt;li&gt;The final printed output will be: "0 false", since the channel is closed and empty subsequent receives will return a the empty value "zero" and the state of the channel (in this case "false")&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/RR0PWmAeKa"&gt;https://play.golang.org/p/RR0PWmAeKa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gobyexample.com/channels"&gt;https://gobyexample.com/channels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dave.cheney.net/2013/04/30/curious-channels"&gt;https://dave.cheney.net/2013/04/30/curious-channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="buffered-channels-and-returning-a-value"&gt;Buffered channels and returning a value&lt;/h3&gt;
&lt;p&gt;A common problem is one part of the application running faster than another part and one way to "unblock" the fast part is to use a buffer to create a queue for the slower part to catch up.
This kind of issue occurs in a "pipeline" of producers/consumers (also known as sources/sinks)...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"sync"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;slowReceiver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WaitGroup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"received"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// c &amp;lt;- 42 // THIS WOULD CAUSE AN ERROR "(send to receive-only type &amp;lt;-chan int)"&lt;/span&gt;
        &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;fastSender&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="kd"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WaitGroup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
        &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// fmt.Println(&amp;lt;-c) // THIS WOULD CAUSE AN ERROR "(receive from send-only type chan&amp;lt;- int)"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WaitGroup&lt;/span&gt;
    &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="nx"&gt;slowReceiver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fastSender&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Since&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;This example shows how to specify a channel of type that either only sends or only receives&lt;/li&gt;
&lt;li&gt;log works the same as fmt and Since() a very convenient way to output elapsed time&lt;/li&gt;
&lt;li&gt;Without the waitgroup Wait() main would exit after 1 second with only "received 1" and never reach "received 4" (5 seconds)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/pipelines"&gt;https://blog.golang.org/pipelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/NcEOgCiSQs"&gt;https://play.golang.org/p/NcEOgCiSQs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tour.golang.org/concurrency/3"&gt;https://tour.golang.org/concurrency/3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="using-select-to-not-block-a-channel"&gt;Using Select to not block a channel&lt;/h3&gt;
&lt;p&gt;Channels are most useful when they can block asynchronously until an event occurs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s2"&gt;"time"&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s2"&gt;"fmt"&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;myDelayedQuit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;mySleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"begin non blocking wait..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"received:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"done"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;mySleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Second&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s2"&gt;"woke up"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;myDelayedQuit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Second&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;for&lt;/strong&gt; loops forever until the return statement&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;select&lt;/strong&gt; will wait and whenever a case can be filled it will unblock&lt;/li&gt;
&lt;li&gt;after 1 second the sleep function is done and sends the "woke up" message&lt;/li&gt;
&lt;li&gt;after 2 seconds the true boolean is sent and main finishes&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/JBrhHZVq6a"&gt;https://play.golang.org/p/JBrhHZVq6a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="real-example-of-concurrency-in-a-lan-scanner"&gt;Real Example of Concurrency in a LAN Scanner&lt;/h3&gt;
&lt;p&gt;A real world example is discovering all of the hosts listening on a given port in local area network (subnet).&lt;/p&gt;
&lt;p&gt;In a serial example waiting 2 seconds for each host to respond would mean waiting 512 seconds in a "normal" /24 subnet of ~256 hosts (ignoring the .255 broadcast and .0)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt; &lt;span class="nx"&gt;IPCheckResult&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;wg&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WaitGroup&lt;/span&gt;
&lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;addresses&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"checking"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// https://golang.org/doc/faq#closures_and_goroutines&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ip&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;checkIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;wg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Here the channel is simply used as a "lock free" place to aggregate all of the results of the goroutines, sync occurs via the waitgroup which will wait until every pre-added item is decremented by a Done(), there is definitely a possibility for an off-by-one gotcha that will hang your program!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/go-lanscan/src"&gt;https://bitbucket.org/johnpfeiffer/go-lanscan/src&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="troubleshooting-race-conditions"&gt;Troubleshooting Race Conditions&lt;/h3&gt;
&lt;p&gt;A common gotcha is that in Go maps are not safe for concurrent use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/go-maps-in-action"&gt;https://blog.golang.org/go-maps-in-action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/doc/faq#atomic_maps"&gt;https://golang.org/doc/faq#atomic_maps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this example of a simple in memory cache the expiration was implemented...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;MemoryCache&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expiresSeconds&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="nx"&gt;timer&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expiresSeconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;
        &lt;span class="nx"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// log.Println("Timer triggered cache expiration for", key)&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The error here is that the goroutine that wakes up to "expire" and remove a key/value pair from the map may contend with any other later operation (i.e. Get, Set, Delete) that is also modifying the map&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/go-cache/src"&gt;https://bitbucket.org/johnpfeiffer/go-cache/src&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A really helpful tool is to run &lt;code&gt;go test -race&lt;/code&gt; , it may take a little bit but "WARNING: DATA RACE" is pretty clear.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/race-detector"&gt;https://blog.golang.org/race-detector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="more-random-thoughts-on-concurrency-and-control"&gt;More random thoughts on concurrency and control&lt;/h3&gt;
&lt;p&gt;Controlling goroutines is like controlling threads or even any other control flow.&lt;/p&gt;
&lt;p&gt;Iterative vs Recursive calculation of factorial means either predetermined count of iterations or an indeterminate count (recursion) with a (base case) signal for termination (often called a sentinel value).&lt;/p&gt;
&lt;p&gt;So either the External Controller knows when to stop or each actor checks if it is time to stop.&lt;/p&gt;
&lt;h4 id="an-important-consideration-to-termination-is-cleanup"&gt;An important consideration to termination is cleanup&lt;/h4&gt;
&lt;p&gt;If the actor is responsible for self cleanup (as it knows what resources it is using) this can lead to resource leaks if the actor terminates unexpectedly without cleaning up.&lt;/p&gt;
&lt;p&gt;If using "dependency injection" then the Controller has knowledge of what resources were shared with the agents and can do cleanup, even if actors terminate unexpectedly.&lt;/p&gt;
&lt;p&gt;An increasingly common approach is for the Framework to facilitate cleanup so that the complexity is removed from both the Controller and the actors (e.g. Garbage Collection or Go deferred)&lt;/p&gt;
&lt;h4 id="poison-jobs-cons-and-pros"&gt;Poison Jobs cons and pros&lt;/h4&gt;
&lt;p&gt;One challenge with workers and a queue is the "poison job" which may create inefficiency or halt the system entirely as each worker who takes the job blocks/loops forever or terminates unexpectedly.&lt;/p&gt;
&lt;p&gt;One possible solution is to have a retry count so that any job which has timed out or failed and retried repeatedly is moved to a FailedJob queue (for future manual inspection and debugging) or logged and dropped entirely.&lt;/p&gt;
&lt;p&gt;Interestingly something like a "poison job" is actually a useful way to signal to concurrent actors to have an orderly termination even if they have not completed their jobs (i.e. a full system shutdown has been initiated and we want to trigger self cleanup).&lt;/p&gt;
&lt;h4 id="patterns-for-channels-and-flow-control"&gt;Patterns for Channels and Flow Control&lt;/h4&gt;
&lt;p&gt;Go Channels represent a way to map out the dependencies and then allow the compiler to optimize for parallelization.&lt;/p&gt;
&lt;p&gt;Waiting indefinitely for all goroutines to return is naive, and any termination signal must have the ability to truly interrupt work in progress, which it does NOT for goroutines, so any call that a goroutine is making MUST have a timebound where it can check for the termination signal.&lt;/p&gt;
&lt;p&gt;Therefore write your goroutines carefully knowing that you cannot cancel/aka force them to return from an infinite loop/long call, unless you exit main entirely.&lt;/p&gt;
&lt;p&gt;This means that for architecture decisions it is important to consider small separate services/applications that can provide resource usage transparency and termination control.  While this is becomes a tradeoff with coordination/orchestration complexity it is worth having modularity and clear boundaries in any application of decent complexity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple and deterministic: fan out with predefined count, close the channel&lt;/li&gt;
&lt;li&gt;Provide timeouts and retries: a failure can occur anywhere and graceful degradation means setting limits and dealing with ephemeral errors&lt;/li&gt;
&lt;li&gt;Use the select statement for a non-blocking way to check for early application termination events&lt;/li&gt;
&lt;li&gt;Use buffers to even out spikes in work from sources/production&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 12 Apr 2017 22:54:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2017-04-12:golang-concurrency-goroutines-and-channels/</guid><category>go</category><category>golang</category><category>goroutines</category><category>concurrency</category><category>channels</category><category>select</category><category>pipelines</category></item><item><title>Code is for Humans</title><link>https://blog.john-pfeiffer.com/code-is-for-humans/</link><description>
&lt;h2 id="code-is-the-automation-of-a-solution"&gt;Code is the automation of a solution&lt;/h2&gt;
&lt;p&gt;I often feel like the purpose of Programming is lost in the many discussions and debates about Programming.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Sometimes the code is conflated as being the solution.  Whatever problem is being worked on has to be thought through and different possible solutions evaluated.  Then one approach has to be implemented and tested.  That implementation can take many forms: &lt;a href="https://en.wikipedia.org/wiki/Turing_completeness"&gt;https://en.wikipedia.org/wiki/Turing_completeness&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternatively a solution is seen as perfected because it is written in code.  Yet all it takes is one more edge case, one more nuance on a variable, and the "solution" will fail.  (Bugs!)  Perhaps this is because the trivial examples of coding are often related to math, like adding two numbers, that we are somewhat misled to believe that the correct code will always solve the problem (and amplified by Computer Science which uses proofs to mathematically prove algorithmic solutions).  &lt;a href="https://en.wikipedia.org/wiki/P_versus_NP_problem"&gt;https://en.wikipedia.org/wiki/P_versus_NP_problem&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Selecting the correct algorithm assumes understanding of the problem, the constraints, and of course the end goal.  Much like picking an off-the-shelf tool or open source library or framework, there has to be some comprehension of whether their solution is your solution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The purpose of the automation is to repeatedly solve the problem (assuming the same environment and same inputs).&lt;/p&gt;
&lt;p&gt;So first you really have to sit down and think through the solution.  Usually this involves pen (or pencil) and paper though the whiteboard is certainly one of my favorites.&lt;/p&gt;
&lt;p&gt;I certainly understand people who want to work towards solutions by coding (i.e. the IntegratedDevelopmentEnvironment and programming paradigm as just another tool for our brains) but I suspect it can also lead to distractions of accidental complexity (limitations or unfamiliarities of the programming language syntax/framework) and sometimes worse yet unnoticed biases of the tools preclude some of the best solutions.  (The infamous "imperative vs functional" debates ;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Imperative_programming"&gt;https://en.wikipedia.org/wiki/Imperative_programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Functional_programming"&gt;https://en.wikipedia.org/wiki/Functional_programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Non trivial problems will require solutions that involve tradeoffs and compromises (i.e. the classic "execution time" vs "resources required").&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Software_engineering"&gt;https://en.wikipedia.org/wiki/Software_engineering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="code-is-for-humans-not-computers"&gt;Code is for humans, not computers&lt;/h2&gt;
&lt;p&gt;Human readable code must be transformed into instructions for a machine which is what executes all of the computations.  The machine has no understanding of whether the instructions will solve the problem.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Compiler"&gt;https://en.wikipedia.org/wiki/Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Machine_code"&gt;https://en.wikipedia.org/wiki/Machine_code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This fundamental impedance mismatch is one of the major challenges to programming.  Humans do not always know all of the correct instructions to provide.  Machines will faithfully execute whatever is given to them, including conflicting commands or erroneous data.&lt;/p&gt;
&lt;p&gt;So the history of the abstraction of computer programming very often reads like the evolution away from the physical hardware towards humans expressiveness because the better able we are to describe something the more likely we are to document a correct automation of a solution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/History_of_programming_languages"&gt;https://en.wikipedia.org/wiki/History_of_programming_languages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="solving-yesterdays-problems-of-performance"&gt;Solving Yesterdays Problems of Performance&lt;/h3&gt;
&lt;p&gt;While the earliest hardwired machines filled large rooms and had different kinds of accidental complexity and bugs
&lt;a href="https://americanhistory.si.edu/collections/search/object/nmah_334663"&gt;https://americanhistory.si.edu/collections/search/object/nmah_334663&lt;/a&gt; , later generations had to deal with getting the most performance out of the machines &lt;a href="https://en.wikipedia.org/wiki/Assembly_language#Historical_perspective"&gt;https://en.wikipedia.org/wiki/Assembly_language#Historical_perspective&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These powerful low level languages can also generate some of the most persistent and pernicious bugs via manual memory management, pointers, and buffer overflows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/C_dynamic_memory_allocation#Common_errors"&gt;https://en.wikipedia.org/wiki/C_dynamic_memory_allocation#Common_errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Software_bug#Resource"&gt;https://en.wikipedia.org/wiki/Software_bug#Resource&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The amount of developer time required to create correct code has dramatically reduced as the speed of computation has increased and the tools (including the programming languages) are better able to "get out of the way" and avoid the accidental complexity of optimizing for performance.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is rare that the purpose of a program is to add numbers as quickly as possible&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="programming-languages-help-with-explicitness-by-removing-ambiguity-in-natural-languages"&gt;Programming languages help with explicitness by removing ambiguity in natural languages&lt;/h3&gt;
&lt;p&gt;A sentence in English, "We saw her duck", can have multiple meanings &lt;a href="https://en.wikipedia.org/wiki/Ambiguity#Linguistic_forms"&gt;https://en.wikipedia.org/wiki/Ambiguity#Linguistic_forms&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Programming languages force human expressiveness to be less ambiguous (i.e. the responsibility of the mismatch impedance of incorrect instructions falls squarely on the humans).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Names are important and should be well thought out &lt;a href="https://en.wikipedia.org/wiki/Naming_convention_(programming)"&gt;https://en.wikipedia.org/wiki/Naming_convention_(programming)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Short variables and acronyms can confuse, mislead, or misdirect other humans who will modify or extend code based on that misunderstanding&lt;/li&gt;
&lt;li&gt;Performance specific changes can become digressions and noise that distract or make brittle the tracing of the required solution logic&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="explicit-communication-because-magic-is-incomprehensible"&gt;Explicit communication because magic is incomprehensible&lt;/h2&gt;
&lt;p&gt;The problem with short meaningless variable names in unreadable code littered with performance optimizations is they prevent solving &lt;strong&gt;The Problem&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Some considerations and anti-patterns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Straight to coding (no research)&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Real time systems that keep an aircraft in the air must pay attention to runtime constraints&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Overlooked requirements and misunderstanding the problem domain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Not knowing what the correct answer will look like (i.e. not having test/control inputs and outputs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Absence of acceptance tests to prove that it really is solved and the infamous "it works on my machine"&lt;/li&gt;
&lt;li&gt;The fallacy of "Perfection"; for a solution to provide value there has to be a mechanism to empirically prove it works&lt;/li&gt;
&lt;li&gt;"Done" is not "code complete" (even with tests ;) , it is Integration Tests, Acceptance Tests, Performance Tests, Soak Tests, actually shipped to the "wild" where it survives real environments and edge cases&lt;/li&gt;
&lt;li&gt;Intermittent behavior = automating of a solution should provide consistent results&lt;/li&gt;
&lt;li&gt;Ideologue = a technology looking for a problem&lt;/li&gt;
&lt;li&gt;Premature Optimization &lt;a href="https://en.wikipedia.org/wiki/Program_optimization#When_to_optimize"&gt;https://en.wikipedia.org/wiki/Program_optimization#When_to_optimize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Premature Generalization &lt;a href="http://wiki.c2.com/?PrematureGeneralization"&gt;http://wiki.c2.com/?PrematureGeneralization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Spaghetti_code"&gt;https://en.wikipedia.org/wiki/Spaghetti_code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Big_ball_of_mud"&gt;https://en.wikipedia.org/wiki/Big_ball_of_mud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Now is the only time that matters, when actually the more successful you are the more likely the code will continue and need maintenance &lt;a href="https://en.wikipedia.org/wiki/Software_maintenance"&gt;https://en.wikipedia.org/wiki/Software_maintenance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="process-improvements-to-actually-solve-a-problem"&gt;Process Improvements to actually Solve a Problem&lt;/h2&gt;
&lt;p&gt;Considering the complexity required to actually solve a problem it would be fair to say many iterations are required.&lt;/p&gt;
&lt;p&gt;Some of the "tools" that have helped the iterative process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Software &lt;a href="https://en.wikipedia.org/wiki/Stored-program_computer#History"&gt;https://en.wikipedia.org/wiki/Stored-program_computer#History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Testing &lt;a href="http://web.archive.org/web/20161024015955/http://www.testingreferences.com/testinghistory.php"&gt;http://web.archive.org/web/20161024015955/http://www.testingreferences.com/testinghistory.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Logging &lt;a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying"&gt;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;li&gt;Automated deployments&lt;/li&gt;
&lt;li&gt;Version Control &lt;a href="http://web.archive.org/web/20170104162946/http://layervault.tumblr.com/post/102541175774/the-history-of-version-control"&gt;http://web.archive.org/web/20170104162946/http://layervault.tumblr.com/post/102541175774/the-history-of-version-control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally any implementation must be bound by a "good enough" state as perfection cannot coexist with the ever changing real world.&lt;/p&gt;
&lt;p&gt;Data is required to understand progress (or regression).&lt;/p&gt;
&lt;p&gt;Humans must keep modifying until "done" (even in the advanced example of &lt;a href="https://en.wikipedia.org/wiki/Genetic_programming"&gt;https://en.wikipedia.org/wiki/Genetic_programming&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The steady increase in computing power (&lt;a href="https://en.wikipedia.org/wiki/Moore%27s_law"&gt;https://en.wikipedia.org/wiki/Moore%27s_law&lt;/a&gt;) means &lt;strong&gt;Maintainability trumps Performance&lt;/strong&gt;.  Being able to get reproducible results was codified long ago in the &lt;a href="https://en.wikipedia.org/wiki/Scientific_method"&gt;https://en.wikipedia.org/wiki/Scientific_method&lt;/a&gt;. =]&lt;/p&gt;
&lt;h3 id="collaboration-and-crowdsourcing-without-group-think"&gt;Collaboration and Crowdsourcing without Group Think&lt;/h3&gt;
&lt;p&gt;There seems to be a strong reaction to the term "pair programming" and it is no uncommon for code reviews and pull requests to be a source of emotional angst and team friction.&lt;/p&gt;
&lt;p&gt;These techniques are well established ways of improving quality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Pair_programming"&gt;https://en.wikipedia.org/wiki/Pair_programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/research/publication/pair-programming-whats-in-it-for-me/"&gt;https://www.microsoft.com/en-us/research/publication/pair-programming-whats-in-it-for-me/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Code_review"&gt;https://en.wikipedia.org/wiki/Code_review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Distributed_version_control#Pull_requests"&gt;https://en.wikipedia.org/wiki/Distributed_version_control#Pull_requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While the myth of the individual genius over-emphasizes the outlier it is far more common for a group to achieve projects of any large size (even with software and technology acting as a multiplier).&lt;/p&gt;
&lt;p&gt;I am not advocating pure democracy (or just accepting status quo) as the only way of building things but it is clearly preferrable to have a variety of skills (i.e. architecture, mathematics, verification, design, etc.)&lt;/p&gt;
&lt;p&gt;It may be that working together on intellectual endeavours is currently less intuitive for humans than working together on physical challenges and that a fledgling industry that is chronically short of trained and experienced workers is not selecting and creating environments that are conducive to group working.&lt;/p&gt;
&lt;p&gt;One of the most challenging aspects is disambiguating where something has been successful in the field (mature) versus "it's always been that way" complacence.  Different isn't always better but should always be honestly evaluated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bloomberg.com/news/articles/2014-04-10/the-myth-of-the-lone-genius"&gt;https://www.bloomberg.com/news/articles/2014-04-10/the-myth-of-the-lone-genius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/The_Wisdom_of_Crowds"&gt;https://en.wikipedia.org/wiki/The_Wisdom_of_Crowds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Groupthink"&gt;https://en.wikipedia.org/wiki/Groupthink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Genetic_diversity"&gt;https://en.wikipedia.org/wiki/Genetic_diversity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="configuration-patterns"&gt;Configuration Patterns&lt;/h2&gt;
&lt;p&gt;Configuration is just another part of "Do Not Repeat Yourself" &lt;a href="https://en.wikipedia.org/wiki/Don't_repeat_yourself"&gt;https://en.wikipedia.org/wiki/Don't_repeat_yourself&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Without configuration each program would have to be rewritten with the a new "configuration" portion hardcoded each time. (Though software is an improvement over having to build new hardware for each new configuration...)&lt;/p&gt;
&lt;p&gt;So it is a pragmatic way to extend the utility of an automated solution.&lt;/p&gt;
&lt;p&gt;"When should configurations be applied"?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Configuration is passed as a parameter when the program first starts&lt;/li&gt;
&lt;li&gt;Configuration is loaded from a configuration file when the program first starts&lt;/li&gt;
&lt;li&gt;Configuration is loaded from Environment variables when the program first starts&lt;/li&gt;
&lt;li&gt;Configuration is loaded from a configuration file whenever a change to that file is detected by the program&lt;/li&gt;
&lt;li&gt;Configuration is loaded from a configuration file whenever a module is loaded (i.e. "lazy loading")&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration is loaded from Environment variables whenever a module is loaded (i.e. "lazy loading")&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://12factor.net/config"&gt;https://12factor.net/config&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Lazy_loading"&gt;https://en.wikipedia.org/wiki/Lazy_loading&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;For a short execution time there is little difference between loading at startup versus runtime&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What are the impacts of restarting the service (in order to reload the new configuration changes)?&lt;/p&gt;
&lt;p&gt;Are there parts that have to be loaded first and then wait for a slower dependency to be available?&lt;/p&gt;
&lt;h2 id="prefer-determinism-for-reasonability"&gt;Prefer Determinism for Reasonability&lt;/h2&gt;
&lt;p&gt;Loading and initializing all configuration when the program first starts is one way of attempting to create determinism in the code paths that are running in memory.&lt;/p&gt;
&lt;p&gt;The benefit of "hot swapping" is applying changes to existing code while it is still running.&lt;/p&gt;
&lt;p&gt;The computer is not going to get confused.  It does not care if the data being passed to the module in memory is correct or incorrect, but the new dynamic result may ruin that beautifully automated solution, sometimes in almost undetectable ways.&lt;/p&gt;
&lt;p&gt;As we humans struggle with ever increasing complexity (both in the software and hardware) we should focus on how to reduce variability (that includes during coding, during compilation, and especially at run time).&lt;/p&gt;
&lt;p&gt;Some alternatives tend to take advantage of the cheaper cost of computing and increasingly distributed/networked systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send a reconnect signal to clients to use a new endpoint&lt;/li&gt;
&lt;li&gt;Start up a second process and have the operating system pass the network connection from the old to the new process&lt;/li&gt;
&lt;li&gt;A Load Balancer or other connection holding component that can direct traffic to the new service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.martinfowler.com/bliki/BlueGreenDeployment.html"&gt;https://www.martinfowler.com/bliki/BlueGreenDeployment.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="modularity"&gt;Modularity&lt;/h2&gt;
&lt;p&gt;Smaller pieces can be easier to understand and assert for validity.  The "Do One Thing" principle helps the human who is composing a solution (ideally from re-usable components) to understand which tool is right for the job.&lt;/p&gt;
&lt;p&gt;This also allows for leveraging "seams" to investigate or decouple code (which drastically helps with maintenance).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Single_responsibility_principle"&gt;https://en.wikipedia.org/wiki/Single_responsibility_principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://web.archive.org/web/20160803161738/http://www.informit.com/articles/article.aspx?p=359417&amp;amp;seqNum=2"&gt;http://web.archive.org/web/20160803161738/http://www.informit.com/articles/article.aspx?p=359417&amp;amp;seqNum=2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Updating, upgrading, or replacing a well defined component will be easier than something that is tightly interwoven with all of the other pieces.&lt;/p&gt;
&lt;p&gt;There is a natural tension with re-usability since something with a slight modification that can be re-used reduces the overall code footprint.  The key here is a clear understanding of whether the actual test footprint and complexity have been reduced.&lt;/p&gt;
&lt;p&gt;Also it is possible to decompose into such small parts that they have no logical coherence =[&lt;/p&gt;
&lt;h2 id="immutability"&gt;Immutability&lt;/h2&gt;
&lt;p&gt;One last technique I would like to highlight is immutability.  The idea is by preventing change it can be easier to trace and determine the expected outcome.  (Or discover the exact point at which there is an unexpected deviation).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Immutable_object"&gt;https://en.wikipedia.org/wiki/Immutable_object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/bliki/ImmutableServer.html"&gt;https://martinfowler.com/bliki/ImmutableServer.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://web.archive.org/web/20161030171510/http://blog.codeship.com/immutable-infrastructure/"&gt;http://web.archive.org/web/20161030171510/http://blog.codeship.com/immutable-infrastructure/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It comes at a trade-off of increased resource consumption (i.e. memory) and creating an unmanageablely large number of entities (with possible corresponding orchestration or scale issues)&lt;/p&gt;
&lt;p&gt;Functional programming definitely tends towards immutability ;)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 25 Feb 2017 20:34:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2017-02-25:code-is-for-humans/</guid><category>programming</category><category>readability</category><category>immutable</category><category>configuration</category><category>dependencies</category></item><item><title>Security Encryption HTTPS OpenSSL SSH Keygen VPN Letsencrypt Certbot</title><link>https://blog.john-pfeiffer.com/security-encryption-https-openssl-ssh-keygen-vpn-letsencrypt-certbot/</link><description>
&lt;p&gt;As our lives become increasingly monitored and digital the privacy of being unobserved or having a private conversation that we used to be able to take for granted now requires extra effort.  The more people who choose to use these easy and readily available tools the more privacy will become the standard rather than the exception.&lt;/p&gt;
&lt;h1 id="symmetric-and-asymmetric-encryption"&gt;Symmetric and Asymmetric Encryption&lt;/h1&gt;
&lt;p&gt;Using a shared secret key is generally the simplest way to encrypt, both parties use the same key to encrypt and decrypt.&lt;/p&gt;
&lt;p&gt;Asymmetric encryption (aka "public and private key") allows for a message to be encrypted without the parties having to meet or exchange a secret.&lt;/p&gt;
&lt;p&gt;Both are often used together in a complementary fashion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Public-key_cryptography"&gt;https://en.wikipedia.org/wiki/Public-key_cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Transport_Layer_Security"&gt;https://en.wikipedia.org/wiki/Transport_Layer_Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Codes and the ability to communicate in secret have a very long history which many others have documented and thanks to the amazing efforts of many many people we have the ability to communicate our billions of messages with relative privacy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/History_of_cryptography#Modern_cryptography"&gt;https://en.wikipedia.org/wiki/History_of_cryptography#Modern_cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.goodreads.com/book/show/984428.Crypto"&gt;https://www.goodreads.com/book/show/984428.Crypto&lt;/a&gt; (Steven Levy)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is important to understand that good encryption depends on randomness to make it as hard as possible for an "attacker" to reverse engineer or guess the key, i.e. &lt;a href="https://en.wikipedia.org/wiki//dev/random"&gt;https://en.wikipedia.org/wiki//dev/random&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following is my summary of some of the most common and useful tools...&lt;/p&gt;
&lt;h2 id="pretty-good-encryption-for-pretty-good-privacy"&gt;Pretty Good Encryption for Pretty Good Privacy&lt;/h2&gt;
&lt;p&gt;While there is a lot of value in leveraging the GPG public and private keys for authenticity checking this is just about encrypted data...&lt;/p&gt;
&lt;h3 id="gpg-encryption"&gt;GPG Encryption&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg -c example.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;prompts for a password to access the keyring and leverages existing (or automatically generates) public and private keys, and outputs example.tar.gz.gpg&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: encrypting before compressing is meaningless since encrypted data is random and compression depends on repetition/patterns&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --yes --passphrase=password -c example.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non interactive encryption (if the private key is password protected), outputs example.txt.gpg&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "password" | gpg --yes --no-tty --batch --passphrase-fd 0 --output encrypted.txt.gpg  --symmetric --cipher-algo AES256 plain.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non interactive AES 256 symmetric cipher rather than public/private keypairs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="gpg-decryption"&gt;GPG Decryption&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg example.tar.gz.gpg
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;enter the passphrase to access the private key to decrypt the file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --yes --passphrase=password example.txt.gpg
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non-interactively access the private key to decrypt the file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "password" | gpg --yes --no-tty --batch --passphrase-fd 0 --output plain.txt --decrypt encrypted.txt.gpg
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non interactively decrypt with symmetric encryption&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Do not pick password as your password ;p&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gnupg.org/gph/en/manual/x110.html"&gt;https://www.gnupg.org/gph/en/manual/x110.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="aes-256-encryption"&gt;AES 256 Encryption&lt;/h2&gt;
&lt;p&gt;AdvancedEncryptionStandard is one of the US and world standards as an encryption algorithm.&lt;/p&gt;
&lt;p&gt;Security benefits from transparency in that if you provide the algorithm and source code in plain sight and attackers are still unable to decrypt/crack/manipulate the data then you are probably in good shape.&lt;/p&gt;
&lt;p&gt;Perhaps one of the most well known projects (open source and free!) to advance the practice of encryption is &lt;a href="https://www.openssl.org/"&gt;https://www.openssl.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here we encrypt and decrypt a text file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl aes-256-cbc -in plain.txt -out message.encrypted
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;prompted for a password (symmetric key) to encrypt the file with AES 256&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl aes-256-cbc -d -in message.encrypted -out plain.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;prompted for a password to decrypt the message&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl aes-256-cbc -in plain.txt -out message.encrypted -pass pass:YOURPASSWORD
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non-interactively provide the password to encrypt the file with AES 256&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl aes-256-cbc -d -in message.encrypted -out plain.txt -pass pass:YOURPASSWORD
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non-interactively provide the password to decrypt the file with AES 256&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;an incorrect password will create a zero byte file&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl aes-256-cbc -a -d -in message.encrypted -out plain.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;if it's base64 encoded do not forget the -a&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard"&gt;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation"&gt;https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openssl.org/docs/manmaster/man1/openssl.html"&gt;https://www.openssl.org/docs/manmaster/man1/openssl.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="generating-ssl-certificates-and-private-and-public-keys"&gt;Generating SSL Certificates and Private and Public Keys&lt;/h1&gt;
&lt;p&gt;Perhaps the most common use of TLS/SSL are the keys used to encrypt communication with a web server, these examples use a "self signed certificate" which most libraries and browsers will not trust.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Root Certificate Authorities" are the ones you send a "Certificate Signing Request" to generate a certificate that can be mathemetically trusted by the existing software libraries and browsers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="more-private-and-public-key-basics-for-ssl-certificates"&gt;More Private and Public Key basics for SSL Certificates&lt;/h2&gt;
&lt;p&gt;The private key contains a series of numbers. Two of those numbers form the "public key", the others are part of your "private key".&lt;/p&gt;
&lt;p&gt;The "public key" bits are also embedded in your Certificate (we get them from your CSR - certificate signing request).&lt;/p&gt;
&lt;h3 id="verify-the-ssl-certificate-and-private-key-match"&gt;Verify the SSL Certificate and Private Key match&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(openssl x509 -noout -modulus -in server.pem | openssl md5 ; openssl rsa -noout -modulus -in server.key | openssl md5) | uniq
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;outputs a single hash if matching, if two hashes are output then it is not unique and the key and cert do not match&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To check that the public key in your cert matches the public portion of your private key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl x509 -noout -text -in server.crt
openssl rsa -noout -text -in server.key
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But since the public exponent is usually 65537 and it's challening to compare a long modulus you can use the following approach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl x509 -noout -modulus -in server.crt | openssl md5
openssl rsa -noout -modulus -in server.key | openssl md5
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the "modulus" and the "public exponent" portions of the cert and key ... aka the two md5sum hashes should match&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="verify-the-cert-and-intermediate-match-and-then-verify"&gt;Verify the Cert and Intermediate match and then Verify&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl verify -purpose sslserver -CAfile intermediate.pem -verbose server.pem
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ensure the intermediate certificate matches the SSL certificate (if it does not SSL trust will not work correctly)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="verify-a-csr-matches-the-key-and-certificate"&gt;Verify a CSR matches the Key and Certificate&lt;/h3&gt;
&lt;p&gt;To check to which key or certificate a particular CSR belongs you can compute&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl req -noout -modulus -in server.csr | openssl md5
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="creating-keys-and-certificates-and-certificate-requests"&gt;Creating keys and certificates and certificate requests&lt;/h2&gt;
&lt;h3 id="openssl-new-key-and-cert-one-liner"&gt;openssl New Key and Cert One Liner&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl req -subj '/CN=example.com/O=My Company Name LTD./C=US' -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout server.key -out server.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;one liner to generate a self signed SSL key and certificate, since SSL certs are rotated regularly we can use 2048 instead of 4096 bits&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="openssl-certificate-commands"&gt;openssl certificate commands&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl req -out CSR.csr -new -newkey rsa:2048 -nodes -keyout privateKey.key
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;create 2048 bit nopass key + csr (certificate signing request - usually sent to a Certificate Authority that is in the root chain bundled with major browsers and libraries)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl x509 -req -days 365 -in CSR.csr -signkey privateKey.key -out cert.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;self sign a CSR and generate a self signed SSL certificate&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl rsa -in mykey.pem -pubout
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;display the public key generated from the private key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl rsa -in mykey.pem -pubout -out mykey.pub
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;use the private key to generate and save the public key to a file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl req -text -noout -verify -in CSR.csr
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Verify a CSR certificate request&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl rsa -check -in cert.key
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Verify a key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl x509 -text -in cert.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;View INFO about a cert and see the cert&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl x509 -noout -issuer -subject -dates -in cert.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;View specific items in the certificate (and do not print out the full certificate)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl req -out CSR.csr -key privateKey.key -new
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Generate a certificate signing request (CSR) for an existing private key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl x509 -x509toreq -in certificate.crt -out CSR.csr -signkey privateKey.key
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Generate a certificate signing request based on an existing certificate and private key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="creating-an-rsa-certificate-with-a-password"&gt;Creating an RSA certificate with a password&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl genrsa -des3 -out domainname.key 2048
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a 2048 bit private key with passphrase&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl req -new -key domainname.key -out domainname.csr
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;CREATE A CSR, CEERTIFICATE SIGNED REQUEST&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Common Name (domain name) = fully qualified domain name&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl x509 -req -days 365 -in CSR.csr -signkey privateKey.key -out cert.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Generate a self signed cert&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="remove-a-passphrase-to-install-a-private-key-on-a-server"&gt;Remove a passphrase to install a private key on a server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl rsa -in domainname-passphrase.key -out domainname-server.key
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OR&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl rsa -in privateKey.pem -out newPrivateKey.pem
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="use-openssls-built-in-webserver"&gt;Use openssl's built in webserver&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl s_server -cert server.pem -key server-nopass.key
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;start a TCP server with the provided certificate and key on the default port of 4433&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl s_server -cert server.pem -accept 4433 -www
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;start an HTTPS server with the cert and key combined in a .pem on the specific port (e.g. 4433)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;telnet localhost 4433
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;verify basic network connectivity&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://localhost:4433 --no-check-certificate
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;verify basic network connectivity and download the contents without validating the SSL certificate&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl s_client -showcerts -connect localhost:4433
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;show the ciphers and certificates of a server, "18 (self signed certificate)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl s_client -connect ldaps.example.com:10636 -CAfile intermediate.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;show the ciphers and certificates of a server while providing client-side the Root + Intermediate Chain certificates&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="get-a-remote-server-ssl-certificate-using-openssl-and-sed"&gt;Get a remote server ssl certificate using openssl and sed&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo | openssl s_client -connect &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;REMOTEHOST&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;:&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;REMOTEPORT&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; 2&amp;gt;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;1 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="getting-and-verifying-an-intermediate-certificate"&gt;Getting and verifying an Intermediate Certificate&lt;/h3&gt;
&lt;p&gt;Popular web browsers will often have lock symbols or other ways for you to see (and download) a certificate)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;startup vm with webserver (tomcat) + current certificate&lt;/li&gt;
&lt;li&gt;chrome browse to the https://10.10.10.199&lt;/li&gt;
&lt;li&gt;Click on the lock (certificate) symbol =&amp;gt; Certificate information  "Issued to: example.com"&lt;/li&gt;
&lt;li&gt;Click on the Certification Path (tab) ... see the root CA + intermediates + cert.&lt;/li&gt;
&lt;li&gt;click on "GeoTrust" (or the top level Certificate listed in the path) -&amp;gt; View Certificate&lt;/li&gt;
&lt;li&gt;Details (tab) -&amp;gt; Copy to File -&amp;gt; Save Base-64 encoded x.509 (.cer)&lt;/li&gt;
&lt;li&gt;Verify that it is different than your original cert.crt&lt;/li&gt;
&lt;li&gt;Copy paste that file into a place where you have openssl installed (i.e. ubuntu linux)&lt;/li&gt;
&lt;li&gt;Hostfile (/etc/hosts) so that your openssl command can use the DNS name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl s_client -showcerts -connect example.com:443&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Without the intermediate you should receive "Verify return code: 21 (unable to verify the first certificate)"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl s_client -showcerts -connect example.com:443 -CAfile geotrust-intermediate.crt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;With the intermediate in the command above:   "Verify return code: 0 (ok)"&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, if the DNS name is publicly available, you can verify: &lt;a href="https://www.sslshopper.com/ssl-checker.html"&gt;https://www.sslshopper.com/ssl-checker.html&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="other-certificate-formats"&gt;Other certificate formats&lt;/h1&gt;
&lt;h2 id="convert-from-windows-iis-pkcs12-or-pfx-to-pem"&gt;CONVERT FROM WINDOWS (IIS) PKCS12 OR PFX TO PEM&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl pkcs12 -info -in keystore.p12

openssl pkcs12 -in original.pfx -out cert.pem -nodes
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This creates both the key and the cert&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can copy and paste the certificate portion into cert.crt&lt;/p&gt;
&lt;p&gt;Also copy and paste the private key portion into the cert.key&lt;/p&gt;
&lt;h2 id="configure-an-existing-key-certificate-into-pkcs12"&gt;Configure an existing key + certificate into PKCS12&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl pkcs12 -export -inkey cert.key -in cert.pem -out keystore.p12
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h1 id="keytool-and-java-key-stores"&gt;KEYTOOL AND JAVA KEY STORES&lt;/h1&gt;
&lt;p&gt;Java, just like web servers, have public and private encryption keys in order to enable cryptography and encryption from within the applications.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keytool -list -v -keystore /usr/lib/jvm/java-6-sun-1.6.0.24/jre/lib/security/jssecacerts
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;hit enter as it has no password&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keytool -list -v -keystore /etc/java-6-sun/security/cacerts
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;default password is changeit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keytool -list -v -keystore /etc/java-6-sun/security/cacerts -alias alpha.domain.net  -storepass changeit
keytool -list -v -keystore jssecacerts -storepass changeit | grep atmos -n4


Keystore type: JKS
Keystore provider: SUN

Your keystore contains 76 entries

Alias name: digicertassuredidrootca
Creation date: Jan 7, 2008
Entry type: trustedCertEntry
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="import-a-signed-primary-certificate-to-an-existing-java-keystore"&gt;Import a signed primary certificate to an existing Java keystore&lt;/h3&gt;
&lt;p&gt;One of the most common tasks is adding a certificate to trust&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;trustcacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;mydomain&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;mydomain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;changeit&lt;/span&gt;
&lt;span class="n"&gt;Trust&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;

&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;"yes"&lt;/span&gt;

&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;changeit&lt;/span&gt;

&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;printcert&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;mydomain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;

&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;trustcacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;geotrust&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intermediate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;changeit&lt;/span&gt;

&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;mydomain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="n"&gt;cacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;changeit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="extract-a-certificate-from-a-jks-into-a-der-then-convert-it-into-a-pem-and-import-into-the-jvm-cacerts"&gt;EXTRACT A CERTIFICATE FROM A JKS INTO A .DER, THEN CONVERT IT INTO A .PEM AND IMPORT INTO THE JVM cacerts&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jks&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;der&lt;/span&gt;
&lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;x509&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;der&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inform&lt;/span&gt; &lt;span class="n"&gt;DER&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;outform&lt;/span&gt; &lt;span class="n"&gt;PEM&lt;/span&gt;

&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;trustcacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;changeit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openssl.org/docs/HOWTO/certificates.txt"&gt;http://www.openssl.org/docs/HOWTO/certificates.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sslshopper.com/article-most-common-java-keytool-keystore-commands.html"&gt;http://www.sslshopper.com/article-most-common-java-keytool-keystore-commands.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h1 id="ssh-encryption"&gt;SSH Encryption&lt;/h1&gt;
&lt;p&gt;Secure Shell is for network access over an insecure network &lt;a href="https://en.wikipedia.org/wiki/Secure_Shell"&gt;https://en.wikipedia.org/wiki/Secure_Shell&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="create-a-publicprivate-key-pair-for-ssh"&gt;Create a public/private key pair for SSH&lt;/h2&gt;
&lt;p&gt;Backup any existing ~/.ssh/id_rsa  (cp -a ~./ssh ~./ssh-bak)
Backup any existing ~/.ssh/id_rsa.pub&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -t rsa -C "your_email@example.com"
chmod 400 /path/to/id_rsa*
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;id_rsa and id_rsa.pub  *e.g. in /home/USERNAME/.ssh , &lt;a href="https://en.wikipedia.org/wiki/Ssh-keygen"&gt;https://en.wikipedia.org/wiki/Ssh-keygen&lt;/a&gt;
chmod to modify permissions (to the "only the owner can read") since if the private key is not restricted in security the ssh client will not run but instead return an error&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;id_rsa  IS YOUR PRIVATE KEY, GUARD IT!&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;id_rsa.pub IS THE PUBLIC PORTION WHICH YOU ADD TO REMOTE SERVERS&lt;/p&gt;
&lt;p&gt;if you add a passphrase to your SSH key (to prevent hackers from simply copying the file)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -y
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;prompted for the path to the file, then prompted for the password to outpout a public signature (.pub)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -t dsa
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;RSA is generally preferred, protocol 2, I only include the DSA command for completeness &lt;a href="http://security.stackexchange.com/questions/5096/rsa-vs-dsa-for-ssh-authentication-keys"&gt;http://security.stackexchange.com/questions/5096/rsa-vs-dsa-for-ssh-authentication-keys&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="output-a-pub-from-a-private-key"&gt;output a .pub from a private key&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -y -f id_rsa
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="generate-a-fingerprint-for-verification-of-a-host"&gt;generate a fingerprint for verification of a host&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -lf id_rsa.pub
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="amazon-ec2-instances-have-a-different-method-ec2-add-keypair"&gt;AMAZON ec2 instances have a different method, ec2-add-keypair&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl pkcs8 -in myec2key.pem -nocrypt -topk8 -outform DER | openssl sha1 -c
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ec2-import-keypair"&gt;ec2-import-keypair:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl pkey -in ~/.ssh/ec2/primary.pem -pubout -outform DER | openssl md5 -c
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="adding-a-public-key-to-a-remote-server"&gt;Adding a Public Key to a remote server&lt;/h2&gt;
&lt;p&gt;ON THE REMOTE SERVER IT SHOULD ONLY HAVE THE public key from .ssh/authorized_keys&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;authorized_keys&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt;  &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="mf"&gt;@123.45.56.78&lt;/span&gt; &lt;span class="s"&gt;"cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys"&lt;/span&gt;

&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;authorized_keys&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't forget to modify:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo nano /etc/ssh/sshd_config
#AuthorizedKeysFile     %h/.ssh/authorized_keys

/etc/init.d/ssh force-reload
/etc/init.d/ssh restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ON THE SERVER:  &lt;code&gt;ssh-agent sh -c 'ssh-add &amp;lt; /dev/null &amp;amp;&amp;amp; bash'&lt;/code&gt;
OPTIONAL?  &lt;code&gt;exec ssh-agent sh -c 'ssh-add &amp;lt;/dev/null &amp;amp;&amp;amp; exec /usr/local/bin/wmaker'&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="connecting-with-ssh-client-to-a-remote-server"&gt;Connecting with SSH client to a remote server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;id_rsa&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="mf"&gt;@123.45.56.78&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;verbose, use identity from private key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -vvvv -i id_rsa username@example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;if errors like (nil) verify permissions and ownership (whoami=username)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Don't forget you sometimes have chmod 400&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="ssh-ignore-strict-hosts-checking"&gt;SSH ignore strict hosts checking&lt;/h3&gt;
&lt;p&gt;(i.e. developing against an FQDN with a dynamic ip, this does expose you to the improbable risk of an imposter "man in the middle" server)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -i /usr/local/bamboo/bamboo_id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this command line parameter will not store nor verify the remote server's signature&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A more permanent configuration change:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi ~/.ssh/config

IdentityFile ~/.ssh/id_rsa

Host example.com
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ssh-agent-forwarding"&gt;SSH Agent Forwarding&lt;/h3&gt;
&lt;p&gt;It can be insecure to forward your SSH access through a jumpbox to a machine deeper in your network, though it is generally worse to leave SSH keyson a jumpbox.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-add ~/.ssh/example.pem
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;add a specific key to the ssh agent
    ssh-add -L
an optional step to list the keys that ssh-agent has loaded in memory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="mf"&gt;@1.2.3.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;SSH and explicitly forward the key so that the second shell session (ssh-agent) has access to it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="mf"&gt;@5.6.7.8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the extra indentation is to indicate that from the jumpbox you are able to ssh to the internal machine&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A more permanent configuration change by using ~/.ssh/config&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Host 1.2.3.4
    ForwardAgent yes
    IdentityFile ~/.ssh/example.pem
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://linux.die.net/man/1/ssh-add"&gt;https://linux.die.net/man/1/ssh-add&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="ssh-tcp-tunnel"&gt;SSH TCP tunnel&lt;/h3&gt;
&lt;p&gt;In this example the SSH tunnel could be used for a SOCKS proxy for the browser...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -ND 9999 user@example.org
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;connect via ssh to a remote server, after the password prompt the process will stay open for connections locally via port 9999&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="use-a-docker-container-to-isolate-the-vpn-software-and-instead-only-allow-an-ssh-tunnel-as-a-web-proxy"&gt;Use a docker container to isolate the VPN software and instead only allow an SSH tunnel as a web proxy&lt;/h4&gt;
&lt;p&gt;An alternative to a remote machine as the SSH target for the tunnel you can instead target a docker container running locally.
- This allows you to package everything required (i.e. vpn software) into the container
- Has a security benefit that only the container (and its filesystem) are directly exposed to the VPN&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that for an even more limited security profile the container could run as an HTTP proxy as it will only handle HTTP traffic (rather than all TCP)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --detach --rm --privileged --publish 2222:2222 ubuntu-xenial-vpn
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the container is running SSHD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -p 2222 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@localhost
openconnect https://vpn.example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;SSH into the container and start the openconnect vpn connection and authenticate&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -ND 9999 -p 2222 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@localhost
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="configure-firefox-to-use-the-socks-host"&gt;Configure Firefox to use the SOCKS Host&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Firefox -&amp;gt; Edit -&amp;gt; Preferences -&amp;gt; Advanced -&amp;gt; Network -&amp;gt; Connection -&amp;gt; Settings
Manual Proxy configuration: SOCKS Host: localhost, Port 9999
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;firefox sends requests to the server over the ssh encrypted connection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="configure-firefox-to-use-the-socks5-proxy-for-dns"&gt;Configure Firefox to use the socks5 proxy for DNS&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;about&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;proxy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;socks_remote_dns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;use the address bar to access the advanced configuration option and set socks_remote_dns true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This ensures the browser will use the SOCKS proxy domain name server rather than the local machines&lt;/p&gt;
&lt;h3 id="ssh-tunnel-for-windows-rdp"&gt;SSH tunnel for Windows RDP&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -L 3389:172.24.32.40:3389 172.24.32.100 -l sshusername -N
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;L = local port is forwarded to the remote host and port&lt;/li&gt;
&lt;li&gt;l = login_name&lt;/li&gt;
&lt;li&gt;.40 = the windows rdp server&lt;/li&gt;
&lt;li&gt;.100 = the remote ssh server which has access to the windows rdp server&lt;/li&gt;
&lt;li&gt;N = do not execute a remote command (port forwarding only)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ssh-tunneling-in-general"&gt;ssh tunneling in general&lt;/h3&gt;
&lt;p&gt;local port:host:remote-port&lt;/p&gt;
&lt;h4 id="ssh-tunnel-on-port-9090-cherokee-admin"&gt;ssh tunnel on port 9090 (cherokee-admin)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/sysctl.conf
    net.ipv6.conf.all.disable_ipv6=1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt; On the remote server start the admin UI (which only allows access via 127.0.0.1 by default for security reasons)&lt;/strong&gt;
    sudo cherokee-admin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    Cherokee Web Server 1.2.101 (Jan 30 2012): Listening on port 127.0.0.1:9090,
    TLS disabled, IPv6 enabled, using epoll, 4096 fds system limit, max. 2041
    connections, caching I/O, single thread

    Login:
      User:              admin
      One-time Password: xoKmLN0aISztVMFs

    Web Interface:
      URL:               http://127.0.0.1:9090/


ssh -L 9090:localhost:9090 -p 22 user@host.com -N
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;L = local port is forwarded to the remote host and port, so ssh binding the localhost to port 9090&lt;/li&gt;
&lt;li&gt;ssh the remote server on port 22&lt;/li&gt;
&lt;li&gt;ssh with the specified user to the hostname (assuming DNS is correct)&lt;/li&gt;
&lt;li&gt;N = do not execute a remote command (port forwarding only)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -L 9090:localhost:9090 remote_IP
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;assumes the ssh port is 22 and the remote user is the same as the local user, not a good assumption&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On your browser access http://localhost:9090 to see the Cherokee Admin UI&lt;/p&gt;
&lt;p&gt;Future ideas: iptables 9090? forwarding?&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="virtual-private-networks-and-openvpn"&gt;Virtual Private Networks and openVPN&lt;/h1&gt;
&lt;p&gt;Using Docker is one of the easiest ways to leverage all of the open source tools (assuming for security you inspect the upstream source code, clone the Dockerfile, build your own docker image/container ;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# https://github.com/kylemanna/docker-openvpn
# https://openvpn.net/index.php/open-source/documentation/howto.html
export FQDN="example.com"
export OVPN_DATA="ovpn-data"
docker volume create --name $OVPN_DATA
# generate the initial configuration in the volume
docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://$FQDN
# generate the certificate in the volume (you must choose a passphrase)
docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki
# start the openvpn service
docker run -v $OVPN_DATA:/etc/openvpn -d -p 1194:1194/udp --cap-add=NET_ADMIN kylemanna/openvpn

# generate the client certificate without the passphrase
docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full $FQDN nopass
# export the client config with embedded certificates
docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient $FQDN &amp;gt; $FQDN.ovpn
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="connect-a-client-to-the-openvpn-server"&gt;Connect a client to the OpenVPN server&lt;/h2&gt;
&lt;p&gt;From a client computer SCP to download the $FQDN&amp;gt;ovpn and then connect to the openvpn server&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FQDN=youropenvpn.example.com
sudo apt-get install -y openvpn
sudo openvpn --config $FQDN.ovpn
# verify with the following in the output: "/sbin/ip addr add dev tun0 local 192.168.255.6 peer 192.168.255.5"
# ifconfig -a  "tun0 ... inet addr:192.168.255.6"  , as you send traffic: RX bytes:4145707 (4.1 MB)  TX bytes:319025 (319.0 KB)
curl checkip.amazonaws.com  # should return the IP address of the VPN server (not your local Wifi/ISP)
curl https://dnsleaktest.com/
# https://whoer.net/#extended
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Moreover your DNS server can "leak" or be hijacked, here are some good alternatives to your snooping ISP or "big brother" evil corp.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;84.200.69.80 or 84.200.70.40 (dns.watch free, neutral, privacy)&lt;/li&gt;
&lt;li&gt;216.146.36.36 (Dyn DNS was acquired by Oracle)&lt;/li&gt;
&lt;li&gt;209.244.0.4 (Level3 Communications telco was acquired by CenturyLink)&lt;/li&gt;
&lt;li&gt;208.67.220.220 (OpenDNS was acquired by Cisco)&lt;/li&gt;
&lt;li&gt;8.8.8.8 (Google - so basically giving them even more data - especially when you use Chrome too)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h1 id="letsencrypt-and-certbot-for-free-ssl-certificates"&gt;Letsencrypt and certbot for free SSL Certificates&lt;/h1&gt;
&lt;p&gt;A relatively recent development has been a widespread effort to help secure more of everyone's communications by encouraing web sites to install SSL certificates (and automate renewals) for free...&lt;/p&gt;
&lt;p&gt;Here is the tool that allows you to easily automate getting a free SSL certificate (trusted by libraries and browsers no less)&lt;/p&gt;
&lt;p&gt;Once again Docker simplifies things slightly (as long as you trust the container ;)&lt;/p&gt;
&lt;p&gt;Prerequisite: setup a DNS record for yourdomain.com to point to the server&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --rm -p 443:443 --name certbot -v /etc/letsencrypt:/etc/letsencrypt -v /var/log/letsencrypt:/var/log/letsencrypt quay.io/letsencrypt/letsencrypt certonly --standalone -d yourdomain.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Starts a container with a web server that binds to port 443 &lt;/li&gt;
&lt;li&gt;The same web server/tool sends a certificate signing request (from yourdomain.com) to letsencrypt.org&lt;/li&gt;
&lt;li&gt;letsencrypt.org then attempts to contact the provided domain (DNS -&amp;gt; IP -&amp;gt; server -&amp;gt; docker container)&lt;/li&gt;
&lt;li&gt;the web server/tool then securely downloads the new SSL certificate&lt;/li&gt;
&lt;li&gt;all of the files used in the process are stored in /etc/letsencrypt (in this "simple" mode /etc/letsencrypt/live/yourdomain.com/&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can keep renewing the certificate (which lasts 90 days) for free and there are a number of other open source tools (which leverage the API/process)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://letsencrypt.org/how-it-works/"&gt;https://letsencrypt.org/how-it-works/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://certbot.eff.org/docs/using.html#certbot-commands"&gt;https://certbot.eff.org/docs/using.html#certbot-commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/certbot/certbot/blob/master/Dockerfile"&gt;https://github.com/certbot/certbot/blob/master/Dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="cryptography-exercises"&gt;Cryptography Exercises&lt;/h1&gt;
&lt;p&gt;In order to really understand and enjoy cryptography you can dive deeper via some of these exercises&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cryptopals.com/"&gt;https://cryptopals.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 16 Feb 2017 23:34:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2017-02-16:security-encryption-https-openssl-ssh-keygen-vpn-letsencrypt-certbot/</guid><category>security</category><category>encryption</category><category>aes</category><category>https</category><category>openssl</category><category>certbot</category><category>ssh</category><category>keygen</category><category>openvpn</category><category>vpn</category><category>letsencrypt</category><category>certbot</category></item><item><title>Golang JSON is challenging</title><link>https://blog.john-pfeiffer.com/golang-json-is-challenging/</link><description>
&lt;p&gt;Parsing JSON can be a relatively simple subject covered early in other programming languages (i.e. JavaScript ;)&lt;/p&gt;
&lt;p&gt;JSON is a really popular way to persist or transmit data, especially for APIs.  So it is really common to need to use it and yet...&lt;/p&gt;
&lt;p&gt;JSON can be surprisingly difficult in Go because even though it is built into the language it depends already understanding a few other somewhat advanced topics.  And the challenge can be compounded by the Go philosophy of "We Did Not Put It In the Language Do It Yourself".&lt;/p&gt;
&lt;h2 id="a-quick-overview-of-json"&gt;A quick overview of JSON&lt;/h2&gt;
&lt;p&gt;JSON (I never hear humans actually say the full thing: JavaScript Object Notation , though "Jason" does get annoyed) is a way to format data structures as text and it is the modern alternative to XML.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/JSON"&gt;https://en.wikipedia.org/wiki/JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://json.org/"&gt;http://json.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is some fuzziness about Numbers and other definitions but its beauty is definitely simplicity.&lt;/p&gt;
&lt;h2 id="why-does-go-in-json-seem-unnecessarily-advanced-or-challenging"&gt;Why does Go in JSON seem (unnecessarily) advanced or challenging?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go with JSON requires defining/using structs for objects.  This upfront cost certainly fits the "statically compiled" model ;)  But Javascript or Python magically "just make an object" (or dictionary) which has fields/values that are very accessible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is actually pretty common that we might not know or want to define the full (nested?) object structures we've received (as if the JSON format was for portability of data from a service outside of your control), but we're forced to figure something out...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To generically parse an object from JSON (i.e. you do not know the full structure) you must use the "empty interface" (the most generic object), and Interfaces are more advanced than simply defining structs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inferring or attempting to lazily load JSON (i.e. a mixed list of different objects - since there isn't a slice of mixed types in Go!) requires Reflection which is a relatively advanced topic for a beginning programmer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static typing is great, except for when you're reading from JSON and you're not sure which type you should really use and you probably just want it to work simply. This impedance mismatch is natural when moving from a portable data format to a specific language and application, but it doesn't reduce the cursing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To really have the Go compiler figure out the translation between JSON to object requires "hinting" which helps with compiling Reflection magic, but starts to complicate your structs (and interfaces!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nested Structs (fields) are the answer to Nested JSON, but then you have to really figure out how many (and lists with multiple types of objects!) and how deep you expect any nesting you'll receive. (Or just give in to your recursive desires.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pointers.  They are efficient.  Since JSON parsing can be memory intensive you will end up using them... in Nested Structs... with Interfaces... and Reflection Hints... (and since Pointers are messy and confusing there will be bugs).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;associative array &amp;lt; struct/object &amp;lt; interface &amp;lt; pointers &amp;lt; reflection&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a completely made up ordering of complexity, arrays being the least hard to grok&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://research.swtch.com/interfaces"&gt;http://research.swtch.com/interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/laws-of-reflection"&gt;https://blog.golang.org/laws-of-reflection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To summarize, it is really common to get some json from somewhere from someone else and want to just peek at one field, update another field, add a key and value, and save the json.&lt;/p&gt;
&lt;p&gt;And that kind of dynamic behavior isn't inherently easy in Go. =[&lt;/p&gt;
&lt;h2 id="example-code-of-marshalling-and-unmarshalling-json-with-go"&gt;Example code of Marshalling and Unmarshalling JSON with Go&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"encoding/json"&lt;/span&gt;
        &lt;span class="s"&gt;"fmt"&lt;/span&gt;
        &lt;span class="s"&gt;"io"&lt;/span&gt;
        &lt;span class="s"&gt;"io/ioutil"&lt;/span&gt;
        &lt;span class="s"&gt;"log"&lt;/span&gt;
        &lt;span class="s"&gt;"os"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// readFile is a convenience function to read a whole file at once, LOL similar to ioutil.ReadFile()&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;File&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;totalBytes&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;// https://golang.org/pkg/io/ , EOF is an expected error condition&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EOF&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="c1"&gt;// TODO: 0 bytes could be returned when not an EOF&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;totalBytes&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;
                &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Read %d bytes: \n%s\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Read %d total bytes from the file\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalBytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// genericParsing is an example of the empty interface https://blog.golang.org/json-and-go&lt;/span&gt;
&lt;span class="c1"&gt;// https://en.wikipedia.org/wiki/JSON&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;genericParsing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unmarshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;// https://golang.org/doc/effective_go.html#interface_conversions&lt;/span&gt;
        &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\ngeneric json parsing"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="nx"&gt;vv&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"  "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is string:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"  "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is int:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"  "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is bool:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{}:&lt;/span&gt;
                        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"  "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is an array:"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;vv&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"    "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"  "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is of a type I don't know how to handle"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"  but I could have checked another way and found %v is a %T\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="c1"&gt;// JSONNumber https://golang.org/pkg/encoding/json/#Decoder.UseNumber&lt;/span&gt;
                        &lt;span class="c1"&gt;// http://json.org/ no floats so hinting is appreciated&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Assuming top level keys are strings, i.e. NOT [] , https://gobyexample.com/json&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;rootStringsOnlyParsing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// A map of string to any type https://blog.golang.org/laws-of-reflection , http://research.swtch.com/interfaces&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;datmap&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unmarshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;datmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nKeys are Strings in a Map:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;datmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;datmap&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ExampleSimpleObject must be exported to parse correctly , the fields order here is used by json.Marshal output&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ExampleSimpleObject&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Age&lt;/span&gt;  &lt;span class="kt"&gt;int&lt;/span&gt;    &lt;span class="s"&gt;`json:"age"`&lt;/span&gt;
        &lt;span class="nx"&gt;Name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"name"`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ExampleComplexObject is the magic of auto parsing, if your data never gets corrupted...&lt;/span&gt;
&lt;span class="c1"&gt;// helpful understanding of Go and JSON nesting https://eager.io/blog/go-and-json/&lt;/span&gt;
&lt;span class="c1"&gt;// hints are very powerful leveraging of Reflection that Go core libraries use for JSON&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ExampleComplexObject&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;ArrayOfObjects&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nx"&gt;ExampleSimpleObject&lt;/span&gt; &lt;span class="s"&gt;`json:"jsonArrayOfObjects,omitempty"`&lt;/span&gt;
        &lt;span class="nx"&gt;ArrayOfStrings&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;              &lt;span class="s"&gt;`json:"jsonArrayOfStrings"`&lt;/span&gt;
        &lt;span class="nx"&gt;JSONBoolean&lt;/span&gt;    &lt;span class="kt"&gt;bool&lt;/span&gt;                  &lt;span class="s"&gt;`json:"jsonBoolean"`&lt;/span&gt;
        &lt;span class="nx"&gt;JSONNumber&lt;/span&gt;     &lt;span class="kt"&gt;int&lt;/span&gt;                   &lt;span class="s"&gt;`json:"jsonNumber"`&lt;/span&gt;
        &lt;span class="nx"&gt;JSONString&lt;/span&gt;     &lt;span class="kt"&gt;string&lt;/span&gt;                &lt;span class="s"&gt;`json:"jsonString, omitempty"`&lt;/span&gt;
        &lt;span class="c1"&gt;// jsonArrayOfNumbers is not defined and so is not included in the parsed object&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// autoUnmarshal shows Go structs making parsing JSON look easy https://golang.org/pkg/encoding/json/#example_Unmarshal&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;autoUnmarshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;ExampleComplexObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ex&lt;/span&gt; &lt;span class="nx"&gt;ExampleComplexObject&lt;/span&gt;
        &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Unmarshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Auto Unmarshal: %+v \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ex&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// writeJSONFile demonstrates the power of interfaces for shared functionality&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;writeJSONFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thing&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;theJSON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MarshalIndent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"  "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ioutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;theJSON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;0644&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// See the omitted fields with: diff --ignore-all-space types.json output.json&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// https://golang.org/pkg/os/&lt;/span&gt;
        &lt;span class="nx"&gt;myFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ferr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"types.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;logIfError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ferr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myFile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;// hint: read a file and return a slice of bytes: https://golang.org/pkg/io/ioutil/#ReadFile&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;ioutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReadFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"types.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nx"&gt;genericParsing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;datamap&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;rootStringsOnlyParsing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;// modifying or adding to a JSON file can be tricky&lt;/span&gt;
        &lt;span class="nx"&gt;datamap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"injectedKey"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"injected value"&lt;/span&gt;
        &lt;span class="nx"&gt;writeJSONFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dataMapModified.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;datamap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="nx"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;autoUnmarshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;writeJSONFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"autoUnmarshalOmits.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"done"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/json-and-go"&gt;https://blog.golang.org/json-and-go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gobyexample.com/json"&gt;https://gobyexample.com/json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eager.io/blog/go-and-json/"&gt;https://eager.io/blog/go-and-json/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/doc/effective_go.html#interface_conversions"&gt;https://golang.org/doc/effective_go.html#interface_conversions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://attilaolah.eu/2014/09/10/json-and-struct-composition-in-go/"&gt;http://attilaolah.eu/2014/09/10/json-and-struct-composition-in-go/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.gopheracademy.com/advent-2016/advanced-encoding-decoding/"&gt;https://blog.gopheracademy.com/advent-2016/advanced-encoding-decoding/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="common-json-gotchas-with-go"&gt;Common JSON gotchas with Go&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Oops&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"name"`&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;    &lt;span class="s"&gt;`json:"timestamp"`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The i int field will not be Marshaled and will therefore not exist in the JSON object&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The data structures need to be exported, otherwise you'll only end up with an empty JSON object: &lt;a href="https://play.golang.org/p/ukkjLQnSSq"&gt;https://play.golang.org/p/ukkjLQnSSq&lt;/a&gt; , &lt;a href="https://golang.org/pkg/encoding/json/#example_Unmarshal"&gt;https://golang.org/pkg/encoding/json/#example_Unmarshal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Types are strict in Go.  JSON is unclear about "Number".  Golang will assume float64 without any hints.  Use hints, or reflection and type assertions and a magic wand... &lt;a href="https://golang.org/pkg/encoding/json/#Decoder.UseNumber"&gt;https://golang.org/pkg/encoding/json/#Decoder.UseNumber&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Marshal() returns a slice of bytes which is not a string.  so string() , &lt;a href="https://golang.org/pkg/encoding/json/#Marshal"&gt;https://golang.org/pkg/encoding/json/#Marshal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;"The argument to Unmarshal must be a non-nil pointer", &lt;a href="https://golang.org/pkg/encoding/json/#InvalidUnmarshalError"&gt;https://golang.org/pkg/encoding/json/#InvalidUnmarshalError&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="an-example-go-json-helper-utility"&gt;An example Go JSON helper utility&lt;/h2&gt;
&lt;p&gt;The internet has many "helper" (usually performance focused) utilities/libraries for JSON with Go, here's mine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/go-jsondao/src"&gt;https://bitbucket.org/johnpfeiffer/go-jsondao/src&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea is to simplify just doing minimal parsing in order to add or update a Key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hint: RawMessage is the performance trick to not parse all of the fields.&lt;/p&gt;
&lt;h2 id="a-more-real-world-code-example-of-parsing-json-with-go"&gt;A more "real world" code example of parsing JSON with Go&lt;/h2&gt;
&lt;p&gt;I wanted to import the bookmarks from Chrome but I hadn't exported them.  I wrote this utility to parse the default chrome bookmarks json file that I did have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/bookmarks/src"&gt;https://bitbucket.org/johnpfeiffer/bookmarks/src&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 30 Dec 2016 20:34:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-12-30:golang-json-is-challenging/</guid><category>go</category><category>golang</category><category>json</category><category>interfaces</category></item><item><title>Golang Testing Benchmark Profiling Subtests Fuzz Testing</title><link>https://blog.john-pfeiffer.com/golang-testing-benchmark-profiling-subtests-fuzz-testing/</link><description>
&lt;p&gt;Go makes it very easy to unit test with the packagename_test.go file right next to the package source code file(s).&lt;/p&gt;
&lt;p&gt;As a pragmatic language designed for developers who ship to production the amount of built in tooling (testing, benchmarks, etc.) is impressive.&lt;/p&gt;
&lt;p&gt;Taking an earlier example I gave of MergeSort let's examine how TestDrivenDevelopment (or Design) was used to implement it.&lt;/p&gt;
&lt;h2 id="small-functions-make-for-good-tests"&gt;Small functions make for good tests&lt;/h2&gt;
&lt;p&gt;Small functions are easier to read and code is read 1000 times more often than it is written. &lt;em&gt;(completely made up but believable fact).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Less lines of very-readable-code is usually an ok approximation for complexity, and less complexity means your program is easier to reason about (and easier to validate with tests!).&lt;/p&gt;
&lt;h3 id="some-reasons-to-not-use-mega-objects"&gt;Some reasons to not use MEGA-OBJECTS&lt;/h3&gt;
&lt;p&gt;One of the things that TDD helps focus on is modularity and requirements.  Two tensions to balance are the needs of the caller versus the needs of the function.&lt;/p&gt;
&lt;p&gt;What I mean is that the function caller wants to understand what they have to provide and what they'll get back.  If the function asks for a MEGA-OBJECT then somehow the caller has to find or create a MEGA-OBJECT (which sounds very expensive).  And if the function didn't really need the MEGA-OBJECT then the function will extract the one value it actually needs and throw all that work away.&lt;/p&gt;
&lt;p&gt;If instead the function asks for the integer primitive that is the value of the MEGA-OBJECT's this should be very easy to fulfill.  (Which is how tests help discover this MEGA-OBJECT anti-pattern, because even MEGA-OBJECT mocks are difficult).&lt;/p&gt;
&lt;p&gt;A second reason to not pass a MEGA-OBJECT is that those are usually "pass by reference" for performance reasons and if modifying/side-effects are allowed then the function may accidentally invalidate other values (or intentionally corrupt data or override permissions).&lt;/p&gt;
&lt;p&gt;The less state being passed around the easier it is to quickly write a large base of non brittle unit tests to isolate exactly where the logic goes wrong when doing "the simplest thing" and of course to communicate to others/callers how they might use your function or how it handles failure modes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://martinfowler.com/bliki/TestPyramid.html"&gt;http://martinfowler.com/bliki/TestPyramid.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html"&gt;https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="example-function-with-go-unit-tests"&gt;Example function with go unit tests&lt;/h2&gt;
&lt;p&gt;This example function requires two slices of integers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// SlicesMerge takes two sorted slices of integers and merges them into a single sorted slice of integers&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;si&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;si&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;ai&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;bi&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"merged:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a main function with print statements is the tried and true way of manual testing , &lt;code&gt;go run main.go&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="main_testgo"&gt;main_test.go&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Automated units tests means another developer can fix a bug and ensure it does not regress, read and learn expected behavior, and of course have automated continuous integration catch problems as early as possible, &lt;code&gt;go test&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"reflect"&lt;/span&gt;
    &lt;span class="s"&gt;"testing"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;nilslice&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestSlicesMergeEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Parallel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestSlicesMergeHalfEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Parallel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestSlicesMergeNegative&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// if os.Getenv("MY_ENVIRONMENT_VARIABLE") == "" {&lt;/span&gt;
    &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Skip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"skipping test: $MY_ENVIRONMENT_VARIABLE is not set"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Parallel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2870837225030527764&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2870837225030527764&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// Helper Functions&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nExpected:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"\nReceived: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea is to have code that is testable, and just use Go code to write the tests (not another DomainSpecificLanguage to learn)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/testing/"&gt;https://golang.org/pkg/testing/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Skipping tests is fairly important to applying logic to parts of the test suite (or maybe deferring paying some technical debt)&lt;/p&gt;
&lt;p&gt;Parallel indicates the tests can run in parallel, not useful here but in larger test suites taking advantage of extra processor power (GOMAXPROCS) to speed up the feedback loop is always appreciated&lt;/p&gt;
&lt;p&gt;Even in a statically compiled language making comparisons of lists of potentially nested objects is unguaranteed, but the reflection function DeepEqual does a best effort job&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/reflect/#DeepEqual"&gt;https://golang.org/pkg/reflect/#DeepEqual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="running-a-specific-test"&gt;Running a specific test&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;go test -v -run TestSlicesMergeHalf&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Getting verbose output and specifying tests is quite helpful when fixing a piece of code or test.  &lt;strong&gt;Note&lt;/strong&gt; the run parameter takes a regular expression&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="test-coverage"&gt;Test Coverage&lt;/h4&gt;
&lt;p&gt;Sometimes people talk about "test coverage" and while it's clear that 100% coverage is rarely possible (nor entirely desirable from the idea of diminishing returns and exponential growth in integration combinations outside of the simplest function) , it's still a useful metric/tool to discover if there's a chunk of code that's whistling in the wind.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;go test -cover&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"coverage: 75.0% of statements"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="subtests"&gt;Subtests&lt;/h3&gt;
&lt;p&gt;Using the pattern of table driven tests improves the readability and extensibility of the "merge empty test" by applying "Don't Repeat Yourself" and removing the copy pasting of the driver function call.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"reflect"&lt;/span&gt;
    &lt;span class="s"&gt;"testing"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nExpected:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"\nReceived: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// defining the test structure separately and clear naming helps readability&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;slicesMergeTest&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt;        &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt;        &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestSlicesMergeEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;testCases&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nx"&gt;slicesMergeTest&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Without subtests&lt;/span&gt;
    &lt;span class="c1"&gt;// for _, tc := range testCases {&lt;/span&gt;
    &lt;span class="c1"&gt;//  actual := SlicesMerge(tc.a, tc.b)&lt;/span&gt;
    &lt;span class="c1"&gt;//  assertSlicesEqual(t, tc.expected, actual)&lt;/span&gt;
    &lt;span class="c1"&gt;// }&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tc&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;testCases&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%#v merged with %#v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;assertSlicesEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;One variation with the "subtest" feature (which may apply more to benchmarks than straightforward unit tests) is not only that a fatal will not skip subsequent tests but that the output is more verbose&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;=== RUN   TestSlicesMergeEmpty
--- PASS: TestSlicesMergeEmpty (0.00s)
PASS
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;With subtests...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;=== RUN   TestSlicesMergeEmpty
=== RUN   TestSlicesMergeEmpty/[]int{}_merged_with_[]int{}
=== RUN   TestSlicesMergeEmpty/[]int{}_merged_with_[]int(nil)
=== RUN   TestSlicesMergeEmpty/[]int(nil)_merged_with_[]int{}
=== RUN   TestSlicesMergeEmpty/[]int(nil)_merged_with_[]int(nil)
--- PASS: TestSlicesMergeEmpty (0.00s)
    --- PASS: TestSlicesMergeEmpty/[]int{}_merged_with_[]int{} (0.00s)
    --- PASS: TestSlicesMergeEmpty/[]int{}_merged_with_[]int(nil) (0.00s)
    --- PASS: TestSlicesMergeEmpty/[]int(nil)_merged_with_[]int{} (0.00s)
    --- PASS: TestSlicesMergeEmpty/[]int(nil)_merged_with_[]int(nil) (0.00s)
PASS
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Making the "table" of inputs and outputs more obvious AND the output verbosity clearer seems like a small refinement but goes a long way to making production quality testing easier&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="running-a-specific-subtest"&gt;Running a specific subtest&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;go test -v -run=TestSlicesMergeEmpty/"nil"&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- PASS: TestSlicesMergeEmpty (0.00s)&lt;/span&gt;
    --- PASS: TestSlicesMergeEmpty/[]int{}_merged_with_[]int(nil) (0.00s)
    --- PASS: TestSlicesMergeEmpty/[]int(nil)_merged_with_[]int{} (0.00s)
    --- PASS: TestSlicesMergeEmpty/[]int(nil)_merged_with_[]int(nil) (0.00s)
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes! You can pattern match on the string from the subtest table and only run a subset of subtests (mindblown)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/subtests"&gt;https://blog.golang.org/subtests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go"&gt;http://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="benchmarking"&gt;Benchmarking&lt;/h2&gt;
&lt;p&gt;Benchmarking is most useful if you're attempting to answer a question of two variations on how to implement something.&lt;/p&gt;
&lt;p&gt;I suppose if you recorded every result and ran against exactly the same hardware you might be able to detect performance regressions, though I'd be worried about overly inconsistent/flaky results taking up way too much valuable time.&lt;/p&gt;
&lt;p&gt;Inside of a _test.go file you can also write benchmark test functions, here is one of the classic questions of "concatenating strings in Go"&lt;/p&gt;
&lt;p&gt;Here we compare the simplest concatenation of two strings and also the continued concatenation of many strings with either + or buffer.WriteString()&lt;/p&gt;
&lt;p&gt;Create myconcat_test.go and execute the following with &lt;code&gt;go test -v -bench=.&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"bytes"&lt;/span&gt;
    &lt;span class="s"&gt;"testing"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;MyConcatSimple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;MyConcatSimpleLooped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;MyConcatBytesBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Buffer&lt;/span&gt;
    &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;String&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;MyConcatBytesBufferLooped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Buffer&lt;/span&gt;
    &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;String&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;BenchmarkConcatSimple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;MyConcatSimple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;BenchmarkConcatSimpleLooped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;MyConcatSimpleLooped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;BenchmarkConcatBytesBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;MyConcatBytesBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;BenchmarkConcatBytesBufferLooped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;MyConcatBytesBufferLooped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The b.N is automatically filled in by Go until the benchmark runner is "satisfied with stability" though you can create a wrapper function for the code under test if you wish to attempt more control over iterations&lt;/p&gt;
&lt;p&gt;Remember that every benchmark is only valid against a specific set of hardware, operating system, libraries, etc. and with any changes (i.e. upgrade from Go 1.6 to 1.7) you may need to retest... unless you're just proving O(N) is better than O(N^2) ;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Oh right, the results...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;BenchmarkConcatSimple-4                 30000000                40.1 ns/op
BenchmarkConcatSimpleLooped-4             100000             20728 ns/op
BenchmarkConcatBytesBuffer-4             5000000               373 ns/op
BenchmarkConcatBytesBufferLooped-4        300000              7227 ns/op
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the iterations show that the simplest naive concatentation with + is very fast for a couple of small arguments (40 nanoseconds)&lt;/p&gt;
&lt;p&gt;BUT if appending many (100+) items together buffer.Write() is better&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This example ignored all sorts of real world questions around how the strings are provided (i.e. a slice of strings might be better served by Join()) (or examine it's source code to see how they implement string concatenation!) , or memory consumption, etc.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dave.cheney.net/2013/06/30/how-to-write-benchmarks-in-go"&gt;http://dave.cheney.net/2013/06/30/how-to-write-benchmarks-in-go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/hackintoshrao/daily-code-optimization-using-benchmarks-and-profiling-in-golang-gophercon-india-2016-talk-874c8b4dc3c5"&gt;https://medium.com/hackintoshrao/daily-code-optimization-using-benchmarks-and-profiling-in-golang-gophercon-india-2016-talk-874c8b4dc3c5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/strings/#Join"&gt;https://golang.org/pkg/strings/#Join&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="running-specific-benchmarks"&gt;Running specific benchmarks&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;go test -v -run=NOMATCH -bench=BenchmarkConcatSimple&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since it is using the test runner the -run= regexp not matching allows you to skip any unit tests&lt;/p&gt;
&lt;p&gt;-bench= can take a regexp to match only a subset of benchmark tests&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="profiling"&gt;Profiling&lt;/h2&gt;
&lt;p&gt;TODO:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/tjholowaychuk/profiling-golang-851db2d9ae24"&gt;https://medium.com/tjholowaychuk/profiling-golang-851db2d9ae24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.ralch.com/tutorial/golang-performance-and-memory-analysis/"&gt;http://blog.ralch.com/tutorial/golang-performance-and-memory-analysis/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dave.cheney.net/2013/07/07/introducing-profile-super-simple-profiling-for-go-programs"&gt;http://dave.cheney.net/2013/07/07/introducing-profile-super-simple-profiling-for-go-programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/profiling-go-programs"&gt;https://blog.golang.org/profiling-go-programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/net/http/pprof/"&gt;https://golang.org/pkg/net/http/pprof/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/runtime/pprof/"&gt;https://golang.org/pkg/runtime/pprof/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="go-fuzz-testing"&gt;Go Fuzz Testing&lt;/h2&gt;
&lt;p&gt;Fuzz testing is furthering the principle of automation (and that computers are inherently better at some things than humans) to  have software discover edge cases for tests.&lt;/p&gt;
&lt;p&gt;Basically the idea is to have software run over an extreme range or with randomness and then the edge cases that are discovered can be added into the test suite.  It has been used to enormously good effect on the Go standard library by Dmitry Vyukov.&lt;/p&gt;
&lt;p&gt;One thing you start to see when attempting to apply it is that it really a tool for helping validate handling of a specific input.  It is not a magic wand to discover bugs. ;)&lt;/p&gt;
&lt;p&gt;This kind of tool assisted exploratory testing is usually reserved for a more mature phase of a product (or in special use cases where there is high value in attempting to prove correctness).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestSlicesMergeRandom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;fuzz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;New&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;randomSeed&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fuzz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;randomSeed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"random seed:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;randomSeed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;New&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;randomSeed&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="nx"&gt;xLength&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="nx"&gt;yLength&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xLength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;yLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;xLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fuzz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;yLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fuzz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Ints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Ints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Ints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nExpected:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"\nReceived: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Seeding randomness is part of how this gofuzz library is used; the Vyukov version actually produces output that must be parsed separately.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/gofuzz"&gt;https://github.com/google/gofuzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dvyukov/go-fuzz"&gt;https://github.com/dvyukov/go-fuzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/dns-parser-meet-go-fuzzer"&gt;https://blog.cloudflare.com/dns-parser-meet-go-fuzzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/@dgryski/go-fuzz-github-com-arolek-ase-3c74d5a3150c#"&gt;https://medium.com/@dgryski/go-fuzz-github-com-arolek-ase-3c74d5a3150c#&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://golang.org/pkg/math/rand/"&gt;https://golang.org/pkg/math/rand/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/sort/"&gt;https://golang.org/pkg/sort/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 22 Oct 2016 20:44:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-10-22:golang-testing-benchmark-profiling-subtests-fuzz-testing/</guid><category>go</category><category>golang</category><category>testing</category><category>benchmark</category><category>profiling</category><category>subtests</category><category>tdd</category></item><item><title>Golang Interfaces Stack Linked List Queue Map Set</title><link>https://blog.john-pfeiffer.com/golang-interfaces-stack-linked-list-queue-map-set/</link><description>
&lt;p&gt;Two of the most useful tools in daily professional programming are hash maps and frameworks for modular abstractions.  It's the blend of performance and composability that makes Go an attractive language for getting things done.&lt;/p&gt;
&lt;h2 id="maps-aka-hash-tables-in-go"&gt;Maps aka Hash Tables in Go&lt;/h2&gt;
&lt;p&gt;For hash tables basic operations like insert, lookup, delete are basically "constant time" in big O notation which makes it the "go to" default data structure for a lot of basic coding.  That helps avoid having to write and maintain all the complexity and operations of an in-memory sorted data structure.&lt;/p&gt;
&lt;p&gt;It is also often the desired data structure answer in a programming interview problem =]&lt;/p&gt;
&lt;p&gt;Here's the basics of using a map since someone else has already done all of the hard work of figuring out the correct math of the hash function to avoid collisions and the engineering behind implementing it in a performant fashion.&lt;/p&gt;
&lt;h3 id="using-a-map-in-go"&gt;Using a map in go&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;inSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// gotcha: do not depend on just the return value but use a the second value which returns in map or not&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"has value"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"and is in?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;ok&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// never use var m map[string]bool because m is nil and assign causes a panic&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"foobar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;" elements in map"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;m2&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sc"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;m2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the two main gotchas for maps in go are to not accidentally assume that the value coming back from a map means that the key was in the map since if the key is not in the map it will return the default "empty" value which will be 0 or false, and to not start with a nil pointer since later assignment will cause a panic&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/fqvNrELy1S"&gt;https://play.golang.org/p/fqvNrELy1S&lt;/a&gt; &lt;em&gt;play with maps yourself&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.m.wikipedia.org/wiki/Hash_table"&gt;https://en.m.wikipedia.org/wiki/Hash_table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/go-maps-in-action"&gt;https://blog.golang.org/go-maps-in-action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/src/runtime/hashmap.go#L9"&gt;https://golang.org/src/runtime/hashmap.go#L9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="sets"&gt;Sets&lt;/h3&gt;
&lt;p&gt;A common question in coding is whether a certain key or object has already been seen before.  The lookup cost in a set is  cheaper than a full search through a more complex data structure like a binary tree.&lt;/p&gt;
&lt;p&gt;Golang currently does not have a "set" built into the language but given the code example you can see how to quickly achieve the same functionality with a map.  This is a common pattern: they keep the language simple and focus on low level components that perform and compose well while we code exactly what we need for a given usage.  (i.e. a huge meta "YouAren'tGoingToNeedIt")&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Set_(abstract_data_type)"&gt;https://en.wikipedia.org/wiki/Set_(abstract_data_type)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xlinux.nist.gov/dads/HTML/set.html"&gt;https://xlinux.nist.gov/dads/HTML/set.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/MethodSets"&gt;https://github.com/golang/go/wiki/MethodSets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="polymorphism-with-go-interfaces"&gt;Polymorphism with Go Interfaces&lt;/h2&gt;
&lt;p&gt;While definitely a distinctly different approach on objects and polymorphism than Object Oriented languages like Java and Python, the critical capabilities of Interfaces allows flexibility and re-usability in functionality enabling things like the Strategy Pattern.&lt;/p&gt;
&lt;p&gt;Starting with the fundamentals of Types and Structs, Interfaces are a natural extension to separating "What" behavior is desired versus "How" it is implemented.&lt;/p&gt;
&lt;p&gt;Using Interfaces can feel tricky at first but really the main challenge is the distinction between pointer receiver methods vs the default that Go has of pass by value (considering a pointer to be an integer value of an address ;)&lt;/p&gt;
&lt;p&gt;Also, testing in Go relies heavily on the developer paying that up front cost of creating Interfaces (which is a much better longer term modular abstraction) rather than using Mocks.&lt;/p&gt;
&lt;p&gt;This example uses a trivial Stack data structure but implements it 3 different ways to illustrate how the interface can have a variety of implementations and the caller can decide which one they prefer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Stacker is a data structure that has specific data access and storage properties&lt;/span&gt;
&lt;span class="c1"&gt;// also known as a Last In First Out queue, and not fully implemented for this example =]&lt;/span&gt;
&lt;span class="c1"&gt;// This interfaces only requires two methods to implement&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Stacker&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// DemoStack shows a demo example of different implementations of the interface&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;DemoStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;Stacker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Pushing 2, 1, 0, onto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"contains: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// FakeStack implements the interface using only value receivers&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;FakeStack&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fakeStackCheater&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;

&lt;span class="c1"&gt;// Show returns the global slice&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;FakeStack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fakeStackCheater&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Push uses a global variable (evil) so it can get away with a value method receiver&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;FakeStack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fakeStackCheater&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fakeStackCheater&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// SliceStack is an integer stack data structure built using a slice&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;SliceStack&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Show displays the contents of the stack, pass a copy as no modification needed&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;SliceStack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Push an integer onto the stack, pass a reference so the receiver method can directly modify&lt;/span&gt;
&lt;span class="c1"&gt;// https://github.com/golang/go/wiki/CodeReviewComments#receiver-type&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;SliceStack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* A real stack based upon a linked list */&lt;/span&gt;

&lt;span class="c1"&gt;// IntNode is a pointer data structure for holding an integer&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;IntNode&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="nx"&gt;left&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;IntNode&lt;/span&gt;
    &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;IntNode&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// LinkedListStack is an integer stack data structure built using a slice&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;LinkedListStack&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;IntNode&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Show returns the total number of elements currently stored in the LinkedListStack&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;LinkedListStack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Push an integer onto the stack, pass a reference so the receiver method can directly modify&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;LinkedListStack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;new&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;IntNode&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;
        &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// a fake stack does not use pointer method receivers and must modify the data structure some other way&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="nx"&gt;FakeStack&lt;/span&gt;
    &lt;span class="nx"&gt;DemoStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"FakeStack"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// stacks that modify their underlying data structure must pass a reference&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;SliceStack&lt;/span&gt;
    &lt;span class="nx"&gt;DemoStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"SliceStack"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="nx"&gt;LinkedListStack&lt;/span&gt;
    &lt;span class="nx"&gt;DemoStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"LinkedListStack"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/U1l2Ni89L4"&gt;https://play.golang.org/p/U1l2Ni89L4&lt;/a&gt; &lt;em&gt;play along with the source code snippet&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/go-interfaces-stack-linkedlist"&gt;https://bitbucket.org/johnpfeiffer/go-interfaces-stack-linkedlist&lt;/a&gt; &lt;em&gt;the more complete source code&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Stack_(abstract_data_type)"&gt;https://en.wikipedia.org/wiki/Stack_(abstract_data_type)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/doc/effective_go.html#interfaces"&gt;https://golang.org/doc/effective_go.html#interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/CodeReviewComments#receiver-type"&gt;https://github.com/golang/go/wiki/CodeReviewComments#receiver-type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Polymorphism_(computer_science)"&gt;https://en.wikipedia.org/wiki/Polymorphism_(computer_science)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Strategy_pattern"&gt;https://en.wikipedia.org/wiki/Strategy_pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nathanleclaire.com/blog/2015/10/10/interfaces-and-composition-for-effective-unit-testing-in-golang/"&gt;https://nathanleclaire.com/blog/2015/10/10/interfaces-and-composition-for-effective-unit-testing-in-golang/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/go-interfaces-make-test-stubbing-easy/"&gt;https://blog.cloudflare.com/go-interfaces-make-test-stubbing-easy/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="bonus-first-in-first-out-queue"&gt;Bonus First In First Out Queue&lt;/h3&gt;
&lt;p&gt;With some small additions the linked list can be enhanced to provide the functionality of a Queue.
It is not too expensive to add the extra previous pointer to each node and a tail pointer and this makes the FIFO capabilities fairly straightforward.
Thankfully with a garbage collected language like Go we do not have to worry about manually allocating or deallocating memory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// IntNode is a pointer data structure for holding an integer&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;IntNode&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt;    &lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="nx"&gt;previous&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;IntNode&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;     &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;IntNode&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// MyList is a linked list of pointers&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;MyList&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;IntNode&lt;/span&gt;
    &lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;IntNode&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Enqueue puts an integer onto the front of the list&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;MyList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;new&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;IntNode&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
        &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previous&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
        &lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;
        &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Dequeue removes the oldest integer from the list&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;MyList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Dequeue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO: error handling for dequeuing when the list is empty&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;
    &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previous&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="nx"&gt;MyList&lt;/span&gt;
    &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FirstInFirstOut head: %v at memory address %p \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FirstInFirstOut tail: %v at memory address %p \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"dequeuing a value: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Dequeue&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FirstInFirstOut head: %v at memory address %p \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FirstInFirstOut tail: %v at memory address %p \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The terminology changed a little bit from Push to Enqueue but now we can have a simple "fair buffer"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/aGMnou1jf7"&gt;https://play.golang.org/p/aGMnou1jf7&lt;/a&gt; &lt;em&gt;your queue in play&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Queue_(abstract_data_type)"&gt;https://en.wikipedia.org/wiki/Queue_(abstract_data_type)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cs.cmu.edu/~adamchik/15-121/lectures/Stacks%20and%20Queues/Stacks%20and%20Queues.html"&gt;https://www.cs.cmu.edu/~adamchik/15-121/lectures/Stacks%20and%20Queues/Stacks%20and%20Queues.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 05 Oct 2016 20:34:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-10-05:golang-interfaces-stack-linked-list-queue-map-set/</guid><category>go</category><category>golang</category><category>interfaces</category><category>stack</category><category>linked list</category><category>queue</category><category>map</category><category>set</category><category>strategy pattern</category></item><item><title>Golang Slices Functions Filters Mergesort</title><link>https://blog.john-pfeiffer.com/golang-slices-functions-filters-mergesort/</link><description>
&lt;h2 id="tips-on-learning-a-new-programming-language"&gt;Tips on learning a new programming language&lt;/h2&gt;
&lt;p&gt;Learning a new programming language takes a lot of effort.  Here are some tips I've found to make it easier:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Layering: read through the material and just accept things without trying to understand every piece, small pieces are easier to digest and absorb&lt;/li&gt;
&lt;li&gt;Repetition: it is natural to read and re-read before comprehension occurs, learning right before sleep is scientifically proven to better enter long term memory&lt;/li&gt;
&lt;li&gt;Immersion: surround yourself with reminders of the material like books, web sites, on your phone, flash cards, online and real life discussions, videos&lt;/li&gt;
&lt;li&gt;Variety: sometimes it sticks better with a book, other times a video or podcast.  Different teachers will emphasize or convey certain topics better.  Do not give up because it's confusing from one source, there are many many sources to learn from&lt;/li&gt;
&lt;li&gt;Practice: apply yourself as programming is far better internalized "in action" rather than just theory&lt;/li&gt;
&lt;li&gt;Engage: using provided exercises will get you to the solution the instructor expects, creating your own coding projects will force you to use the tools in ways that make sense to you (and discover why certain things are "best practice")&lt;/li&gt;
&lt;li&gt;Go Deep: once comfortable moving around, real fluency and understanding requires digging into exactly how something is architected and implemented, what are the corner cases, and why things are done one way over another&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="arrays-underlying-slices-with-memory-addresses-and-unsafe-pointers"&gt;Arrays underlying slices with memory addresses and unsafe pointers&lt;/h2&gt;
&lt;p&gt;Arrays are a mainstay of programming (mechanical sympathy for memory addresses and our very serial brains).
Here is a major digression into Go slices which is a pointer structure that holds an array and manages the dynamic resizing.
&lt;em&gt;Hint: the whole point of Go is to not need to use low level unsafe pointer arithmetic&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;capacityDoubles&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// slice of zero length and zero capacity, basically just a "slice header"&lt;/span&gt;
    &lt;span class="c1"&gt;// NOTE this is different from a "nil slice" which is a nil pointer&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;nilPointer&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"example nil pointer: %#v \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nilPointer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"has memory adddress: %p \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nilPointer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"example empty slice: %#v \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"has memory adddress: %p \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"both have the same length:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nilPointer&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"but does each equal nil? "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nilPointer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// capacity doubles so a new underlying array, if we checked with reflect the memory address would change&lt;/span&gt;
        &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"len=%d cap=%d %v\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// https://golang.org/pkg/reflect/#SliceHeader&lt;/span&gt;
    &lt;span class="c1"&gt;// since a slice is a struct containing an underlying array of memory addresses...&lt;/span&gt;
    &lt;span class="c1"&gt;// https://golang.org/pkg/builtin/#byte&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Slice of byte memory addresses: %p "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// 0xc42006e200 example address of the slice&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%p "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="c1"&gt;// 0xc420074458 0xc420074459 , the two elements are exactly 1 byte apart in address locations&lt;/span&gt;
    &lt;span class="c1"&gt;// Getting the value from the memory location using a piont&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nThe byte value in the second element is binary five: %b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

    &lt;span class="c1"&gt;// https://golang.org/pkg/unsafe/&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nUnsafe pointer of the first memory location: %p"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;unsafe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pointer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="c1"&gt;// unsafe pointer arithmetic&lt;/span&gt;
    &lt;span class="nx"&gt;lastAddress&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;uintptr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;unsafe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pointer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;unsafe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="c1"&gt;// convert back into a usable pointer type&lt;/span&gt;
    &lt;span class="nx"&gt;lastAddressPtr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;unsafe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pointer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastAddress&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nAfter pointer arithmetic and unsafe re-typed: %p, value: %b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastAddressPtr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;lastAddressPtr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\nSafe examination of the second location in the slice: %#v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nx"&gt;example&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="nx"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;adddress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xc42000e440&lt;/span&gt;
&lt;span class="nx"&gt;example&lt;/span&gt; &lt;span class="nx"&gt;empty&lt;/span&gt; &lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;adddress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xc42000e4a0&lt;/span&gt;
&lt;span class="nx"&gt;both&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;same&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;does&lt;/span&gt; &lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;equal&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;  &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nx"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="nx"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="nx"&gt;cap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;Slice&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xc42000e580&lt;/span&gt; &lt;span class="mh"&gt;0xc42000a618&lt;/span&gt; &lt;span class="mh"&gt;0xc42000a619&lt;/span&gt; 
&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;binary&lt;/span&gt; &lt;span class="nx"&gt;five&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;
&lt;span class="nx"&gt;Unsafe&lt;/span&gt; &lt;span class="nx"&gt;pointer&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xc42000a618&lt;/span&gt;
&lt;span class="nx"&gt;after&lt;/span&gt; &lt;span class="nx"&gt;pointer&lt;/span&gt; &lt;span class="nx"&gt;arithmetic&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;unsafe&lt;/span&gt; &lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xc42000a619&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;
&lt;span class="nx"&gt;Safe&lt;/span&gt; &lt;span class="nx"&gt;examination&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="kt"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="mh"&gt;0xc42000a619&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Reminder, just because we can does not mean we should =p&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/QaGtbfPwkS"&gt;https://play.golang.org/p/QaGtbfPwkS&lt;/a&gt; &lt;em&gt;(you can try it yourself!)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/go-slices-usage-and-internals"&gt;https://blog.golang.org/go-slices-usage-and-internals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/reflect/#SliceHeader"&gt;https://golang.org/pkg/reflect/#SliceHeader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/unsafe/"&gt;https://golang.org/pkg/unsafe/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Dereference_operator"&gt;https://en.wikipedia.org/wiki/Dereference_operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="examples-of-go-slice-operations-and-tricks"&gt;Examples of Go Slice operations and tricks&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// pre-allocating might be premature optimization and lead to bugs&lt;/span&gt;
    &lt;span class="nx"&gt;premature&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;premature&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"foo"&lt;/span&gt;
    &lt;span class="nx"&gt;premature&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;premature&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;premature&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;premature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "11 [foo          bar]"&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"add"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"multiple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"items"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"at"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"once"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "5 [add multiple items at once]"&lt;/span&gt;

    &lt;span class="c1"&gt;// COPY also known as ADD to a slice (in this case add to a nil slice)&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// the triple dots (ellipsis in english) indicates a variadic parameter&lt;/span&gt;
    &lt;span class="c1"&gt;// https://golang.org/ref/spec#Passing_arguments_to_..._parameters , https://golang.org/src/builtin/builtin.go?s=4716:4763#L124&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "5 [add multiple items at once]"&lt;/span&gt;

    &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// perhaps more readable&lt;/span&gt;
    &lt;span class="nb"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "5 [add multiple items at once]"&lt;/span&gt;

    &lt;span class="c1"&gt;// CUT - but warning, this only removes it from the slice, NOT the underlying array so a possible memory leak&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// up to but not including index 1, start at index 4 to the end&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;// "2 [add once]"&lt;/span&gt;

    &lt;span class="c1"&gt;// DELETE index 2 (same ordering), no memory leak by correctly setting it to the zero value (usually nil for objects)&lt;/span&gt;
    &lt;span class="nb"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "4 [add multiple at once]"&lt;/span&gt;

    &lt;span class="c1"&gt;// INSERT into index 2 a new value&lt;/span&gt;
    &lt;span class="c1"&gt;// b = append(b[:2], append([]string{"foobar"}, b[2:]...)...)&lt;/span&gt;
    &lt;span class="c1"&gt;// Preferred more readable and avoid the extra slice creation with copy sleight of hand&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"foobar"&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "5 [add multiple foobar at once]"&lt;/span&gt;

    &lt;span class="c1"&gt;// SWAP two values&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "5 [multiple add foobar at once]"&lt;/span&gt;

    &lt;span class="c1"&gt;// REVERSE by using the mirror image effect and multiple assignments&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;opp&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
        &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;opp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;opp&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "5 [once at foobar add multiple]"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Slices are fairly fundamental and while most things are easy there are definitely some gotchas&lt;/p&gt;
&lt;p&gt;A critical thing to remember when reasoning is that slices are references to underlying arrays, so small subslice from a very large slice will prevent that larger object/array from being garbage collected&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/uMtgU3xFic"&gt;https://play.golang.org/p/uMtgU3xFic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/SliceTricks"&gt;https://github.com/golang/go/wiki/SliceTricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/ref/spec#Passing_arguments_to_..._parameters"&gt;https://golang.org/ref/spec#Passing_arguments_to_..._parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://golang.org/src/builtin/builtin.go?s=4716:4763#L124"&gt;https://golang.org/src/builtin/builtin.go?s=4716:4763#L124&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Of course, read the docs and test it for your requirements, situation, and circumstances!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="functions-anonymous-functions-functions-as-parameters-and-filters"&gt;Functions, Anonymous Functions, Functions as Parameters, and Filters&lt;/h2&gt;
&lt;p&gt;Go has functions as first class citizens.  Just assign a function to a variable or define a type that is a function signature.
Since go starts from simple blocks we build, as needed, more complex tools like filtering from a slice of integers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// https://golang.org/doc/codewalk/functions/&lt;/span&gt;
&lt;span class="c1"&gt;// filter is a type that allows us to apply a test to the provided integer parameter&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;

&lt;span class="c1"&gt;// applyFilter is a trivial examply of using a filter as a parameter&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;applyFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// SliceFilter returns a new slice filtered using the filter function parameter&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;SliceFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// isEven returns a filter (the anonymous function inside)&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;iseven&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2 is even: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;iseven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"4 is even: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;applyFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;iseven&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is even: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SliceFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;iseven&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;// [2 4 6] is even:  [2 4 6]&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is not even: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SliceFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;iseven&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;// [1 3 7 9] is not even:  []&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"filtered for evens becomes: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SliceFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;// [5 3 -1 12] filtered for evens becomes:  [12]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;With a function that returns a function, and a function that requires a parameter that is of the type "function signature", we can apply the Strategy Pattern&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/Uxm7HZzS-V"&gt;https://play.golang.org/p/Uxm7HZzS-V&lt;/a&gt; &lt;em&gt;(yes you can mess with functions too)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Anonymous_function"&gt;https://en.wikipedia.org/wiki/Anonymous_function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Strategy_pattern"&gt;https://en.wikipedia.org/wiki/Strategy_pattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="mergesort"&gt;MergeSort&lt;/h2&gt;
&lt;p&gt;And because I like source code in blogs, a highly imperfect mergesort.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// SliceSplit is a function to split a slice into roughly even partitions&lt;/span&gt;
&lt;span class="c1"&gt;// https://golang.org/doc/effective_go.html#two_dimensional_slices&lt;/span&gt;
&lt;span class="cm"&gt;/* A more specific implementation than SliceSplit with the special case partitionSize = 1 could have been&lt;/span&gt;
&lt;span class="cm"&gt;result := make([][]int, len(n), len(n))&lt;/span&gt;
&lt;span class="cm"&gt;for i := 0; i &amp;lt; len(n); i++ {&lt;/span&gt;
&lt;span class="cm"&gt;    element := make([]int, 1, 1)&lt;/span&gt;
&lt;span class="cm"&gt;    element[0] = n[i]&lt;/span&gt;
&lt;span class="cm"&gt;    result[i] = element&lt;/span&gt;
&lt;span class="cm"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;return result&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;SliceSplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;([][]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[][]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO: is there a better way of handling split into 0 pieces?&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Cannot split length %d into %d pieces"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;partitionSize&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;partitionSize&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;partitionSize&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="c1"&gt;// special case to pad the last partition with all elements&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// SlicesMerge takes two sorted slices of integers and merges them into a single sorted slice of integers&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;si&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;si&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;ai&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;bi&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;si&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="nx"&gt;bi&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//MergeConsecutiveElements joins two consecutive slice elements together&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;MergeConsecutiveElements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;[][]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[][]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;[][]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SlicesMerge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
            &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
            &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// MergeSort uses the merge sort algorithm to return a sorted a slice of integers&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;MergeSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;SliceSplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;MergeConsecutiveElements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;MergeConsecutiveElements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unsorted start:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sorted:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MergeSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unsorted start:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sorted:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MergeSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unsorted start:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sorted:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MergeSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unsorted start:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sorted:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MergeSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"done"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Merge_sort"&gt;https://en.wikipedia.org/wiki/Merge_sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/p/nAHF50zk7m"&gt;https://play.golang.org/p/nAHF50zk7m&lt;/a&gt; &lt;em&gt;(modify the merge online)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/go-slice-mergesort"&gt;https://bitbucket.org/johnpfeiffer/go-slice-mergesort&lt;/a&gt; &lt;em&gt;(because version control means the fun never stops)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 02 Oct 2016 23:45:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-10-02:golang-slices-functions-filters-mergesort/</guid><category>go</category><category>golang</category><category>testing</category><category>arrays</category><category>slices</category><category>functions</category><category>filter</category><category>algorithms</category><category>merge</category><category>mergesort</category><category>strategy pattern</category></item><item><title>Consul Service Discovery and Cluster Configuration</title><link>https://blog.john-pfeiffer.com/consul-service-discovery-and-cluster-configuration/</link><description>
&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;Basically consul is an out-of-the-box service discovery system intended for clustered and highly available applications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.consul.io/intro/"&gt;https://www.consul.io/intro/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.consul.io/docs/internals/jepsen.html"&gt;https://www.consul.io/docs/internals/jepsen.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This kind of infrastructure simplifies the programming of distributed systems so that it is easier to deliver value quickly on the actual domain problems.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I have certainly done my fair share of hardcoded config files to "discover" dependency services and even used chef for "config management"...
But with the evolution of dev-ops, web scale, microservices, containers, etc. it is great to leverage an existing battle tested solution&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="consul-cluster-using-docker"&gt;Consul Cluster using Docker&lt;/h2&gt;
&lt;p&gt;Following the straightforward work from this Docker Image we can run a cluster on a single machine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/progrium/consul/"&gt;https://hub.docker.com/r/progrium/consul/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo su
docker run -d --name node1 -h node1 progrium/consul -server -bootstrap-expect &lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="nv"&gt;JOIN_IP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker inspect -f &lt;span class="s1"&gt;'{{.NetworkSettings.IPAddress}}'&lt;/span&gt; node1&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
docker run -d --name node2 -h node2 progrium/consul -server -join &lt;span class="nv"&gt;$JOIN_IP&lt;/span&gt;
docker run -d --name node3 -h node3 progrium/consul -server -join &lt;span class="nv"&gt;$JOIN_IP&lt;/span&gt;
docker run -d -p &lt;span class="m"&gt;8400&lt;/span&gt;:8400 -p &lt;span class="m"&gt;8500&lt;/span&gt;:8500 -p &lt;span class="m"&gt;8600&lt;/span&gt;:53/udp --name node4 -h node4 progrium/consul -join &lt;span class="nv"&gt;$JOIN_IP&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The second 2 nodes join the first one in the cluster by using the inspected IP Address,
the last container is a consul agent (not in the quorum) but has public ports for interactivity&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl localhost:8500/v1/catalog/nodes
    &lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node1"&lt;/span&gt;,&lt;span class="s2"&gt;"Address"&lt;/span&gt;:&lt;span class="s2"&gt;"172.17.0.2"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node2"&lt;/span&gt;,&lt;span class="s2"&gt;"Address"&lt;/span&gt;:&lt;span class="s2"&gt;"172.17.0.3"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node3"&lt;/span&gt;,&lt;span class="s2"&gt;"Address"&lt;/span&gt;:&lt;span class="s2"&gt;"172.17.0.4"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node4"&lt;/span&gt;,&lt;span class="s2"&gt;"Address"&lt;/span&gt;:&lt;span class="s2"&gt;"172.17.0.5"&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
dig @0.0.0.0 -p &lt;span class="m"&gt;8600&lt;/span&gt; node1.node.consul
    &lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
    &lt;span class="p"&gt;;&lt;/span&gt;node1.node.consul.     IN  ANY

    &lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
    node1.node.consul.  &lt;span class="m"&gt;0&lt;/span&gt;   IN  A   &lt;span class="m"&gt;172&lt;/span&gt;.17.0.2
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;REST API call to the list of nodes, then DNS client to get the Record for the first node&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:8500/v1/status/leader
    &lt;span class="s2"&gt;"172.17.0.2:8300"&lt;/span&gt;
curl http://localhost:8500/v1/status/peers
    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"172.17.0.2:8300"&lt;/span&gt;,&lt;span class="s2"&gt;"172.17.0.3:8300"&lt;/span&gt;,&lt;span class="s2"&gt;"172.17.0.4:8300"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

curl http://localhost:8500/v1/health/node/node1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;some more REST calls about the basic nodes, RAFT leadership and peers, and node health&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.consul.io/docs/agent/http.html"&gt;https://www.consul.io/docs/agent/http.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.consul.io/docs/agent/dns.html"&gt;https://www.consul.io/docs/agent/dns.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;:::bash&lt;/p&gt;
&lt;p&gt;curl http://localhost:8500/v1/catalog/services
    {"consul":[]}
curl http://localhost:8500/v1/catalog/service/web
    []&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Listing of the services available, no web service yet =)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="alternative-install-from-zip"&gt;Alternative Install from Zip&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-­get install unzip
wget https://releases.hashicorp.com/consul/0.7.0/consul_0.7.0_linux_amd64.zip
unzip consul_0.7.0_linux_amd64.zip
BINDIP=$(ifconfig eth0 | grep "inet addr" | cut -d ':' ­-f 2 | cut ­-d ' ' ­-f 1)
./consul agent ­bootstrap ­server ­bind=$BINDIP ­data­dir /tmp/consul

netstat ­antp  | grep consul
curl http://localhost:8500/v1/status/peers
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note getting the IP Address on ubuntu 16.04 uses enp3s0 or enp25 which can be changed back via grub workaround: GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.consul.io/docs/agent/options.html"&gt;https://www.consul.io/docs/agent/options.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="registering-a-service"&gt;Registering a Service&lt;/h2&gt;
&lt;p&gt;Creating and running a very simplistic golang web server (assuming you have go installed ;) , &lt;code&gt;go run web.go&lt;/code&gt;
&lt;a href="https://blog.john-pfeiffer.com/go-programming-intro-with-vs-code-and-arrays-slices-functions-and-testing/"&gt;https://blog.john-pfeiffer.com/go-programming-intro-with-vs-code-and-arrays-slices-functions-and-testing/&lt;/a&gt;
(though you could also use nginx in docker)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;myHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"hi\n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8080"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From the previous steps we should have an Agent where we can register the new web service...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

curl --header &lt;span class="s2"&gt;"content-type: application/json"&lt;/span&gt; -X PUT -d&lt;span class="s1"&gt;'{&lt;/span&gt;
&lt;span class="s1"&gt;  "ID": "web1",&lt;/span&gt;
&lt;span class="s1"&gt;  "Name": "web",&lt;/span&gt;
&lt;span class="s1"&gt;  "Tags": [&lt;/span&gt;
&lt;span class="s1"&gt;    "master",&lt;/span&gt;
&lt;span class="s1"&gt;    "v1"&lt;/span&gt;
&lt;span class="s1"&gt;  ],&lt;/span&gt;
&lt;span class="s1"&gt;  "Address": "127.0.0.1",&lt;/span&gt;
&lt;span class="s1"&gt;  "Port": 8080,&lt;/span&gt;
&lt;span class="s1"&gt;  "EnableTagOverride": false,&lt;/span&gt;
&lt;span class="s1"&gt;  "Check": {&lt;/span&gt;
&lt;span class="s1"&gt;    "HTTP": "http://localhost:8080/health",&lt;/span&gt;
&lt;span class="s1"&gt;    "Interval": "10s",&lt;/span&gt;
&lt;span class="s1"&gt;    "TTL": "15s"&lt;/span&gt;
&lt;span class="s1"&gt;  }&lt;/span&gt;
&lt;span class="s1"&gt;}'&lt;/span&gt; http://localhost:8500/v1/agent/service/register
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to verify the new service is registered (besides the 200 response code)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:8500/v1/catalog/services
    {"consul":[],"web":["master","v1"]}
curl http://localhost:8500/v1/health/service/web
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Our new service is created and doing well&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So many more things can be done with &lt;a href="https://www.consul.io/docs/agent/http/agent.html#agent_service_register"&gt;https://www.consul.io/docs/agent/http/agent.html#agent_service_register&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stopping the web server (control + C) and checking that Consul has noticed Status is critical |o/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:8500/v1/health/checks/web
    &lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node4"&lt;/span&gt;,&lt;span class="s2"&gt;"CheckID"&lt;/span&gt;:&lt;span class="s2"&gt;"service:web1"&lt;/span&gt;,&lt;span class="s2"&gt;"Name"&lt;/span&gt;:&lt;span class="s2"&gt;"Service 'web' check"&lt;/span&gt;,&lt;span class="s2"&gt;"Status"&lt;/span&gt;:&lt;span class="s2"&gt;"critical"&lt;/span&gt;,&lt;span class="s2"&gt;"Notes"&lt;/span&gt;:&lt;span class="s2"&gt;""&lt;/span&gt;,&lt;span class="s2"&gt;"Output"&lt;/span&gt;:&lt;span class="s2"&gt;"TTL expired"&lt;/span&gt;,&lt;span class="s2"&gt;"ServiceID"&lt;/span&gt;:&lt;span class="s2"&gt;"web1"&lt;/span&gt;,&lt;span class="s2"&gt;"ServiceName"&lt;/span&gt;:&lt;span class="s2"&gt;"web"&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting the web server again and check&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:8500/v1/health/service/web
    &lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node4"&lt;/span&gt;,&lt;span class="s2"&gt;"Address"&lt;/span&gt;:&lt;span class="s2"&gt;"172.17.0.5"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="s2"&gt;"Service"&lt;/span&gt;:&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"ID"&lt;/span&gt;:&lt;span class="s2"&gt;"web1"&lt;/span&gt;,&lt;span class="s2"&gt;"Service"&lt;/span&gt;:&lt;span class="s2"&gt;"web"&lt;/span&gt;,&lt;span class="s2"&gt;"Tags"&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"master"&lt;/span&gt;,&lt;span class="s2"&gt;"v1"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,&lt;span class="s2"&gt;"Address"&lt;/span&gt;:&lt;span class="s2"&gt;"127.0.0.1"&lt;/span&gt;,&lt;span class="s2"&gt;"Port"&lt;/span&gt;:8080&lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="s2"&gt;"Checks"&lt;/span&gt;:&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node4"&lt;/span&gt;,&lt;span class="s2"&gt;"CheckID"&lt;/span&gt;:&lt;span class="s2"&gt;"service:web1"&lt;/span&gt;,&lt;span class="s2"&gt;"Name"&lt;/span&gt;:&lt;span class="s2"&gt;"Service 'web'check"&lt;/span&gt;,&lt;span class="s2"&gt;"Status"&lt;/span&gt;:&lt;span class="s2"&gt;"critical"&lt;/span&gt;,
        &lt;span class="s2"&gt;"Notes"&lt;/span&gt;:&lt;span class="s2"&gt;""&lt;/span&gt;,&lt;span class="s2"&gt;"Output"&lt;/span&gt;:&lt;span class="s2"&gt;"TTL expired"&lt;/span&gt;,&lt;span class="s2"&gt;"ServiceID"&lt;/span&gt;:&lt;span class="s2"&gt;"web1"&lt;/span&gt;,&lt;span class="s2"&gt;"ServiceName"&lt;/span&gt;:&lt;span class="s2"&gt;"web"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Node"&lt;/span&gt;:&lt;span class="s2"&gt;"node4"&lt;/span&gt;,&lt;span class="s2"&gt;"CheckID"&lt;/span&gt;:&lt;span class="s2"&gt;"serfHealth"&lt;/span&gt;,&lt;span class="s2"&gt;"Name"&lt;/span&gt;:&lt;span class="s2"&gt;"Serf Health Status"&lt;/span&gt;,&lt;span class="s2"&gt;"Status"&lt;/span&gt;:&lt;span class="s2"&gt;"passing"&lt;/span&gt;,&lt;span class="s2"&gt;"Notes"&lt;/span&gt;:&lt;span class="s2"&gt;""&lt;/span&gt;,&lt;span class="s2"&gt;"Output"&lt;/span&gt;:&lt;span class="s2"&gt;"Agent alive and reachable"&lt;/span&gt;,&lt;span class="s2"&gt;"ServiceID"&lt;/span&gt;:&lt;span class="s2"&gt;""&lt;/span&gt;,&lt;span class="s2"&gt;"ServiceName"&lt;/span&gt;:&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="o"&gt;}]}]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="redis-in-containers-as-another-service"&gt;Redis in Containers as another Service&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm -it -p 0.0.0.0:6379:6379 --name redis redis:alpine

docker run --rm -it --link redis:redis redis:alpine redis-cli -h redis -p 6379 help keys
docker run --rm -it --entrypoint=/bin/sh --link redis:redis redis:alpine
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;By running a local redis service we can modify our simple Go web service to query consul and dynamically discover how to reach the correct dependency, "look mom, no config files!"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/_/redis/"&gt;https://hub.docker.com/_/redis/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="distributed-configuration-and-the-go-client-library"&gt;Distributed Configuration and the Go Client Library&lt;/h2&gt;
&lt;p&gt;A simple use case is to use the key value store to distribute other information besides services that need to be discovered.&lt;/p&gt;
&lt;p&gt;Obviously interacting directly with Consul as a client from inside the application is beneficial to "keeping it all in the code" and not relying on config files or shell scripts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.consul.io/docs/agent/http/kv.html"&gt;https://www.consul.io/docs/agent/http/kv.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hashicorp/consul/tree/master/api"&gt;https://github.com/hashicorp/consul/tree/master/api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://godoc.org/github.com/hashicorp/consul/api"&gt;https://godoc.org/github.com/hashicorp/consul/api&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Documentation on the Key Value store and the official Go client library&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="python-client"&gt;Python Client&lt;/h3&gt;
&lt;p&gt;Using an open source client can help avoid "do not repeat yourself" of writing the REST API wrapper (and benefiting from crowd source at work)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://consulate.readthedocs.io/en/stable/"&gt;http://consulate.readthedocs.io/en/stable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/gmr/consulate"&gt;https://github.com/gmr/consulate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sudo pip3 install consulate&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Like all open source projects this has some bugs and outstanding PRs but it is better than another one I tried which was still in alpha (aka not really fully implemented) , &lt;a href="https://www.consul.io/downloads_tools.html"&gt;https://www.consul.io/downloads_tools.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="some-gotchas"&gt;Some Gotchas&lt;/h2&gt;
&lt;p&gt;Consul has a few edge cases that you may need to address specifically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If a node reboots and changes ip address it will not go well: &lt;a href="https://github.com/hashicorp/consul/issues/457"&gt;https://github.com/hashicorp/consul/issues/457&lt;/a&gt; , the simplest case might be to just remove it's data directory and force it to rejoin without any data&lt;/li&gt;
&lt;li&gt;If a new node attempts to join a cluster it needs to know the ip address of an existing node, there is no "auto discovery-join" mechanism except to delegate to Atlas, the paid SaaS product from HashiCorp, or of course to write your own workaround &lt;a href="https://www.consul.io/docs/guides/bootstrapping.html"&gt;https://www.consul.io/docs/guides/bootstrapping.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If all of the server nodes in the cluster go down then there is no auto-recovery (which is not surprising I suppose...) &lt;a href="https://www.consul.io/docs/guides/outage.html"&gt;https://www.consul.io/docs/guides/outage.html&lt;/a&gt; , &lt;a href="https://github.com/hashicorp/consul/issues/454"&gt;https://github.com/hashicorp/consul/issues/454&lt;/a&gt; , &lt;a href="https://github.com/hashicorp/consul/issues/526"&gt;https://github.com/hashicorp/consul/issues/526&lt;/a&gt;, again, if you write your own wrapper to detect this scenario as the nodes reboot (or in an immutable world are re-added assuming you have solved #1 and #2 ;) they "should" be able to recover and reload from raft/peers.json&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 27 Aug 2016 21:01:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-08-27:consul-service-discovery-and-cluster-configuration/</guid><category>service discovery</category><category>consul</category><category>cluster</category><category>clustering</category><category>config</category></item><item><title>A micro story about migrating a personal monolith into microservices</title><link>https://blog.john-pfeiffer.com/a-micro-story-about-migrating-a-personal-monolith-into-microservices/</link><description>
&lt;p&gt;I'm a fan of best practices (who isn't?) and as complexity increases one of the modern paradigms is to use microservices to more transparently manage complexity, reduce tight coupling, and decrease maintenance overhead.&lt;/p&gt;
&lt;p&gt;Taking a different approach to my "less than webscale" personal web services has still made great improvements to the services and my quality of life.&lt;/p&gt;
&lt;p&gt;This article is categorized as Build and CI/CD and DevOps because while microservices is transformative for larger organizations to avoid the negative consequences of Conway's Law and provides a better architecture for really complex systems, in my case it was simply about decoupling deployments and not having all of my eggs in one basket. (e.g. the Drupal migration below actually did not affect the User Experience in any visible way).&lt;/p&gt;
&lt;h2 id="how-to-grow-a-monolith"&gt;How to grow a monolith&lt;/h2&gt;
&lt;h3 id="value-value-value"&gt;Value, value, value&lt;/h3&gt;
&lt;p&gt;I've had a Virtual Private Server for many years and have been always able to find something for free (or as my requirements increased at most $10 a month).  This has been at least 1000x worth the investment as it has provided a platform for learning and experimenting with all sorts of technology (Linux, PHP, Python, Twisted, MySQL, Redis, etc.) and of course a useful catch all tool (to check DNS resolution or temporarily store a file).&lt;/p&gt;
&lt;p&gt;I'm a firm believer in understanding the whole stack.  Maintaining the OS and managing deployments has made me conscious of the many hidden costs and compromises/trade-offs in software and services.&lt;/p&gt;
&lt;h3 id="organic-sprawl"&gt;Organic Sprawl&lt;/h3&gt;
&lt;p&gt;While I started with a personal notes site in PHP, I eventually added a couple of personal blogs using Drupal, and then another Drupal site about physics (&lt;a href="http://physicstime.com"&gt;http://physicstime.com&lt;/a&gt;) for my father in law, and then a few experiments in Python (including uwsgi and Twisted).  This was all of course underpinned by the shared underlying Cherokee web server, Drupal, PHP, Python, MySQL, and Ubuntu.&lt;/p&gt;
&lt;p&gt;Physicstime alone has served over 500,000 visitors =)&lt;/p&gt;
&lt;p&gt;I envisioned that having a common platform would make it easier to add more sites and the shared maintenance meant I would only have to pay it once, especially considering the alternative of paying for and deploying many separate servers.&lt;/p&gt;
&lt;p&gt;I got to try a lot of different technologies but it started to be clear that it was not a "common platform" and maintenance (and just the mental energy of worrying about deferred maintenance) started to take up way too much time and effort.&lt;/p&gt;
&lt;h3 id="the-downsides-of-a-monolith"&gt;The downsides of a monolith&lt;/h3&gt;
&lt;p&gt;Anecdotes: a security update meant the infrastructure provider needed to restart all of their host machines which meant "hmmm, will all my services restart correctly on reboot?" - luckily yes.  Then I had to patch my virtual server (anything on the Internet is one vulnerability away from becoming taken over and in the least case being used for spam/DDoS and eventually being unable to actually serve my sites, in the worst case rooted or keystroke-logged in an attempt to hack my life or in a serious criminal pursuit).&lt;/p&gt;
&lt;p&gt;Oh and then there's the times the logs (web or auth due to anonymous attackers scanning) or backups filled the disk... (facepalm)&lt;/p&gt;
&lt;p&gt;Unavailability Due To:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;any infrastructure vendor maintenance&lt;/li&gt;
&lt;li&gt;any OS maintenance/upgrade&lt;/li&gt;
&lt;li&gt;incorrectly configured/rogue application&lt;/li&gt;
&lt;li&gt;a security issue in one affects them all&lt;/li&gt;
&lt;li&gt;they all contend for the same resources&lt;/li&gt;
&lt;li&gt;they all share the same version/dependency requiring upgrading and testing everything at once&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="in-context-linode-ubuntu-cherokee-and-drupal-were-good-choices-at-the-time"&gt;In Context: Linode, Ubuntu, Cherokee, and Drupal were good choices at the time&lt;/h3&gt;
&lt;p&gt;Firstly let me say I picked a great vendor (Linode) who was very solid (they limit bad actor customers which tends to make resources predictable) and that Ubuntu OS and Cherokee webserver are very easy to setup and maintain which is one reason why I've put this off for so long.&lt;/p&gt;
&lt;p&gt;Drupal does an ok job of separating the tech stack from the content publishing so it was possible to ignore the tech side for awhile.&lt;/p&gt;
&lt;p&gt;Another factor is that iPhones/Android, Dropbox, Bitbucket/GitHub, PaaS, and a whole generation of technologies were not around when I set this up.&lt;/p&gt;
&lt;p&gt;Finally, maybe it's a corollary to Moore's law and the prevalence of the cloud but there's quite a bit of free compute around than there used to be =]&lt;/p&gt;
&lt;h2 id="thinking-microservices"&gt;Thinking Microservices&lt;/h2&gt;
&lt;p&gt;Thinking about microservices is like TDD (Test Driven Design): it exposes assumptions, unmanaged organic evolution, and accidental complexity.&lt;/p&gt;
&lt;h3 id="discovering-the-real-problem-domain"&gt;Discovering the real problem domain&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;When you have a hammer everything looks like a nail&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It becomes too easy to just use an interesting or popular technology for everything regardless of the true problem.&lt;/p&gt;
&lt;p&gt;Analyzing what I actually did with the various services I realized there were actually two distinct phases: creation and distribution.&lt;/p&gt;
&lt;p&gt;I did not have a "realtime" or "high volume dynamic data" use case, nor even a large number of content publishers that needed extra tooling.  (The plugins/additions I used weren't even that exotic.)&lt;/p&gt;
&lt;p&gt;In contrast the overhead was my irreplaceable time spent for the maintenance of Ubuntu patching/upgrades, including the underlying PHP, Drupal upgrades, backups, and of course the inestimable risk of running something on the Internet. =p&lt;/p&gt;
&lt;h2 id="how-i-converted-to-microservices-big-bang-vs-kanban"&gt;How I Converted to Microservices: Big Bang vs Kanban&lt;/h2&gt;
&lt;p&gt;A common question is "how", and since "it depends" ;) in this case I had limited free hours to accomplish change and a strong desire to not break existing service.&lt;/p&gt;
&lt;p&gt;Rather than "Big Bang" I went Kanban &lt;a href="https://en.m.wikipedia.org/wiki/Kanban_(development)"&gt;https://en.m.wikipedia.org/wiki/Kanban_(development)&lt;/a&gt; (a much better analogy than Martin Fowler's "strangler pattern" analogy &lt;a href="http://www.martinfowler.com/bliki/StranglerApplication.html"&gt;http://www.martinfowler.com/bliki/StranglerApplication.html&lt;/a&gt;).  This allowed gradual migration with the least disruption and the most flexibility in when changes would occur.  As a not-to-be-underestimated bonus it was also the least stressful.&lt;/p&gt;
&lt;p&gt;Since I publish a post maybe once a month my blog was the simplest place to start.&lt;/p&gt;
&lt;p&gt;Feature parity requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;publish read-only pages to the world&lt;/li&gt;
&lt;li&gt;editing&lt;/li&gt;
&lt;li&gt;some minimal data structure (category and tags)&lt;/li&gt;
&lt;li&gt;search&lt;/li&gt;
&lt;li&gt;preserve content and meta data&lt;/li&gt;
&lt;li&gt;regular backup of the content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I migrated my content to a Pelican static site (with advanced functionality via a nice JavaScript theme) running on GitHub static pages and Travis CI.&lt;/p&gt;
&lt;p&gt;Having text in git provides a built in backup (published as html and stored remotely in markdown in the free "Software as a Service" repository) with of course a local git repo working copy on my laptop.&lt;/p&gt;
&lt;p&gt;The result is I only need to do a single git push of markdown text to deploy to production.  It's highly available, scalable, and as a bonus there is versioning and I got a fairly snazzy facelift with improved search.&lt;/p&gt;
&lt;h3 id="migration-has-extra-costs-of-research-and-tweaks-but-is-an-opportunity-for-new-benefits"&gt;Migration has extra costs of research and tweaks but is an opportunity for new benefits&lt;/h3&gt;
&lt;p&gt;First I had to research and evaluate static site generators and static site hosts.&lt;/p&gt;
&lt;p&gt;Next I had to learn how to setup a workflow with test data to automate the process from writing content to publishing.&lt;/p&gt;
&lt;p&gt;The actual data migration was quite lengthy.  This was due to the inevitable format change (export from Drupal to .md) and post transformation validation. &lt;/p&gt;
&lt;p&gt;Of course I also had to update DNS entries and even setup subdomains and 301 redirects.&lt;/p&gt;
&lt;p&gt;Like any rewrite I also ended up adding things (like tags).&lt;/p&gt;
&lt;p&gt;One of the most beneficial "while I'm already redoing everything anyways" enhancements was adding CDN and SSL via Cloudflare which actually added another layer of availability and security.&lt;/p&gt;
&lt;h3 id="data-gravity-is-expensive-and-microservices-allows-polyglot-so-go-programming"&gt;Data Gravity is expensive and Microservices allows polyglot so Go Programming&lt;/h3&gt;
&lt;p&gt;My personal notes are full of years of research and was the most time consuming, fulfilling the adages of "data gravity" and "unstructured data costs you" =(&lt;/p&gt;
&lt;p&gt;A free static site on bitbucket.org (markdown in a free git repository transformed to html for free via Shippable.com) used the same pattern (and Pelican tech) as my blog: version control, offloading the hosting to someone else, and JavaScript for search.&lt;/p&gt;
&lt;p&gt;While the file system organically captures metadata like "created date" I had to inject that into the content; I found this to be a data integrity improvement as I had noticed before that FTP and git have a tendency to discard that metadata.&lt;/p&gt;
&lt;p&gt;One of the most time consuming transformations was just tweaking the plain text into markdown but this was worth the improvement in readability since the content is far more often read than written =]&lt;/p&gt;
&lt;p&gt;While Markdown violates the principle of separating data and presentation I found it to be a pragmatic compromise as it IS a standard and it's machine readable. (I could theoretically use a script to convert it back to plaintext ;)&lt;/p&gt;
&lt;p&gt;Oh right, so Go, aka Golang?&lt;/p&gt;
&lt;p&gt;I leveraged Google AppEngine and for fun got to use the relatively new programming language Go to write a custom 301 redirector to prevent links on the Internet from breaking and allow search engines link from all of the previous URLs to the new locations.&lt;/p&gt;
&lt;p&gt;While Python is very easy to pickup I found Go to be similar enough (especially to C) to be also not so hard to learn (lots of documentation!) and better able to do what I needed simply within the language (though Python pretty much has a library for everything it also has C dependencies that don't always play nice with a PlatformAsAService).&lt;/p&gt;
&lt;h3 id="drupal-to-drupal"&gt;Drupal to Drupal&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The more things change the more they stay the same.&lt;/p&gt;
&lt;p&gt;Wherever you go there you are.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The most active Drupal site will stay Drupal on DigitalOcean (to leverage their one click example) and cheaper prices.&lt;/p&gt;
&lt;p&gt;Edit: one click was for Drupal8, yet another headache migration, so not in the scope of this project.&lt;/p&gt;
&lt;p&gt;Now at least as an isolated service (website) on a dedicated server, updates will be specific to it.&lt;/p&gt;
&lt;p&gt;I also put in the effort to use automation via Packer and experiment with Docker...&lt;/p&gt;
&lt;h4 id="immutable-packer"&gt;Immutable Packer&lt;/h4&gt;
&lt;p&gt;I considered Docker Machine and Ansible but both seemed the wrong tools for my purpose.&lt;/p&gt;
&lt;p&gt;Docker Machine is still relatively new and is more oriented towards a cluster of nodes.  Additionally the post docker image phase (ssh commands to install things) seems overly complex.&lt;/p&gt;
&lt;p&gt;Ansible (SSH paradigm) is simpler than chef but encourages a mutable long lived server.&lt;/p&gt;
&lt;p&gt;Packer has a simple and straight forward way of building an immutable server image for DigitalOcean yet retains the flexibility to adapt to other cloud vendors later if needed.&lt;/p&gt;
&lt;h4 id="drupal-website-context-and-domain-problems"&gt;Drupal website context and domain problems&lt;/h4&gt;
&lt;p&gt;Besides the basic components (Docker will simplify this): nginx, php, MySQL&lt;/p&gt;
&lt;p&gt;The ongoing issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Backups of the MySQL and uploaded files&lt;/li&gt;
&lt;li&gt;Upgrades of the OS and components (security)&lt;/li&gt;
&lt;li&gt;Upgrades (security) of Drupal and modules&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Hint: DigitalOcean offer full disk image backups as a paid service so if I ever stop being cheap this resolves pretty quickly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The full details are in a separate post but I'm pretty happy that setting up the box from scratch again, upgrading the various subcomponents, or even migrating to a different vendor will be a lot easier in the future (and won't affect any of the other projects I have going on).&lt;/p&gt;
&lt;h2 id="why-not-just-automate-the-monolith"&gt;Why not just automate the monolith&lt;/h2&gt;
&lt;p&gt;The "easy" answer may have been to automate more of my "ball of mud" to address the effort/efficiency of applying security updates.&lt;/p&gt;
&lt;p&gt;Yet the "better monolith" would mean I still owned the maintenance and uptime for a large percent of my services.&lt;/p&gt;
&lt;p&gt;The microservices approach of diversity means that with different providers (GitHub, Bitbucket, Google AppEngine, DigitalOcean, etc.) it is nearly impossible for them to all go down simultaneously or be affected by one another.&lt;/p&gt;
&lt;p&gt;Leveraging other platforms that better fit my use case means I benefit from their expertise and by reducing the moving parts I have a reduced security risk.&lt;/p&gt;
&lt;p&gt;My experiments in other frameworks and programming languages were never a good match for my "production" web services.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"because it's there" or "because I can" are very often the reason things continue to be done in a suboptimal way ;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now I will focus more on the "top" of the tech stack and high value content (like this blog post), less on the "how to automate and deploy" portion.&lt;/p&gt;
&lt;h2 id="ongoing-and-future-work"&gt;Ongoing and Future Work&lt;/h2&gt;
&lt;p&gt;I still have to purchase/renew domains, update DNS, and write content.&lt;/p&gt;
&lt;p&gt;I still have to eventually find a platform that allows my father-in-law to publish content (and upload files) where I'm not responsible for security patches or backups ;)&lt;/p&gt;
&lt;p&gt;My experimenting is now done via a PaaS like Google AppEngine, Heroku, Openshift etc. or using Docker containers.  That means more admin and cognitive sprawl but PaaS and CaaS are more predisposed to version control and elastic/disposable architecture so in all a lot less maintenance.&lt;/p&gt;
&lt;p&gt;The biggest new cost is managing the increased number of services but this at least makes explicit what I am working on and is mostly mitigated by automation.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 29 Jul 2016 20:59:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-07-29:a-micro-story-about-migrating-a-personal-monolith-into-microservices/</guid><category>microservices</category><category>monolith</category><category>linode</category><category>digitalocean</category><category>packer</category><category>drupal</category><category>php</category><category>python</category><category>go</category><category>cherokee</category><category>nginx</category></item><item><title>Drupal with Docker Compose and nginx and php-fpm and mariadb</title><link>https://blog.john-pfeiffer.com/drupal-with-docker-compose-and-nginx-and-php-fpm-and-mariadb/</link><description>
&lt;h2 id="replacing-cherokee-webserver-php-cgi-mysql"&gt;Replacing: cherokee webserver, php-cgi, MySQL&lt;/h2&gt;
&lt;p&gt;In my professional life I've seen the webserver front end default choice shift from Apache to NGINX occur for production services.&lt;/p&gt;
&lt;p&gt;Nginx is compelling due to simpler configuration and improved performance so I suspect the existing preponderance of Apache deployments are because "if it ain't broke don't fix it" (which makes lots of sense in Operations) along with the large number of Ops/SysAdmins who already know how to configure and integrate Apache (which makes a lot of sense to Management).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nginx.com/blog/nginx-vs-apache-our-view/"&gt;https://www.nginx.com/blog/nginx-vs-apache-our-view/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a personal project I experimented with and chose Cherokee web server (&lt;a href="http://cherokee-project.com/"&gt;http://cherokee-project.com/&lt;/a&gt;) because it offered good performance and a simpler setup (Web UI even!)&lt;/p&gt;
&lt;p&gt;Unfortunately as the project Dev and adoption slowed it seemed to make a lot of sense to finally convert my personal project to nginx. &lt;a href="https://github.com/cherokee/webserver/commits/master"&gt;https://github.com/cherokee/webserver/commits/master&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also wanted to experiment with a Docker based infrastructure (with docker-compose and a single YAML config file, ideally leveraging as much as possible the many official upstream docker images (&lt;a href="https://hub.docker.com/explore/"&gt;https://hub.docker.com/explore/&lt;/a&gt;))&lt;/p&gt;
&lt;p&gt;Benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this would isolate my app from the Host OS (increased portability)&lt;/li&gt;
&lt;li&gt;allow for simpler component swapping or upgrades (with testing and rollback and even local Dev)&lt;/li&gt;
&lt;li&gt;leave room for adding other isolated components&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="almost-able-to-leverage-everything-right-out-of-the-box"&gt;Almost able to leverage everything right out of the box&lt;/h2&gt;
&lt;p&gt;I spent time researching nginx and php-fpm and created a minimal config that worked (two docker commands) based on the slimmer alpine linux docker images. &lt;a href="https://blog.john-pfeiffer.com/nginx-with-docker/"&gt;https://blog.john-pfeiffer.com/nginx-with-docker/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This wasn't quite far off from the official Drupal Dockerfile except there are some more OS dependencies like GD and XML so I instead opted to use the official Drupal Docker image. (Non alpine linux so larger size but they've done the work of packaging the complexity and by not customizing it will be easier to update in the future - and avoid a Docker Build entirely!)&lt;/p&gt;
&lt;h3 id="docker-composeyml-for-nginx-and-drupal7-fpm-and-mariadb55"&gt;docker-compose.yml for nginx and drupal:7-fpm and mariadb:5.5&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# https://docs.docker.com/compose/compose-file/
# https://docs.docker.com/compose/environment-variables/
# https://www.nginx.com/resources/wiki/start/topics/recipes/drupal

nginx:
  image: nginx:alpine
  ports:
    - "80:80"
  volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
    - ./default.conf:/etc/nginx/conf.d/default.conf:ro
    - /var/www/html:/var/www/html/
  links:
    - fpm

# https://hub.docker.com/_/drupal/
fpm:
  image: drupal:7-fpm
  ports:
    - "9000:9000"
  volumes:
    - /var/www/html:/var/www/html/
  links:
    - mysql

# https://hub.docker.com/_/mariadb/
mysql:
  image: mariadb:5.5
  ports:
    - "3306:3306"
  environment:
    - MYSQL_ROOT_PASSWORD
    - MYSQL_USER
    - MYSQL_PASSWORD
    - MYSQL_DATABASE
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adding the MariaDB (compatible with MySQL) image/container was fairly straightforward (just reading the docs on how to override and setup the default user and DB via Environment Variables)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am ok with the Database files being kept completely inside of a persistent container.  I expect to do regular backups (mysqldump and scp) and may also spend the money to just use DigitalOcean's backup service (no poweroff required!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="and-the-bugs"&gt;And the bugs&lt;/h3&gt;
&lt;p&gt;I discovered a bug where the css/themes didn't render correctly.  As part of the troubleshooting I installed nginx, php, and MySQL locally on the host with my override configs (no bug exhibited).  I then replaced each "native host installed service" with the Docker one, working from the backend DB forward I was able to identify the issue.&lt;/p&gt;
&lt;p&gt;Unfortunately the nginx image uses a default user of "nginx" whereas the drupal:php image uses "www-data" which caused issues when accessing the Drupal source files (which I was sharing via --volume on the host, preferring to eschew a "data container").&lt;/p&gt;
&lt;p&gt;My personal Linux maxim still holds true: "If there's a problem with something running in Linux it's probably a Permissions issue". ;)&lt;/p&gt;
&lt;h3 id="do-not-add-complexity"&gt;Do not add complexity&lt;/h3&gt;
&lt;p&gt;I avoided creating my own docker image build FROM drupal:php with nginx included because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;simplest with as few build steps possible&lt;/li&gt;
&lt;li&gt;contrary to the "do one thing well" principle&lt;/li&gt;
&lt;li&gt;contrary to the "one container one app" Docker principle&lt;/li&gt;
&lt;li&gt;tight coupling of nginx and php would make it harder to update one or the other independently&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cache-your-upstream-dependencies"&gt;Cache your upstream dependencies&lt;/h3&gt;
&lt;p&gt;Ironically I also ended up providing my own drupal.tar.gz downloaded from Drupal.org but cached in Bitbucket as the upstream ftp.drupal.org proved unreliable.&lt;/p&gt;
&lt;h2 id="the-pragmatic-solution"&gt;The pragmatic solution&lt;/h2&gt;
&lt;p&gt;Instead, as I was already using packer on DigitalOcean to automate building the Host and uploading the custom configs, docker-compose.yaml, and Drupal source, I added a few steps to install nginx directly to the Host OS.&lt;/p&gt;
&lt;h3 id="packerjson"&gt;packer.json&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NEWUSER_NAME=username NEWUSER_PASSWORD=yourpassword DIGITALOCEAN_API_TOKEN=yourapitoken /opt/packer build packer.json
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A few files and a single command (packer is just a single binary downloaded from hashicorp) I can have another Docker based Drupal host ready (awyeah)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  "_comment": "https://www.packer.io/docs/builders/digitalocean.html",&lt;/span&gt;
&lt;span class="x"&gt;  "variables": {&lt;/span&gt;
&lt;span class="x"&gt;    "digitalocean_api_token": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;DIGITALOCEAN_API_TOKEN&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "newuser_name": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;NEWUSER_NAME&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "newuser_password": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;NEWUSER_PASSWORD&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;"&lt;/span&gt;
&lt;span class="x"&gt;  },&lt;/span&gt;

&lt;span class="x"&gt;  "builders": [{&lt;/span&gt;
&lt;span class="x"&gt;    "type": "digitalocean",&lt;/span&gt;
&lt;span class="x"&gt;    "api_token": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;digitalocean_api_token&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "size": "512mb",&lt;/span&gt;
&lt;span class="x"&gt;    "region": "lon1",&lt;/span&gt;
&lt;span class="x"&gt;    "image": "ubuntu-16-04-x64",&lt;/span&gt;
&lt;span class="x"&gt;    "droplet_name": "drupal-from-packer-&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;timestamp&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "snapshot_name": "drupal-from-packer-&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;isotime&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;"2006.01.02.030405\"}}"&lt;/span&gt;
  &lt;span class="o"&gt;}],&lt;/span&gt;

  &lt;span class="s2"&gt;"provisioners"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"inline"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;"ip a"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"curl -s http://checkip.amazonaws.com"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"apt-get update"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"sudo apt-get install -y vim curl wget byobu ntp tar gzip"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"timedatectl set-timezone Etc/UTC"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"cat /etc/timezone"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"useradd -s /bin/bash -m {{user `newuser_name`}}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"usermod -a -G admin {{user `newuser_name`}}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"echo '{{user `newuser_name`}}:{{user `newuser_password`}}'|chpasswd"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"cat /etc/passwd"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"sed -i 's/Port 22/Port 2222/g' /etc/ssh/sshd_config"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"echo 'PasswordAuthentication no' &amp;gt;&amp;gt; /etc/ssh/sshd_config"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"cat /etc/ssh/sshd_config"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"mkdir -p /home/{{user `newuser_name`}}/.ssh"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"fallocate -l 1G /swapfile"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"chmod 600 /swapfile"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"mkswap /swapfile"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"swapon /swapfile"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"swapon --show"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"free -h"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"echo 'vm.swappiness=10' | sudo tee -a /etc/sysctl.conf"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"echo 'vm.vfs_cache_pressure=50' | sudo tee -a /etc/sysctl.conf"&lt;/span&gt;
      &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"file"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"source"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"authorized_keys"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"destination"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/home/{{user `newuser_name`}}/.ssh/authorized_keys"&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"script"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"install-docker.sh"&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"file"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"source"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"docker-compose.yml"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"destination"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/home/{{user `newuser_name`}}/docker-compose.yml"&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"inline"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;"mkdir -p /var/www/html"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"wget https://bitbucket.org/yourusername/yourrepository/raw/97360be2edd53b93149d750db24f749aebc27988/binaries/drupal-7.50.tar.gz"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"tar xf drupal-7.50.tar.gz --strip-components=1 -C /var/www/html"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"ls -ahl /var/www/html"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"mkdir -p /var/www/html/sites/default/files"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"chmod 777 /var/www/html/sites/default/files"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"cp -a /var/www/html/sites/default/default.settings.php /var/www/html/sites/default/settings.php"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"chmod 777 /var/www/html/sites/default/settings.php"&lt;/span&gt;
      &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"inline"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;"apt-get install -y nginx"&lt;/span&gt;
      &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"file"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"source"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"nginx.conf"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"destination"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/etc/nginx/nginx.conf"&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"file"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"source"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"default.conf"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"destination"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/etc/nginx/conf.d/default.conf"&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;HINT: A DigitalOcean 512MB droplet needs swap enabled due to the MySQL/MariaDB memory defaults, otherwise you get strange errors about inode unavailable while starting the MariaDB container&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.suse.com/documentation/opensuse114/book_tuning/data/cha_tuning_memory_vm.html"&gt;https://www.suse.com/documentation/opensuse114/book_tuning/data/cha_tuning_memory_vm.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.7/2.6.7-mm1/broken-out/vfs-shrinkage-tuning.patch"&gt;https://www.kernel.org/pub/linux/kernel/people/akpm/patches/2.6/2.6.7/2.6.7-mm1/broken-out/vfs-shrinkage-tuning.patch&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One thing that is annoying is as a single partition it is potentially vulnerable to a /var/log DenialOfService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;A very nice tool to add is fail2ban (apt-get install fail2ban) but I want to ensure I tweak the configs correctly&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="install-dockersh"&gt;install-docker.sh&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;# ubuntu 16.04 is xenial , https://blog.john-pfeiffer.com/docker-intro-install-run-and-port-forward/&lt;/span&gt;
sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
sudo sh -c &lt;span class="s2"&gt;"echo 'deb https://apt.dockerproject.org/repo ubuntu-xenial main' &amp;gt; /etc/apt/sources.list.d/docker.list"&lt;/span&gt;
sudo apt-get update &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
sudo apt-get install -y linux-image-extra-&lt;span class="k"&gt;$(&lt;/span&gt;uname -r&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
sudo apt-get install -y docker-engine docker-compose &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
service docker status &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
docker info &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;linux-image-extra is to ensure we have AUFS because docker needs a proper storage driver&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="docker-composeyml-with-drupal7-fpm-and-mariadb55"&gt;docker-compose.yml with drupal:7-fpm and mariadb:5.5&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;# https://hub.docker.com/_/drupal/&lt;/span&gt;
fpm:
  image: drupal:7-fpm
  ports:
    - &lt;span class="s2"&gt;"127.0.0.1:9000:9000"&lt;/span&gt;
&lt;span class="c"&gt;#    - "9000:9000"&lt;/span&gt;
  volumes:
    - /var/www/html:/var/www/html/
  links:
    - mysql

&lt;span class="c"&gt;# https://hub.docker.com/_/mariadb/&lt;/span&gt;
mysql:
  image: mariadb:5.5
  ports:
    - &lt;span class="s2"&gt;"3306:3306"&lt;/span&gt;
  environment:
    - MYSQL_ROOT_PASSWORD
    - MYSQL_USER
    - MYSQL_PASSWORD
    - MYSQL_DATABASE
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;2 out of 3 ain't bad&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="nginxconf"&gt;nginx.conf&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# slightly modified /etc/nginx/nginx.conf from "apt-get install nginx"&lt;/span&gt;
&lt;span class="c1"&gt;# https://www.nginx.com/resources/wiki/start/topics/examples/full/&lt;/span&gt;

&lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="s"&gt;www-data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;worker_processes&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;pid&lt;/span&gt; &lt;span class="s"&gt;/run/nginx.pid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;events&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;worker_connections&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;# multi_accept on;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;http&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="kn"&gt;sendfile&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;tcp_nopush&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;tcp_nodelay&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;types_hash_max_size&lt;/span&gt; &lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;server_tokens&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/mime.types&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;default_type&lt;/span&gt; &lt;span class="s"&gt;application/octet-stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="s"&gt;/var/log/nginx/access.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;error_log&lt;/span&gt; &lt;span class="s"&gt;/var/log/nginx/error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;gzip&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;gzip_disable&lt;/span&gt; &lt;span class="s"&gt;"msie6"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;gzip_types&lt;/span&gt; &lt;span class="s"&gt;text/plain&lt;/span&gt; &lt;span class="s"&gt;text/css&lt;/span&gt; &lt;span class="s"&gt;application/json&lt;/span&gt; &lt;span class="s"&gt;application/javascript&lt;/span&gt; &lt;span class="s"&gt;text/xml&lt;/span&gt; &lt;span class="s"&gt;application/xml&lt;/span&gt; &lt;span class="s"&gt;application/xml+rss&lt;/span&gt; &lt;span class="s"&gt;text/javascript&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/conf.d/*.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="defaultconf"&gt;default.conf&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt;      &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;physicstime.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;/var/www/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;## &amp;lt;-- Your only path reference.&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/favicon.ico&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;log_not_found&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/robots.txt&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;allow&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;log_not_found&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# Very rarely should these ever be accessed outside of your lan&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt; &lt;span class="s"&gt;\.(txt|log)&lt;/span&gt;$ &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;deny&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;\..*/.*\.php$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;^/sites/.*/private/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# Allow "Well-Known URIs" as per RFC 5785&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt; &lt;span class="s"&gt;^/.well-known/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;allow&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# Block access to "hidden" files and directories whose names begin with a&lt;/span&gt;
    &lt;span class="c1"&gt;# period. This includes directories used by version control systems such&lt;/span&gt;
    &lt;span class="c1"&gt;# as Subversion or Git to store control files.&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;(^|/)\.&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# try_files $uri @rewrite; # For Drupal &amp;lt;= 6&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="s"&gt;/index.php?&lt;/span&gt;&lt;span class="nv"&gt;$query_string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# For Drupal &amp;gt;= 7&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@rewrite&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;rewrite&lt;/span&gt; &lt;span class="s"&gt;^/(.*)&lt;/span&gt;$ &lt;span class="s"&gt;/index.php?q=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# Don't allow direct access to PHP files in the vendor directory.&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;/vendor/.*\.php$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;deny&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# In Drupal 8, we must also match new paths where the '.php' appears in&lt;/span&gt;
    &lt;span class="c1"&gt;# the middle, such as update.php/selection. The rule we use is strict,&lt;/span&gt;
    &lt;span class="c1"&gt;# and only allows this pattern with the update.php front controller.&lt;/span&gt;
    &lt;span class="c1"&gt;# This allows legacy path aliases in the form of&lt;/span&gt;
    &lt;span class="c1"&gt;# blog/index.php/legacy-path to continue to route to Drupal nodes. If&lt;/span&gt;
    &lt;span class="c1"&gt;# you do not have any paths like that, then you might prefer to use a&lt;/span&gt;
    &lt;span class="c1"&gt;# laxer rule, such as:&lt;/span&gt;
    &lt;span class="c1"&gt;#   location ~ \.php(/|$) {&lt;/span&gt;
    &lt;span class="c1"&gt;# The laxer rule will continue to work if Drupal uses this new URL&lt;/span&gt;
    &lt;span class="c1"&gt;# pattern with front controllers other than update.php in a future&lt;/span&gt;
    &lt;span class="c1"&gt;# release.&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;'\.php$|^/update.php'&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span class="s"&gt;^(.+?\.php)(|/.*)&lt;/span&gt;$&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;# Security note: If you're running a version of PHP older than the&lt;/span&gt;
        &lt;span class="c1"&gt;# latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.&lt;/span&gt;
        &lt;span class="c1"&gt;# See http://serverfault.com/q/627903/94922 for details.&lt;/span&gt;
        &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;fastcgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;# Block httpoxy attacks. See https://httpoxy.org/.&lt;/span&gt;
        &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;HTTP_PROXY&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;SCRIPT_FILENAME&lt;/span&gt; &lt;span class="nv"&gt;$document_root$fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;PATH_INFO&lt;/span&gt; &lt;span class="nv"&gt;$fastcgi_path_info&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;fastcgi_intercept_errors&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;# PHP 5 socket location.&lt;/span&gt;
        &lt;span class="c1"&gt;#fastcgi_pass unix:/var/run/php5-fpm.sock;&lt;/span&gt;
        &lt;span class="c1"&gt;# PHP 7 socket location.&lt;/span&gt;
        &lt;span class="c1"&gt;# fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;&lt;/span&gt;

        &lt;span class="kn"&gt;fastcgi_pass&lt;/span&gt; &lt;span class="n"&gt;127.0.0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;# fastcgi_pass fpm:9000;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# Fighting with Styles? This little gem is amazing.&lt;/span&gt;
    &lt;span class="c1"&gt;# location ~ ^/sites/.*/files/imagecache/ { # For Drupal &amp;lt;= 6&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;^/sites/.*/files/styles/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;# For Drupal &amp;gt;= 7&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="s"&gt;@rewrite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# Handle private files through Drupal.&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;^/system/files/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;# For Drupal &amp;gt;= 7&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="s"&gt;/index.php?&lt;/span&gt;&lt;span class="nv"&gt;$query_string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# prevent hotlinking&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt; &lt;span class="sr"&gt;^/sites/.*/files/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;valid_referers&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt; &lt;span class="s"&gt;blocked&lt;/span&gt; &lt;span class="s"&gt;www.physicstime.com&lt;/span&gt; &lt;span class="s"&gt;physicstime.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;if&lt;/span&gt; &lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$invalid_referer&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt; &lt;span class="s"&gt;\.(js|css|png|jpg|jpeg|gif|ico)&lt;/span&gt;$ &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# prevent hotlinking&lt;/span&gt;
        &lt;span class="kn"&gt;valid_referers&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt; &lt;span class="s"&gt;blocked&lt;/span&gt; &lt;span class="s"&gt;www.physicstime.com&lt;/span&gt; &lt;span class="s"&gt;physicstime.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;if&lt;/span&gt; &lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$invalid_referer&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="s"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;log_not_found&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;slightly modified from the wonderful reference provided by nginx, mostly the first 3 lines and later the fastcgi_pass&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/wiki/start/topics/recipes/drupal/"&gt;https://www.nginx.com/resources/wiki/start/topics/recipes/drupal/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="post-boot-manual-configuration-ohgodwhy"&gt;Post boot manual configuration (ohgodwhy)&lt;/h2&gt;
&lt;p&gt;Post boot of a "fresh from built-by-packer snapshot" there were still the basic steps of configuring Drupal (which I did manually with a browser and install.php though I'm pretty sure I could have just overridden the settings.php directly).&lt;/p&gt;
&lt;p&gt;And for this migration project a MySQL dump, SCP of the existing extra modules, and of course the already uploaded user images/files.&lt;/p&gt;
&lt;p&gt;I'm sure with more tinkering I can overcome the nginx vs www-data user permissions issue but since I time boxed this project I stuck with this compromise which is still much more improved and automated than my previous setup.&lt;/p&gt;
&lt;p&gt;For migrating data there is of course the prerequisite: &lt;code&gt;mysqldump -uroot -p physicstime &amp;gt; backup.sql&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;themes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bartik&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;css&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;css&lt;/span&gt;
    &lt;span class="nt"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;929em&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;themes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bartik&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;css&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;css&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;tr&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt; &lt;span class="s1"&gt;'\r'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;sed&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;'s/#site-slogan {\r  font-size: 0.929em/#site-slogan {\r  font-size: 2.929em/'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;tr&lt;/span&gt; &lt;span class="s1"&gt;'\r'&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;themes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;bartik&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;css&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;updated&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;customize increased visibility of the #site-slogan { , occasionally needs cache cleared in admin/config/development/performance
The oneliner is a complicated way of sed replacing two lines at once (tr replaces newlines with \r temporarily)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -i 's/font-size: 87.5/font-size: 120/' /var/www/html/themes/bartik/css/style.css
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Because the world does not need yet another 10pt font website&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hostnamectl set-hostname physicstime.com
docker-compose up &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Hint: &lt;code&gt;/etc/hosts&lt;/code&gt; locally and use a browser to do initial install.php config before a DNS cutover&lt;/p&gt;
&lt;p&gt;DB connection string requires 172.17.0.1 (the default docker private IP network bridge)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@physicstime:/home/USER/physicstime.com# mv files/ /var/www/html/sites/physicstime.com/
mv all /var/www/html/sites/

ifconfig | grep Bc
    172.17.0.1

docker run -it --rm --volume /opt:/opt mariadb:5.5 /bin/bash
    mysql -h172.17.0.1 -uYOURUSER -p physicstime
        show tables;
        exit
    mysql -h172.17.0.1 -uroot -p physicstime &amp;lt; backup.sql

chown root:root -R /var/www/html/sites/
chmod 400 /var/www/html/sites/default/settings.php
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ensure /var/www/html/sites/default/files has the correct permissions, otherwise no CSS for you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose stop
docker ps --all
docker-compose up &amp;amp;
docker-compose logs |&amp;amp; tee /var/log/physicstime.log
tail -f /var/log/physicstime.log /var/log/nginx/access.log
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This starts it manually and displays any traffic&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /etc/init.d; touch physicstime.sh; chmod +x physicstime.sh; vi physicstime.sh

    #!/bin/bash
    echo "starting physicstime after boot" &amp;gt;&amp;gt; /var/log/physicstime.log
    cd /home/YOURUSER; docker-compose up &amp;amp;

update-rc.d physicstime.sh defaults
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this starts the docker based services automatically on boot (not including extra logging)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="adhoc-performance-and-latency-testing"&gt;Adhoc Performance and Latency Testing&lt;/h2&gt;
&lt;p&gt;Data driven decisions is a big deal, but let's be honest, engineers love numbers :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ab -l -r -n 500 -c 100 -k -H "Accept-Encoding: gzip, deflate" http://physicstime.com/node?page=1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The unscientific "watching top": 80% for about 5 seconds vs 78% for about 5 seconds&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://httpd.apache.org/docs/2.4/programs/ab.html"&gt;https://httpd.apache.org/docs/2.4/programs/ab.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="linode-and-cherokee-and-php-cgi-53-and-mysql-55"&gt;Linode and Cherokee and php-cgi 5.3 and MySQL 5.5&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Concurrency Level:      100
Time taken for tests:   7.255 seconds
Complete requests:      500
Failed requests:        0
Keep-Alive requests:    0
Total transferred:      5321000 bytes
HTML transferred:       5089500 bytes
Requests per second:    68.92 [#/sec] (mean)
Time per request:       1451.029 [ms] (mean)
Time per request:       14.510 [ms] (mean, across all concurrent requests)
Transfer rate:          716.22 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        2    2   0.4      2       6
Processing:   102 1313 320.0   1437    1525
Waiting:       89 1308 320.2   1431    1521
Total:        104 1315 319.8   1439    1526

Percentage of the requests served within a certain time (ms)
  50%   1439
  66%   1456
  75%   1466
  80%   1473
  90%   1488
  95%   1505
  98%   1516
  99%   1519
 100%   1526 (longest request)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="digitalocean-and-nginx-and-docker-php-fpm-and-mariadb-55"&gt;DigitalOcean and nginx and Docker php-fpm and MariaDB 5.5&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Concurrency Level:      100
Time taken for tests:   7.791 seconds
Complete requests:      500
Failed requests:        0
Keep-Alive requests:    0
Total transferred:      5320068 bytes
HTML transferred:       5082000 bytes
Requests per second:    64.18 [#/sec] (mean)
Time per request:       1558.145 [ms] (mean)
Time per request:       15.581 [ms] (mean, across all concurrent requests)
Transfer rate:          666.87 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    1   1.1      0       4
Processing:   542 1421 201.6   1453    2020
Waiting:      531 1417 201.2   1447    2017
Total:        545 1422 201.0   1453    2022

Percentage of the requests served within a certain time (ms)
  50%   1453
  66%   1470
  75%   1485
  80%   1494
  90%   1510
  95%   1674
  98%   1877
  99%   1930
 100%   2022 (longest request)
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;So it seems there's a slight edge in either cherokee over nginx OR not running dockerized applications OR linode vs digitalocean BUT...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When I tweaked it for higher concurrency &lt;code&gt;ab -l -r -n 500 -c 200 -k -H "Accept-Encoding: gzip, deflate" http://physicstime.com/node?page=8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Linode + Cherokee + php-cgi&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Time taken for tests:   9.933 seconds
Requests per second:    50.34 [#/sec] (mean)
Time per request:       3973.367 [ms] (mean)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;DigitalOcean + Nginx + Docker + php-fpm&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Time taken for tests:   8.120 seconds
Requests per second:    61.58 [#/sec] (mean)
Time per request:       3248.067 [ms] (mean)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can see the trend reverse (shrug)&lt;/p&gt;
&lt;h4 id="latency-testing"&gt;Latency testing&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://tools.pingdom.com/"&gt;https://tools.pingdom.com/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;website speed test (NY) for cherokee and php-cgi had a load time of 1.17s&lt;/li&gt;
&lt;li&gt;website speed test (NY) for nginx and Docker had a load time of 1.46s&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;meh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="conclusions"&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;Adding docker simplifies one kind of complexity (stringing together multiple services that are packaged upstream) but can come at some cost to performance. (Though this might also be due to the cheaper node price)&lt;/p&gt;
&lt;p&gt;The other major advantage of using docker is that different components/services can be upgraded independently (and even just "test upgraded") which allows for a faster adoption of upstream project improvements.&lt;/p&gt;
&lt;p&gt;I personally don't like relying on the OS of the host for all of the global dependencies to play nice (and especially that different packages won't have conflicting dependencies).&lt;/p&gt;
&lt;p&gt;Since all of these processes are running in the same host that I own I expect I'm not worse off security wise.&lt;/p&gt;
&lt;p&gt;I'm curious to see if given enough time I run into the infamous /var/lib/docker issues of orphan containers, running out of disk space, or other issues.&lt;/p&gt;
&lt;p&gt;A next step might be to run this in a PlatormAsAService like OpenShift or better yet break up each container to run via a ContainerAsAService (if it's free ;)&lt;/p&gt;
&lt;p&gt;Obviously if performance and scale of a mostly read-only content distribution system was really an issue adding a cache layer like Varnish or Cloudflare or even just tweaking the various configurations would help =]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 28 Jul 2016 23:59:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-07-28:drupal-with-docker-compose-and-nginx-and-php-fpm-and-mariadb/</guid><category>docker</category><category>docker-compose</category><category>digitalocean</category><category>packer</category><category>drupal</category><category>php</category><category>nginx</category></item><item><title>Alpine Linux Introduction Tutorial</title><link>https://blog.john-pfeiffer.com/alpine-linux-introduction-tutorial/</link><description>
&lt;p&gt;Alpine Linux is a minimalist secure linux distro.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In security terms less "footprint" often means less vectors of attack and less complexity to analyze for vulnerabilities&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alpine Linux is becoming a preferred base OS for many foundational official Docker Images (python, php, ruby, nginx, redis, haproxy, go) since downloading many large Docker Images (aka Deploying Docker Containers) can saturate the network at scale.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pcworld.com/article/3031765/is-docker-ditching-ubuntu-linux-confusion-reigns.html"&gt;http://www.pcworld.com/article/3031765/is-docker-ditching-ubuntu-linux-confusion-reigns.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=10998667"&gt;https://news.ycombinator.com/item?id=10998667&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Alpine_Linux"&gt;https://en.wikipedia.org/wiki/Alpine_Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="getting-started-with-alpine-linux-in-docker"&gt;Getting started with Alpine Linux in Docker&lt;/h3&gt;
&lt;p&gt;This will pull the latest alpine image (around 4MB) and run it in an ephemeral container.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo docker run -it --rm alpine /bin/sh&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/_/alpine/"&gt;https://hub.docker.com/_/alpine/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="basics"&gt;Basics&lt;/h3&gt;
&lt;p&gt;Most of the very basic commands are similar to other linux distros like Debian/Ubuntu/Redhat, but of course there are differences ;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l /bin/sh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;/bin/busybox&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/passwd
less /etc/passwd
vi /etc/passwd
grep root /etc/passwd
ls -l /usr/bin /usr/sbin | more
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;more busybox&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="package-management"&gt;Package Management&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apk update
apk --help
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;update the local index for all remote packages, list the options of the package manager&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apk info
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list all of the packages installed locally&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apk search curl
apk search curl | sort
apk info curl
apk add curl
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;search the remote packages for a keyword (unsorted results), get info for a specific package, install a specific package&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management"&gt;http://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pkgs.alpinelinux.org/packages"&gt;https://pkgs.alpinelinux.org/packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="networking"&gt;Networking&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hostname
cat /etc/resolv.conf
ifconfig
netstat -anp

traceroute
apk add iptables
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="compiling-c-on-alpine-linux"&gt;Compiling C on Alpine Linux&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apk add build-base gcc abuild binutils
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;This should probably be part of a Dockerfile rather than run every time in an ephemeral container&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.alpinelinux.org/wiki/How_to_get_regular_stuff_working#Compiling_:_a_few_notes_and_a_reminder"&gt;https://wiki.alpinelinux.org/wiki/How_to_get_regular_stuff_working#Compiling_:_a_few_notes_and_a_reminder&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi hi.c&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="hic"&gt;hi.c&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hi"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="compiling"&gt;compiling&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apk add file
gcc -static hi.c
chmod +x a.out
file a.out
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The default is a.out: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, not stripped&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./a.out
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;hi&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this was just gcc not musl-gcc :(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="incomplete-musl-compiler-on-alpine-linux"&gt;Incomplete musl compiler on alpine linux&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;WARNING: below did not work, TODO: &lt;a href="https://bitbucket.org/GregorR/musl-cross"&gt;https://bitbucket.org/GregorR/musl-cross&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I suspect that I am overwriting the existing gcc toolchain and I need to specify a different prefix (/usr/local) &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apk update
apk add wget tar gzip gcc make
&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="apk-add-musl-dev-wget-tar-gzip-gcc-make"&gt;apk add musl-dev wget tar gzip gcc make&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --no-check-certificate http://www.musl-libc.org/releases/musl-1.1.15.tar.gz
tar xf musl-1.1.15.tar.gz
cd musl-1.1.15
./configure
make install
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Now we've installed the musl compiler?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;/usr/local/musl seemed terribly empty of binaries (i.e. no /usr/local/musl/bin/)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.musl-libc.org/faq.html"&gt;https://www.musl-libc.org/faq.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.musl-libc.org/how.html"&gt;http://www.musl-libc.org/how.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;apk add alpine-sdk&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But maybe because it's already an alpine linux container the gcc already uses musl instead of libc and does not need the musl-gcc wrapper?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.guidesbyeric.com/statically-link-c-programs-with-musl-gcc"&gt;http://www.guidesbyeric.com/statically-link-c-programs-with-musl-gcc&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="compile-go-on-alpine-linux"&gt;Compile Go on Alpine Linux&lt;/h3&gt;
&lt;p&gt;Just use the golang image based on alpine linux ;)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/docker-library/docs/tree/master/golang"&gt;https://github.com/docker-library/docs/tree/master/golang&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull golang:alpine
docker run -it --rm golang:alpine /bin/sh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that we've got the container running we can use the shell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi intro.go&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s2"&gt;"fmt"&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"hi"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To just run the source code &lt;code&gt;go run intro.go&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;hi&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l
go build intro.go
ls -l
./intro
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;hi&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maybe &lt;/p&gt;
&lt;p&gt;&lt;a href="http://dominik.honnef.co/posts/2015/06/go-musl/"&gt;http://dominik.honnef.co/posts/2015/06/go-musl/&lt;/a&gt; ?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 28 Feb 2016 21:19:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-02-28:alpine-linux-introduction-tutorial/</guid><category>alpine</category><category>linux</category><category>security</category></item><item><title>Debian Packages for Deployment and Reprepro for a local apt repository</title><link>https://blog.john-pfeiffer.com/debian-packages-for-deployment-and-reprepro-for-a-local-apt-repository/</link><description>
&lt;h3 id="what-is-a-debian-package"&gt;What is a Debian Package?&lt;/h3&gt;
&lt;p&gt;A debian package is a way to distribute and install a collection of files (aka software) onto a system (i.e. Debian or Ubuntu).&lt;/p&gt;
&lt;p&gt;While a piece of software might depend on other debian packages (e.g. libraries) usually a single .deb file represents some sort of module that serves a single purpose.&lt;/p&gt;
&lt;p&gt;Once a debian package is built any client (dpkg or apt which also uses dpkg ;) can use it to install the software.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.debian.org/doc/manuals/debian-faq/ch-pkg_basics.en.html"&gt;https://www.debian.org/doc/manuals/debian-faq/ch-pkg_basics.en.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="why-use-a-debian-package"&gt;Why use a Debian Package?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;When you're developing on your own box you can pretty much get away with anything&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A complex and large scale production environment typically has a lot of costs (both operationally and in not becoming a bottleneck to dev velocity). Any opportunity to increase determinism and reduce risk is welcome.&lt;/p&gt;
&lt;p&gt;Deploying source code directly from version control does not always scale well (streaming tons of small files, dedicated read only service user direct to production, etc.) nor does it create enough determinism with regards to dependency management.&lt;/p&gt;
&lt;p&gt;As deployments become more frequent and Continuous Integration becomes more complex it is really important to embrace the "build once" principle so that a single artifact (hopefully with all of its dependencies) can pass through the gauntlet of integration testing and canary/incremental rollout.&lt;/p&gt;
&lt;p&gt;So now that you're convinced "Artifacts" are the way to go lets just skip .exe, .msi, .jar, .etc and go straight to...&lt;/p&gt;
&lt;p&gt;The Debian Package is a "battle tested" format with lots of features (dependency requirements, preinst scripts, postinst scripts, etc.) but if there is a bug in a specific .deb file it is not always practical to get the full source code and rebuild the whole thing (especially considering static bindings and specific compilation environment/parameters).&lt;/p&gt;
&lt;p&gt;One example people give is an erroneous pre install or post install script that is preventing either installation or removal.&lt;/p&gt;
&lt;p&gt;The example below is more on just simply changing the control file "Description:"&lt;/p&gt;
&lt;h4 id="how-to-unpack-a-debian-package-modify-the-control-file-and-repack-it"&gt;How to unpack a debian package, modify the control file, and repack it&lt;/h4&gt;
&lt;p&gt;To unpack, modify, and repack a debian package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm --it --volume /tmp:/tmp ubuntu:14.04 /bin/bash
sudo apt-get update
apt-get install --yes vim wget
wget https://example.com/example.deb --output-document /tmp/example.deb
&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp
mkdir emptydir
dpkg-deb -R example.deb /tmp/emptydir
ls -ahl /tmp/emptydir
ls -ahl /tmp/emptydir/DEBIAN
vi /tmp/emptydir/DEBIAN/control
dpkg-deb -b emptydir /tmp/example-fixed.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On your host /tmp should now contain example.deb and example-fixed.deb&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unix.stackexchange.com/questions/138188/easily-unpack-deb-edit-postinst-and-repack-deb"&gt;https://unix.stackexchange.com/questions/138188/easily-unpack-deb-edit-postinst-and-repack-deb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://manpages.ubuntu.com/manpages/xenial/en/man1/dpkg-deb.1.html"&gt;http://manpages.ubuntu.com/manpages/xenial/en/man1/dpkg-deb.1.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="reprepro-for-a-local-apt-repository"&gt;reprepro for a local apt repository&lt;/h3&gt;
&lt;p&gt;Just as a debian provides more control over packaging and dependency management, you can also have your apt repository where you store debian packages.&lt;/p&gt;
&lt;p&gt;By hosting your own apt repository you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create your own distribution server (e.g. in an s3 bucket)&lt;/li&gt;
&lt;li&gt;Create your own intermediate mirror or cache of an upstream repository (e.g. in a local area network shared drive)&lt;/li&gt;
&lt;li&gt;Create a local apt repository on local disk for a non internet connected device&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tool &lt;code&gt;reprepro&lt;/code&gt; creates and manages the apt database and filesystem.&lt;/p&gt;
&lt;h4 id="setup-ubuntu-1404-to-install-reprepro"&gt;Setup Ubuntu 14.04 to install reprepro&lt;/h4&gt;
&lt;p&gt;It might be as simple as a single command to install reprepro but here is the full example in the case where you have broken or corrupted your sources.list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF &amp;gt; /etc/apt/sources.list&lt;/span&gt;
&lt;span class="s"&gt;    deb http://archive.ubuntu.com/ubuntu/ trusty main&lt;/span&gt;
&lt;span class="s"&gt;    deb http://archive.ubuntu.com/ubuntu/ trusty universe&lt;/span&gt;
&lt;span class="s"&gt;    deb http://archive.ubuntu.com/ubuntu/ trusty multiverse&lt;/span&gt;
&lt;span class="s"&gt;    deb http://security.ubuntu.com/ubuntu trusty-security main restricted&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

rm -rf /var/lib/apt/lists
apt-get clean&lt;span class="p"&gt;;&lt;/span&gt; apt-get update
apt-get install reprepro
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://manpages.ubuntu.com/manpages/trusty/en/man1/reprepro.1.html"&gt;http://manpages.ubuntu.com/manpages/trusty/en/man1/reprepro.1.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="setup-the-gpg-key"&gt;Setup the GPG key&lt;/h4&gt;
&lt;p&gt;A gpg key is an important part of apt for providing a digital signature of authenticity&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gpg&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;
&lt;span class="n"&gt;gpg&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fingerprint&lt;/span&gt;
&lt;span class="n"&gt;gpg&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fingerprint&lt;/span&gt;
&lt;span class="n"&gt;gpg&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;YOURKEY.gpg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This allows for importing an existing gpg key into the local keyring (otherwise reprepro actions will not persist)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --yes --batch --delete-secret-keys "21E29B5B3F6D550EF4E2C2C9E9991E312341234"
gpg --yes --batch --delete-keys "21E29B5B3F6D550EF4E2C2C9E9991E312341234"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Removing or deleting a key seems to only work when you delete a key exactly by fingerprint&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo ENCPASSWORD | gpg --yes --no-tty --batch --passphrase-fd 0 --output 8F13E123.key --decrypt 8F13E123.key.gpg
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Decrypt a password encrypted gpg key (that was encrypted with gpg - so meta!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.debian.org/SettingUpSignedAptRepositoryWithReprepro"&gt;https://wiki.debian.org/SettingUpSignedAptRepositoryWithReprepro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="setup-a-simple-reprepro"&gt;Setup a simple reprepro&lt;/h4&gt;
&lt;p&gt;Here we will setup a local apt mirror that is a filtered subset of the upstream mariadb repository&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /home/admin/apt/conf
mkdir -p /home/admin/apt/logs
mkdir -p /home/admin/apt/archive

cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF &amp;gt; /home/admin/apt/conf/distributions&lt;/span&gt;
&lt;span class="s"&gt;Origin: digitalocean-mariadb-10-trusty&lt;/span&gt;
&lt;span class="s"&gt;Codename: digitalocean-mariadb-10-trusty&lt;/span&gt;
&lt;span class="s"&gt;Description: local mirror of mariadb 10 trusty from the digital ocean sf mirror&lt;/span&gt;
&lt;span class="s"&gt;Architectures: amd64&lt;/span&gt;
&lt;span class="s"&gt;Components: main&lt;/span&gt;
&lt;span class="s"&gt;SignWith: 8F13E123&lt;/span&gt;
&lt;span class="s"&gt;Update: - digitalocean-mariadb-10-trusty&lt;/span&gt;
&lt;span class="s"&gt;Log: /home/admin/apt/logs/bintray-mirror.log&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF &amp;gt; /home/admin/apt/conf/options&lt;/span&gt;
&lt;span class="s"&gt;    outdir /home/admin/apt/archive&lt;/span&gt;
&lt;span class="s"&gt;    ask-passphrase&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF &amp;gt; /home/admin/apt/conf/updates&lt;/span&gt;
&lt;span class="s"&gt;Name: digitalocean-mariadb-10-trusty&lt;/span&gt;
&lt;span class="s"&gt;Suite: trusty&lt;/span&gt;
&lt;span class="s"&gt;Method: http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu/&lt;/span&gt;
&lt;span class="s"&gt;Components: main&lt;/span&gt;
&lt;span class="s"&gt;Architectures: amd64&lt;/span&gt;
&lt;span class="s"&gt;FilterList: deinstall /home/admin/apt/conf/mariadb-partial.list&lt;/span&gt;
&lt;span class="s"&gt;VerifyRelease: blindtrust&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF &amp;gt; /home/admin/apt/conf/mariadb-partial.list&lt;/span&gt;
&lt;span class="s"&gt;mariadb-partial.list&lt;/span&gt;
&lt;span class="s"&gt;libmariadbclient-dev install&lt;/span&gt;
&lt;span class="s"&gt;libmariadbclient18 install&lt;/span&gt;
&lt;span class="s"&gt;libmariadbd-dev install&lt;/span&gt;
&lt;span class="s"&gt;libmysqlclient18 install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-client install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-client-10.0 install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-client-core-10.0 install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-common install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-connect-engine-10.0 install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-server install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-server-10.0 install&lt;/span&gt;
&lt;span class="s"&gt;mariadb-server-core-10.0 install&lt;/span&gt;
&lt;span class="s"&gt;mysql-common install&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The configuration created
- defines the Distribution
- the option of output directory
- how the Distribution becomes updated (blindtrust (lol))
- explicitly what to download or blacklist from the upstream (exclude everything else)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mirrorer.alioth.debian.org/reprepro.1.html#CONFIG FILES"&gt;https://mirrorer.alioth.debian.org/reprepro.1.html#CONFIG FILES&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="updating-a-remote-source"&gt;Updating a remote source&lt;/h4&gt;
&lt;p&gt;Assuming the installation of reprepro and correct configuration of conf/options, conf/distributions, conf/updates, and conf/NAME-partial.list&lt;/p&gt;
&lt;p&gt;Update a local repository from an upstream:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;reprepro --verbose --basedir /home/admin/apt check digitalocean-mariadb-10-trusty

reprepro --verbose --basedir /home/admin/apt update digitalocean-mariadb-10-trusty
    aptmethod got &lt;span class="s1"&gt;'http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu/dists/trusty/InRelease'&lt;/span&gt;
    aptmethod got &lt;span class="s1"&gt;'http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu/dists/trusty/main/binary-amd64/Packages.gz'&lt;/span&gt;
    Calculating packages to get...
    Getting packages...
    aptmethod got &lt;span class="s1"&gt;'http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu/pool/main/m/mariadb-10.0/libmariadbclient-dev_10.0.26+maria-1~trusty_amd64.deb'&lt;/span&gt;

ls -ahl /home/admin/apt/archive
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;should contain two directories: dists and pool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;reprepro --verbose --basedir /home/admin/apt check
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will check all Distributions that have been configured for upstream changes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="listing-or-adding-or-removing-a-debian-package-with-reprepro"&gt;Listing or Adding or Removing a debian package with reprepro&lt;/h4&gt;
&lt;p&gt;Assuming you have setup your gpg signing key and config files correctly you can also just add a single package ad-hoc to your local apt repository&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;reprepro dumpreferences
reprepro --verbose --basedir . remove digitalocean-mariadb-10-trusty SOMEPACKAGENAME
reprepro --verbose --basedir . includedeb digitalocean-mariadb-10-trusty SOMEFILENAME.deb
reprepro &lt;span class="nb"&gt;export&lt;/span&gt; digitalocean-mariadb-10-trusty
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mirrorer.alioth.debian.org/reprepro.1.html"&gt;https://mirrorer.alioth.debian.org/reprepro.1.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wikitech.wikimedia.org/wiki/Reprepro"&gt;https://wikitech.wikimedia.org/wiki/Reprepro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="configuring-a-client"&gt;Configuring a client&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;/etc/apt/sources.list.d/mariadb.list&lt;/span&gt;
    &lt;span class="err"&gt;deb&lt;/span&gt;     &lt;span class="err"&gt;file:///home/admin/apt/archive&lt;/span&gt; &lt;span class="err"&gt;trusty&lt;/span&gt; &lt;span class="err"&gt;main&lt;/span&gt;
&lt;span class="err"&gt;apt-get&lt;/span&gt; &lt;span class="err"&gt;clean&lt;/span&gt;
&lt;span class="err"&gt;apt-get&lt;/span&gt; &lt;span class="err"&gt;update&lt;/span&gt;
&lt;span class="err"&gt;apt-get&lt;/span&gt; &lt;span class="err"&gt;search&lt;/span&gt; &lt;span class="err"&gt;mariadb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Now you can install mariadb from your local apt repository, or host it on s3 and change mariadb.list to have the bucket FQDN (&lt;code&gt;aws s3 --delete --exact-timestamps sync ./archive s3://mybucket&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 24 Feb 2016 20:40:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-02-24:debian-packages-for-deployment-and-reprepro-for-a-local-apt-repository/</guid><category>debian</category><category>deb</category><category>build</category><category>packaging</category><category>deployment</category><category>scale</category><category>reprepro</category><category>apt</category></item><item><title>Python packaging pip wheels</title><link>https://blog.john-pfeiffer.com/python-packaging-pip-wheels/</link><description>
&lt;h3 id="installing-packages-with-python"&gt;Installing packages with python&lt;/h3&gt;
&lt;p&gt;Pip is the standard way to install python packages&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install packagename
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;searches &lt;a href="https://pypi.python.org"&gt;https://pypi.python.org&lt;/a&gt; and finds the latest version of the package, full docs &lt;a href="https://pip.pypa.io/en/latest/"&gt;https://pip.pypa.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you get the package name wrong you will have installed something completely different.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip search packagename
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find packages similar to the name you provided (from pypi or whatever provider you are using)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://pip.pypa.io/en/stable/reference/pip_search/"&gt;https://pip.pypa.io/en/stable/reference/pip_search/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip freeze
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;displays what is installed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="virtualenv-for-sanity-and-isolation"&gt;Virtualenv for sanity and isolation&lt;/h3&gt;
&lt;p&gt;A common mistake is to use the global pip installation of the Operating System to store all of the installed dependencies.  As soon as you have conflicting version requirements this breaks.  As soon as you have multiple applications/services installing globally it becomes unmanageable.&lt;/p&gt;
&lt;p&gt;Virtualenv creates a virtual environment (basically injecting a PATH into the environment) for python binaries and package installation.&lt;/p&gt;
&lt;h4 id="pinning-versions-and-guaranteed-sourcing"&gt;Pinning Versions and Guaranteed Sourcing&lt;/h4&gt;
&lt;p&gt;One common mistake is to not pin version numbers and depend on &lt;a href="https://pypi.python.org"&gt;https://pypi.python.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Without pinning version numbers for your dependencies (listed one per line in requirements.txt) you will receive a nasty surprise when the maintainers make a breaking change and you get a newer version unexpectedly.  Since python is a dynamic language you may receive the worst kind of surprise in production (hopefully nothing as bad as data corruption or security issues).&lt;/p&gt;
&lt;p&gt;When you do pin the version number BUT still depend on https://pypi.python.org to provide the file then the project maintainers may remove the version you are pinned to (causing your builds to fail - though some for some cowboys this will cause production deployments to fail).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pin the version of your dependencies, provide the dependencies locally or through a system under your control (your own pypi server or s3 bucket)&lt;/strong&gt; , explicit is better than implicit.&lt;/p&gt;
&lt;h3 id="wheels-are-better-python-packaging"&gt;Wheels are better Python Packaging&lt;/h3&gt;
&lt;p&gt;Wheels are (awesome), it's the beginning of trying to make python installations more deterministic and pip less dynamic at install time. &lt;a href="http://wheel.readthedocs.org/en/latest/"&gt;http://wheel.readthedocs.org/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An output directory of the wheels of a project are known by convention as a "wheelhouse".&lt;/p&gt;
&lt;p&gt;As a side effect the wheel directory, “/tmp/wheelhouse” in the example, contains installable copies of the exact versions of your application’s dependencies. By installing from those cached wheels you can recreate that environment quickly and with no surprises.&lt;/p&gt;
&lt;p&gt;When you install using pip it looks for a “wheel file” (*.whl which is the newer zip compressed format, goodbye .egg) of the correct name for your (virtual) environment (e.g. py2 or py3 or x86 linux).  This wheel file saves time and bugs from installing a package/.egg  from source (usually that time is spent compiling C code for the python library).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install wheel
&lt;span class="nb"&gt;cd&lt;/span&gt; projectsource
python setup.py bdist_wheel
ls -l ./dist
pip wheel  --find-links /root/wheelhouse --wheel-dir&lt;span class="o"&gt;=&lt;/span&gt;/root/wheelhouse -r requirements.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pip.pypa.io/en/stable/reference/pip_wheel/"&gt;https://pip.pypa.io/en/stable/reference/pip_wheel/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pip-python3.readthedocs.org/en/latest/reference/pip_wheel.html#build-system-interface"&gt;http://pip-python3.readthedocs.org/en/latest/reference/pip_wheel.html#build-system-interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="installing-using-a-wheel-file"&gt;installing using a wheel file&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install somepackage-version-py2.py3.whl
pip freeze
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="error-invalid-command-bdist_wheel"&gt;error: invalid command 'bdist_wheel'&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/docutils#downloads"&gt;https://pypi.python.org/pypi/docutils#downloads&lt;/a&gt; only provided a py3 wheel (facepalm)&lt;/p&gt;
&lt;p&gt;Downloading the source .tar.gz and running python setup.py bdist_wheel resulted in:
    error: invalid command 'bdist_wheel'&lt;/p&gt;
&lt;p&gt;Reading the internet provided no comprehensible answers (lots of "setuptools does not match your version of pip or wheel or whatever")&lt;/p&gt;
&lt;p&gt;The following hacking seems to have provided a solution:&lt;/p&gt;
&lt;p&gt;:::bash
    python --version
    pip --version
    cd /tmp
    wget https://pypi.python.org/packages/source/d/docutils/docutils-0.12.tar.gz#md5=4622263b62c5c771c03502afa3157768
    tar xf docutils-0.12.tar.gz
    cd docutils-0.12
    virtualenv venv
    source venv/bin/activate
    python --version
    pip --version
    pip install wheel
    pip freeze
    python setup.py install
    pip freeze
    pip wheel .
    ls /tmp/docutils-0.12/wheelhouse
        docutils-0.12-py2-none-any.whl&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 05 Jan 2016 20:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2016-01-05:python-packaging-pip-wheels/</guid><category>python</category><category>packaging</category><category>pip</category><category>wheels</category></item><item><title>Static site with Bitbucket and Shippable and Pelican</title><link>https://blog.john-pfeiffer.com/static-site-with-bitbucket-and-shippable-and-pelican/</link><description>
&lt;h2 id="running-software-costs-money"&gt;Running Software Costs Money&lt;/h2&gt;
&lt;p&gt;One of the most overlooked costs in running a service is operations.  While Research and Development (aka coding) is often cited as the largest expense (software developer salaries! &lt;a href="https://www.quora.com/What-are-the-average-operating-costs-of-SaaS-companies"&gt;https://www.quora.com/What-are-the-average-operating-costs-of-SaaS-companies&lt;/a&gt;), and 80% (or more) of (successful) software's life is maintenance (&lt;a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3610582/"&gt;http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3610582/&lt;/a&gt;), you have to run the darn thing all the time.&lt;/p&gt;
&lt;h2 id="a-free-and-efficient-static-web-site"&gt;A Free and Efficient Static Web Site&lt;/h2&gt;
&lt;p&gt;What is one cost effective (free!) and efficient solution to running a static site?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bitbucket also has a free static site capability (as long as the DNS is USERNAME.bitbucket.org), so no server/hosting required&lt;/li&gt;
&lt;li&gt;Bitbucket have free private repositories&lt;/li&gt;
&lt;li&gt;The Bitbucket static site repository can be private (only the html exposed will be visible to anonymous users)&lt;/li&gt;
&lt;li&gt;Shippable have a free plan with 1 container that will do your builds (fine by me, Docker is fast!)&lt;/li&gt;
&lt;li&gt;Pelican converts markdown into .html and you can still use javascript for fancy things &lt;a href="http://docs.getpelican.com/"&gt;http://docs.getpelican.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The basic process is to be triggered by a git push to the private repository of new/updated source markdown, use pelican to process it into .html, and then publish (git push) the new/updated .html to the static site repository.&lt;/p&gt;
&lt;p&gt;One reason to use two seperate repositories instead of only one repository is that if you make a commit to your markdown source repository that will trigger a CI run which will push the updated .html files to the repository which would be detected and maybe trigger an infinite loop.  Or at the least interleave your source code changes with generated output changes in the commit logs.  =]&lt;/p&gt;
&lt;p&gt;An alternative is using multiple branches but you'd better hope nobody ever deletes your source branch by accident.&lt;/p&gt;
&lt;p&gt;Another alternative is to include an IF statement in your shippable code to not push if the diff/md5 of the source files (or maybe check against the output .html?) still match.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I say keep it super simple ;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="bitbucket-setup"&gt;Bitbucket setup&lt;/h2&gt;
&lt;h3 id="create-the-source-and-target-repositories"&gt;Create The Source and Target Repositories&lt;/h3&gt;
&lt;p&gt;Create a new private repository (for your markdown), consider prefixing the name with source or something (good names makes for good maintenance)&lt;/p&gt;
&lt;p&gt;Make sure you have cloned the pelican project and setup a basic static site: &lt;a href="https://blog.john-pfeiffer.com/how-to-set-up-a-pelican-static-blog-site/"&gt;https://blog.john-pfeiffer.com/how-to-set-up-a-pelican-static-blog-site/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inside your .gitignore you will probably want to exclude .pyc and ./output and any other pelican created artifacts.&lt;/p&gt;
&lt;p&gt;Inside your repository at the root level you will need a shippable.yaml file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"2.7"&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt; &lt;span class="n"&gt;beautifulsoup4&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;publishconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;after_script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This assumes that the pelican-project is a subdirectory in the repository using the best practice of leaving the top level of a repository for build and test artifacts and isolating the source code into a subdirectory.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Create another private repository for your public html.  It MUST be named USERNAME.bitbucket.org to make use of the bitbucket static site capabilities.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(yes, the name must include those dots/domain name of the service)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://confluence.atlassian.com/bitbucket/publishing-a-website-on-bitbucket-cloud-221449776.html"&gt;https://confluence.atlassian.com/bitbucket/publishing-a-website-on-bitbucket-cloud-221449776.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="get-oauth-access"&gt;Get OAuth Access&lt;/h3&gt;
&lt;p&gt;Generate a Consumer OAuth2 Token with &lt;a href="https://confluence.atlassian.com/bitbucket/oauth-on-bitbucket-cloud-238027431.html#OAuthonBitbucketCloud-Createaconsumer"&gt;https://confluence.atlassian.com/bitbucket/oauth-on-bitbucket-cloud-238027431.html#OAuthonBitbucketCloud-Createaconsumer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use curl to verify your token (this is how Shippable will get a 1 hour expiring access token to work on the target output repository)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials -u yourkeyhere:yoursecrethere
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/24965307/how-to-manipulate-bitbucket-repository-with-token"&gt;http://stackoverflow.com/questions/24965307/how-to-manipulate-bitbucket-repository-with-token&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="shippable-setup"&gt;Shippable setup&lt;/h2&gt;
&lt;p&gt;Enable the integration with Bitbucket: &lt;a href="http://docs.shippable.com/#step-0-prerequisite"&gt;http://docs.shippable.com/#step-0-prerequisite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Right from the beginning Shippable tries to ask which source repository provider (either GitHub or Bitbucket) you will be using.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Use Shippable's OAuth implementation (Account Integration) to pick which Bitbucket repository&lt;/p&gt;
&lt;p&gt;Home -&amp;gt; CI (dropdown) -&amp;gt; Bitbucket (hopefully you have a different avatar between Bitbucket and GitHub)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Press "Sync" if you have a newly created repository that is not listed yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Add the Bitbucket OAuth2 Key and Secret as a Shippable secure environment variable in the format KEY:SECRET&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Go to https://app.shippable.com/projects/1234d2ea1895ca4474661234/settings and look for the Encrypt section
Fill it in with something like OAUTH_USER=yourkeyhere:yoursecrethere&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://shippable-docs-20.readthedocs.org/en/latest/config.html#secure-environment-variables"&gt;http://shippable-docs-20.readthedocs.org/en/latest/config.html#secure-environment-variables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copy the output to your shippable.yml file&lt;/p&gt;
&lt;h2 id="putting-it-all-together"&gt;Putting it all together&lt;/h2&gt;
&lt;p&gt;Update the source repository top level shippable.yaml file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"2.7"&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt; &lt;span class="n"&gt;beautifulsoup4&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yourencryptedkeyandsecret&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;publishconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;bitbucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;oauth2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;grant_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client_credentials&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;OAUTH_USER&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;BBTOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;'import sys, json; print json.load(sys.stdin)["access_token"]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="s2"&gt;"https://x-token-auth:$BBTOKEN==@bitbucket.org/USERNAME/USERNAME.bitbucket.org"&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt; &lt;span class="n"&gt;USERNAME&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitbucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="n"&gt;USERNAME&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitbucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;USERNAME&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitbucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="s2"&gt;"me@example.com"&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;"John Pfeiffer"&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s2"&gt;"build $BUILD_NUMBER commit $COMMIT"&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fq&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;after_script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ahl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Adding the bitbucket oauth2 consumer key and secret (separated by a colon) as an encrypted environment variable&lt;/li&gt;
&lt;li&gt;using curl to generate a temporary access_token and extracting it into a local environment variable&lt;/li&gt;
&lt;li&gt;cloning with the access)token and removing the previous contents and replacing them with the newly generated output&lt;/li&gt;
&lt;li&gt;leveraging the CI variables to indicate on the output html repository what markdown source commits triggered this build&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id="reviewing-the-output"&gt;Reviewing the output&lt;/h2&gt;
&lt;p&gt;The full output of the run is available at something like https://app.shippable.com/builds/1234dec1d00e020c0011234&lt;/p&gt;
&lt;p&gt;This is really helpful for debugging (especially seeing how many seconds each step took)&lt;/p&gt;
&lt;p&gt;Possible improvements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;use a python application best practice of documenting dependencies with a requirements.txt file at the top level&lt;/li&gt;
&lt;li&gt;putting all of the commands into a script like publish-in-ci.sh so that it could be run locally in a dev environment&lt;/li&gt;
&lt;li&gt;add the Dockerfile used for local development into the source repository to consolidate and simplify development in one place&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;p&gt;One thing that is interesting about this is that using OAuth tokens through a service is merely wrapping all of the manual steps I have in a previous blog post into a nice SaaS wrapper =)
&lt;a href="https://blog.john-pfeiffer.com/publish-a-pelican-blog-using-a-bitbucket-post-webhook/"&gt;https://blog.john-pfeiffer.com/publish-a-pelican-blog-using-a-bitbucket-post-webhook/&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 21 Dec 2015 12:24:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-12-21:static-site-with-bitbucket-and-shippable-and-pelican/</guid><category>static site</category><category>pelican</category><category>bitbucket</category><category>shippable ci</category><category>ci</category><category>cd</category></item><item><title>Go Programming Intro with VS Code and Arrays Slices Functions and Testing</title><link>https://blog.john-pfeiffer.com/go-programming-intro-with-vs-code-and-arrays-slices-functions-and-testing/</link><description>
&lt;p&gt;Introducing the Go Programming Language (aka golang) basics, interactive sandbox with &lt;a href="http://play.golang.org"&gt;http://play.golang.org&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Tooling is often essential to productivity.&lt;/p&gt;
&lt;h3 id="download-and-install-the-go-language-compiler-and-tools"&gt;Download and install the go language compiler and tools&lt;/h3&gt;
&lt;h4 id="vim-and-docker"&gt;vim and Docker&lt;/h4&gt;
&lt;p&gt;Or alternatively just avoid the IDE and Environment and use vim and a docker container ;) &lt;a href="https://hub.docker.com/_/golang/"&gt;https://hub.docker.com/_/golang/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="installing-and-the-environment"&gt;Installing and the Environment&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://golang.org/dl/"&gt;https://golang.org/dl/&lt;/a&gt; and &lt;code&gt;cd /opt; tar xf go.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instead of the ephemeral &lt;code&gt;export PATH=$PATH:/usr/local/go/bin&lt;/code&gt; I prefer the persistent ~/.profile (or for all users /etc/profile though clearly /opt indicates a single user system ;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Go Programming
export GOROOT=/opt/go
export PATH=$PATH:$GOROOT/bin
export GOPATH=/opt/goprojects
export PATH=$PATH:$GOPATH/bin

source ~/.profile
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The last step gets you going without needing to reload your shell, full docs at &lt;a href="https://golang.org/doc/install"&gt;https://golang.org/doc/install&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt; be careful how you name your executables as the $GOPATH/bin will contain the names of the projects as binaries (so don't create a project or binary named bash!)&lt;/p&gt;
&lt;h3 id="manual-go-cli-execution-and-compilation"&gt;Manual Go CLI execution and compilation&lt;/h3&gt;
&lt;p&gt;The traditional command line method is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd $GOPATH/path-to-your-project/PROJECTNAME
go run PROJECTNAME
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will run go in a "dev mode" where it pulls in dependencies and executes immediately (no artifacts are created)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To compile and install the binary into the local path:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd $GOPATH/path-to-your-project/PROJECTNAME
go install
$GOPATH/bin/PROJECTNAME
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This compiles and builds and installs the binary into the $GOPATH&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To build a binary in the current directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd $GOPATH/path-to-your-project/PROJECTNAME
go build
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will just build the binary locally (i.e. name.go becomes "name") in the current directory, not in the $GOPATH&lt;/p&gt;
&lt;p&gt;Be aware that sometimes you may forget and commit this new binary to version control (badpokerface)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/doc/code.html#Command"&gt;https://golang.org/doc/code.html#Command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dave.cheney.net/2014/01/21/using-go-test-build-and-install"&gt;http://dave.cheney.net/2014/01/21/using-go-test-build-and-install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A concrete example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Compile with: &lt;code&gt;cd /opt/goprojects/src/github.com/johnpfeiffer/intro/ ; go install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Execute with: &lt;code&gt;/opt/goprojects/bin/intro&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://golang.org/doc/code.html"&gt;https://golang.org/doc/code.html&lt;/a&gt; is a very complete tutorial, notes for myself:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat ~/.profile
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/Desktop/repos/goprojects
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$GOPATH&lt;/span&gt;/bin

&lt;span class="nb"&gt;source&lt;/span&gt; ~/.profile
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;an example of setting up the environment in Mac OSX&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If your files are laid out like this...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/Users/johnpfeiffer/Desktop/repos/goprojects
  - bin
  - pkg
  - src
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;mkdir -p $GOPATH/src/bitbucket.org/johnpfeiffer/myproject/mystrings&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a wrinkle on the official go tutorial where both packages are in the same remote git repository&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;mystrings/mystrings.go&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;mystrings&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;StringLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A simple "library" package that can be re-used&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cd /tmp; go install bitbucket.org/johnpfeiffer/myproject/mystrings&lt;/code&gt;
ALTERNATIVELY: &lt;code&gt;cd $GOPATH/src/bitbucket.org/johnpfeiffer/myproject/mystrings; go install&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Installing the package builds the .a binary which can be used by other builds/programs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;mkdir -p $GOPATH/src/bitbucket.org/johnpfeiffer/myproject/hello&lt;/code&gt;
&lt;strong&gt;hello/hello.go&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"bitbucket.org/johnpfeiffer/myproject/mystrings"&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mystrings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StringLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a simple main package that can be called from the CommandLineInterface&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cd $GOPATH/src/bitbucket.org/johnpfeiffer/myproject/hello; go install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Execute your new program with: &lt;code&gt;$GOPATH/bin/hello&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(or since $GOPATH/bin is in $PATH, just type: &lt;code&gt;hello&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;An ASCII diagram of the file system&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$GOPATH/src/bitbucket.org/johnpfeiffer/myproject
|
 - hello
     | - hello.go
 - mystrings
     | - mystrings.go
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="cross-compiling-with-go"&gt;Cross Compiling with Go&lt;/h4&gt;
&lt;p&gt;If developing on Mac OSX and wanted to compile/build a 64bit linux binary&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd $GOPATH/src/bitbucket.org/johnpfeiffer/myproject/hello
GOOS=linux GOARCH=amd64 go build -v
    runtime/internal/sys
    runtime/internal/atomic
    runtime
    bitbucket.org/johnpfeiffer/myproject/mystrings
    bitbucket.org/johnpfeiffer/myrpoject/hello
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the "go build -v" extra flag outputs verbosely the intermediate steps&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;file hello
     ./hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, not stripped
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;using the "file" command we can inspect it really has been built correctly in the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dave Cheney's suggestion about "build vs install" is a good one since the cached intermediate .a files in the directory pkg/ may complicate things, especially for a cross compilation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/doc/install/source#environment"&gt;https://golang.org/doc/install/source#environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dave.cheney.net/2015/08/22/cross-compilation-with-go-1-5"&gt;http://dave.cheney.net/2015/08/22/cross-compilation-with-go-1-5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="download-and-install-an-ide"&gt;Download and install an IDE&lt;/h3&gt;
&lt;p&gt;If you are used to larger projects then an IDE is quite helpful for colorization, auto completion, (right click or f12) goto definition, rename, build on save, auto formatting, etc.&lt;/p&gt;
&lt;p&gt;Suprisingly one of the most popular and effective Go IDE combinations is: &lt;a href="https://code.visualstudio.com/Docs/?dv=linux64_deb"&gt;https://code.visualstudio.com/Docs/?dv=linux64_deb&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -i code_...amd64.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To install &lt;a href="https://marketplace.visualstudio.com/items?itemName=lukehoban.Go"&gt;https://marketplace.visualstudio.com/items?itemName=lukehoban.Go&lt;/a&gt; aka &lt;a href="https://github.com/Microsoft/vscode-go"&gt;https://github.com/Microsoft/vscode-go&lt;/a&gt; you actually:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;open Visual Studio Code&lt;/li&gt;
&lt;li&gt;Control + P (Launches VS Code Quick Open)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ext install Go&lt;/code&gt; (capital G for "lukehoban")&lt;/li&gt;
&lt;li&gt;restart when prompted&lt;/li&gt;
&lt;li&gt;File -&amp;gt; Preferences -&amp;gt; Color Theme (Light Visual Studio ;)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;At this point you probably need to reboot to get VSCode to recognize the GOPATH correctly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In your shell where you setup the GOPATH run the following to get all of the analysis tools that "Go for Visual Studio Code" uses, though it's a lot easier to just use the IDE in the bottom right corner "Analysis Tools Missing"&lt;/p&gt;
&lt;p&gt;To take advantage of those tools (like gofmt on save), in your workspace (GOPATH) there will be a .vscode directory with settings.json &lt;a href="https://code.visualstudio.com/docs/customization/userandworkspace"&gt;https://code.visualstudio.com/docs/customization/userandworkspace&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;// Place your settings in this file to overwrite default and user settings.
{
    "go.buildOnSave": true,
    "go.lintOnSave": true,
    "go.vetOnSave": true,
    "go.buildFlags": [],
    "go.lintFlags": [],
    "go.vetFlags": [],
    "go.coverOnSave": false,
    "go.useCodeSnippetsOnFunctionSuggest": false,
    "go.formatOnSave": true,
    "go.formatTool": "goreturns"
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Just in case restart VSCode to recognize the updated settings&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately it is not quite simple to execute the code directly in VSCode &lt;a href="https://github.com/Microsoft/vscode-go/issues/21"&gt;https://github.com/Microsoft/vscode-go/issues/21&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="custom-vs-code-icons-and-disabling-annoying-file-icons"&gt;Custom VS Code icons and disabling annoying file icons&lt;/h4&gt;
&lt;p&gt;There is a feature to show file icons at the top of every file (i.e. distinguish visually/graphically between Go source and HTML)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/getstarted/themes#_icon-themes"&gt;https://code.visualstudio.com/docs/getstarted/themes#_icon-themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To graphically disable/modify the file icons: &lt;code&gt;File -&amp;gt; Preferences -&amp;gt; File Icon Theme and choose "None"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To disable the theme using the settings file at the User level (or workspace level if you want to have to modify this for every project):&lt;/p&gt;
&lt;p&gt;File -&amp;gt; Preferences -&amp;gt; Setting&lt;/p&gt;
&lt;p&gt;USER SETTINGS (settings.json)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;"workbench.iconTheme": null,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(previously it was vs-seti , apparently Seti is the poor rendition of gophers as ugly brown blobs)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/getstarted/settings"&gt;https://code.visualstudio.com/docs/getstarted/settings&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="disabling-the-minimap-enhanced-scroll-bar"&gt;Disabling the minimap enhanced scroll bar&lt;/h4&gt;
&lt;p&gt;It is pretty nifty to see the scroll bar have colors/graphics indicating roughly where in the file you are.&lt;/p&gt;
&lt;p&gt;If you want to maximize your available editing width then you just want a "normal" scroll bar (or removed entirely because "clean code" your files are small ;)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;File -&amp;gt; Preferences -&amp;gt; Setting&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In USER SETTINGS add the line to the settings.json that the IDE opened for you (in proper JSON syntax):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;"editor.minimap.enabled": false
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="install-or-build-or-run"&gt;Install or Build or Run&lt;/h3&gt;
&lt;p&gt;Because Go is a static language there is a compilation (and linking) phase where the source code is transformed into a binary.&lt;/p&gt;
&lt;h4 id="using-visual-studio-code-tasks-to-build-go"&gt;Using Visual Studio Code Tasks to Build Go&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;With your main.go file open press &lt;code&gt;Control + Shift + B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;"No task runner configured" -&amp;gt; click on "Configure Task Runner"&lt;/li&gt;
&lt;li&gt;From the dropdown choose "Others"&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fill in tasks.json&lt;/p&gt;
&lt;p&gt;{
    "version": "0.1.0",
    "command": "pwd",
    "isShellCommand": true,
    "showOutput": "always"
}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The command will execute in the folder that is opened in "File -&amp;gt; Open Folder"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{
    "version": "0.1.0",
    "command": "go",
    "isShellCommand": true,
    "args": ["build", "-v"],
    "showOutput": "always"
}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This builds verbosely in the current directory, assuming that the IDE has opened the project folder since Go only uses relative path &lt;a href="https://golang.org/ref/spec#ImportPath"&gt;https://golang.org/ref/spec#ImportPath&lt;/a&gt; (and the GOPATH is set correctly)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you prefer to File -&amp;gt; Open Folder a top level folder that has many subfolders with go projects then...&lt;/p&gt;
&lt;p&gt;The workaround for not having "change working directory" or "command chaining" is to create a shell script, build.sh&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="nb"&gt;pwd&lt;/span&gt;
ls -l
go build -v
ls -l
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;The script could be reduced to "cd $1; go build -v" but having the extra debugging output can help...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The task runner must be defined to take advantage of the new script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    "version": "0.1.0",
    "taskName": "build",
    "command": "bash",
    "args": ["&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/build.sh", "&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;fileDirname&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;"],
    "isShellCommand": true
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The IDE stores the files in PROJECTFOLDER/.vscode/tasks.json&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/Docs/editor/tasks#_variable-substitution"&gt;https://code.visualstudio.com/Docs/editor/tasks#_variable-substitution&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="using-visual-studio-code-tasks-to-run-go"&gt;Using Visual Studio Code Tasks to Run Go&lt;/h4&gt;
&lt;p&gt;You can continue to create more key bindings (hotkeys) for running Go or running Tests, I will just override the Build (Control + Shift + B) hotkey for now...&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; go run *.go
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;This does not build and instead just executes directly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    "version": "0.1.0",
    "taskName": "build",
    "command": "bash",
    "args": ["&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/run.sh", "&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;fileDirname&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;"],
    "isShellCommand": true
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this extra indirection of a separate run.sh is only necessary if you prefer having a top level "meta" folder&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com/Docs/customization/keybindings#_tasks"&gt;https://code.visualstudio.com/Docs/customization/keybindings#_tasks&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="go-test-with-a-visual-studio-code-test-task"&gt;Go Test with a Visual Studio Code Test Task&lt;/h4&gt;
&lt;p&gt;The "test" task is unassigned (at least for my linux installation) so the first step is to inspect and customize the hotkey keybindings.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Control+K Control+S&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Or use File -&amp;gt; Preferences -&amp;gt; Keyboard Shortcuts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the left pane search the "Default Keybindings" file for "build", i.e. on line 502 you should see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{ "key": "ctrl+shift+b",          "command": "workbench.action.tasks.build" },
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add to the empty "keybindings.json" on the right a new hotkey&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[
    { "key": "ctrl+shift+t",          "command": "workbench.action.tasks.test" }
]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save the file (the IDE will store your customization in ~/.config/Code/User/keybindings.json)&lt;/p&gt;
&lt;p&gt;Now when you use &lt;code&gt;Control+Shift+T&lt;/code&gt; you should see "No task configured" and "Configure Task Runner"&lt;/p&gt;
&lt;p&gt;This example defines multiple tasks, both go build and go test (this will save to .vscode/tasks.json)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    "version": "0.1.0",
    "tasks": [
        {
            "taskName": "build",
            "command": "go",
            "args": ["build", "-v"],
            "isShellCommand": true,
            "showOutput": "always"
        },
        {
            "taskName": "test",
            "command": "go",
            "args": ["test", "-v"],
            "isShellCommand": true,
            "showOutput": "always"
        }
    ]
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Assuming you have opened File -&amp;gt; Open Folder at the top level of your code tree as Go expects relative paths,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Control+Shift+T&lt;/code&gt; will now open the Tasks output pane and display the results of any tests run&lt;/p&gt;
&lt;h4 id="debugging-with-delve"&gt;Debugging with Delve&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;go get github.com/derekparker/delve/cmd/dlv
cd /opt/goprojects/src
go install /derekparker/delve/cmd/dlv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first time I attempted to do it manually:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -ahl /opt/goprojects/bin/
cd /opt/goprojects/src/github.com/johnpfeiffer/YOURPROJECT
/opt/goprojects/bin/dlv  debug --headless --listen=:2345 --log
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now in the VSCode IDE open the project folder and create your helloworld.go source file and Control + S to save (and auto gofmt) and then press &lt;strong&gt;F5&lt;/strong&gt; and it will connect to the Delve Debugger and display the output&lt;/p&gt;
&lt;h4 id="delve-debugging-and-running-your-application-with-f5-is-automatic-once-installed-correctly"&gt;Delve Debugging and running your application with F5 is automatic once installed correctly&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;The first time you run "Continue" with F5 on a file it will prompt you to setup your launch.json (and the IDE will open the default template for you)&lt;/li&gt;
&lt;li&gt;Use the IDE to go back to your source .go file and press F5 again, this time since the .vscode subdirectory was created and the default delve launch.json file was created, it will just start in debug mode with the Debug Console output at the bottom&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="coding-and-compiling"&gt;Coding and Compiling&lt;/h2&gt;
&lt;p&gt;For VSCode IDE keyboard shortcuts: &lt;a href="https://code.visualstudio.com/docs/customization/keybindings"&gt;https://code.visualstudio.com/docs/customization/keybindings&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="comments-types-strings-slices-for-loops"&gt;Comments Types Strings Slices For Loops&lt;/h3&gt;
&lt;p&gt;The main package it where the execution begins (aka "main" in c &lt;a href="https://en.wikipedia.org/wiki/Entry_point"&gt;https://en.wikipedia.org/wiki/Entry_point&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Comments are either single line with double slashes or block comments &lt;a href="https://golang.org/doc/effective_go.html#commentary"&gt;https://golang.org/doc/effective_go.html#commentary&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="introgo"&gt;intro.go&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt;

&lt;span class="cm"&gt;/* https://golang.org/doc/effective_go.html#mixed-caps&lt;/span&gt;
&lt;span class="cm"&gt;   https://golang.org/ref/spec#Constants */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alphabetMax&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// while&lt;/span&gt;
    &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"break or return exits an infinite loop"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// arrays are contiguous memory, fixed size and type&lt;/span&gt;
    &lt;span class="c1"&gt;// initialized to capacity 5 with values inserted, alternatively just initialized to empty with: var a [5]string&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"e"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// prefer Slices which are Reference Objects that wrap the underlying arrays&lt;/span&gt;
    &lt;span class="c1"&gt;// https://blog.golang.org/go-slices-usage-and-internals&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// cleaner way of iterating over key and value&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;// []&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[:]&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;// [a b c d e]&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;// [c d e]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="arrays-are-contiguous-memory-and-4-bytes-is-normal"&gt;arrays are contiguous memory and 4 bytes is normal&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// int is usually the 4 byte int32 https://golang.org/ref/spec#Numeric_types&lt;/span&gt;
&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// dereference the addresses that are holding the values 1 and 2&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d %d\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;// rune is also int32&lt;/span&gt;
&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sc"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'ä'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d %d\n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="fizzbuzz-and-switch"&gt;fizzbuzz and switch&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://golang.org/ref/spec#Switch_statements"&gt;https://golang.org/ref/spec#Switch_statements&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// usually static case values and "switch i {" , note it will NOT fall through by default&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"fizzbuzz"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"fizz"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"buzz"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="time"&gt;time&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"time"&lt;/span&gt;
&lt;span class="c1"&gt;// https://golang.org/pkg/time/#Now&lt;/span&gt;
&lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"local:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UnixNano&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"ms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"in UTC:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UTC&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UnixDate&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="packages-and-string-reverse"&gt;Packages and String Reverse&lt;/h3&gt;
&lt;p&gt;When you modularize your code into packages then multiple programs can make use of DRY &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="main"&gt;main&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/johnpfeiffer/mystringutil"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stringutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"!oG ,olleH"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="package-mystringutil-with-reverse"&gt;package mystringutil with Reverse&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Package mystringutil contains utility functions for working with strings. "go build"&lt;/span&gt;
&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;mystringutil&lt;/span&gt;

&lt;span class="c1"&gt;// Reverse returns its argument string reversed rune-wise left to right.&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="palindrome-and-string-conversion-integer-to-ascii"&gt;palindrome and string conversion integer to ascii&lt;/h3&gt;
&lt;p&gt;Besides the main function for executing you will obviously create re-usable packages which will contain functions.&lt;/p&gt;
&lt;p&gt;Here is the source code for a simple "is this string a palindrome" and "is this integer a palindrome" programs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"strconv"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ala"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"noon"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ab"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"racecar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"abfooba"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;// slower and uses extra memory&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strconv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Itoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1991&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strconv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Itoa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1981&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="c1"&gt;// takes advantage of math (mindblown)&lt;/span&gt;
    &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
    &lt;span class="nx"&gt;reversed&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;reverseInteger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is a palindrome: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;
    &lt;span class="nx"&gt;reversed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reverseInteger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is a palindrome: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;121&lt;/span&gt;
    &lt;span class="nx"&gt;reversed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reverseInteger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is a palindrome: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;oppositeIndex&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="nx"&gt;opposite&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;oppositeIndex&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d %T %c compared to %d %c \n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oppositeIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;opposite&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;oppositeIndex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;opposite&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;reverseInteger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;reversed&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;remainder&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
        &lt;span class="nx"&gt;reversed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reversed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;remainder&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remainder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;reversed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="random-integers"&gt;Random Integers&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// https://golang.org/pkg/crypto/rand/&lt;/span&gt;
&lt;span class="c1"&gt;// https://golang.org/pkg/math/big/&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="nx"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myRandom&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;
&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SetUint64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;myRandom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Reader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;myRandom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="binary-search"&gt;Binary Search&lt;/h3&gt;
&lt;p&gt;Using main and print is the poor man's Unit Testing ;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"bytes"&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//todo pass by ref?&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;high&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"low ="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"mid ="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"high ="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;high&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;low&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;high&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;high&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;high&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;targets&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;targets&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"found"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"at location"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="efficient-string-append-and-replacement"&gt;Efficient String append and replacement&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/1760757/how-to-efficiently-concatenate-strings-in-go"&gt;http://stackoverflow.com/questions/1760757/how-to-efficiently-concatenate-strings-in-go&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;myReplace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Buffer&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;' '&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%20"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;String&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="testing-with-go"&gt;Testing with Go&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/pkg/testing/"&gt;https://golang.org/pkg/testing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nathanleclaire.com/blog/2015/10/10/interfaces-and-composition-for-effective-unit-testing-in-golang/"&gt;http://nathanleclaire.com/blog/2015/10/10/interfaces-and-composition-for-effective-unit-testing-in-golang/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/go/tools/localunittesting/#Go_Introducing_the_Go_testing_package"&gt;https://cloud.google.com/appengine/docs/go/tools/localunittesting/#Go_Introducing_the_Go_testing_package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="a-simple-web-server"&gt;A simple web server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;myHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"hi"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8080"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify with &lt;code&gt;curl localhost:8080&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="deploying-a-go-web-application-to-google-appengine"&gt;Deploying a Go Web Application to Google AppEngine&lt;/h4&gt;
&lt;p&gt;First create an &lt;strong&gt;app.yaml&lt;/strong&gt; file in your package&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MyApplicationName&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt;
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;go1&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/.*&lt;/span&gt;
  &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_go_app&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second adapt your source code to the Google App Engine entrypoint:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;myapplicationname&lt;/span&gt;
&lt;span class="c1"&gt;// package main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"fmt"&lt;/span&gt;
        &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;myHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"hi"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// The App Engine PaaS provides its own main() that handles the Listening and Serving ;)&lt;/span&gt;
&lt;span class="c1"&gt;//func main() {&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//      http.ListenAndServe(":8080", nil)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming you have created the project with &lt;a href="https://console.cloud.google.com/"&gt;https://console.cloud.google.com/&lt;/a&gt; and received a unique application id...&lt;/p&gt;
&lt;p&gt;A prerequisite is to use the SDK if you want to test it locally: &lt;a href="https://cloud.google.com/appengine/downloads#Google_App_Engine_SDK_for_Go"&gt;https://cloud.google.com/appengine/downloads#Google_App_Engine_SDK_for_Go&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;unzip go_appengine_sdk...zip
/opt/go_appengine/goapp serve /path-to-project/MyProjectFolder/

  INFO     2016-06-02 06:30:27,493 devappserver2.py:769] Skipping SDK update check.
  INFO     2016-06-02 06:30:27,527 api_server.py:205] Starting API server at: http://localhost:38837
  INFO     2016-06-02 06:30:27,530 dispatcher.py:197] Starting module "default" running at: http://localhost:8080
  INFO     2016-06-02 06:30:27,531 admin_server.py:116] Starting admin server at: http://localhost:8000
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="to-deploy-to-google-app-engine"&gt;To deploy to Google App Engine&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/opt/go_appengine/appcfg.py -A MyApplicationID update ./MyProjectFolder/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;View the version deployed and stats with &lt;a href="https://console.cloud.google.com/appengine/versions?project=MyApplicationId"&gt;https://console.cloud.google.com/appengine/versions?project=MyApplicationId&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://MyApplicationId.appspot.com/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A gotcha is future updates deployed need the app.yaml version to increment AND either use the Web UI to set the new "default" or...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/opt/go_appengine/appcfg.py -A MyApplicationId set_default_version /MyProjectFolder
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="handlerfunc-and-anonymous-functions-and-closure"&gt;HandlerFunc and Anonymous Functions and Closure&lt;/h3&gt;
&lt;p&gt;The decorator pattern Anonymous functions an&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="cm"&gt;/* using an anonymous function and closure to wrap the HandlerFunc&lt;/span&gt;
&lt;span class="cm"&gt;https://golang.org/pkg/net/http/#HandlerFunc&lt;/span&gt;
&lt;span class="cm"&gt;https://medium.com/@matryer/the-http-handlerfunc-wrapper-technique-in-golang-c60bf76e6124&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;makeHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandlerFunc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// https://golang.org/src/net/http/request.go&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"serving: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;h1&amp;gt;%s&amp;lt;/h1&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"starting..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;indexHandler&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;makeHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Index"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;myHandler&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;makeHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// https://golang.org/pkg/net/http/#HandleFunc , string, func(ResponseWriter, *Request)&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;indexHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/john"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8080"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="more-info"&gt;More Info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tour.golang.org/basics/"&gt;https://tour.golang.org/basics/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.joshsoftware.com/2014/03/12/learn-to-build-and-deploy-simple-go-web-apps-part-one/"&gt;https://blog.joshsoftware.com/2014/03/12/learn-to-build-and-deploy-simple-go-web-apps-part-one/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 15 Nov 2015 21:19:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-11-15:go-programming-intro-with-vs-code-and-arrays-slices-functions-and-testing/</guid><category>go</category><category>golang</category><category>vscode</category><category>testing</category><category>arrays</category><category>slices</category><category>binary search</category></item><item><title>Build Automation using packer to build an AMI use immutable not chef</title><link>https://blog.john-pfeiffer.com/build-automation-using-packer-to-build-an-ami-use-immutable-not-chef/</link><description>
&lt;h3 id="why-build-automation"&gt;Why build automation?&lt;/h3&gt;
&lt;p&gt;Software has always been about automation and leveraging the computer's capacity for precision and repetition.&lt;/p&gt;
&lt;p&gt;Somehow though, software is sometimes still deployed using a series of often poorly documented steps (to physical hardware even!). I've been there, it ain't pretty. (badpokerface)&lt;/p&gt;
&lt;p&gt;The second time you need to build a server running service(s) you may be under time pressure. (Murphy's law says you might be building it again because the first one which was business critical blew up unexpectedly.)&lt;/p&gt;
&lt;p&gt;Building things by hand is possibly the most expensive way to generate impossible to reproduce bugs and job security for the personality challenged.&lt;/p&gt;
&lt;p&gt;(Almost everyone agrees that technology employees are expensive and so by extension their time is constantly being wasted by everything they do).&lt;/p&gt;
&lt;p&gt;As virtualization (and linux!) took over the world there was an explosion of virtual machines that needed to be deployed and an evolution of a fairly standard virtual harwdare layer. (x86 cpu and Intel NIC anyone?)&lt;/p&gt;
&lt;p&gt;Suddenly you couldn't hire enough antisocial people to run around with floppies and scratching cds while shoving them into servers.&lt;/p&gt;
&lt;h3 id="why-not-chef"&gt;Why not chef?&lt;/h3&gt;
&lt;p&gt;Chef, Puppet, and Ansible are the well known configuration management and build/deployment automation tools.&lt;/p&gt;
&lt;p&gt;Automated configuration management which tries to keep a remote server in a specific state seems like a good recipe for things going wrong&lt;/p&gt;
&lt;p&gt;I've used chef successfully quite a few times and the main things that make it a specialized tool that I prefer not to use:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's really easy to do chef wrong: nested roles and recipes that keep exploding exponentially with circular dependencies which make you think software development starts looking easy again.&lt;/li&gt;
&lt;li&gt;Community cookbooks are written to allow deployment on every architecture ever created (Debian, Ubuntu, RedHat, Windows, SPARC, etc.) which makes them challenging to read and debug, almost impossible to customize to do what you actually want.&lt;/li&gt;
&lt;li&gt;The ruby based DSL isn't bad but it's pretty annoying to constantly make syntax errors (which unless you're all TDD rambo and use Kitchen you'll find during the never ending waiting many minutes for a deployment to fail)&lt;/li&gt;
&lt;li&gt;It's difficult to debug the non intuitive "compilation phase" and "execution phase" way chef does its dependency tree magic, and the "shoot yourself in the foot" is compounded with the apparently edge case necessary compile time run executions&lt;/li&gt;
&lt;li&gt;The "best practices" have changed 3 or 4 times (write your own custom cookbooks, leverage the community cookbooks, write a custom wrapper for the community cookbook, don't ever use set_unless even though it still exists, etc.) and the 6 layers of variable overrides makes it hard to keep track of what the actual output of a script will be (don't worry, they have pages of documentation explaining it)&lt;/li&gt;
&lt;li&gt;The recommended "chef client server architecture" does not scale to really large numbers well and creates administration overhead and a lot of authorization complexity - and my preferred method with "chef solo" still requires an annoying amount of bootstrap setup on the target machines.&lt;/li&gt;
&lt;li&gt;Polling not only creates network congestion but worse creates windows of uncertainty about deployment state and the possibility of nodes silently dropping out &lt;a href="https://docs.chef.io/chef_client.html"&gt;https://docs.chef.io/chef_client.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chef tends to encourage the pattern of long lived mutable servers (with their therefore necessary expensive and obnoxious biological caretakers)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.chef.io/resource_common.html#lazy-evaluation"&gt;https://docs.chef.io/resource_common.html#lazy-evaluation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.chef.io/resource_common.html#run-in-compile-phase"&gt;https://docs.chef.io/resource_common.html#run-in-compile-phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://erik.hollensbe.org/2013/03/16/the-chef-resource-run-queue/"&gt;http://erik.hollensbe.org/2013/03/16/the-chef-resource-run-queue/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So is there a simpler way to just reliably, reproducibly, build a box?&lt;/p&gt;
&lt;h3 id="packer-to-the-rescue"&gt;Packer to the rescue&lt;/h3&gt;
&lt;p&gt;Packer is from the same people who brought you Vagrant &lt;a href="https://www.vagrantup.com/"&gt;https://www.vagrantup.com/&lt;/a&gt; , that really easy way to set up a virtual machine... &lt;a href="https://blog.john-pfeiffer.com/using-vagrant-to-deploy-instances-on-aws"&gt;https://blog.john-pfeiffer.com/using-vagrant-to-deploy-instances-on-aws&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is very straightforward to read and actually you can still leverage chef (unless you realize that a series of shell commands is all you wanted anyways...)&lt;/p&gt;
&lt;p&gt;This leads to the better path of "immutable servers" &lt;a href="http://martinfowler.com/bliki/ImmutableServer.html"&gt;http://martinfowler.com/bliki/ImmutableServer.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;packer --version&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="my_example_boxjson"&gt;my_example_box.json&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"variables"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"aws_access_key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"aws_secret_key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"builders"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
    &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"amazon-ebs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"access_key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"{{user `aws_access_key`}}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"secret_key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"{{user `aws_secret_key`}}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"region"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"source_ami"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ami-de0d9eb7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"instance_type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"t1.micro"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"ssh_username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ubuntu"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"ami_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"packer-example {{timestamp}}"&lt;/span&gt;
  &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;packer validate mybox.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;packer build mybox.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;packer build -debug mybox.json&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This will prompt for the enter key to continue at each step&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once it's done it will terminate the EC2 instance for you (it only runs as long as it takes to build the machine and then burn the Amazon Machine Image).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;us-east-1: ami-19601234&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unfortunately it is not machine readable json output so you have to do some bash-fu to extract just the id&lt;/p&gt;
&lt;p&gt;Also unfortunately there is no way to tell packer to not terminate so you can troubleshoot, the workarounds are the -debug which is essentially "interactive" or adding sleep commands&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="my_advanced_boxjson"&gt;my_advanced_box.json&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"_comment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"This is a comment"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"variables"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"my_secret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"{{env `MY_SECRET`}}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"builders"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
    &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"amazon-ebs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"region"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"source_ami"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ami-de0d9eb7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"instance_type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"t1.micro"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"ssh_username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ubuntu"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"ami_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"packer-example {{timestamp}}"&lt;/span&gt;
    &lt;span class="s2"&gt;"subnet_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"subnet-f0be1234"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"security_group_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"sg-9bf51234"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"associate_public_ip_address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"ssh_keypair_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"my-packer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"ssh_private_key_file"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"./my-packer.pem"&lt;/span&gt;
  &lt;span class="p"&gt;}],&lt;/span&gt;
  &lt;span class="nt"&gt;"provisioners"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
    &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"file"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"./debs/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"destination"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/tmp"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"inline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s2"&gt;"/sbin/ip a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"curl -s http://checkip.amazonaws.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"ls -ahl /tmp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"echo {{user `my_secret`}} &amp;gt; /tmp/{{isotime \"2006-01-02-030405\"}}--my-secret.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"sudo dpkg -i --force-confnew /tmp/*.deb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"machine_state_validation.sh"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The access credentials could instead be environment variables: AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY&lt;/p&gt;
&lt;p&gt;Post instantiation validation is a really handy safeguard as statistically something always goes wrong somewhere and it's far cheaper to find out with a quick test versus a system that loses data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="packer-and-digitalocean"&gt;Packer and DigitalOcean&lt;/h3&gt;
&lt;p&gt;DigitalOcean is a relatively new player (compared to Linode and even AWS) but they provide a very fast and easy to use way of building boxes (a snapshot can be used like an AMI to spin up multiple instances).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;  "_comment": "https://www.packer.io/docs/builders/digitalocean.html",&lt;/span&gt;
&lt;span class="x"&gt;  "variables": {&lt;/span&gt;
&lt;span class="x"&gt;    "digitalocean_api_token": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;DIGITALOCEAN_API_TOKEN&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "newuser_name": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;NEWUSER_NAME&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "newuser_password": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;NEWUSER_PASSWORD&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;"&lt;/span&gt;
&lt;span class="x"&gt;  },&lt;/span&gt;

&lt;span class="x"&gt;  "builders": [{&lt;/span&gt;
&lt;span class="x"&gt;    "type": "digitalocean",&lt;/span&gt;
&lt;span class="x"&gt;    "api_token": "&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;digitalocean_api_token&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "size": "512mb",&lt;/span&gt;
&lt;span class="x"&gt;    "region": "lon1",&lt;/span&gt;
&lt;span class="x"&gt;    "image": "ubuntu-16-04-x64",&lt;/span&gt;
&lt;span class="x"&gt;    "droplet_name": "built-from-packer-&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;timestamp&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;    "snapshot_name": "built-from-packer-&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;timestamp&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;"&lt;/span&gt;
&lt;span class="x"&gt;  }],&lt;/span&gt;

&lt;span class="x"&gt;  "provisioners": [&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      "type": "shell",&lt;/span&gt;
&lt;span class="x"&gt;      "inline": [&lt;/span&gt;
&lt;span class="x"&gt;        "ip a",&lt;/span&gt;
&lt;span class="x"&gt;        "curl -s http://checkip.amazonaws.com",&lt;/span&gt;
&lt;span class="x"&gt;        "apt-get update",&lt;/span&gt;
&lt;span class="x"&gt;        "sudo apt-get install -y vim curl wget byobu ntp",&lt;/span&gt;
&lt;span class="x"&gt;        "timedatectl set-timezone Etc/UTC",&lt;/span&gt;
&lt;span class="x"&gt;        "cat /etc/timezone",&lt;/span&gt;
&lt;span class="x"&gt;        "date",&lt;/span&gt;
&lt;span class="x"&gt;        "useradd -s /bin/bash -m &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;newuser_name&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;        "usermod -a -G admin &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;newuser_name&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;",&lt;/span&gt;
&lt;span class="x"&gt;        "echo '&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;newuser_name&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;newuser_password&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;'|chpasswd",&lt;/span&gt;
&lt;span class="x"&gt;        "cat /etc/passwd",&lt;/span&gt;
&lt;span class="x"&gt;        "sed -i 's/Port 22/Port 2222/g' /etc/ssh/sshd_config",&lt;/span&gt;
&lt;span class="x"&gt;        "sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config",&lt;/span&gt;
&lt;span class="x"&gt;        "echo 'PasswordAuthentication no' &amp;gt;&amp;gt; /etc/ssh/sshd_config",&lt;/span&gt;
&lt;span class="x"&gt;        "cat /etc/ssh/sshd_config",&lt;/span&gt;
&lt;span class="x"&gt;        "mkdir -p /home/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;newuser_name&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/.ssh",&lt;/span&gt;
&lt;span class="x"&gt;        "mkdir -p /opt/www/html"&lt;/span&gt;
&lt;span class="x"&gt;      ]&lt;/span&gt;
&lt;span class="x"&gt;    },&lt;/span&gt;
&lt;span class="x"&gt;    {&lt;/span&gt;
&lt;span class="x"&gt;      "type": "file",&lt;/span&gt;
&lt;span class="x"&gt;      "source": "authorized_keys",&lt;/span&gt;
&lt;span class="x"&gt;      "destination": "/home/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;newuser_name&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/.ssh/authorized_keys"&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;  ]&lt;/span&gt;

&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a simple example that automates some of the security best practices of a non standard username, non standard ssh port, no ssh root login, no ssh password based login, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NEWUSER_NAME=yourusername NEWUSER_PASSWORD=yourpassword DIGITALOCEAN_API_TOKEN=012345yourtoken /opt/packer build packer.json
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="why-not-docker-containers"&gt;Why not docker containers?&lt;/h3&gt;
&lt;p&gt;Actually I prefer docker containers as the artifact and deployment vehicle for services but it's not the only hammer in your toolbelt.  And you have to setup the Docker hosts somehow, right? &lt;/p&gt;
&lt;p&gt;(Unless you've already uploaded your soul into the matrix and are using Googazon's PaaS and never have to sully your container delicate fingers with a crude virtual machine again).&lt;/p&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://www.packer.io/docs/installation.html&lt;/li&gt;
&lt;li&gt;https://www.packer.io/docs/builders/amazon-ebs.html&lt;/li&gt;
&lt;li&gt;https://www.packer.io/intro/getting-started/build-image.html&lt;/li&gt;
&lt;li&gt;https://www.packer.io/docs/templates/configuration-templates.html&lt;/li&gt;
&lt;li&gt;https://www.packer.io/docs/templates/user-variables.html&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 06 Jul 2015 20:40:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-07-06:build-automation-using-packer-to-build-an-ami-use-immutable-not-chef/</guid><category>cloud</category><category>packer</category><category>build</category><category>ami</category><category>chef</category></item><item><title>nginx with Docker</title><link>https://blog.john-pfeiffer.com/nginx-with-docker/</link><description>
&lt;h2 id="nginx-overview"&gt;nginx overview&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://nginx.org/en/"&gt;http://nginx.org/en/&lt;/a&gt; is one of the most popular performant web servers in the world (and it's pretty handy as a reverse proxy or load balancer too!). &lt;a href="http://nginx.org/en/docs/http/load_balancing.html"&gt;http://nginx.org/en/docs/http/load_balancing.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nginx/nginx"&gt;https://github.com/nginx/nginx&lt;/a&gt; is written in c (very performant but often needs to be compiled , especially with any of the extra 3rd party modules &lt;a href="https://www.nginx.com/resources/wiki/modules/"&gt;https://www.nginx.com/resources/wiki/modules/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;A recent update means "...optionally load separate shared object files at runtime as modules" 
&lt;a href="https://www.nginx.com/blog/dynamic-modules-nginx-1-9-11/"&gt;https://www.nginx.com/blog/dynamic-modules-nginx-1-9-11/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="docker-pull-nginx"&gt;docker pull nginx&lt;/h2&gt;
&lt;p&gt;With Docker most of the time is spent in preparation, configuration, and testing.  The advantage is that less time is wasted on compiling, packaging, etc. (for all those still eeking out another 1% in efficiency via esoteric flags and bundling all sorts of custom modules - good luck!)&lt;/p&gt;
&lt;p&gt;One quick way to attempt to leverage nginx as a front end for your projects is using containers with Docker &lt;a href="https://hub.docker.com/_/nginx/"&gt;https://hub.docker.com/_/nginx/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo su
docker pull nginx:alpine
docker images
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will grab the latest image based on the very small alpine linux &lt;a href="https://en.wikipedia.org/wiki/Alpine_Linux"&gt;https://en.wikipedia.org/wiki/Alpine_Linux&lt;/a&gt;, around 13 MB vs 191 MB for the traditional nginx:latest which is based on debian jessie &lt;a href="https://en.wikipedia.org/wiki/Debian"&gt;https://en.wikipedia.org/wiki/Debian&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/library/nginx/tags/"&gt;https://hub.docker.com/r/library/nginx/tags/&lt;/a&gt; contains what other versions of nginx are provided by the vendor as Docker Images, the default build/image has quite a few modules &lt;a href="http://nginx.org/en/docs/"&gt;http://nginx.org/en/docs/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;all future references to docker commands will assume you are root or typing sudo first&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="docker-nginx-interactive-container"&gt;docker nginx interactive container&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm --publish 127.0.0.1:80:80 nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;starts an ephemeral container that binds the container port 80 to the local Host port 80 (binding to 127.0.0.1 prevents any other access except from the Host) , note by not explicitly sharing port 443 it is not connected/available&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                 PORTS                           NAMES
3fccf15a3c24        nginx               "nginx -g 'daemon off"   3 seconds ago       Up 2 seconds        127.0.0.1:80-&amp;gt;80/tcp, 443/tcp   pensive_elion

netstat -antp
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.1:80            0.0.0.0:*               LISTEN      5826/docker-proxy


curl 127.0.0.1:80
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;h1&amp;gt;Welcome to nginx!&amp;lt;/h1&amp;gt;&lt;/code&gt; is part of the default nginx home page, (success)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You will notice the access logs are being output to the console (where the docker container is running).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;192.168.1.100 - - [01/Jan/1970:01:00:59 +0000] "GET / HTTP/1.1" 200 612 "-" "curl/7.38.0" "-"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Control + C&lt;/code&gt; will terminate the container&lt;/p&gt;
&lt;h2 id="running-nginx-manually-in-the-interactive-docker-container"&gt;running nginx manually in the interactive docker container&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm -i -t --publish 127.0.0.1:80:80 nginx /bin/bash
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Starting as root inside the container &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mi"&gt;@557&lt;/span&gt;&lt;span class="nl"&gt;ac197e2c1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
    &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="nginx-version-and-modules"&gt;nginx version and modules&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mi"&gt;@557&lt;/span&gt;&lt;span class="nl"&gt;ac197e2c1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;
    &lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;1.9.7&lt;/span&gt;
    &lt;span class="n"&gt;built&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;gcc&lt;/span&gt; &lt;span class="mf"&gt;4.9.2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Debian&lt;/span&gt; &lt;span class="mf"&gt;4.9.2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;built&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;OpenSSL&lt;/span&gt; &lt;span class="mf"&gt;1.0.1&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;Jan&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;
    &lt;span class="n"&gt;TLS&lt;/span&gt; &lt;span class="n"&gt;SNI&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;
    &lt;span class="n"&gt;configure&lt;/span&gt; &lt;span class="nl"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;lock&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lock&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;client_temp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;proxy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;proxy_temp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fastcgi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fastcgi_temp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;uwsgi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;uwsgi_temp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scgi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;scgi_temp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_ssl_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_realip_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_addition_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_sub_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_dav_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_flv_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_mp4_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_gunzip_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_gzip_static_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_random_index_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_secure_link_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_stub_status_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_auth_request_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;threads&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stream_ssl_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mail_ssl_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aio&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;http_v2_module&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fstack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;protector&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;strong&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wformat&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Werror&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D_FORTIFY_SOURCE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;relro&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;as&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;needed&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ipv6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="test-your-config-file"&gt;Test your config file&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nginx -t -c /etc/nginx/nginx.conf -g "daemon off;"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="run-nginx-directly"&gt;run nginx directly&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/usr/sbin/nginx -c /etc/nginx/nginx.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;-g "pid /var/run/nginx.pid; worker_processes 2;" from &lt;a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/commandline/"&gt;https://www.nginx.com/resources/wiki/start/topics/tutorials/commandline/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="nginxconf"&gt;nginx.conf&lt;/h2&gt;
&lt;p&gt;While there are quite a few ways to configure nginx one choice to make with Docker is to either&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker run --name some-nginx -v /some/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;run docker as a daemon with a specified Container Name and override the container nginx.conf file with /some/nginx.conf from the hose&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a Dockerfile (based on the upstream nginx Docker image) to copy your own configuration file and other custom bits in and build your own custom Docker image (a highly recommended way of not being completely dependent on an upstream provider - especially if you push your Docker Image to your own private registry afterwards)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;e.g. &lt;a href="https://hub.docker.com/r/jwilder/nginx-proxy/~/dockerfile/"&gt;https://hub.docker.com/r/jwilder/nginx-proxy/~/dockerfile/&lt;/a&gt; which also has "Foreman in Go lang" and makes use of expecting the Host to provide the SSL certificates&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/admin-guide/nginx-web-server/"&gt;https://www.nginx.com/resources/admin-guide/nginx-web-server/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/wiki/start/topics/examples/full/"&gt;https://www.nginx.com/resources/wiki/start/topics/examples/full/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quickly testing the nginx configuration file using an ephemeral docker container:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm --publish &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:80:80 nginx /bin/bash -c &lt;span class="s2"&gt;"nginx -t -c /etc/nginx/nginx.conf"&lt;/span&gt;
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf &lt;span class="nb"&gt;test&lt;/span&gt; is successful
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="build-your-own-nginx-dockerfile"&gt;Build your own nginx Dockerfile&lt;/h2&gt;
&lt;p&gt;If you require 3rd party modules then you will have to build nginx from source, e.g.
&lt;a href="https://github.com/openresty/headers-more-nginx-module#installation"&gt;https://github.com/openresty/headers-more-nginx-module#installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That being the case you'll probably want to have a build process with 2 Docker files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the first Dockerfile will contain build-essentials, gcc, make, etc. so that you can build the binary from source (with any 3rd party modules) &lt;a href="http://nginx.org/en/docs/configure.html"&gt;http://nginx.org/en/docs/configure.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The second docker image would be your "production container" where you copy in the custom nginx binary, install the dependencies (i.e. openssl), and setup the default config.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="converting-an-existing-nginx-3rd-party-module-to-a-dynamic-module"&gt;Converting an existing nginx 3rd party module to a dynamic module&lt;/h3&gt;
&lt;p&gt;Since NGINX 1.9.11 supports dynamic modules and attempts to maintain API compatibility then it is possible to sometimes convert a module into a dynamic module (i.e. build the shared library object)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./configure --add-dynamic-module=/opt/source/ngx_my_module/
make -f objs/Makefile modules
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Look for .so files in the objs directory after compilation or the modules subdirectory during installation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.nginx.com/resources/wiki/extending/converting/"&gt;https://www.nginx.com/resources/wiki/extending/converting/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="configuring-nginx"&gt;Configuring nginx&lt;/h2&gt;
&lt;p&gt;There are entire books about how to configure nginx so I will just jot down some basics for myself.&lt;/p&gt;
&lt;h3 id="etcnginxnginxconf"&gt;/etc/nginx/nginx.conf&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;user nginx;
worker_processes 4;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    server {
        location / {
            root /var/www;
        }
    }
    # include /etc/nginx/conf.d/*.conf;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Run the service as the www-data user and define 4 worker processes&lt;/li&gt;
&lt;li&gt;define an HTTP server that listens on port 80 by default&lt;/li&gt;
&lt;li&gt;the root location will return the contents of /var/www&lt;/li&gt;
&lt;li&gt;a best practice is to use multiple configuration files in the conf.d directory (as a really long complex configuration in a single is difficult to maintain)&lt;/li&gt;
&lt;li&gt;BUT we must comment it out as in the installation there can be a default.conf that overrides our nginx.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker run -it --rm --publish 0.0.0.0:80:80 --volume /tmp/nginx.conf:/etc/nginx/nginx.conf:ro  nginx:alpine /bin/sh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;debug the image interactively by overriding the default CMD with a shell (remember that Alpine is limited so &lt;code&gt;apk update&lt;/code&gt; and &lt;code&gt;apk add SOMENAME&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker run --rm --publish 0.0.0.0:80:80 --volume /tmp/nginx.conf:/etc/nginx/nginx.conf:ro  nginx:alpine /bin/sh -c "nginx -t -c /etc/nginx/nginx.conf"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;alternative method to just test your configuration file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker run --rm --publish 0.0.0.0:80:80 --volume /tmp/nginx.conf:/etc/nginx/nginx.conf:ro --volume /tmp/www:/var/www:ro  nginx:alpine
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;assumes you have a config file and some index file defined&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;hi&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;" &amp;gt; /var/www/index.html
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it, now you have nginx serving static files! (curl localhost OR use a browser and visit localhost or http://hostfqdn)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;of course /tmp is an insecure location so please store production nginx configuration files and web content from a secure directory in the docker host filesystem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/beginners_guide.html"&gt;http://nginx.org/en/docs/beginners_guide.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_processes"&gt;http://nginx.org/en/docs/ngx_core_module.html#worker_processes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="nginx-with-ssl"&gt;nginx with ssl&lt;/h3&gt;
&lt;p&gt;It is hard to imagine running a production (or even test or dev server that should mirror production) without SSL since all traffic could be intercepted or hijacked.  It takes a little more work but clearly it is an important step in running a service that others will use.&lt;/p&gt;
&lt;h4 id="etcnginxnginxconf_1"&gt;/etc/nginx/nginx.conf&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;user nobody;
worker_processes 4;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/server.crt;
        ssl_certificate_key /etc/nginx/server.key;

        location / {
            root /var/www;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="openssl-self-signed-certificates"&gt;openssl self signed certificates&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl req -subj '/CN=example.com/O=My Company Name LTD./C=US' -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /tmp/server.key -out /tmp/server.crt

mkdir -p /tmp/www

echo "&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;hi&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;" &amp;gt; /tmp/www/index.html
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="dockerized-nginx-with-ssl"&gt;dockerized nginx with ssl&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker run --rm --publish 0.0.0.0:443:443 --volume /tmp/nginx.conf:/etc/nginx/nginx.conf:ro --volume /tmp/server.crt:/etc/nginx/server.crt --volume /tmp/server.key:/etc/nginx/server.key --volume /tmp/www:/var/www:ro  nginx:alpine

curl --insecure https://localhost
firefox https://localhost
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/configuring_https_servers.html"&gt;http://nginx.org/en/docs/http/configuring_https_servers.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="nginx-with-ssl-and-http2"&gt;nginx with ssl and http/2&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/HTTP/2"&gt;https://en.wikipedia.org/wiki/HTTP/2&lt;/a&gt; is a new and more capable and performant standard for the venerable HTTP protocol.  It has widespread vendor support so you can use most modern servers (e.g. nginx) and most modern browsers (e.g. chrome) and get the benefits immediately. (With of course all sorts of fallbacks for legacy clients)&lt;/p&gt;
&lt;h4 id="etcnginxnginxconf_2"&gt;/etc/nginx/nginx.conf&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;user&lt;/span&gt; &lt;span class="nt"&gt;nobody&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;worker_processes&lt;/span&gt; &lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;events&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;worker_connections&lt;/span&gt; &lt;span class="err"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;http&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;server&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;listen&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;return&lt;/span&gt; &lt;span class="err"&gt;301&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;listen&lt;/span&gt; &lt;span class="err"&gt;443&lt;/span&gt; &lt;span class="err"&gt;ssl&lt;/span&gt; &lt;span class="err"&gt;http2&lt;/span&gt; &lt;span class="err"&gt;default_server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="err"&gt;ssl_certificate&lt;/span&gt; &lt;span class="err"&gt;/etc/nginx/server.crt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="err"&gt;/etc/nginx/server.key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;root&lt;/span&gt; &lt;span class="err"&gt;/var/www&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Assuming the previous nginx with ssl steps of creating a certificate and content, be aware that &lt;strong&gt;browsers permanently CACHE the 301 redirect&lt;/strong&gt; so use Private Browsing mode otherwise you will never see a different result for localhost =[&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker run --rm --publish 0.0.0.0:80:80 --publish 0.0.0.0:443:443 --volume /tmp/nginx.conf:/etc/nginx/nginx.conf:ro --volume /tmp/server.crt:/etc/nginx/server.crt --volume /tmp/server.key:/etc/nginx/server.key --volume /tmp/www:/var/www:ro  nginx:alpine
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="verifying-http2"&gt;Verifying HTTP/2&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl localhost

&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;301 Moved Permanently&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;bgcolor=&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;&lt;/span&gt;301 Moved Permanently&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;&lt;/span&gt;nginx/1.9.12&lt;span class="nt"&gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;


curl --insecure --location localhost

&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;hi&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;openssl s_client&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl s_client -connect localhost:443 -nextprotoneg ''

CONNECTED(00000003)
Protocols advertised by server: h2, http/1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;chrome browser&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Browse directly to https://localhost/ with the chrome extension installed: &lt;a href="https://chrome.google.com/webstore/detail/http2-and-spdy-indicator/mpbpobfflnpcgagjijhmgnchggcjblin/related?hl=en"&gt;https://chrome.google.com/webstore/detail/http2-and-spdy-indicator/mpbpobfflnpcgagjijhmgnchggcjblin/related?hl=en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The blue lightning symbol on the far far right (next to the "hamburger") indicates HTTP/2 is working.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;browsers permanently CACHE the 301 redirect&lt;/strong&gt; so connecting to http://localhost will forever see a different result for localhost =[&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Browse directly to https://localhost/  (If using a self signed certificate accept any warnings about insecure SSL)&lt;/li&gt;
&lt;li&gt;Chrome/Chromium Settings -&amp;gt; More tools -&amp;gt; Developer tools (aka Control + Shift + I)&lt;/li&gt;
&lt;li&gt;Click on the Network section&lt;/li&gt;
&lt;li&gt;Control + Shift + F5 to reload (or click on the arrow circling up)&lt;/li&gt;
&lt;li&gt;Right click on the Name colum in the result so that you can add results for column heading, "Protocol"&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Control + Shift + F5 to reload (or click on the arrow circling up)&lt;/p&gt;
&lt;p&gt;Protocol: h2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.nginx.com/blog/nginx-1-9-5/"&gt;https://www.nginx.com/blog/nginx-1-9-5/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/tools-for-debugging-testing-and-using-http-2/"&gt;https://blog.cloudflare.com/tools-for-debugging-testing-and-using-http-2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tech.finn.no/2015/09/25/setup-nginx-with-http2-for-local-development/"&gt;http://tech.finn.no/2015/09/25/setup-nginx-with-http2-for-local-development/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="nginx-with-php-fpm"&gt;nginx with php-fpm&lt;/h2&gt;
&lt;h3 id="investigate-php-fpm-in-docker"&gt;Investigate php-fpm in Docker&lt;/h3&gt;
&lt;p&gt;This hack is fun but proves unnecessary when using Docker Compose later...&lt;/p&gt;
&lt;p&gt;:::bash
    docker pull php:5.5-fpm-alpine
    ifconfig | grep Bc
    docker run -it --rm --publish 0.0.0.0:9000:9000 php:5.5-fpm-alpine /bin/sh
    route -n
    php-fpm --version
    sed -i 's/listen = 127.0.0.1:9000/listen = 0.0.0.0:9000/g' /usr/local/etc/php-fpm.d/www.conf
    php-fpm --fpm-config /usr/local/etc/php-fpm.conf&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ifconfig and route -n are to discover the docker host IP Address via the default gateway 172.17.0.1&lt;/li&gt;
&lt;li&gt;contains include=etc/php-fpm.d/*.conf&lt;/li&gt;
&lt;li&gt;/usr/local/etc/php-fpm.d/www.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/_/php/"&gt;https://hub.docker.com/_/php/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://php.net/manual/en/install.fpm.configuration.php"&gt;http://php.net/manual/en/install.fpm.configuration.php&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="configure-nginx"&gt;Configure nginx&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vi /etc/nginx/nginx.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;worker_processes&lt;/span&gt; &lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;events&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;worker_connections&lt;/span&gt; &lt;span class="err"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;http&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;server&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;root&lt;/span&gt; &lt;span class="err"&gt;/var/www/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="err"&gt;try_files&lt;/span&gt; &lt;span class="err"&gt;$uri&lt;/span&gt; &lt;span class="err"&gt;$uri/index.php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;php&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;root&lt;/span&gt; &lt;span class="err"&gt;/var/www/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="err"&gt;try_files&lt;/span&gt; &lt;span class="err"&gt;$uri&lt;/span&gt; &lt;span class="err"&gt;$uri/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="err"&gt;fastcgi_index&lt;/span&gt; &lt;span class="err"&gt;index.php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;depends&lt;/span&gt; &lt;span class="err"&gt;on&lt;/span&gt; &lt;span class="err"&gt;Docker&lt;/span&gt; &lt;span class="err"&gt;linking&lt;/span&gt; &lt;span class="err"&gt;or&lt;/span&gt; &lt;span class="err"&gt;hostfile&lt;/span&gt; &lt;span class="err"&gt;for&lt;/span&gt; &lt;span class="err"&gt;fpm&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;resolve&lt;/span&gt;
            &lt;span class="err"&gt;fastcgi_pass&lt;/span&gt; &lt;span class="n"&gt;fpm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="err"&gt;fastcgi_param&lt;/span&gt; &lt;span class="err"&gt;SCRIPT_FILENAME&lt;/span&gt; &lt;span class="err"&gt;$document_root$fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nvd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gov&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vuln&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;vulnId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;CVE-2016-5385&lt;/span&gt;
            &lt;span class="n"&gt;fastcgi_param&lt;/span&gt; &lt;span class="n"&gt;HTTP_PROXY&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;fastcgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a basic nginx config that forwards .php requests to fpm on port 9000&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --rm --publish 0.0.0.0:80:80 --volume /tmp/nginx.conf:/etc/nginx/nginx.conf:ro --volume /tmp/www/html:/var/www/html:ro  nginx:alpine /bin/sh
route -n
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This manual command proves unnecessary with Docker Compose but can be useful to debug (i.e. run the php-fpm container first, then run this one since it depends on fpm)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="some-test-content"&gt;Some Test Content&lt;/h4&gt;
&lt;p&gt;Create the following files to test the various cases...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi /tmp/www/html/foo.html&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;hi&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vi /tmp/www/html/index.php&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;hello&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vi /tmp/www/html/bar.php&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="docker-composeyml"&gt;docker-compose.yml&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# https://docs.docker.com/compose/compose-file/

nginx:
  image: nginx:alpine
  ports:
    - "80:80"
  volumes:
    - /tmp/nginx.conf:/etc/nginx/nginx.conf:ro
    - /tmp/www/html:/var/www/html
  links:
    - fpm

fpm:
  image: php:5.5-fpm-alpine
  ports:
    - "9000:9000"
  volumes:
    - /tmp/www/html:/var/www/html

# http://stackoverflow.com/questions/29905953/how-to-correctly-link-php-fpm-and-nginx-docker-containers-together
# http://stackoverflow.com/questions/35388590/issue-with-docker-compose-container-command-not-found
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="docker-compose-up-to-start-nginx-and-php-fpm"&gt;docker-compose up to start nginx and php-fpm&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose up
docker-compose rm -f
curl localhost:80/foo.html
curl localhost:80/bar.php
curl localhost:80/index.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another tiny step forward in tying together a lot of moving pieces =]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 13 Jun 2015 08:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-06-13:nginx-with-docker/</guid><category>docker</category><category>nginx</category></item><item><title>Meeting Bjarne Stroustrup, creator of C plus plus, in the Atlassian Dev Den</title><link>https://blog.john-pfeiffer.com/meeting-bjarne-stroustrup-creator-of-c-plus-plus-in-the-atlassian-dev-den/</link><description>
&lt;h3 id="bjarne-stroustrup-visits-atlassian"&gt;Bjarne Stroustrup visits Atlassian&lt;/h3&gt;
&lt;p&gt;One of the things I looked forward to when joining Atlassian was being a part of a culture that celebrated software development.&lt;/p&gt;
&lt;p&gt;Today I had the opportunity to meet Bjarne Stroustrup &lt;a href="http://www.stroustrup.com/"&gt;http://www.stroustrup.com/&lt;/a&gt;, creator of C++. (yey)&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo of John and Bjarne" src="../images/2015-06-03--16.02.34-john-with-bjarne.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;To put this in perspective, C++ is one of the most popular programming languages of all time and is essentially like meeting the inventor of the hammer. (mindblown)&lt;/p&gt;
&lt;p&gt;To summarize, he was one of the most intelligent, mindful, humble, and quietly passionate people I have ever met.  Truly an inspiration to any engineer.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I have taken a tiny amount of free license due to my faulty memory and for readability.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="getting-the-book-signed"&gt;Getting the book signed&lt;/h3&gt;
&lt;p&gt;I had dug out my old The C++ Programming Language (3rd edition from 1997) which filled me with nostalgia of how amazing it was to read a text book that was just full of succinct coding amazingness.  So many textbooks were full of fluff, confusion, and downright goofiness but that book opened my mind to the difference it makes to have the original inventor writing it (Kernighan and Ritchie ;)&lt;/p&gt;
&lt;p&gt;Lucky me, I was there about 15 minutes early and while they got the Audio/Video set up I bravely politely asked him to sign it. (yes, success!)&lt;/p&gt;
&lt;p&gt;There was one other co worker there who was helping him prepare (and apparently also a huge fan, I took her picture with him) and I managed to ask some small talk questions (go me!)&lt;/p&gt;
&lt;p&gt;Bjarne seemed distant at first and his driver/handler (former Chief Technology Officer somewhere important) was maybe a bit apprehensive but I suspect the fan-ness of it all relaxed a bit after we proved we weren't pyschos...&lt;/p&gt;
&lt;p&gt;"This book was really amazing."  He responded, "Well this one is a bit old, you should use a newer edition".&lt;/p&gt;
&lt;p&gt;I quickly replied, "I don't actually use this in my day to day work so I keep it at home. It's a bit heavy to carry around all the time, I read a lot of things on my phone (easier to get the latest version of the books)."&lt;/p&gt;
&lt;p&gt;I must have hit a topic of interest for him as he came over and I had flipped open the book to some sample code.&lt;/p&gt;
&lt;p&gt;He ruminated, "Well, actually, I prefer this kind of reading with a book.  The formatting and print... you have to work hard to make sure the examples don't get split across pages.  And you have two pages." (Gesturing with his hands the extra width)&lt;/p&gt;
&lt;p&gt;I agreed with him, "Yes, it is certainly a lot easier to read the diagrams and code examples in a physical book.  The phone screen is really small.  I guess the book is a perfected technology that's been around 1000 years."&lt;/p&gt;
&lt;p&gt;"You know Atlassian isn't really a C++ shop, more Java with some Javascript... and Python products teams here in SF.  Actually it's even a really argumentative culture sometimes around technology, though with you here I'm sure they'll all be quiet and respectful."&lt;/p&gt;
&lt;p&gt;He actually smiled at that, "Back in AT&amp;amp;T we would ask: was there blood on the floor? That was how serious the discussions got.  Not really any blood on the floor, just an expression."&lt;/p&gt;
&lt;p&gt;"What do you enjoy most from your travels/touring?"&lt;/p&gt;
&lt;p&gt;Such a wise response: "Meeting the people, learning about what they're thinking and what new ideas they might have".&lt;/p&gt;
&lt;p&gt;Looking around the mostly empty room with 1 minute before the event starts, "Well I don't know where everyone else is, I'm sure there's lots of interest but the SF office is the Marketing and Business headquarters with only a few Development/Product teams".  He responded, "Yesterday Facebook was standing room only."&lt;/p&gt;
&lt;p&gt;I looked over at the monitors, "Well I'm sure there'll be attendance from the other offices too".  &lt;/p&gt;
&lt;p&gt;"What other locations does Atlassian have?" &lt;/p&gt;
&lt;p&gt;"Austin, and of course Sydney has 800 Java Developers, and Poland, and Vietnam, it's a pretty globally diverse company".&lt;/p&gt;
&lt;p&gt;I also warned him about the air conditioning intermittently coming on and being loud and often too cold.  "I was baking hot yesterday so I guess if it's cold in here today I guess it will average out". (With his curious funny little smile)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;And with the microphone on and an international audience he was introduced and here were the questions and answers...&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="current-challenges-for-programming-languages"&gt;Current challenges for programming languages&lt;/h3&gt;
&lt;p&gt;Since hardware improvements are through parallelization (unless quantum entanglements gets solved soon) developers must adapt, but concurrency is hard.  (And no global variables, right?)&lt;/p&gt;
&lt;p&gt;"Functional programming has good ideas but I did not want everything to be a recursive function"&lt;/p&gt;
&lt;p&gt;Distributed systems are a new perspective problem: for a fair trade, an exchange in New York offering the same price to Sydney and San Francisco becomes difficult (the speed of light is still a limit).&lt;/p&gt;
&lt;p&gt;Anyone heard of the leap second?  There are at least 3 ways it is being dealt with:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hold on for a really long time and then jump forward all at once.&lt;/li&gt;
&lt;li&gt;Jump forward immediately.&lt;/li&gt;
&lt;li&gt;Break the leap second into a lot of intervals and merge it in.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But if it's a distributed system how can everyone agree?  And that's just one example.&lt;/p&gt;
&lt;h3 id="trends-in-programming"&gt;Trends in programming?&lt;/h3&gt;
&lt;p&gt;Silicon Valley is an echo chamber but you probably know more than I do.  &lt;/p&gt;
&lt;p&gt;Mobile is very hot but it is a very small screen, and not everything (like a textbook) can be read on a small phone screen or even a tablet screen.&lt;/p&gt;
&lt;h3 id="a-second-favorite-language"&gt;A second favorite language?&lt;/h3&gt;
&lt;p&gt;Bjarne was incredibly diplomatic about pointing out that any language he said he preferred might be tweeted and start a "language war";  language comparisons are useless without the context of the constraints of the problem domain.&lt;/p&gt;
&lt;p&gt;For instance he had written C++ to be a performant language with the assumption of unix shell as the "other language".&lt;/p&gt;
&lt;p&gt;But what about Rust "Zero Cost Abstractions"? "It's not good to pay for what you don't use."&lt;/p&gt;
&lt;p&gt;He admitted that since he coined the phrase "Abstraction without overhead" that indeed he admired the goal of Rust (getting close to the hardware for maximum performance) but hadn't been following their recent developments.  For garbage collection... you shouldn't litter.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.rust-lang.org/2015/05/11/traits.html"&gt;http://blog.rust-lang.org/2015/05/11/traits.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Languages are about solving problems so I am very familiar with the strengths and weaknesses of C++ and I know how to make it do quite a lot.  But if I use another language then I am an amateur, not familiar with the idioms, and perhaps I will not use it so well.&lt;/p&gt;
&lt;h3 id="any-features-you-regret-putting-in-or-leaving-out-of-c"&gt;Any features you regret putting in or leaving out of C++?&lt;/h3&gt;
&lt;p&gt;No, everything in there has a use and ... they have to stay or it would upset thousands of people.    I wish it had better syntax, starting from C, well even they realized it was a mistake but it was already done so what are you going to do.&lt;/p&gt;
&lt;p&gt;Anything you put in a language, especially a mistake, will stay with you.  Maybe you can put something off to release a product and know you will get back to it in an iteration or two.  But make a mistake with a language and you live with it for a couple of decades.&lt;/p&gt;
&lt;p&gt;I do wish I had gotten some things right earlier.  Templates.  They solved the problem really well, general enough to do more than I imagined (that's the criteria for sucess).  Nobody else at the time knew how to solve it but I wish the interface was better.  Now, with the upcoming "Concepts", it will be better, but I wish I had done it right the first time.&lt;/p&gt;
&lt;p&gt;You have to understand, at the time of creation C was constrained to 64K, and C++ to 256K, so there are simply things you cannot do then.&lt;/p&gt;
&lt;h3 id="a-complicated-question-about-the-n4047-modules-proposal"&gt;A complicated question about the N4047 modules proposal&lt;/h3&gt;
&lt;p&gt;It was a good proposal.  Isolating code from other portions to make compilation faster.&lt;/p&gt;
&lt;p&gt;C++ is maintained by people who actually pay 1280 to be on the committee... they don't make any money by doing it. Daveed Vandevoorde had to continue working and doing this proposal was something on the side.&lt;/p&gt;
&lt;p&gt;If it is not in my top 20 then it's not an important problem.  So a lot of good proposals do not make my top 20.&lt;/p&gt;
&lt;p&gt;More recently teams in Microsoft, Google, GCC, and Clang are looking at this and some will even have implementations before it is released.&lt;/p&gt;
&lt;p&gt;It should be including in release 17 and you may see a compilation speedup between %50 and 50x , maybe more usually 4x or 8x faster.&lt;/p&gt;
&lt;p&gt;Language features are complicated as you have to coordinate between all of the major tool chains (you certainly can't have one of them do it one way and another differently).&lt;/p&gt;
&lt;h3 id="how-many-languages"&gt;How many languages?&lt;/h3&gt;
&lt;p&gt;When asked about whether a developer should focus on one language or learn many Bjarne had a very nuanced answer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When he started programming it was not impossible to learn 25 languages.  It is very valuable to learn the different ways of thinking and solving problems by programming in a different language. Now though, languages are more complex with a lot of libraries, idioms, and toolchain to learn. &lt;/p&gt;
&lt;p&gt;So learning two languages, like the example before of 1 performant and 1 more general, would not be enough since that would not provide any comparison of why. Maybe 4, so that you could compare two general and two performant languages and understand how/why they did things differently.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="my-question"&gt;My Question&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;I decided to mull over and try and ask a live question (with an audience this time).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;"Given your comment about tooling before, how valuable do you find developer tools to a programming language (like an IDE)?  Also, what are any major gaps you see in current tools?"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;"Good question.  I don't really use tools that much since I work on smaller examples that might need to be ported in a few places.  On larger projects and code bases tooling is very useful as you can't keep all of it in your head anymore.  I'm maybe not the best person to ask, you probably work on large code more than I.  But just being able to click on a macro or identifier and jump to it in the code is very useful."&lt;/p&gt;
&lt;p&gt;"I don't use a debugger very often.  Other people might but I don't.  If you are using a debugger it's maybe a bad sign about your code. But I would like to see a debugger that could follow concurrency.  That would really help."&lt;/p&gt;
&lt;p&gt;"Tests are really important, so tools that make it easy to run tests, and to write tests quickly, that would be very useful."&lt;/p&gt;
&lt;h3 id="what-is-a-professional"&gt;What is a professional?&lt;/h3&gt;
&lt;p&gt;If someone, your employer or your manager, asks you to do something that is shabby you should just resign.  It doesn't happen very often but there are ethics.&lt;/p&gt;
&lt;p&gt;I wish the Universities, that teach "Computer Science" and not programming, would spend some time on caching or real world coding and problems.  They graduate being able to describe the Halting Problem but with magic constants throughout their code.&lt;/p&gt;
&lt;p&gt;It would be nice if there was a more universal way to explain/teach being "professional" in software.&lt;/p&gt;
&lt;h3 id="c-in-education"&gt;C++ in Education&lt;/h3&gt;
&lt;p&gt;Bjarne was asked and clearly had some strong feelings on the subject of why C++ wasn't taught in universities.&lt;/p&gt;
&lt;p&gt;"Perhaps it's because C++ doesn't have a marketing budget" he quipped.  More seriously he went on to point out "he had very successfully taught college freshman programming in C++ so it's quite possible.  There isn't enough time to teach all of C first so you don't start with that: for instance pointers are chapter 17, not chapter 2."&lt;/p&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;p&gt;An interesting interview he gave for comparison: &lt;a href="http://www.stroustrup.com/CVu263interview.pdf"&gt;http://www.stroustrup.com/CVu263interview.pdf&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 03 Jun 2015 20:30:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-06-03:meeting-bjarne-stroustrup-creator-of-c-plus-plus-in-the-atlassian-dev-den/</guid><category>c++</category><category>cpp</category><category>atlassian</category></item><item><title>Pragmatic testing, from Makefile to CI with Docker</title><link>https://blog.john-pfeiffer.com/pragmatic-testing-from-makefile-to-ci-with-docker/</link><description>
&lt;p&gt;A colleague recently suggested "Hey, why don't you run those tests from outside of the target server under test?"&lt;/p&gt;
&lt;p&gt;And I thought to myself, "Hmm.... why are we doing it that way?  Was I just dumb when I did this the first time?&lt;/p&gt;
&lt;p&gt;The answer is the journey of successfully testing a successful product and the pragmatic choices made along the way.  I believe that engineering requires compromises because without achieving short term progress we would have never reached our bigger, long term goals.&lt;/p&gt;
&lt;h3 id="humble-beginnings-with-makefile"&gt;Humble beginnings with Makefile&lt;/h3&gt;
&lt;p&gt;Our initial project was to deliver an OVA (open virtualization archive) that packaged all of the services (and dependencies) into an easy to deploy and maintain virtual appliance.&lt;/p&gt;
&lt;p&gt;Will, as the project lead, had already spent some time setting up the build environment using vStudio and an Ubuntu ISO but one of our first issues after generating an OVA was to try and determine if it was "good".  Could it even be deployed?  Did it have the services installed correctly?&lt;/p&gt;
&lt;p&gt;I leveraged the Makefile that we were already using for the build to create a "test": deploy the latest OVA artifact and check that it was basically sound.&lt;/p&gt;
&lt;p&gt;This was a good start as, at the very least, we could quickly determine and bisect where we were producing bad builds.&lt;/p&gt;
&lt;h3 id="adding-some-tests-but-where"&gt;Adding some tests, but where?&lt;/h3&gt;
&lt;p&gt;Once the initial spike ("tracer bullet") was done I began adding in selenium python based tests to verify the Web UI interface.&lt;/p&gt;
&lt;p&gt;Since our Continuous Integration system was basically bash and Makefile (which was also our build system) I opted to run the tests from inside of each deployed Virtual Machine.&lt;/p&gt;
&lt;p&gt;This allowed for isolation of the test execution from the build process and for each test run.  &lt;/p&gt;
&lt;p&gt;While not ideal for product acceptance testing it provided a basic safety net that allowed us to know if a breaking change occurred upstream and was the first automated verification (followed by lots of manual testing) of the exact OVA we were shipping to Customers in the Beta.&lt;/p&gt;
&lt;h3 id="bamboo-continuous-integration-for-visibility-and-the-team"&gt;Bamboo Continuous Integration for visibility and the team&lt;/h3&gt;
&lt;p&gt;A further improvement was to improve visibility of the test results.  In parallel, after the team discussion during "HipCon" and with motivation from Don and Sam, I setup a private Bamboo installation in our VM area and helped get Integration tests setup for our upstream backend code.&lt;/p&gt;
&lt;p&gt;Once again I stuck with the tried and true "tests inside of the target virtual machine" pattern as the Bamboo server was only using "local agents" and I was concerned about trying to maintain a clean environment and the resources required as the number of test plans scaled.&lt;/p&gt;
&lt;p&gt;Additionally I migrated all of the previous test plans from the "build factory" into Bamboo which really helped with failed test visibility and tracking over time.&lt;/p&gt;
&lt;p&gt;The unit tests continued to run in a different SaaS version of Bamboo so I avoided scope creep and left things that were working alone.&lt;/p&gt;
&lt;h3 id="migrating-to-a-managed-service"&gt;Migrating to a managed service&lt;/h3&gt;
&lt;p&gt;One of the most asked questions whenever a new person joined was "Why are the tests spread across so many different servers/services"?  I had to answer that question so many times!  The answer basically boiled down to "the testing grew organically as different people in the team solved the problem they faced".  Unsatisfactory? "Be the change you seek" didn't seem to get anyone else to solve the problem for me ;)&lt;/p&gt;
&lt;p&gt;Using the opportunity presented by a service outage issue I pushed forward a plan I had to migrate all of the test plans into a newly provisioned Bamboo server run by Build Engineering. (awthanks)&lt;/p&gt;
&lt;p&gt;There was an awesome team effort by a lot of people to make that happen (made even more challenging by doing it when the source service was out). (awesome)&lt;/p&gt;
&lt;p&gt;This solved quite a few problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Unit, Integration, and Product Acceptance tests were all finally combined under one roof... one UI to rule them all!&lt;/li&gt;
&lt;li&gt;New people joining the team needing access to Bamboo: since I hadn't linked it to any directory/authentication I was adding users manually - we were finally able to leverage an Atlassian backend Directory system&lt;/li&gt;
&lt;li&gt;I had been managing upgrades and maintenance of the Bamboo software (not fun and not my core expertise)&lt;/li&gt;
&lt;li&gt;I began to worry about the resource consumption (since this was running on hardware that also provided for our Build Factory) - no longer a worry with lots of Remote Agents and Elastic Agents (all provided by Build Engineering)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bonuses:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;More plugins and capabilities and knowledge from the Bamboo server and Build Engineering expertise&lt;/li&gt;
&lt;li&gt;Plan Templates to keep test plans in version control and macros for common functionality&lt;/li&gt;
&lt;li&gt;A successful spike of using Docker for unit testing&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With so much going on during the migration I avoided changing the testing paradigm, so tests continued to execute inside of each VM/EC2 Instance deployed. (shrug)&lt;/p&gt;
&lt;h3 id="adopting-docker-and-refactoring"&gt;Adopting Docker and refactoring&lt;/h3&gt;
&lt;p&gt;Remember that question at the beginning?  When something goes wrong, while it makes sense to separate "fixing it" from "improving it" I'm a big fan of taking advantage of having the hood open to go the extra mile and leave the campground cleaner =)&lt;/p&gt;
&lt;p&gt;So some of the selenium based tests were failing and it occurred to me that some of how we were changing our dependency infrastructure at the operating system level could be the cause.  After some unproductive poking around I tried to reproduce and isolate the issue by running the tests from outside of the VM.&lt;/p&gt;
&lt;p&gt;Aha! In that moment I realized that this was actually the desired (original intention, honest!) way to run the blackbox product acceptance tests.&lt;/p&gt;
&lt;p&gt;So I pulled up my sleeves and tried out the "hot fancy new silver bullet technology that solves every problem".&lt;/p&gt;
&lt;h4 id="why-docker"&gt;Why Docker?&lt;/h4&gt;
&lt;p&gt;Docker encourages design of modular, deterministic and defined, single purpose components that are easy to reuse and compose into larger services. &lt;/p&gt;
&lt;p&gt;Not only are (Docker) Containers fast, one of the biggest advantages of Containers is the ability to reduce complexity. Docker can turn an application/service, it's dependencies, and even the OS level requirements into a single blackbox package (that you can still inspect inside if you really want to).&lt;/p&gt;
&lt;p&gt;So I built a Docker Image containing python selenium and &lt;a href="http://phantomjs.org/"&gt;http://phantomjs.org/&lt;/a&gt; (a headless javascript based browser) and other dependencies.&lt;/p&gt;
&lt;p&gt;Sure enough I the tests passed when leveraging the previous Docker spike to run my new docker container. (success)&lt;/p&gt;
&lt;p&gt;Refactoring the bamboo plan (since it was leveraging Plan Templates and the Groovy DSL macros) didn't take too long and with other stakeholders PR/approval we're moving full speed ahead towards the "ideal" solution. (It only took about 2 years).&lt;/p&gt;
&lt;h3 id="dogfooding-the-whole-way"&gt;Dogfooding the whole way&lt;/h3&gt;
&lt;p&gt;Something I should mention that has been an invaluable companion throughout the course of building the product: a dogfooding server.&lt;/p&gt;
&lt;p&gt;"Eating our own dog food" is a wonderful way to experience the exact pain you are inflicting on your users.  From the very begininng Will setup and we maintained a dogfood server which received every beta upgrade (and a few upgrades that never reached the customers), amazingly it's still alive and full of data!&lt;/p&gt;
&lt;p&gt;Not only did I learn about bugs that would affect our oldest and most loyal users (who kept with us and kept upgrading), I also felt the User Experience pain of how long upgrades took, mysterious incomprehensible errors messages, and "partial upgrades".  All of these learnings, along with being Developer on Support and assisting on support tickets, kept me honest and humble and allowed me to improve the product just as much as any fancy testing automation framework.&lt;/p&gt;
&lt;h3 id="what-does-this-all-mean"&gt;What does this all mean?&lt;/h3&gt;
&lt;p&gt;It's easy to draw up how things should work according to best practice.  It's even easier if it's work that someone else has to do and there aren't any deadlines.&lt;/p&gt;
&lt;p&gt;Success comes in stages.  Overengineering and premature optimization cost way more in opportunity cost and thrown away work than doing things the "wrong way".&lt;/p&gt;
&lt;p&gt;This story could be massaged to fit a parable of "Lean and Agile" but it's really just common sense about transparently understanding the cost/value tradeof of the work, solving the current needs, and moving forward onto something better (by keeping informed of new solutions) when the opportunity shows up.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 25 May 2015 10:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-05-25:pragmatic-testing-from-makefile-to-ci-with-docker/</guid><category>testing</category><category>selenium</category><category>docker</category></item><item><title>HAProxy in Docker</title><link>https://blog.john-pfeiffer.com/haproxy-in-docker/</link><description>
&lt;p&gt;Not only are Containers fast, one of the biggest advantages of Containers is the ability to reduce complexity.&lt;/p&gt;
&lt;p&gt;Docker can turn an application/service, it's dependencies, and even the OS level requirements into a single blackbox package (that you can still inspect inside if you really want to).&lt;/p&gt;
&lt;p&gt;One thing I really like is less code.  Seriously.  Configuration over coding (whenever I don't need customization) means far less maintenance and bugs.&lt;/p&gt;
&lt;p&gt;Here's a trivial example of how I can leverage the HAProxy Docker image/container to load balance two web servers. (aka "reverse proxy" &lt;a href="http://en.wikipedia.org/wiki/Reverse_proxy"&gt;http://en.wikipedia.org/wiki/Reverse_proxy&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    client -&amp;gt; all other sites
      |
reverse proxy (haproxy)
  /         \
BackendA  BackendB
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;There are new problems that go along with the benefits of any new technology, see the complicated networking/port coordination&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker pull haproxy:1.5
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="some-backend-web-servers"&gt;Some backend web servers&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /tmp/BackendA
echo "foo" &amp;gt; /tmp/BackendA/foo.txt
cd /tmp/BackendA
python -m SimpleHTTPServer 8000 &amp;amp;

mkdir -p /tmp/BackendB
echo "bar" &amp;gt; /tmp/BackendB/bar.txt
cd /tmp/BackendB
python -m SimpleHTTPServer 8001 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Clearly a trivial example (more likely two remote hosts in logical/geographic disparate areas if aiming for High Availability, or at least on different hosts to scale with more resources)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="optmydatahaproxycfg"&gt;/opt/mydata/haproxy.cfg&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;global
        debug

defaults
        log global
        mode    http
        timeout connect 5000
        timeout client 5000
        timeout server 5000

listen http_proxy :8443
        mode tcp
        balance roundrobin
        server srv1 docker:8000 check
        server srv2 docker:8001 check
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="start-haproxysh"&gt;start haproxy.sh&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;HOSTIP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;ip addr show &lt;span class="p"&gt;|&lt;/span&gt; grep docker0 &lt;span class="p"&gt;|&lt;/span&gt; grep global &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;'{print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d / -f1&lt;span class="sb"&gt;`&lt;/span&gt;

sudo docker run -p &lt;span class="m"&gt;8443&lt;/span&gt;:8443 --add-host&lt;span class="o"&gt;=&lt;/span&gt;docker:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOSTIP&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; --rm -it -v /opt/mydata/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro --name myhaproxy haproxy:1.5
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that the docker container's /etc/hosts file has the Host IP Address injected (with the name "docker") the haproxy config file probably makes more sense&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;running the container&lt;/li&gt;
&lt;li&gt;the host port 8443 mapped to the container port 8443&lt;/li&gt;
&lt;li&gt;injecting into the container /etc/hosts the Host IP Address as "docker"&lt;/li&gt;
&lt;li&gt;ephemeral container (automatic cleanup on termination)&lt;/li&gt;
&lt;li&gt;interactive&lt;/li&gt;
&lt;li&gt;tty&lt;/li&gt;
&lt;li&gt;readonly mapping of the /opt/mydata/haproxy.cfg file on the host to /usr/local/etc/haproxy/haproxy.cfg&lt;/li&gt;
&lt;li&gt;name the container myhaproxy (each container name must be unique)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the container is using the haproxy version 1.5 Docker Image&lt;/p&gt;
&lt;p&gt;./start-haproxy.sh&lt;/p&gt;
&lt;p&gt;curl localhost:8443&lt;/p&gt;
&lt;p&gt;:::html
&amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"&amp;gt;&lt;html&gt;
&lt;title&gt;Directory listing for /&lt;/title&gt;
&lt;body&gt;
&lt;h2&gt;Directory listing for /&lt;/h2&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="bar.txt"&gt;bar.txt&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;hr&gt;
&lt;/hr&gt;&lt;/hr&gt;&lt;/body&gt;
&lt;/html&gt;&lt;/p&gt;
&lt;p&gt;curl localhost:8443&lt;/p&gt;
&lt;p&gt;:::html
&amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"&amp;gt;&lt;html&gt;
&lt;title&gt;Directory listing for /&lt;/title&gt;
&lt;body&gt;
&lt;h2&gt;Directory listing for /&lt;/h2&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="foo.txt"&gt;foo.txt&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;hr&gt;
&lt;/hr&gt;&lt;/hr&gt;&lt;/body&gt;
&lt;/html&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="haproxy-stats"&gt;HAProxy Stats&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker rm -f myhaproxy
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="optmydatahaproxycfg_1"&gt;/opt/mydata/haproxy.cfg&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;global
    debug

defaults
    log global
    mode    http
    timeout connect 5000
    timeout client 5000
    timeout server 5000

listen http_proxy :8443
    mode tcp
    balance roundrobin
    server srv1 docker:8000 check
    server srv2 docker:8001 check

# optional section to enable statistics for haproxy protected by basic auth (replace with your own user and password)
listen stats :1936
    stats enable
    stats uri /
    stats realm HAProxyStatistics
    stats auth user:password


./start-haproxy.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="nginx-forward-proxy"&gt;nginx forward proxy&lt;/h3&gt;
&lt;p&gt;client -&amp;gt; forward proxy (nginx) -&amp;gt; all other sites&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull nginx:alpine
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="nginxconf"&gt;nginx.conf&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;worker_processes&lt;/span&gt;  &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;events&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;worker_connections&lt;/span&gt;  &lt;span class="err"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;http&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;include&lt;/span&gt;       &lt;span class="err"&gt;mime.types&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;default_type&lt;/span&gt;  &lt;span class="err"&gt;application/octet-stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="err"&gt;sendfile&lt;/span&gt;        &lt;span class="err"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;keepalive_timeout&lt;/span&gt;  &lt;span class="err"&gt;65&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="err"&gt;gzip&lt;/span&gt;  &lt;span class="err"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="err"&gt;server&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;listen&lt;/span&gt;       &lt;span class="err"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;resolver&lt;/span&gt; &lt;span class="err"&gt;8.8.8.8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="err"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;http_host&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;is_args&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;error_page&lt;/span&gt;   &lt;span class="nt"&gt;500&lt;/span&gt; &lt;span class="nt"&gt;502&lt;/span&gt; &lt;span class="nt"&gt;503&lt;/span&gt; &lt;span class="nt"&gt;504&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;50x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;html&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;50x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;root&lt;/span&gt;   &lt;span class="err"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;



&lt;span class="nt"&gt;docker&lt;/span&gt; &lt;span class="nt"&gt;run&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; &lt;span class="nt"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;8080&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="nt"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;ro&lt;/span&gt; &lt;span class="nt"&gt;--name&lt;/span&gt; &lt;span class="nt"&gt;mynginx&lt;/span&gt; &lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;alpine&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;bind to port 8080 on the host and run an ephemeral container based on the alpine linux with nginx image that uses the /tmp/nginx config&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http_proxy=127.0.0.1:8080 curl example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;set the linux operating system proxy environment just for this one curl command and see the dockerized nginx forward proxy log show: 172.17.0.1 - - [06/May/2016:22:37:22 +0000] "GET HTTP://example.org/ HTTP/1.1" 200 1270 "-" "curl/7.35.0"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Configure your browser (firefox) to use 127.0.0.1:8080 as the proxy for all protocols and watch the log statements fly by when you test http://example.com&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: this does not support HTTPS &lt;a href="http://forum.nginx.org/read.php?2,15124,15256#msg-15256"&gt;http://forum.nginx.org/read.php?2,15124,15256#msg-15256&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Attempting https://example.com will return "CONNECT example.com:443 HTTP/1.1" 400 173 "-" "-"  and the browser will show "Server not found"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt; Warning &lt;/strong&gt; do not use &lt;em&gt;http_proxy=http://127.0.0.1:8080&lt;/em&gt; as that will fail =[&lt;/p&gt;
&lt;p&gt;You can permanently set the environment proxy with export http_proxy=127.0.0.1:8080&lt;/p&gt;
&lt;h3 id="haproxy-as-a-limited-outbound-proxy"&gt;HAProxy as a limited outbound proxy&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker pull haproxy:1.6-alpine
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that you have the 10MB haproxy image...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note there is a limitation to haproxy in that it always assumes a syslog facility (no direct logging to stdout or files)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dockerfile/haproxy/issues/3"&gt;https://github.com/dockerfile/haproxy/issues/3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/libc/manual/html_node/Overview-of-Syslog.html"&gt;http://www.gnu.org/software/libc/manual/html_node/Overview-of-Syslog.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="optmydatahaproxycfg_2"&gt;/opt/mydata/haproxy.cfg&lt;/h4&gt;
&lt;p&gt;This is the more readable config style which separates the frontend from backend and this is haproxy 1.6&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The logging probably does not work =(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;global
        debug
        log /dev/log local0 info

defaults
        mode http
        timeout connect 5s
        timeout client 5s
        timeout server 5s

frontend myfrontend
        bind *:8443
        default_backend mybackend

backend mybackend
        server s1 example.com:443 ssl verify none
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="starting-the-haproxy-docker-container"&gt;starting the haproxy docker container&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -p 8443:8443 --rm -it -v /home/admin/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro -v /dev/log:/dev/log --name myhaproxy haproxy:1.6-alpine
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Control + C to quit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://registry.hub.docker.com/_/haproxy/"&gt;https://registry.hub.docker.com/_/haproxy/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cbonte.github.io/haproxy-dconv/configuration-1.5.html"&gt;https://cbonte.github.io/haproxy-dconv/configuration-1.5.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cbonte.github.io/haproxy-dconv/configuration-1.6.html"&gt;https://cbonte.github.io/haproxy-dconv/configuration-1.6.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.haproxy.org/git?p=haproxy-1.6.git;a=tree;f=examples"&gt;http://www.haproxy.org/git?p=haproxy-1.6.git;a=tree;f=examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.docker.com/reference/commandline/cli/#adding-entries-to-a-container-hosts-file"&gt;http://docs.docker.com/reference/commandline/cli/#adding-entries-to-a-container-hosts-file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 21 May 2015 20:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-05-21:haproxy-in-docker/</guid><category>docker</category><category>haproxy</category></item><item><title>Caching data and common gotchas and an intro to redis memcached and varnish</title><link>https://blog.john-pfeiffer.com/caching-data-and-common-gotchas-and-an-intro-to-redis-memcached-and-varnish/</link><description>
&lt;p&gt;&lt;strong&gt;Caching is when you use a copy of a data set rather than using the original source.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Caching often involves a "Key Value Lookup":&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A request is received and the service checks the cache using a Key&lt;/li&gt;
&lt;li&gt;The cache does not contain the Key&lt;/li&gt;
&lt;li&gt;The service generates the result from the originating data source (i.e. database)&lt;/li&gt;
&lt;li&gt;The service then stores the result in the cache with the Key as the index (and the result as the Value)&lt;/li&gt;
&lt;li&gt;A subsequent request is received and the service checks (looks up) the cache using a Key&lt;/li&gt;
&lt;li&gt;The cache &lt;strong&gt;does&lt;/strong&gt; contain the Key&lt;/li&gt;
&lt;li&gt;The service retrieves the Value from the cache and returns the result&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A more concrete example would be to cache a User object by Email, so that whenever a request came in for a particular Users details the cache would contain their Name, Address, and Phone Number.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Associative_array"&gt;https://en.wikipedia.org/wiki/Associative_array&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="why-cache"&gt;Why Cache?&lt;/h2&gt;
&lt;p&gt;A tradeoff of memory for cpu (or latency or some other business cost).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;computation is expensive (in terms of cpu, time, or money)&lt;/li&gt;
&lt;li&gt;accessing the data from source is too slow&lt;/li&gt;
&lt;li&gt;access to data across a larger geographic distance&lt;/li&gt;
&lt;li&gt;the data actually comes from multiple sources (complex and expensive to retrieve)&lt;/li&gt;
&lt;li&gt;to reduce load on the service originating data&lt;/li&gt;
&lt;li&gt;to reduce contention (i.e. reads not served from the same persistence that does writes)&lt;/li&gt;
&lt;li&gt;server side caching can protect backend resources and improve throughput and performance&lt;/li&gt;
&lt;li&gt;for a client-server architecture, caching on the client reduces the number of required connections to a server&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="questions-to-ask-when-caching"&gt;Questions to ask when caching&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Is the complexity of caching worth the performance gain? (a simpler implementation is often better, less chance of bugs!)&lt;/li&gt;
&lt;li&gt;Does my cache need to be consistent? (meaning the cache and data source return identical results)&lt;/li&gt;
&lt;li&gt;Can my cache be "eventually consistent"? (meaning a wrong answer for some specified period of time is ok)&lt;/li&gt;
&lt;li&gt;Am I caching at a high level? (meaning aggregating a lot of work/responses from lower level systems)&lt;/li&gt;
&lt;li&gt;Am I caching at a low level? (meaning inside of my Data Access Object pattern I'm protecting a single simple resource, i.e. a MySQL table, from being accessed too often)&lt;/li&gt;
&lt;li&gt;How unique are my Keys in my cache (i.e. if multiple users can have the same identifier it would be very bad to return the wrong session to the wrong user)&lt;/li&gt;
&lt;li&gt;Do I have the ability to operate or pay for a caching service?&lt;/li&gt;
&lt;li&gt;What will happen if the cache is unavailable?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cache-latency-times-in-perspective"&gt;Cache Latency Times in Perspective&lt;/h3&gt;
&lt;p&gt;Taking "why cache" to another level, the relative speeds of different cache levels highlight why some applications or algorithms will fail if they do not leverage cache.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If your application uses a very large amount of data the network may actually be better than disk; optimization would probably not be focused on "loop unrolling"&lt;/li&gt;
&lt;li&gt;If your application depends on data across the internet then network caching, routing algorithms, and data modeling (eventual consistency!) may be more important than "tail recursion vs iterative"&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Action&lt;/th&gt;
&lt;th align="center"&gt;nanoseconds&lt;/th&gt;
&lt;th align="center"&gt;microseconds&lt;/th&gt;
&lt;th align="center"&gt;milliseconds&lt;/th&gt;
&lt;th align="center"&gt;human scale comparison&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;A typical cpu instruction&lt;/td&gt;
&lt;td align="center"&gt;1 ns&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;1 second basis (approximations)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;L1 cache fetch&lt;/td&gt;
&lt;td align="center"&gt;0.5 ns&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Branch misprediction&lt;/td&gt;
&lt;td align="center"&gt;4 ns&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;L2 cache fetch&lt;/td&gt;
&lt;td align="center"&gt;7 ns&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;7 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Mutex lock/unlock&lt;/td&gt;
&lt;td align="center"&gt;25 ns&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RAM "main memory" fetch&lt;/td&gt;
&lt;td align="center"&gt;100 ns&lt;/td&gt;
&lt;td align="center"&gt;0.1 us&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;2 minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Read 4K randomly from SSD&lt;/td&gt;
&lt;td align="center"&gt;100,000 ns&lt;/td&gt;
&lt;td align="center"&gt;100 us&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;28 hours&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Read 1 MB sequentially from memory&lt;/td&gt;
&lt;td align="center"&gt;250,000 ns&lt;/td&gt;
&lt;td align="center"&gt;250 us&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;3 days&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Send 1000 bytes over 1 Gbps network&lt;/td&gt;
&lt;td align="center"&gt;500,000 ns&lt;/td&gt;
&lt;td align="center"&gt;500 us&lt;/td&gt;
&lt;td align="center"&gt;0.5 ms&lt;/td&gt;
&lt;td align="center"&gt;6 days&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Read 1 MB sequentially from SSD&lt;/td&gt;
&lt;td align="center"&gt;1,000,000 ns&lt;/td&gt;
&lt;td align="center"&gt;1,000 us&lt;/td&gt;
&lt;td align="center"&gt;1 ms&lt;/td&gt;
&lt;td align="center"&gt;12 days&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Spinning Hard Disk seek&lt;/td&gt;
&lt;td align="center"&gt;8,000,000 ns&lt;/td&gt;
&lt;td align="center"&gt;8,000 us&lt;/td&gt;
&lt;td align="center"&gt;8 ms&lt;/td&gt;
&lt;td align="center"&gt;3 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Read 1 MB sequentially from disk&lt;/td&gt;
&lt;td align="center"&gt;20,000,000 ns&lt;/td&gt;
&lt;td align="center"&gt;20,000 us&lt;/td&gt;
&lt;td align="center"&gt;20 ms&lt;/td&gt;
&lt;td align="center"&gt;7.6 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Packet Roundtrip SF to NY&lt;/td&gt;
&lt;td align="center"&gt;70,000,000 ns&lt;/td&gt;
&lt;td align="center"&gt;70,000 us&lt;/td&gt;
&lt;td align="center"&gt;70 ms&lt;/td&gt;
&lt;td align="center"&gt;2 years&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Packet Roundtrip SF to NY&lt;/td&gt;
&lt;td align="center"&gt;150,000,000 ns&lt;/td&gt;
&lt;td align="center"&gt;150,000 us&lt;/td&gt;
&lt;td align="center"&gt;150 ms&lt;/td&gt;
&lt;td align="center"&gt;5 years&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;The L1 cache is the memory cache integrated into the CPU that is closest&lt;/p&gt;
&lt;p&gt;Light travels 30 cm or about 1 foot in 1 nanosecond&lt;/p&gt;
&lt;p&gt;ns = nanoseconds, us = microseconds, ms = milliseconds&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://norvig.com/21-days.html#answers"&gt;http://norvig.com/21-days.html#answers&lt;/a&gt; (Peter Norvig) &lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/CPU_cache"&gt;https://en.wikipedia.org/wiki/CPU_cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Solid-state_drive#Controller"&gt;https://en.wikipedia.org/wiki/Solid-state_drive#Controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codingblocks.net/podcast/episode-45-caching-overview-and-hardware/"&gt;http://www.codingblocks.net/podcast/episode-45-caching-overview-and-hardware/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wondernetwork.com/pings"&gt;https://wondernetwork.com/pings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/rzezeski/status/398306728263315456/photo/1"&gt;https://twitter.com/rzezeski/status/398306728263315456/photo/1&lt;/a&gt; (Brendan Gregg)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="caches-are-another-operational-component-with-overhead"&gt;Caches are another Operational component with Overhead&lt;/h3&gt;
&lt;p&gt;The best advice is to definitely avoiding caching until the last possible moment (&lt;em&gt;"less is the best" and "premature optimization" and "be future flexible" and "defer architecture decisions"&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;Not only do you have to write code complexity for using a cache, there's the nitty gritty of running a cache (which can be a completely different expertise than programming)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;li&gt;Upgrades&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;li&gt;Metrics&lt;/li&gt;
&lt;li&gt;Testing (i.e. synthetic smoke tests or load)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;None of this operational cost is free, and there are plenty of issues when just implementing caching in the code...&lt;/p&gt;
&lt;h2 id="high-level-caching-for-the-application-versus-low-level-caching-for-the-persistence-layer"&gt;"High Level" caching for the application versus "Low Level" caching for the persistence layer&lt;/h2&gt;
&lt;p&gt;Caching can be the most effective at the "highest" layer where the application is able to trivially service a request.  (e.g. caching the final full web page that was requested)&lt;/p&gt;
&lt;p&gt;This "protects" all of the underlying machinery from having to do work.  It requires a good understanding of how dynamic or personalized the results are, designing the system to have pieces that can be cached, and is brittle to change.&lt;/p&gt;
&lt;p&gt;Caching can be an "easy win" when applied at the "lowest" layer right near the persistence (i.e. redis "in front of" a database - that for example contains the new articles that will be served on a web page) as all of the components in layers above can benefit from improved performance without having to change the business logic (or perhaps even unaware of the caching).&lt;/p&gt;
&lt;p&gt;Both can be used together but to paraphrase: "mo caching mo problems"&lt;/p&gt;
&lt;h2 id="how-to-cache"&gt;How to Cache&lt;/h2&gt;
&lt;h3 id="cache-on-write"&gt;Cache on Write&lt;/h3&gt;
&lt;p&gt;Also known as "cache on write through", whenever new data is written a cache must also be updated.&lt;/p&gt;
&lt;h3 id="cache-on-read"&gt;Cache on Read&lt;/h3&gt;
&lt;p&gt;Also known as "cache on read through", whenever a query is made first the cache is checked.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If there is a "cache miss" then the data source is queried and the cache is updated and the result is returned.  &lt;/li&gt;
&lt;li&gt;If there is a "cache hit" and the data is in the cache then it is returned (and potentially a cache key expiration updated as this cache hit improved the cache efficiency).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cache-warming"&gt;Cache Warming&lt;/h3&gt;
&lt;p&gt;Pre-emptively adding data to the cache is "cache warming" in order to improve "cache hit" percentages and reduce the risk of "cold cache" issues.&lt;/p&gt;
&lt;h3 id="flush-the-cache"&gt;Flush the Cache&lt;/h3&gt;
&lt;p&gt;Removing some or all data from the cache in order to invalidate a chunk of data (i.e. all users need to reset their passwords) or pre-emptively free up memory/space.&lt;/p&gt;
&lt;h2 id="common-gotchas"&gt;Common Gotchas&lt;/h2&gt;
&lt;p&gt;Caching is challenging because of the need for data consistency, parallel requests, and race conditions.&lt;/p&gt;
&lt;p&gt;One good way to think about it is a banking system with money...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If two people both try to empty a bank account at an ATM at the same time how will your caching system handle it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="cache-on-write-gotchas"&gt;Cache on write gotchas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;There may be a design mismatch as since data is only cached on write, if reads are occurring mostly on data written a long time ago they will be expired/pushed out and you will have poor cache efficiency (paradoxically adding caching will have resulted in more complexity and worse performance).&lt;/li&gt;
&lt;li&gt;One implementation flaw is updating the cache first; if the update to the data source fails then some requests may have been given incorrect data.&lt;/li&gt;
&lt;li&gt;The opposite order of updating the canonical source first can have a similar problem if the process fails before the cache can be updated. (Thus leaving the cache with old data).&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;First invalidating the cache reduces the risk of a failure during a write creating an inconsistent state&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Next update the data persistence (which should be provided as an atomic operation by your vendor ;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Finally update the cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;In the worst case the canonical source will be updated without the benefit of caching&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;One might also have a "transaction" defined around both the update of the origin and cache with retries for failure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;While "cache on write" is a sometimes band-aid for NoSQL "eventual consistency" when it fails (i.e. all applications should expect that a cache will not exist or have a cache miss) the result may be data inconsistency.&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;One workaround is "check and set" (or "compare and set") where the cache will auto-invalidate if two conflicting entries are attempted.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neopythonic.blogspot.com/2011/08/compare-and-set-in-memcache.html"&gt;https://neopythonic.blogspot.com/2011/08/compare-and-set-in-memcache.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This "gotcha" could be summarized as not handling rollback&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="expiration-a-cache-full-of-stale-junk"&gt;Expiration: a cache full of stale junk&lt;/h3&gt;
&lt;p&gt;A naive implementation of caching will store every result in the cache forever...&lt;/p&gt;
&lt;p&gt;While this seems like a good idea (&lt;em&gt;"The cache application/service will just evict unused items based some algorithm"&lt;/em&gt;) it is essentially forcing your cache to be full of potentially low value information on the hope that someone else will solve the problem.&lt;/p&gt;
&lt;p&gt;Since some caching tools/framework do not set a default &lt;strong&gt;Time To Live&lt;/strong&gt; or &lt;strong&gt;Expiration&lt;/strong&gt; and in that case all of your data may quickly fill up the cache (not a bad thing per se), but then it will use whatever default or global "eviction policy" that is defined.&lt;/p&gt;
&lt;p&gt;Even O(1) can be broken by a pathological data set, and keeping every item seems like a good way to find an edge case (i.e. hash collisions and chaining).&lt;/p&gt;
&lt;p&gt;Applying business logic and empirical data to pick sane expiration values might not only improve cache performance but may protect your service from security issues or bugs due to serving really stale data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g. for security reasons, &lt;strong&gt;caching a session "forever" is a bad idea&lt;/strong&gt; as an attacker may get access to an old client cache or token and be able to impersonate a legimate user&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Issues with Expiration Set Too Long:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security concerns&lt;/li&gt;
&lt;li&gt;Lack of control/non determinism for when and what items might be evicted&lt;/li&gt;
&lt;li&gt;Poor performance, memory pressure, and possibly increased operational cost&lt;/li&gt;
&lt;li&gt;Stale data&lt;/li&gt;
&lt;li&gt;Large cache sizes may end up writing to disk (i.e. redis sync to disk may use copy on write)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Set a TTL or Expiration, whenever possible, that matches your domain&lt;/strong&gt; (i.e. for a session 1 day or 1 week).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the Time to Live is too short then the cache may have very poor efficiency (items expire before they can generate even one cache hit), meaning all of the coding and operational cost are for nothing =[&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="cold-cache-and-the-thundering-herd"&gt;Cold Cache and the Thundering Herd&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;If the cache is "cold", i.e. has not been populated, then all queries will go directly to the source&lt;/li&gt;
&lt;li&gt;If the source is not prepared for the "thundering herd" of requests (that were usually handled by the cache) then the source may become overloaded and bad things will happen&lt;/li&gt;
&lt;li&gt;It is therefore best practice to "warm the cache" by seeding data from the source into the cache before significant load events&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cold cache not only can cause problems from the source but when lot of data is written simultaneously to the cache, if the cache uses underlying disk or some other IO resource, it may temporarily overwhelm the cache (system/framework).&lt;/p&gt;
&lt;h3 id="upgrading-your-application"&gt;Upgrading your application&lt;/h3&gt;
&lt;p&gt;In a sense the cache layer is an external persistence that has to stay in sync with the application code; they are logically and semantically bound together.&lt;/p&gt;
&lt;p&gt;Modification to your application code, specifically the way it reads and writes to the cache, may return "bad" data.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cache key "admins" stored a list of usernames of admin users for the application&lt;/li&gt;
&lt;li&gt;Cache key "ausers" stored a list of usernames that begin with the letter "a"&lt;/li&gt;
&lt;li&gt;An application upgrade occurs&lt;/li&gt;
&lt;li&gt;Now the code has a bug that looks up "ausers" in order to give administrator permssions&lt;/li&gt;
&lt;li&gt;(oops)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="spanning-multiple-keys"&gt;Spanning Multiple Keys&lt;/h3&gt;
&lt;p&gt;If you need to retrieve multiple items from a cache in order to fulfill a request you may run the risk of "torn reads" where the first item retrieved from cache is logically inconsistent with the second item.&lt;/p&gt;
&lt;h2 id="tools-for-caching"&gt;Tools for caching&lt;/h2&gt;
&lt;p&gt;Much like encryption it is probably a good idea to use a time tested caching component over writing your own implementation.&lt;/p&gt;
&lt;p&gt;A local in memory cache is a tried and true way of speeding up an application but it may not provide the transparency and visibility when there are bugs.&lt;/p&gt;
&lt;p&gt;While it seems trivial to setup it will slow down your dev velocity on your high value focus area and every new feature you realize you need (automatic expiration, authentication, etc.) will create a distraction and eventual maintenance requirement.&lt;/p&gt;
&lt;p&gt;Instead there are quite a few very popular battle tested options...&lt;/p&gt;
&lt;h3 id="memcached"&gt;Memcached&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://memcached.org"&gt;http://memcached.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Memcached"&gt;https://en.wikipedia.org/wiki/Memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/_/memcached/"&gt;https://hub.docker.com/r/_/memcached/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -it --publish 11211:11211 --name mymemcached memcached:alpine&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo -e 'add foo 0 60 11\r\nhello world\r' | nc localhost 11211
telnet localhost 11211
get foo
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;VALUE foo 0 11
hello world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/memcached/memcached/wiki/Commands"&gt;https://github.com/memcached/memcached/wiki/Commands&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="redis-examples"&gt;Redis Examples&lt;/h3&gt;
&lt;p&gt;Redis has surpassed memcached in terms of speed and functionality and if you need to store more than "just a string" you should experiment with it.&lt;/p&gt;
&lt;p&gt;Besides having a cache to speed up lookups for your application or as a globally shared cache (be careful!) between multiple application serveers there can be a nice convenience as a "meta" persistence such that you can deploy a new version of your application and not lose all of the data in the cache.&lt;/p&gt;
&lt;p&gt;One thing to think about is that local redis might be far more effective than remote over the network redis.&lt;/p&gt;
&lt;p&gt;If your application can depend less shared state this is good because sharing is a nightmare for cache semantics and distributed computing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When possible avoid a globally shared cache between multiple processes or servers, or invest in learning about atomic operations&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Regardless of whether you securing your remote cache (or just depend on network isolation) you will always want to measure cache effectiveness.&lt;/p&gt;
&lt;h3 id="installing-redis"&gt;Installing Redis&lt;/h3&gt;
&lt;p&gt;The simplest way is to use Docker, &lt;a href="https://hub.docker.com/r/_/redis/"&gt;https://hub.docker.com/r/_/redis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -it --publish 6379:6379 --name myredis redis:alpine&lt;/code&gt;
&lt;code&gt;docker run -it --link myredis:redis --rm redis:alpine redis-cli -h redis -p 6379 set message hello&lt;/code&gt;
&lt;code&gt;docker run -it --link myredis:redis --rm redis:alpine redis-cli -h redis -p 6379 get message&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;run an ephemeral docker container and then non-interactively use the same docker image to set and get a string key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you prefer installing locally to your filesystem or server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redis.io/topics/quickstart"&gt;https://redis.io/topics/quickstart&lt;/a&gt; (compiling from source)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://packages.ubuntu.com/trusty/redis-server"&gt;https://packages.ubuntu.com/trusty/redis-server&lt;/a&gt; (sudo apt-get install redis-server)&lt;/p&gt;
&lt;p&gt;redis-cli -h localhost:6379 ping&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PONG , aka verify a remote server connectivity&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="interactive-redis-prompt"&gt;Interactive Redis Prompt&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;redis-cli
keys *
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="non-interactive-redis-commands"&gt;Non Interactive Redis Commands&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;redis-cli KEYS *:*
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non-interactively get all of the keys that have subkeys&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;redis-cli KEYS "session:3:*" | xargs redis-cli DEL
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non-interactively delete/remove all of the subkeys under the sub subkey&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;redis-cli KEYS session:1:*
redis-cli hgetall session:1:web
redis-cli hgetall session:1:web:presence

redis-cli KEYS session:1:*  | grep session:1:web-48
  session:1:web-48679:rooms
  session:1:web-48679:presence
  session:1:web-48679:message_ids
  session:1:web-48679

redis-cli zrange sessions:1 0 9
  1) "1:web"
  2) "1:web-48679"

redis-cli zrem sessions:1 1:web-48679
redis-cli del   session:1:web-48679:rooms
redis-cli del   session:1:web-48679:presence
redis-cli del   session:1:web-48679:message_ids
redis-cli del   session:1:web-48679
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redis.io/commands"&gt;https://redis.io/commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="redis-clients"&gt;Redis Clients&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install redis
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://redis.io/clients#python"&gt;http://redis.io/clients#python&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;redis&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrictRedis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flushall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/redis"&gt;https://pypi.python.org/pypi/redis&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt; &lt;code&gt;go get github.com/garyburd/redigo&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;"fmt"&lt;/span&gt;

    &lt;span class="s2"&gt;"github.com/garyburd/redigo/redis"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;":6379"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;defer&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"hi"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A more complete example: &lt;a href="https://bitbucket.org/johnpfeiffer/go-cache"&gt;https://bitbucket.org/johnpfeiffer/go-cache&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="varnish"&gt;Varnish&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.varnish-cache.org/about"&gt;https://www.varnish-cache.org/about&lt;/a&gt; REST web caching&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 26 Mar 2015 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2015-03-26:caching-data-and-common-gotchas-and-an-intro-to-redis-memcached-and-varnish/</guid><category>cache</category><category>caching</category><category>redis</category><category>memcached</category><category>varnish</category></item><item><title>Subunit and Subunit2JunitXML to get JUnitXML test result output from UnitTest</title><link>https://blog.john-pfeiffer.com/subunit-and-subunit2junitxml-to-get-junitxml-test-result-output-from-unittest/</link><description>
&lt;p&gt;Test results from differing systems or multiple test runs need a common format.&lt;/p&gt;
&lt;p&gt;JUnit XML is almost a de facto standard for test results given almost all major Continuous Integration products support it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/display/BAMBOO/JUnit+parsing+in+Bamboo"&gt;https://confluence.atlassian.com/display/BAMBOO/JUnit+parsing+in+Bamboo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fossology.org/projects/fossology/wiki/Junit_xml_format"&gt;http://www.fossology.org/projects/fossology/wiki/Junit_xml_format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pytest.org/latest/usage.html"&gt;http://pytest.org/latest/usage.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="setup"&gt;Setup&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pip install python-subunit junitxml&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;assuming virtuelnv and myenv/bin/activate , junitxml is a hidden dependency :(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Do not use &lt;code&gt;apt-get install subunit&lt;/code&gt; as even with 14.04 Ubuntu it has an older version does not contain timings and subunit2junitxml creates "skip" instead of "skipped"&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="example-unittest-class"&gt;Example UnitTest Class&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;john&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nd"&gt;@unittest.skipIf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'always skip'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_skip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="example-usage"&gt;Example Usage&lt;/h2&gt;
&lt;h3 id="one-liner"&gt;One Liner&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;python -m subunit.run foo | subunit2junitxml --no-passthrough --output-to test-results&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;forward = non-subunit output will be encapsulated in subunit &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="intermediate-subunit-results-file"&gt;Intermediate Subunit Results File&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;python -m subunit.run test_some_filename_with_py_truncated &amp;gt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do not use python -m subunit.run test_some_filename_with_py_truncated to stdout as it expects to have binary delimiters which screw up the console command line&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;subunit-ls &amp;lt; test-results.subunit
subunit-stats &amp;lt; test-results.subunit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;python -m subunit.run foo &amp;gt;&amp;gt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;append some more test results
&lt;code&gt;subunit-stats &amp;lt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;subunit2junitxml --no-passthrough --output-to test-results.xml &amp;lt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no passthrough does not pass/convert any extraneous non subunit data/lines to the junit xml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;testsuite&lt;/span&gt; &lt;span class="na"&gt;errors=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;failures=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;tests=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.001"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;testcase&lt;/span&gt; &lt;span class="na"&gt;classname=&lt;/span&gt;&lt;span class="s"&gt;"john.john"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"test_fail"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;failure&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"testtools.testresult.real._StringException"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;_StringException: Traceback (most recent call last):
  File "john.py", line 9, in test_fail
    self.assertTrue(False)
  File "/usr/lib/python2.7/unittest/case.py", line 424, in assertTrue
    raise self.failureException(msg)
AssertionError: False is not true

        &lt;span class="nt"&gt;&amp;lt;/failure&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/testcase&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;testcase&lt;/span&gt; &lt;span class="na"&gt;classname=&lt;/span&gt;&lt;span class="s"&gt;"john.john"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"test_skip"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;skipped&amp;gt;&lt;/span&gt;always skip&lt;span class="nt"&gt;&amp;lt;/skipped&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/testcase&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;testcase&lt;/span&gt; &lt;span class="na"&gt;classname=&lt;/span&gt;&lt;span class="s"&gt;"john.john"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"test_success"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.000"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/testsuite&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="twisted-unittesting"&gt;Twisted UnitTesting&lt;/h3&gt;
&lt;p&gt;`trial --reporter=subunit foo | subunit2junitxml --forward --output-to=junitxml-result.xml&lt;/p&gt;
&lt;h2 id="troubleshooting"&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ImportError: No module named 'junitxml'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;You may not have installed the junitxml module which subunit apparently sometimes depends on: &lt;code&gt;pip install junitxml&lt;/code&gt; &lt;em&gt;use sudo only if not using virtualenv&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AttributeError: 'AutoTimingTestResultDecorator' object has no attribute 'errors'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;This occured becaused TestSomeClass(unittest.TestCase) definition had an errors property/attribute which resulted in a namespace collision =(&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empty results like this: &amp;lt;testsuite errors="0" failures="0" name="" tests="0" time="0.003"&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;if you view/cat your results.subunit you will notice:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;test: directory.path.foobar.FooBar.test_constructor&lt;/p&gt;
&lt;p&gt;successful: directory.path.foobar.FooBar.test_constructor&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;That is old subunit output (i.e. an old version of Twisted: trial --reporter=subunit), the new version 2 uses non printable characters instead of newlines (which sometimes ruins output to console)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resolution for old subunit version converted to new subunit version&lt;/strong&gt;:&lt;blockquote&gt;
&lt;p&gt;trial --reporter=subunit foo | subunit-1to2 &amp;gt;&amp;gt; /tmp/results.subunit ; subunit2junitxml --no-passthrough --output-to test-results.xml &amp;lt; /tmp/test-results.subunit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="more-info"&gt;More Info&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tech-foo.net/making-the-most-of-subunit.html"&gt;http://www.tech-foo.net/making-the-most-of-subunit.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/python-subunit"&gt;https://pypi.python.org/pypi/python-subunit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/junitxml"&gt;https://pypi.python.org/pypi/junitxml&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://launchpad.net/subunit"&gt;https://launchpad.net/subunit&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 01 Nov 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-11-01:subunit-and-subunit2junitxml-to-get-junitxml-test-result-output-from-unittest/</guid><category>python</category><category>subunit</category><category>subunit2junitxml</category><category>unittest</category><category>testing</category></item><item><title>Virtualenv Python Interpreter from source</title><link>https://blog.john-pfeiffer.com/virtualenv-python-interpreter-from-source/</link><description>
&lt;p&gt;When building an application (including an external facing webapp or an internal test suite) it is critical to manage your dependencies.&lt;/p&gt;
&lt;p&gt;Virtualenv is a tool that keeps all the dependencies in a file system based container (and overcomes permissions based issues as well).&lt;/p&gt;
&lt;p&gt;To really isolate your application from the environment not only do you need a specific version of libraries (i.e. you know your application works fine with requests 2.4.3 and selenium 2.44) but additionally a specific version of the Python Interpreter.&lt;/p&gt;
&lt;h2 id="build-python-from-source"&gt;Build python from source&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz
tar -xf Python-2.7.8.tar.gz
cd Python-2.7.8
./configure --prefix=/home/ubuntu/python --enable-unicode=ucs4
make &amp;amp;&amp;amp; make altinstall

/home/ubuntu/python/bin/python2.7 --version
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;altinstall ensures we do not try to override the existing /usr/bin/python binary which can be important if you want python 2.7.3 and python 2.7.8 to exist side by side&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Optionally: &lt;code&gt;echo 'alias py="/home/ubuntu/python/bin/python2.7"' &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="python3-from-source"&gt;python3 from source&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://www.python.org/ftp/python/3.4.2/Python-3.4.2.tgz
tar -xf Python-3.4.2.tar.gz
cd Python-3.4.2
./configure --prefix=/opt/python3.4.2 &amp;amp;&amp;amp; make -j$(nproc) &amp;amp;&amp;amp; make altinstall
ls -ahl /usr/local/bin | grep 3.4

/usr/local/bin/pip3.4 install --upgrade virtualenv
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="if-you-mess-up-your-os-level-python"&gt;If you mess up your OS level python&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;apt-get install python3&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python3 depends on dh-python; however:
Package dh-python is not configured yet.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Look at the stack trace, reinstalling may not have put all of the helper directory and .py files in place&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;File "/usr/lib/python3.4/site.py", line 586, in &amp;lt;module&amp;gt;
ImportError: No module named '_sysconfigdata_m'

mv /usr/lib/python3.4 /usr/lib/python3.4-OLD
wget http://mirrors.kernel.org/ubuntu/pool/main/d/dh-python/dh-python_1.20140128-1ubuntu8_all.deb
dpkg -i --force-depends dh-python_1.20140128-1ubuntu8_all.deb
apt-get install python3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in my case I needed to reinstall loads of python3 stuff: &lt;code&gt;apt-get install xubuntu-destkop&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="installing-virtualenv"&gt;Installing virtualenv&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sudo pip install --upgrade virtualenv&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;getting the latest version of virtualenv as any OS packages are likely to be outdated
alternatively you can go all out and just use virtualenv locally from source&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="virtualenv-from-source"&gt;virtualenv from source&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://pypi.python.org/packages/source/v/virtualenv/virtualenv-X.X.tar.gz
tar -xf virtualenv-X.X.tar.gz
cd virtualenv-X.X
/home/ubuntu/python/bin/python2.7 virtualenv.py myvenv
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;does not require sudo and works around path or permissions requirements&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="example-usage"&gt;Example Usage&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;virtualenv myvenv&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;creates a local copy of required files like the python interpreter and its own version of pip&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;myvenv
| -- bin
     | -- activate
     | -- easy_install
     | -- pip
     | -- python
| -- include
| -- lib
     | -- python2.7
         | -- site-packages
              | -- pip
              | -- setuptools
| -- local
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;myenv/bin/pip install --upgrade requests&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no sudo was required to add locally myvenv/lib/python2.7/site-packages/requests&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;myenv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="using-virtualenv-with-a-specific-python-version-or-binary"&gt;Using virtualenv with a specific python version or binary&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virtualenv -p python3.5 venv
source venv/bin/activate
python --version
which pip
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 3.5.0+
the shortest example to use the OS python3.5 binary when creating the venv directory with the virtual environment&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virtualenv --python=/home/ubuntu/python/bin/python2.7 myvenv
myenv/bin/python
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 2.7.8
the advanced example uses a python binary that was created from source to ensure the application does not suffer when the OS has a python upgrade (or your libraries need a newer version of python than provided)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;virtualenv --version&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;just in case your version of virtualenv has a bug and needs to be upgraded first&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="activate-and-deactivate-to-update-your-environment-temporarily"&gt;activate and deactivate to update your environment temporarily&lt;/h3&gt;
&lt;p&gt;Rather than using the explicit paths (which is the most clear but cumbersome) you can override your shell Environment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/bin/python --version&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.7.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;source myenv/bin/activate&lt;/code&gt;
&lt;code&gt;python --version&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.7.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;pip install requests&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no sudo was required to add locally myvenv/lib/python2.7/site-packages/requests&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;deactivate&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="more-info"&gt;More Info&lt;/h2&gt;
&lt;p&gt;When using git make sure .gitignore contains the "myenv" directory as you do not want to store these binaries in version control.&lt;/p&gt;
&lt;p&gt;Typically Heroku or other PaaS allow you to specify a python interpreter version and library requirements in a configuration file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://virtualenv.readthedocs.org/en/latest/virtualenv.html"&gt;http://virtualenv.readthedocs.org/en/latest/virtualenv.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads"&gt;https://www.python.org/downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/common-python-tools-using-virtualenv-installing-with-pip-and-managing-packages"&gt;https://www.digitalocean.com/community/tutorials/common-python-tools-using-virtualenv-installing-with-pip-and-managing-packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 31 Oct 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-10-31:virtualenv-python-interpreter-from-source/</guid><category>python</category><category>python3</category><category>pip</category><category>virtualenv</category><category>dependency management</category></item><item><title>Xubuntu hotkey shortcuts and Zoom (also for xfce)</title><link>https://blog.john-pfeiffer.com/xubuntu-hotkey-shortcuts-and-zoom-also-for-xfce/</link><description>
&lt;p&gt;Interacting with the computer is so much faster with keyboard hotkey shortcuts and other tricks, these are applicable as of Xubuntu 14.04&lt;/p&gt;
&lt;h3 id="xubuntu-zoom-magnifier"&gt;Xubuntu Zoom (magnifier)&lt;/h3&gt;
&lt;p&gt;Alt + scrollwheel up to Zoom in &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;or on a laptop with a touchpad two finger swipe up&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alt + scrollwheel down to Zoom out&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;or on a laptop with a touchpad two finger swipe down&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="hotkey-application-shortcuts"&gt;Hotkey Application Shortcuts&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Mouse (start button) -&amp;gt; Settings -&amp;gt; Settings Manager -&amp;gt; Keyboard -&amp;gt; Application Shortcuts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Add -&amp;gt; sh -c "sleep 1 &amp;amp;&amp;amp; xset dpms force off" -&amp;gt; OK (will open another popup)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;press control + alt + q on the keyboard (the popup will go away and the hotkeys will be saved)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Double click on the command in the Command column to edit the command&lt;/p&gt;
&lt;p&gt;Double click on the hotkeys in the Shortcut column to modify the hotkey combination&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sleep 1 &amp;amp;&amp;amp; xset dpms force off        control + alt + q&lt;/li&gt;
&lt;li&gt;exo-open --launch TerminalEmulator    control + alt + t&lt;/li&gt;
&lt;li&gt;gnome-calculator          control + alt + g           &lt;/li&gt;
&lt;li&gt;/usr/bin/galculator           control + alt + g&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/usr/bin/leafpad --tab-width=4        control + alt + f  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;vi /usr/share/applications/leafpad.desktop  Exec=leafpad --tab-width=4 %f&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/usr/bin/chromium-browser     control + alt + a&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/usr/bin/filezilla            control + alt + i&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;/opt/pycharm/bin/pycharm.sh       control + alt + p&lt;/li&gt;
&lt;li&gt;xfce4-screenshooter -r            printscreen&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;select region (-f fullscreen , -w active window)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;amixer set Master 5%- -q          Alt + Down&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;amixer set Master 5%+ -q          Alt + Up&lt;/li&gt;
&lt;li&gt;xflock4               control + alt + delete&lt;/li&gt;
&lt;li&gt;retext                    control + alt + r&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;/home/ubuntu/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/xdg/menus/xfce-applications.menu&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="xfce-keyboard-shortcuts"&gt;XFCE Keyboard Shortcuts&lt;/h3&gt;
&lt;p&gt;Settings Editor -&amp;gt; xfce4-keyboard-shortcuts&lt;/p&gt;
&lt;p&gt;commands -&amp;gt; custom... New&lt;/p&gt;
&lt;p&gt;/commands/custom/&lt;control&gt;&lt;alt&gt;f
leafpad&lt;/alt&gt;&lt;/control&gt;&lt;/p&gt;
&lt;p&gt;/xfwm4/custom/&lt;control&gt;&lt;alt&gt;d&lt;/alt&gt;&lt;/control&gt;&lt;/p&gt;
&lt;p&gt;show_desktop_key&lt;/p&gt;
&lt;p&gt;/commands/custom/&lt;super&gt;e&lt;/super&gt;&lt;/p&gt;
&lt;p&gt;mousepad&lt;/p&gt;
&lt;p&gt;exo-open --launch FileManager&lt;/p&gt;
&lt;h3 id="ubuntu-keyboard-shortcuts"&gt;Ubuntu Keyboard Shortcuts&lt;/h3&gt;
&lt;p&gt;ubuntu 12.04 keyboard shortcuts&lt;/p&gt;
&lt;p&gt;System Settings -&amp;gt; Keyboard (may not be visible so type it in the search box) -&amp;gt; Shortcuts &lt;/p&gt;
&lt;p&gt;Either modify an existing shortcut (i.e. disable one that is annoying)&lt;/p&gt;
&lt;p&gt;OR Custom Shortcuts -&amp;gt; + (add a new one)&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;chromium&lt;/span&gt;
&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/usr/bin/&lt;/span&gt;&lt;span class="n"&gt;chromium&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then highlight the row (clicking on the right area where it's "disabled") and type the key combination desired to trigger the shortcut (e.g. control + alt + a)&lt;/p&gt;
&lt;p&gt;HINTS: &lt;code&gt;sudo find / -iname "*chromium*"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo which chromium-browser&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 08 Oct 2014 16:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-10-08:xubuntu-hotkey-shortcuts-and-zoom-also-for-xfce/</guid></item><item><title>Static site pelican blog with GitHub Pages and Travis CI</title><link>https://blog.john-pfeiffer.com/static-site-pelican-blog-with-github-pages-and-travis-ci/</link><description>
&lt;p&gt;Setting up a static blog site I decided to follow some great Dev Ops principles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Convention over customization&lt;/li&gt;
&lt;li&gt;Minimal infrastructure to maintain&lt;/li&gt;
&lt;li&gt;Leverage the cloud (from reliable vendors)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, being "an efficient engineer" I had the extra hard requirement of "free" =p&lt;/p&gt;
&lt;p&gt;Related articles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.john-pfeiffer.com/how-to-set-up-a-pelican-static-blog-site/"&gt;https://blog.john-pfeiffer.com/how-to-set-up-a-pelican-static-blog-site/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.john-pfeiffer.com/static-site-with-bitbucket-and-shippable-and-pelican/"&gt;https://blog.john-pfeiffer.com/static-site-with-bitbucket-and-shippable-and-pelican/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="github-setup"&gt;Github Setup&lt;/h2&gt;
&lt;p&gt;Sign in to GitHub , &lt;a href="https://github.com/login"&gt;https://github.com/login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create two new &lt;strong&gt;public repos&lt;/strong&gt;: username.github.io and source.username.github.io&lt;/p&gt;
&lt;p&gt;In source.username.github.io you will put the source markdown and theme etc. from the pelican static blog.&lt;/p&gt;
&lt;p&gt;The username.github.io will be where the output pelican transformed .html is automatically pushed by Travis CI and is conveniently served by GitHub pages. &lt;a href="https://pages.github.com/"&gt;https://pages.github.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ensure &lt;a href="https://github.com/integrations/travis-ci"&gt;https://github.com/integrations/travis-ci&lt;/a&gt; is authorized by clicking on the Configure button.&lt;/p&gt;
&lt;p&gt;(You can review the OAuth apps with &lt;a href="https://github.com/settings/applications"&gt;https://github.com/settings/applications&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;While the Integration allows Travis CI to detect commits to your repositories it does not necessarily allow it to push changes into a repository, for that we'll use an OAuth Token.&lt;/p&gt;
&lt;p&gt;Create a new personal oauth token: &lt;a href="https://github.com/settings/tokens/new"&gt;https://github.com/settings/tokens/new&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;scope should be public repos only&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;The long way is to use the GitHub WebUI -&amp;gt; Applications -&amp;gt; Personal Access Token -&amp;gt; public_repo (only)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Make sure you store the personal access token in a password manager or somewhere safe (i.e. not in plaintext in your email or published on your website ;)&lt;/p&gt;
&lt;h2 id="travis-ci-setup"&gt;Travis CI Setup&lt;/h2&gt;
&lt;p&gt;The beauty of these tightly integrated continuous integration systems is that when a commit is pushed into a specific github repo you can trigger some command execution, in this case to convert the markdown to html and then push it to a different repository. (The github pages special repository which is why it must be specifically username.github.io)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I use &lt;strong&gt;travis-ci.org&lt;/strong&gt; which is free for public repos, travis-ci.com is the paid professional service for private repositories&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Register the repository and github personal access token in TravisCI ...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;From the Travis Side also "Authorize Application" using https://travis-ci.org/profile/yourusername&lt;/li&gt;
&lt;li&gt;Find the list of repositories (you may have to first click "sync now" to see the list)&lt;/li&gt;
&lt;li&gt;Slide to ON (checkmark) for the source.username.github.io repository&lt;/li&gt;
&lt;li&gt;Click on the gear symbol next to the name of the source.username.github.io repository (should result in the URL https://travis-ci.org/username/source.username.github.io/settings)&lt;/li&gt;
&lt;li&gt;Scroll down to Environment Variables - oh but maybe this last step isn't necessary because it is in the YAML file (travis.yml&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="travis-cli-with-docker-to-encrypt-the-oauth-token"&gt;Travis CLI with Docker to encrypt the OAuth Token&lt;/h3&gt;
&lt;p&gt;You do not want the unencrypted oauth token in your yaml file or even in the logs.  Instead leverage the handy feature of encrypted environment variables by encrypting your oauth token using the Travis CLI (ruby based so...)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a special travis requirement of knowing the owner/repo , i.e. &lt;strong&gt;username/source.username.github.io&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The easy way&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --rm ruby:alpine /bin/sh
apk add --no-cache build-base
gem install travis travis-lint
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The slightly longer way with Ubuntu&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --rm ubuntu:trusty
apt-get update
apt-get install -y ruby1.9.3 build-essential
sudo gem install travis travis-lint
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The actual travis commands...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;travis help
travis pubkey -r username/source.username.github.io
travis encrypt GH_TOKEN=your_github_personal_oauth_token -r username/source.username.github.io
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Alternatively make a fake yaml file and get the exact output added by the commands:
- &lt;code&gt;touch .travis.yml&lt;/code&gt;
- &lt;code&gt;travis encrypt GH_TOKEN=your_github_personal_oauth_token -r username/source.username.github.io --add env.global&lt;/code&gt;
- &lt;code&gt;less .travis.yml&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.travis-ci.com/user/environment-variables/#Defining-encrypted-variables-in-.travis.yml"&gt;https://docs.travis-ci.com/user/environment-variables/#Defining-encrypted-variables-in-.travis.yml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.travis-ci.com/user/encryption-keys#Fetching-the-public-key-for-your-repository"&gt;https://docs.travis-ci.com/user/encryption-keys#Fetching-the-public-key-for-your-repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/travis-ci/travis.rb/issues/296"&gt;https://github.com/travis-ci/travis.rb/issues/296&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="travisyml"&gt;.travis.yml&lt;/h4&gt;
&lt;p&gt;At the root of your source.username.github.io you'll need the Travis configuration file (yaml)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"2.7"&lt;/span&gt;
&lt;span class="n"&gt;before_install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;3.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;2.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;beautifulsoup4&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;4.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/getpelican/&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;git&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="sr"&gt;/* ./&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;publishconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;quiet&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/username/username.github.io.git &amp;gt; /dev/&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;johnpfeiffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;email&lt;/span&gt; &lt;span class="s2"&gt;"me@john-pfeiffer.com"&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;"John Pfeiffer"&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rv&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;=.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s2"&gt;"Travis build $TRAVIS_BUILD_NUMBER"&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fq&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="sr"&gt;/dev/&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;"Done\n"&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="n"&gt;global&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
     &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;example126xOnLRCabGeZrxMUne9W0l5LTbN&lt;/span&gt;&lt;span class="sr"&gt;/hR5Wnq0P3nwrL4slWJ3rFAoi/wqivbINwZGOkU7e/OPVvjDCRivAIxeti61xtnKgyFL6rTvc7u5vAjCF6m4qx6+bXOx9YbXCEUdJmBd25qGBy3PIg4rt/&lt;/span&gt;&lt;span class="mi"&gt;524&lt;/span&gt;&lt;span class="n"&gt;DOBZhZ9t4glt8Qo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Use a python2.7 based travis builder with the pelican and its dependencies and the encrypted oauth token&lt;/li&gt;
&lt;li&gt;Also helpful: &lt;a href="https://lint.travis-ci.org"&gt;https://lint.travis-ci.org&lt;/a&gt; (validate .travis.yml) or &lt;code&gt;gem install travis-lint&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The "target" repository is manually cloned using the encrypted oauth token, and the pelican output is then pushed to it.  No humans involved!&lt;/p&gt;
&lt;h2 id="using-a-cname-to-have-your-own-custom-domain-point-to-the-github-pages-pelican-blog"&gt;Using a CNAME to have your own custom domain point to the GitHub Pages Pelican Blog&lt;/h2&gt;
&lt;p&gt;To ensure maximum coolness (and SEO points) make sure you have DNS control over the domain you have in mind so you can redirect it to your new static pelican-based blog (hosted for free by github pages).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Basically in the GitHub repo settings of source.username.github.io choose "Custom domain"&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then add a CNAME with your DNS provider (i.e. from Namecheap or Cloudflare I pointed blog.john-pfeiffer.com to johnpfeiffer.github.io)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/"&gt;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/adding-or-removing-a-custom-domain-for-your-github-pages-site/"&gt;https://help.github.com/articles/adding-or-removing-a-custom-domain-for-your-github-pages-site/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/setting-up-a-custom-subdomain/"&gt;https://help.github.com/articles/setting-up-a-custom-subdomain/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 15 Sep 2014 04:04:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-09-15:static-site-pelican-blog-with-github-pages-and-travis-ci/</guid><category>static site</category><category>pelican blog</category><category>github pages</category><category>travis ci</category></item><item><title>Mobile edit cloud execution of python code</title><link>https://blog.john-pfeiffer.com/mobile-edit-cloud-execution-of-python-code/</link><description>&lt;p&gt;Haven't you just wanted to work through a coding kata &lt;a href="http://codekata.com"&gt;http://codekata.com&lt;/a&gt; or puzzle on your phone?&lt;/p&gt;
&lt;p&gt;Python is a great language for getting stuff done, and while there are some mobile apps often they are limited by the platform (eg ios sans file system).&lt;/p&gt;
&lt;p&gt;Using the link from a Dropbox text file and a linode server (could be openshift red hat cloud?)...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start running the script on the remote server that waits for new code to execute &lt;code&gt;python myflaskapp.py &amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I can edit using Nocs &lt;/li&gt;
&lt;li&gt;Nocs syncs from iOS to Dropbox&lt;/li&gt;
&lt;li&gt;hitting a URL in my browser &lt;ul&gt;
&lt;li&gt;the python script downloads the latest version of the code (using shell to curl as Dropbox use javascript to authorize and return a link to the latest version) &lt;/li&gt;
&lt;li&gt;executes using the remote python environment &lt;/li&gt;
&lt;li&gt;returns the output&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note! This may be dangerous as hackers could exploit to run arbitrary code, use at your own risk.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;*Also, clearly, downloading from Dropbox using curl is a hack with no guarantee of future support =]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PIPE&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/mysecreturl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_and_run&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;exercises.py&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/www/mystuff&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;urlpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.dropbox.com/s/ancdefgrandom/exercises.py?dl=0&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;curl --silent --location --insecure --output exercises.py https://www.dropbox.com/s/ancdefgrandom/exercises.py?dl=0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      
      &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use_reloader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="flask-application-on-openshift"&gt;Flask Application on OpenShift&lt;/h3&gt;
&lt;p&gt;git clone https://github.com/openshift/flask-example.git&lt;/p&gt;
&lt;p&gt;Use the OpenShift WebUI to create an application&lt;/p&gt;
&lt;p&gt;On the right of your application the WebUI has a note on how to clone the default repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone ssh://12345random@appname-domain.rhcloud.com/~/git/appname.git/
cd appname
git remote add upstream -m master git://github.com/openshift/flask-example.git
git pull -s recursive -X theirs upstream master
git push
cd wsgi/
virtualenv venv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;vi myflaskapp.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PIPE&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;


&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;


&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/mysecreturl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_and_run&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/lib/openshift/12345appid/app-root/data/exercises.py&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;urlpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.dropbox.com/s/12345random/exercises.py?dl=0&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;curl --silent --location --insecure --output &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;urlpath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="c1"&gt;# output = Popen([&amp;quot;touch&amp;quot;,path], stdout=PIPE).communicate()[0]&lt;/span&gt;
  &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="more-info"&gt;More Info&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.openshift.com/blogs/beginners-guide-to-writing-flask-apps-on-openshift"&gt;https://www.openshift.com/blogs/beginners-guide-to-writing-flask-apps-on-openshift&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 07 Sep 2014 21:37:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-09-07:mobile-edit-cloud-execution-of-python-code/</guid><category>python</category><category>flask</category><category>openshift</category></item><item><title>Fix Fn screen brightness Ubuntu 14.04 intel graphics</title><link>https://blog.john-pfeiffer.com/fix-fn-screen-brightness-ubuntu-1404-intel-graphics/</link><description>&lt;p&gt;I discovered post upgrade that Ubuntu 14.04 has a glaring bug with the Intel graphics card (which was working fine in 12.04), the Fn key no longer controlled the brightness.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo su&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls /sys/class/backlight&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if it lists intel_backlight then this solution of adding the following should work for you too...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi /usr/share/X11/xorg.conf.d/20-intel.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Section &amp;quot;Device&amp;quot;
    Identifier  &amp;quot;card0&amp;quot;
    Driver      &amp;quot;intel&amp;quot;
    Option      &amp;quot;Backlight&amp;quot;  &amp;quot;intel_backlight&amp;quot;
    BusID       &amp;quot;PCI:0:2:0&amp;quot;
EndSection
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Log out and log back in, function keys should now control the brightness again (no more glaring bug!)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 26 Aug 2014 22:36:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-08-26:fix-fn-screen-brightness-ubuntu-1404-intel-graphics/</guid></item><item><title>Ubuntu Bootable USB, apt-get and dpkg, and the best packages to install</title><link>https://blog.john-pfeiffer.com/ubuntu-bootable-usb-apt-get-and-dpkg-and-the-best-packages-to-install/</link><description>
&lt;p&gt;If you have a modern computer (BIOS) that can boot from USB it is well worth it since having the latest Ubuntu ISO on DVD tends to pile up extra plastic.&lt;/p&gt;
&lt;p&gt;After setting up the Operating System you will need to install some software (packages).&lt;/p&gt;
&lt;p&gt;And if you have an SSD drive you will want to optimize your OS to not wear it out unnecessarily.&lt;/p&gt;
&lt;h2 id="write-an-iso-to-usb"&gt;Write an ISO to usb&lt;/h2&gt;
&lt;p&gt;Be very careful with &lt;strong&gt;sudo&lt;/strong&gt; or using the &lt;strong&gt;root&lt;/strong&gt; user as this can permanently remove files or render your operating system inoperable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;dd is a low level command that writes bytes directly without any prompts&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo su
fdisk -l
umount /dev/sdc1

dd if=/home/ubuntu/Desktop/ubuntu-14.04.1-server-amd64.iso of=/dev/sdc

1171456+0 records in
1171456+0 records out
599785472 bytes (600 MB) copied, 260.364 s, 2.3 MB/s
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;fdisk allows you to see the device (e.g. an 8GB usb stick)&lt;/p&gt;
&lt;p&gt;dd will overwrite from the "infile" to the "outfile" so make sure you get that target location correct!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="ubuntu-recovery-mode"&gt;Ubuntu Recovery mode&lt;/h2&gt;
&lt;p&gt;(which is access to a single root user command line)&lt;/p&gt;
&lt;p&gt;boot in recovery mode by using the arrow keys during boot (down to select Recovery)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;mount networking &lt;/li&gt;
&lt;li&gt;root shell&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mount -o rw,remount /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;mount --all # might be needed too&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now you can fix grub or /etc/passwd or free up some hard drive space&lt;/p&gt;
&lt;h2 id="package-management-with-apt-commands"&gt;package management with apt commands&lt;/h2&gt;
&lt;p&gt;Debian has precompiled packages of binaries and libraries that can very easily be installed via the command line (or GUI) using Advanced Packaging Tool (APT) &lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.debian.org/Apt"&gt;https://wiki.debian.org/Apt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since apt is a wonderful wrapper/manager of dpkg when you're in doubt most likely there is a dpkg command that will do what you need but it may take a lot of research and 8 parameters to do it ;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Advanced_Packaging_Tool"&gt;https://en.wikipedia.org/wiki/Advanced_Packaging_Tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hint: Ubuntu is based upon Debian&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="apt-cache"&gt;apt-cache&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-cache search ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;to find packages with the name ssh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-cache search ssh | grep server
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;if there are too many results pipe to grep to filter down the results&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-cache show ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;to show the details about a specific package&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-cache showpkg ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;to show more general info about a package&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-cache depends ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;to show the package dependencies&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="force-apt-to-use-ipv4-to-avoid-lengthy-ipv6-timeouts"&gt;Force Apt to use  IPv4 to avoid lengthy IPv6 timeouts&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt; &lt;span class="nt"&gt;apt-get&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="nt"&gt;Acquire&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;ForceIPv4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;update&lt;/span&gt;
&lt;span class="nt"&gt;sudo&lt;/span&gt; &lt;span class="nt"&gt;apt-get&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="nt"&gt;Acquire&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;ForceIPv4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;vim&lt;/span&gt;
&lt;span class="nt"&gt;sudo&lt;/span&gt; &lt;span class="nt"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Acquire::ForceIPv4 "true";'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;apt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;99force-ipv4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;update, then install vim, then save the persistent config to always use ipv4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="apt-get"&gt;apt-get&lt;/h3&gt;
&lt;h4 id="updating-package-indices-with-apt-get-update"&gt;updating package indices with apt-get update&lt;/h4&gt;
&lt;p&gt;Apt contains indices that need to be updated from the upstream repositories&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/apt/sources.list&lt;/strong&gt; is the main ubuntu repository listing&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/apt/sources.list.d&lt;/strong&gt; is the directory where additional apt repositories can be added (usually from ppa or 3rd party vendors)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.debian.org/mirror/mirrors_full"&gt;http://www.debian.org/mirror/mirrors_full&lt;/a&gt; for the Debian package mirror sites&lt;/li&gt;
&lt;li&gt;&lt;a href="http://packages.ubuntu.com/"&gt;http://packages.ubuntu.com/&lt;/a&gt; for a web ui based search of package details&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;apt-get clean&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/var/cache/apt/archive folder keeps a copy of the downloaded .deb files
you will need an internet connection to download again any removed .deb files&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -rf /var/lib/apt/lists/*
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove the indices in case they have gotten orphaned or corrupted, needs to be followed by apt-get update to repopulate&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get update
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;use /etc/apt/sources.list and /etc/apt/sources.list.d to update the package indices to determine if there are newer packages available&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;file:///file_store/archive&lt;/span&gt; &lt;span class="kp"&gt;trusty&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;universe&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a snippet for how to configure apt to use a local repository (e.g. use reprepro to make a local mirror)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/example.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;update only a single repository&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-cache dump
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;shows all installed packages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To install netselect, a debian application that allows you to choose the "best" package mirror:
    sudo apt-get install netselect netselect-apt
    netselect-apt&lt;/p&gt;
&lt;h4 id="installing-and-force-installing-with-apt"&gt;installing and force installing with apt&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install --dry-run byobu
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;simulate what will happen but do not change the system&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install --download-only byobu
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;packages are retrieved but not installed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install --yes byobu
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;install and pre-emptively answer yes to the yes/no prompt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install --reinstall byobu
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;reinstall even if the package is installed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install --fix-broken byobu
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;attempt to fix broken dependencies&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install --reinstall byobu
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the most non interactive way to force install a package where all prompts are auto answered such that old configuration files are maintained&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://manpages.ubuntu.com/manpages/precise/man8/apt-get.8.html"&gt;http://manpages.ubuntu.com/manpages/precise/man8/apt-get.8.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://help.ubuntu.com/community/AptGet/Howto"&gt;https://help.ubuntu.com/community/AptGet/Howto&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;apt-get upgrade&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;upgrades to the latest version of existing packages, no new packages (so if the new version has new dependencies nothing happens)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;apt-get dist-upgrade&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;upgrades to the latest version of existing packages and will try to grab any new dependencies as required&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;apt-get install update-manager-core&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;newer versions of ubuntu require a helper utility, &lt;a href="http://packages.ubuntu.com/trusty/admin/update-manager-core"&gt;http://packages.ubuntu.com/trusty/admin/update-manager-core&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before you do a major upgrade of Ubuntu you should bring all packages to the latest version... (apt-get update &amp;amp;&amp;amp; apt-get dist-upgrade)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;do-release-upgrade -f DistUpgradeViewNonInteractive
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;non interactive upgrade to a new version of Ubuntu (hold onto your seat!), often requires a reboot after for kernel upgrades&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsb_release -a
cat /etc/lsb_release
uname -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;verify that your system has been upgraded (kernel upgrades often require a reboot to become loaded in memory))&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="removing-packages-with-apt"&gt;removing packages with apt&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get remove wget
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;uninstall a package&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get purge wget
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove the package and all files from disk&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get autoremove
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;attempt to clean up packages that are no longer needed (i.e. old versions of dependencies or unused kernel images)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="apt-key"&gt;apt-key&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-key update
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;if apt errors: WARNING: The following packages cannot be authenticated&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="dpkg-really-manages-everything"&gt;dpkg really manages everything&lt;/h2&gt;
&lt;p&gt;Underneath apt is dpkg (and similar tools) which actually does all of the hard work but are sometimes hard to use =)&lt;/p&gt;
&lt;h3 id="listing-and-finding-packages-with-dpkg"&gt;listing and finding packages with dpkg&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -l
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists all of the packages installed (name, version, architecture, description)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -l | grep foobar
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists all of the packages but filters for something specific (i.e. a prefix or partial match)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -l packagename &amp;gt; myoutput.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists whether a specific package is installed or not and redirects the output to a file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg --get-selections
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists the package names and the state (installed, uninstalled, etc.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;dpkg-query -f '${binary:Package}\n' -W&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;lists just the package names, slightly more convenient is &lt;code&gt;apt-cache pkgnames | sort&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -S stdio.h
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find a package that contains a specific file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -c packagename.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list the contents of the .deb file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://wiki.debian.org/ListInstalledPackages"&gt;https://wiki.debian.org/ListInstalledPackages&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;you can also manually inspect /var/lib/apt and /var/lib/dpkg&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="dpkg-logs"&gt;dpkg logs&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi /var/log/dpkg.log
tail -f /var/log/dpkg.log
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;in conjunction with &lt;code&gt;apt-get upgrade -y&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="installing-and-removing-packages-with-dpkg"&gt;Installing and removing packages with dpkg&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -i packagename.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;install the .deb file, &lt;code&gt;dpkg -i *.deb&lt;/code&gt; will install all of the .deb files in the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -i --force depends packagename.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;installs and turns a dependency error into a warning (i.e. libc6 circular dependency)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -L packagename
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list the locations of the installed files&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -s packagename
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;shows if the package is installed and information about it, &lt;code&gt;dpkg -s | grep Version&lt;/code&gt;
or &lt;code&gt;dpkg -l | awk '$2=="packagename" { print $3 }'&lt;/code&gt; to only print the version (if it exists)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -r packagename.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove a package but leave the configuration files, also known as &lt;code&gt;dpkg --remove&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg --purge
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove a package and delete all configuration files (even if they have been customized by the user)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg --force-help
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="to-manually-install-a-package-forcefully-if-synaptic-and-apt-get-are-stuck"&gt;to manually install a package (forcefully if synaptic and apt-get are stuck)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mv /var/lib/dpkg/info/postgresql.* /tmp/
dpkg --remove --force-remove-reinstreq postgresql-9.1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;do the same for postgresql-common and other packages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;apt-get install postgresql-9.1
apt-get purge postgresql-9.1 postgresql-client-9.1 postgresql-common postgresql-client-common&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;in order to have apt-get remove all of the binaries&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="best-ubuntu-packages"&gt;Best Ubuntu Packages&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;as of Utopic 14.10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update
sudo apt-get install -y byobu build-essential elinks unzip unrar vim wget curl ntp rcconf dialog git-core 
sudo apt-get install -y python-pip &amp;amp;&amp;amp; sudo pip install --upgrade pip
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;pip is the package manager for python packages (different from the debian OS packages) so useful if you do any python development or run python applications
An alternative to the usually stale OS pip version is to use the not entirely secure grab the .py file from the internet and run it...
wget -qO- https://bootstrap.pypa.io/get-pip.py | sudo python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;openssh-server libssl = the secure remote shell service and encryption dependency &lt;a href="http://packages.ubuntu.com/search?keywords=openssh-server"&gt;http://packages.ubuntu.com/search?keywords=openssh-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;build-essential = tools for compiling and building debian packages &lt;a href="http://packages.ubuntu.com/lucid/build-essential"&gt;http://packages.ubuntu.com/lucid/build-essential&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;byobu = console terminal multi screen (survives network disconnects) &lt;a href="http://byobu.co"&gt;http://byobu.co&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wget and curl = utilities to download files over the network&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;elinks = cli browser (just in case your GUI dies and you need to research) &lt;a href="http://kmandla.wordpress.com/2011/01/13/a-comparison-of-text-based-browsers"&gt;http://kmandla.wordpress.com/2011/01/13/a-comparison-of-text-based-browsers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;unzip and unrar = utilities to decompress compressed things&lt;/li&gt;
&lt;li&gt;ntp = network time protocol client daemon to keep your clock in sync&lt;/li&gt;
&lt;li&gt;rcconf = easier way to manage what services start at boot &lt;a href="https://packages.debian.org/jessie/rcconf"&gt;https://packages.debian.org/jessie/rcconf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dialog = user friendly dialog boxes for shell scripts (dependency for rcconf)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git-core = the distributed version control software that is eating the developer world&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;python-setuptools = Sometimes required to install pip  &lt;a href="http://pythonhosted.org/setuptools"&gt;http://pythonhosted.org/setuptools&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nano = a simple text editor (much easier than vi/vim for just writing new text)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sudo apt-get install openconnect network-manager-openconnect network-manager-openconnect-gnome&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;openconnect = opensource compatible with cisco anyconnect vpn &lt;a href="https://en.wikipedia.org/wiki/OpenConnect"&gt;https://en.wikipedia.org/wiki/OpenConnect&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;openvpn = opensource vpn client &lt;a href="https://openvpn.net"&gt;https://openvpn.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sudo apt-get install openjdk-8-jre&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;for just the java runtime (thank goodness not Oracle Sun)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jdk = java development kit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;iced-tea-7-plugin = open source java 7 support for browsers&lt;/li&gt;
&lt;li&gt;icedtea = open java (plugin = browser java)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;openjdk-8-jdk&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;for the full java development kit - needed for some packages to run correctly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="gui"&gt;GUI&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Xubuntu Desktop&lt;/strong&gt; is my preferred "lightweight" GUI for Ubuntu: &lt;a href="http://xubuntu.org"&gt;http://xubuntu.org&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install -y chromium-browser pepperflashplugin-nonfree geany keepassx xdiskusage
apt-get install -y arandr rdesktop
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;chromium-browser = opensource branch/clone of google chrome browser, &lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;maybe srware.net with privacy badger and adblock plus (fanboy block lists) too?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;geany = tabbed text notepad (with syntax highlighting)&lt;/li&gt;
&lt;li&gt;keepassx = secure password inventory (has a mini version for iphone as well)&lt;/li&gt;
&lt;li&gt;xdiskusage = graphical view of disk space usage by folder and file&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;arandr = multi display gui config&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rdesktop = RDP client&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grdesktop = gnome UI for rdesktop&lt;/p&gt;
&lt;p&gt;sudo echo "autologin-user=ubuntu" &amp;gt;&amp;gt;  /etc/lightdm/lightdm.conf.d/10-xubuntu.conf&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Better yet use the UI and just choose auto login ;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TODO: &lt;em&gt;Disable guest user&lt;/em&gt;, *Disable crash reports: apport *&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;imagemagick = image transformation utility &lt;a href="https://en.wikipedia.org/wiki/ImageMagick"&gt;https://en.wikipedia.org/wiki/ImageMagick&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;convert -resize 50% source.png dest.jpg ; convert -rotate 90 source.jpg dest.jpg&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dropbox = cloud file storage&lt;/p&gt;
&lt;p&gt;deb http://linux.dropbox.com/ubuntu utopic main
sudo apt-key adv --keyserver pgp.mit.edu --recv-keys 5044912E&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://downloads.hipchat.com/linux/apt&lt;/span&gt; &lt;span class="kp"&gt;stable&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;span class="err"&gt;wget&lt;/span&gt; &lt;span class="err"&gt;-O&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt; &lt;span class="err"&gt;https://www.hipchat.com/keys/hipchat-linux.key&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;apt-key&lt;/span&gt; &lt;span class="err"&gt;add&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;apt-get update; apt-get install dropbox hipchat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;filezilla = file transfer protocol client (that supports sftp = secure ssh ftp)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="music-and-video"&gt;music and video&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ubuntu-restricted-extras vlc
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;vlc = movies/music&lt;/li&gt;
&lt;li&gt;ubuntu-restricted-extras = all of the encumbered with licenses packages to generally just watch or listen to stuff :(&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="google-music-manager"&gt;Google Music Manager&lt;/h4&gt;
&lt;p&gt;If you are you using the web based &lt;a href="https://play.google.com/music/listen#/all"&gt;https://play.google.com/music/listen#/all&lt;/a&gt; then you probably want the uploader/downloader:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://dl.google.com/linux/direct/google-musicmanager-beta_current_amd64.deb
dpkg -i google-musicmanager-beta_current_amd64.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="spotify-in-ubuntu-1504"&gt;spotify in ubuntu 15.04&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.spotify.com/us/download/linux/"&gt;https://www.spotify.com/us/download/linux/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys D2C19886
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;trust the spotify repository&lt;/p&gt;
&lt;p&gt;libnss3-1d : Depends: libnss3 (= 2:3.17.4-0ubuntu1) but 2:3.19.2-0ubuntu15.04.1 is to be installed
spotify is behind the times or only wants to support 14.04 and LTS releases =(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://launchpad.net/ubuntu/vivid/amd64/libnss3/2:3.17.4-0ubuntu1"&gt;https://launchpad.net/ubuntu/vivid/amd64/libnss3/2:3.17.4-0ubuntu1&lt;/a&gt;
&lt;a href="https://launchpad.net/ubuntu/wily/amd64/libnss3/2:3.19.2.1-0ubuntu0.15.10.1"&gt;https://launchpad.net/ubuntu/wily/amd64/libnss3/2:3.19.2.1-0ubuntu0.15.10.1&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -i libnss3_3.17.4-0ubuntu1_amd64.deb
apt-get install spotify-client
apt-get -f install

spotify: error while loading shared libraries: libgcrypt.so.11: cannot open shared object file: No such file or directory
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;what fun, the internet explains 15.04 (vivid) and 15.10 (wily) use the new libgcrypt20 so...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://launchpad.net/ubuntu/+archive/primary/+files/libgcrypt11_1.5.3-2ubuntu4.2_amd64.deb
dpkg -i libgcrypt*.deb
apt-get install --reinstall spotify-client
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="pithos-is-an-open-source-pandora-client"&gt;pithos is an open source pandora client&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo add-apt-repository ppa:pithos/ppa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install pithos&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="more-codecs-and-dvd-playback"&gt;more codecs and DVD playback&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ffmpeg gstreamer0.10-plugins-bad lame libavcodec-extra
sudo /usr/share/doc/libdvdread4/install-css.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="packages-you-will-probably-want-to-remove"&gt;Packages you will probably want to remove&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get remove brltty
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;unless you are using braille on your computer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="other-useful-packages"&gt;Other Useful Packages&lt;/h2&gt;
&lt;h3 id="heroku-cli"&gt;Heroku CLI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;deb http://toolbelt.heroku.com/ubuntu ./&lt;/li&gt;
&lt;li&gt;wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add -&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get install -y heroku-toolbelt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ruby-and-openshift-cli"&gt;Ruby and OpenShift CLI&lt;/h3&gt;
&lt;p&gt;https://gorails.com/setup/ubuntu/14.04&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 \&lt;/code&gt;
&lt;code&gt;libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libgdbm-dev libncurses5-dev automake libtool bison libffi-dev&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;source ~/.rvm/scripts/rvm
echo "source ~/.rvm/scripts/rvm" &amp;gt;&amp;gt; ~/.bashrc
rvm install 2.1.2
rvm use 2.1.2 --default
ruby -v
echo "gem: --no-ri --no-rdoc" &amp;gt; ~/.gemrc

gem install rhc
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;red hat client for openshift&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="ssd-optimization"&gt;SSD Optimization&lt;/h2&gt;
&lt;h3 id="write-logs-to-tmpfs-instead-of-disk"&gt;Write Logs to tmpfs instead of disk&lt;/h3&gt;
&lt;p&gt;tmpfs ram (memory) virtual disk will just use memory (which I guess is overly abundant now) instead of wearing out the Solid State Drive&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/fstab


# /etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;
# / was on /dev/sda2 during installation
UUID=b7577587-22db-42f6-95d1-264a24f9dd90 /               ext4    noatime,errors=remount-ro 0       1
tmpfs    /tmp        tmpfs    defaults,noatime    0  0
tmpfs    /var/tmp    tmpfs    defaults,noatime    0  0
tmpfs    /var/log/apparmor    tmpfs    defaults,noatime    0  0
tmpfs    /var/log/apt    tmpfs    defaults,noatime    0  0
tmpfs    /var/log/cups    tmpfs    defaults,noatime    0  0
tmpfs    /var/log/dist-upgrade tmpfs    defaults,noatime    0  0
tmpfs    /var/log/installer tmpfs    defaults,noatime    0  0
tmpfs    /var/log/lightdm  tmpfs    defaults,noatime    0  0
tmpfs    /var/log/unattended-upgrades tmpfs    defaults,noatime    0  0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the tmpfs disks created in my fstab were discovered through trial and error and will differ based on what applications are actually running (Xubuntu!)&lt;/p&gt;
&lt;p&gt;an older simpler example causes errors as applications create /var/log/SOMETHING directories during installation and then expect them on boot every time later&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/dev/sda1 /     ext4    noatime,errors=remount-ro 0 1

tmpfs    /tmp        tmpfs    defaults,noatime    0  0
tmpfs    /var/tmp    tmpfs    defaults,noatime    0  0
tmpfs    /var/log    tmpfs    defaults,noatime    0  0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;here is a list of directories that probably need to be generated
&lt;em&gt;for dir in apparmor apt cups dist-upgrade fsck gdm installer news samba unattended-upgrades ; do&lt;/em&gt;
&lt;em&gt;  mkdir -p /var/log/$dir&lt;/em&gt;
&lt;em&gt;done&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="customize-grub-boot-options"&gt;Customize Grub Boot Options&lt;/h3&gt;
&lt;p&gt;I prefer seeing my bootup screens so I remove some but add the SSD enhancement&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi nano /etc/default/grub
    GRUB_TIMEOUT=1
    #   GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
    GRUB_CMDLINE_LINUX_DEFAULT="elevator=noop"

sudo update-grub2
cat /boot/grub/grub.cfg
    root=UUID=f0ae2c59-83d2-42e7-81c4-2e870b6b255d ro quiet splash elevator=noop
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only prompt for 1 second
remove the quiet so the console displays all of the boot information
the noop scheduler is a simple FIFO scheduler which is usually optimal for SSD or virtual machines &lt;a href="https://en.wikipedia.org/wiki/Noop_scheduler"&gt;https://en.wikipedia.org/wiki/Noop_scheduler&lt;/a&gt; since any OS attempt at optimization may cnoflict with more accurate information from the Disk or Hypervisor
update-grub2 is to apply the update &lt;a href="https://help.ubuntu.com/community/Grub2"&gt;https://help.ubuntu.com/community/Grub2&lt;/a&gt;
manually verify the changes by examining all of the boot menu options (i.e. find the noop line)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /sys/block/sda/queue/scheduler
    [noop] deadline cfq
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list what schedulers are available , &lt;a href="http://www.linuxhowtos.org/System/iosched.htm"&gt;http://www.linuxhowtos.org/System/iosched.htm&lt;/a&gt;, note that noop is selected&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: the above command needs to be run as root, but sudo does not work with it on my system. Run sudo -i if you have a problem to get a root prompt.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="good-digital-ocean-droplet-tips"&gt;Good Digital Ocean Droplet Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;useradd -s /bin/bash -m NEWUSERNAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;usermod -a -G admin NEWUSERNAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;passwd NEWUSERNAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;mkdir -p /home/NEWUSERNAME/.ssh&lt;/li&gt;
&lt;li&gt;vi /home/NEWUSERNAME/.ssh/authorized_keys&lt;/li&gt;
&lt;li&gt;visudo
    &lt;code&gt;#includedir /etc/sudoers.d&lt;/code&gt;
&lt;code&gt;NEWUSERNAME    ALL = (ALL) NOPASSWD: ALL&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;of course set the timezone to UTC and use network time protocol&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;dpkg-reconfigure tzdata&lt;/li&gt;
&lt;li&gt;apt-get update&lt;/li&gt;
&lt;li&gt;apt-get install byobu vim ntp&lt;/li&gt;
&lt;li&gt;Secure SSH by removing root login with vi /etc/ssh/sshd_config: &lt;code&gt;PermitRootLogin no&lt;/code&gt; , &lt;code&gt;PasswordAuthentication no&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optionally change the SSH port to something different from the default: &lt;code&gt;Port 22&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;/etc/init.d/ssh restart&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Use the Digital Ocean Web UI to poweroff and take a snapshot of the fresh system&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 20 Aug 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-08-20:ubuntu-bootable-usb-apt-get-and-dpkg-and-the-best-packages-to-install/</guid><category>linux</category><category>ubuntu</category><category>xubuntu</category><category>usb boot</category><category>ubuntu recovery</category><category>dpkg</category><category>apt-get</category><category>dd</category></item><item><title>ListJS: Sort, Filters, Search and more for HTML lists and tables in Javascript</title><link>https://blog.john-pfeiffer.com/listjs-sort-filters-search-and-more-for-html-lists-and-tables-in-javascript/</link><description>
&lt;p&gt;Self contained javascript library to make lists of information awesome!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://listjs.com/docs"&gt;http://listjs.com/docs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="listjshtml"&gt;listjs.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;DOCTYPE&lt;/span&gt; &lt;span class="s s-Atom"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;script&lt;/span&gt; &lt;span class="s s-Atom"&gt;src=&lt;/span&gt;&lt;span class="s2"&gt;"http://listjs.com/no-cdn/list.js"&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;gt;&amp;lt;/script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;style&lt;/span&gt; &lt;span class="s s-Atom"&gt;type=&lt;/span&gt;&lt;span class="s2"&gt;"text/css"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;list&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;inset&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="s s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;avatar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="s s-Atom"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="c1"&gt;%;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="s s-Atom"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="s s-Atom"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="s s-Atom"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="s s-Atom"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;#ccc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nn"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="s s-Atom"&gt;a8e0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s s-Atom"&gt;b8aba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;asc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s s-Atom"&gt;px&lt;/span&gt; &lt;span class="s s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="s s-Atom"&gt;&amp;lt;/style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;



&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;meta&lt;/span&gt; &lt;span class="s s-Atom"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s s-Atom"&gt;utf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="s s-Atom"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Existing&lt;/span&gt; &lt;span class="s s-Atom"&gt;list&amp;lt;/title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="s s-Atom"&gt;&amp;lt;/head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="s s-Atom"&gt;id=&lt;/span&gt;&lt;span class="s2"&gt;"users"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;input&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"search"&lt;/span&gt; &lt;span class="s s-Atom"&gt;placeholder=&lt;/span&gt;&lt;span class="s2"&gt;"Search"&lt;/span&gt; &lt;span class="s s-Atom"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;button&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"sort"&lt;/span&gt; &lt;span class="s s-Atom"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;sort=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nv"&gt;Sort&lt;/span&gt; &lt;span class="s s-Atom"&gt;by&lt;/span&gt; &lt;span class="s s-Atom"&gt;name&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;&amp;lt;/button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;ul&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"list"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Jonny&lt;/span&gt; &lt;span class="nv"&gt;Stromberg&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;p&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1986&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Jonas&lt;/span&gt; &lt;span class="nv"&gt;Arnklint&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;p&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1985&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Martina&lt;/span&gt; &lt;span class="nv"&gt;Elm&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;p&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1986&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Gustaf&lt;/span&gt; &lt;span class="nv"&gt;Lindqvist&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;p&lt;/span&gt; &lt;span class="s s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1983&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="s s-Atom"&gt;&amp;lt;/ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="s s-Atom"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="o"&gt;div&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;script&lt;/span&gt; &lt;span class="s s-Atom"&gt;type=&lt;/span&gt;&lt;span class="s2"&gt;"text/javascript"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s s-Atom"&gt;var&lt;/span&gt; &lt;span class="s s-Atom"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s s-Atom"&gt;valueNames:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s s-Atom"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;'born'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="s s-Atom"&gt;var&lt;/span&gt; &lt;span class="s s-Atom"&gt;userList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;'users'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="s s-Atom"&gt;&amp;lt;/script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="s s-Atom"&gt;&amp;lt;/body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="s s-Atom"&gt;&amp;lt;/html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="listjs-with-pelican-and-jinja2"&gt;ListJS with Pelican and Jinja2&lt;/h3&gt;
&lt;p&gt;ListJS with the Pelican elegant theme to list all the articles sortable/searchable, default pagination for ListJS set to 1000 items&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{% extends "base.html" %}

{% block title %}
All Categories · {{ super() }}
{% endblock title %}

{% block head_description %}
All categories of the {{ SITENAME|striptags }} blog. 
{% endblock head_description %}
{% block content %}


&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://listjs.com/no-cdn/list.js"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mh"&gt;#ccc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#28a8e0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;#1b8aba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;-10&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;-5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;asc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="mh"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;-5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="mh"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;


&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"article-list"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sort by date&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sort by title&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"margin-top: 10px; height: 16px;"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    {% for category, articles in categories %}
        {% for article in articles %}
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"padding-right: 10px;"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="na"&gt;pubdate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"pubdate"&lt;/span&gt; &lt;span class="na"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ article.date.isoformat() }}"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ article.locale_date }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;time&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ SITEURL }}/{{ article.url }}"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ article.title }} {%if article.subtitle %}
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;small&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; {{ article.subtitle }} &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;small&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; {% endif %}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        {% endfor %}
    {% endfor %}
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;


{% endblock content %}
{% block script %}
{{ super() }}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;  &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"javascript"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;uncollapse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;collapse&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"JavaScript"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;uncollapse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;valueNames&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hackerList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'article-list'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;hackerList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'date'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

{% endblock script %}
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 08 Aug 2014 21:37:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-08-08:listjs-sort-filters-search-and-more-for-html-lists-and-tables-in-javascript/</guid><category>programming</category><category>javascript</category></item><item><title>Publish a pelican blog using a Bitbucket POST Webhook</title><link>https://blog.john-pfeiffer.com/publish-a-pelican-blog-using-a-bitbucket-post-webhook/</link><description>
&lt;p&gt;Webhooks are an incredibly useful way to tie together disparate network parts, WHEN something happens in one place, it sends a POST HTTP request to another place.&lt;/p&gt;
&lt;h3 id="create-the-bitbucket-webhook-and-setup-a-server-to-receive-the-webhook"&gt;Create the Bitbucket Webhook and Setup a Server to Receive the Webhook&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the Bitbucket WebUI&lt;/li&gt;
&lt;li&gt;Choose the repository&lt;/li&gt;
&lt;li&gt;Choose to administer the repository (gear symbol) -&amp;gt; Hooks (left menu) , or simply &lt;a href="https://bitbucket.org/username/reponame/admin/hooks"&gt;https://bitbucket.org/username/reponame/admin/hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Select Hook Type (dropdown) , POST , Add Hook (Button)&lt;/li&gt;
&lt;li&gt;Enter your target URL, SAVE&lt;/li&gt;
&lt;li&gt;Setup a webserver (easiest might be Bamboo or Jenkins) somewhere&lt;/li&gt;
&lt;li&gt;Ensure there is a URL that accepts POST requests&lt;/li&gt;
&lt;li&gt;Ensure that when the POST is received it runs the pelican content generation commands to make the new output&lt;/li&gt;
&lt;li&gt;Ensure new output is visible&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;You may notice any existing POST webhooks, i.e. a HipChat notification add-on, listed: https://hipchat-bitbucket.herokuapp.com/commit?client_id=f955ddb5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="flask-and-bash-source-code-to-publish-a-pelican-static-web-site"&gt;Flask and Bash source code to publish a pelican static web site&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;This custom solution requires running that flask app manually, i.e. python mypublish.py
It also requires having two repositories, one for the pelican source content, 
the other repo (i.e. a bitbucket static web site) will only contain the output (.html files)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="vi-mypublishpy"&gt;vi mypublish.py&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PIPE&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/someuniquekeyhere'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mypublish&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;"./mypublish.sh"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'0.0.0.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use_reloader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="vi-mypublishsh"&gt;vi mypublish.sh&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
git pull
&lt;span class="nv"&gt;GITMESSAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git log -n &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;OUTPUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"../outputreponame.bitbucket.org"&lt;/span&gt;
./clean-output.sh &lt;span class="s2"&gt;"../sourcereponame.bitbucket.org"&lt;/span&gt;  &lt;span class="c1"&gt;# removes all of the old content&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$GITMESSAGE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
pelican content
cp -a ./output/* &lt;span class="nv"&gt;$OUTPUT&lt;/span&gt;

rm -rf ./output
rm -rf ./cache
rm -f *.pyc

&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$OUTPUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
git add --all ./content
git commit -m &lt;span class="s2"&gt;"source &lt;/span&gt;&lt;span class="nv"&gt;$GITMESSAGE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
git push
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="vi-clean-outputsh"&gt;vi clean-output.sh&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

rm -rf ./output
rm -rf ./cache
rm -f *.pyc

&lt;span class="k"&gt;for&lt;/span&gt; ITEM in &lt;span class="nv"&gt;$SOURCE&lt;/span&gt;/*
&lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -d &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ITEM&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    rm -rf &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ITEM&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    rm -f &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ITEM&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://read-the-docs.readthedocs.org/en/latest/webhooks.html"&gt;https://read-the-docs.readthedocs.org/en/latest/webhooks.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/bitbucket/manage-webhooks-735643732.html"&gt;https://confluence.atlassian.com/bitbucket/manage-webhooks-735643732.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 08 Aug 2014 06:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-08-08:publish-a-pelican-blog-using-a-bitbucket-post-webhook/</guid><category>pelican</category><category>webhook</category><category>bitbucket</category><category>flash</category></item><item><title>Using Vagrant to deploy instances on AWS</title><link>https://blog.john-pfeiffer.com/using-vagrant-to-deploy-instances-on-aws/</link><description>
&lt;p&gt;Vagrant is an infrastructure tool that simplifies deployment, such as virtual machines or in this case Amazon EC2 instances.&lt;/p&gt;
&lt;h3 id="install-vagrant-and-the-vagrant-aws-plugin"&gt;Install Vagrant and the Vagrant AWS plugin&lt;/h3&gt;
&lt;p&gt;Download and install vagrant: &lt;strong&gt;&lt;a href="https://www.vagrantup.com/downloads"&gt;https://www.vagrantup.com/downloads&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://releases.hashicorp.com/vagrant/1.7.4/vagrant_1.7.4_x86_64.deb
dpkg -i vagrant_1.7.4_x86_64.deb
vagrant --version
vagrant plugin install vagrant-aws
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="quickstart-vagrant-and-virtualbox-with-ubuntu-trusty-1404"&gt;Quickstart Vagrant and VirtualBox with Ubuntu Trusty 14.04&lt;/h3&gt;
&lt;p&gt;The simple local VirtualBox method was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virtualbox --help
vagrant init ubuntu/trusty64; vagrant up --provider virtualbox

    ==&amp;gt; default: Box 'ubuntu/trusty64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: &amp;gt;= 0
    ==&amp;gt; default: Loading metadata for box 'ubuntu/trusty64'
    default: URL: https://atlas.hashicorp.com/ubuntu/trusty64
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this will do all the extra work for you of finding and downloading the "box" and starting it in VirtualBox&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="vagrant-and-aws-ec2-with-ubuntu-precise-1204"&gt;Vagrant and AWS EC2 with Ubuntu Precise 12.04&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://atlas.hashicorp.com/boxes/search"&gt;https://atlas.hashicorp.com/boxes/search&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vagrant box list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi Vagrantfile&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Vagrant.configure("2") do |config|
    config.vm.box = "dummy"
    config.vm.provider :aws do |aws, override|
        aws.access_key_id = "YOURACCESSKEY"
        aws.secret_access_key = "YOURSECRETKEY"
        aws.keypair_name = "YOURKEYPAIRNAME"
        aws.ami = "ami-7747d01e"
        aws.instance_ready_timeout = 300
        aws.instance_type = "m4.large"
        aws.tags = {
            "Name" =&amp;gt; "MyCloudInstance",
        }
        override.vm.box = "dummy"
        override.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
        override.ssh.username = "ubuntu"
        override.ssh.private_key_path = "./YOURKEYPAIRNAME.pem"
    end
end
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ubuntu/images/ubuntu-precise-12.04-amd64-server-20130204 - ami-7747d01e , no ebs storage - just instance storage , &lt;a href="https://cloud-images.ubuntu.com/releases/"&gt;https://cloud-images.ubuntu.com/releases/&lt;/a&gt; and &lt;a href="https://atlas.hashicorp.com/boxes/search"&gt;https://atlas.hashicorp.com/boxes/search&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;vagrant will by default upload all folders and files in your "project" folder where the Vagrantfile is located&lt;/p&gt;
&lt;p&gt;vagrant will start with the current working directory and look for a Vagrantfile, then go up one directory until it finds one: &lt;a href="https://docs.vagrantup.com/v2/vagrantfile/"&gt;https://docs.vagrantup.com/v2/vagrantfile/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vagrant up --provider=aws --debug&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;--debug is interactive mode and requires pressing enter between every step&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bringing machine 'default' up with 'aws' provider...
==&amp;gt; default: HandleBoxUrl middleware is deprecated. Use HandleBox instead.
==&amp;gt; default: This is a bug with the provider. Please contact the creator
==&amp;gt; default: of the provider you use to fix this.
==&amp;gt; default: Warning! The AWS provider doesn't support any of the Vagrant
==&amp;gt; default: high-level network configurations (`config.vm.network`). They
==&amp;gt; default: will be silently ignored.
==&amp;gt; default: Launching an instance with the following settings...
==&amp;gt; default:  -- Type: m4.large
==&amp;gt; default:  -- AMI: ami-7747d01e
==&amp;gt; default:  -- Region: us-east-1
==&amp;gt; default:  -- Keypair: YOURKEYPAIRHERE
==&amp;gt; default:  -- Block Device Mapping: []
==&amp;gt; default:  -- Terminate On Shutdown: false
==&amp;gt; default:  -- Monitoring: false
==&amp;gt; default:  -- EBS optimized: false
==&amp;gt; default:  -- Assigning a public IP address in a VPC: false
==&amp;gt; default: Waiting for instance to become "ready"...
==&amp;gt; default: Waiting for SSH to become available...
==&amp;gt; default: Machine is booted and ready for use!
==&amp;gt; default: Rsyncing folder: /home/ubuntu/myproject/ =&amp;gt; /vagrant
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vagrant ssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the default-easiest-interface way of getting SSH access into the machine&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant ssh-config
vagrant ssh-config &amp;gt; vagrant-ssh
ssh -F vagrant-ssh default
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;alternative interactive ssh session: Use the HostName or AWS EC2 WebUI or &lt;a href="http://aws.amazon.com/cli"&gt;http://aws.amazon.com/cli&lt;/a&gt; to discover the remote machine IP address
using ssh with the vagrant-ssh file output seems the simplest
ssh -i YOURKEYPAIRHERE.pem ubuntu@1.2.3.4 ls -ahl /vagrant&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant ssh -c "ls -ahl"&lt;/code&gt; for a non interactive listing of the home directory&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;vagrant ssh -c "pidof ntpd | xargs sudo kill -9"&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vagrant up&lt;/code&gt; , &lt;code&gt;vagrant reload&lt;/code&gt; , and &lt;code&gt;vagrant provision&lt;/code&gt; will have the AWS provider use rsync to push data to /vagrant&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.vagrantup.com/v2/synced-folders/rsync.html"&gt;https://docs.vagrantup.com/v2/synced-folders/rsync.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant stop&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UnsupportedOperation =&amp;gt; The instance 'i-1295bf39' does not have an 'ebs' root device type and cannot be stopped. (Fog::Compute::AWS::Error)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vagrant destroy&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; default: Are you sure you want to destroy the 'default' VM? [y/N] Y
&amp;gt;
&amp;gt; ==&amp;gt; default: Terminating the instance...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vagrant destroy -f&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;non interactively destroy the instance and avoid the misleading error message: Vagrant is attempting to interface with the UI in a way that requires a TTY&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="vagrant-provisioning"&gt;Vagrant provisioning&lt;/h3&gt;
&lt;p&gt;Allows for automated installation of software bundled into the &lt;code&gt;vagrant up&lt;/code&gt; command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant up --provider=aws --no-provision&lt;/code&gt; to prevent any provisioning&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;config.vm.provision "shell", inline: "echo Hello, World"

config.vm.provision "shell", path: "script.sh"

config.vm.provision "shell", path: "https://example.com/script.sh"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://docs.vagrantup.com/v2/provisioning"&gt;http://docs.vagrantup.com/v2/provisioning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.vagrantup.com/v2/provisioning/shell.html"&gt;http://docs.vagrantup.com/v2/provisioning/shell.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="advanced-vagrantfile-example"&gt;Advanced Vagrantfile example&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span class="c1"&gt;# vi: set ft=ruby :&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'UPDATEFQDN'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;updatedfqdn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'UPDATEFQDN'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="vg"&gt;$fqdnscript&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="dl"&gt;FQDNSCRIPT&lt;/span&gt;
&lt;span class="sh"&gt;echo "I am updating fqdn to #{updatedfqdn}..."&lt;/span&gt;
&lt;span class="sh"&gt;cat /etc/hosts | grep "#{updatedfqdn}" || sudo sed 's/127.0.0.1/127.0.0.1 #{updatedfqdn}/' -i /etc/hosts&lt;/span&gt;
&lt;span class="sh"&gt;hostname | grep "#{updatedfqdn}" || sudo hostname #{updatedfqdn}&lt;/span&gt;
&lt;span class="dl"&gt;FQDNSCRIPT&lt;/span&gt;

&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:aws&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_key_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURACCESSKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secret_access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURSECRETKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keypair_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURKEYPAIRNAME"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ami&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ami-7747d01e"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_ready_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"m4.large"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"Name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"MyCloudInstance"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'bamboo_aws_use_iops'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
          &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;block_device_mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'DeviceName'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'/dev/sda1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeSize'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeType'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'io1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.Iops'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;block_device_mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'DeviceName'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'/dev/sda1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeSize'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeType'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'gp2'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ubuntu"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;private_key_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"./YOURKEYPAIRNAME.pem"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synced_folder&lt;/span&gt; &lt;span class="s2"&gt;"/etc/sslcerts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/tmp/sourcecode"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"rsync"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;create&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;rsync__exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;".git/"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="ss"&gt;:shell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:inline&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"echo `hostname -f` &amp;gt;&amp;gt; /home/ubuntu/currenthostname.txt"&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="ss"&gt;:shell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:inline&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="vg"&gt;$fqdnscript&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Bringing&lt;/span&gt; &lt;span class="n"&gt;machine&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="s1"&gt;'aws'&lt;/span&gt; &lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Running&lt;/span&gt; &lt;span class="ss"&gt;provisioner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;Running&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt;
&lt;span class="ss"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;ttty&lt;/span&gt;
&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="n"&gt;provisioning&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;synced_folder is to sync other folders in your filesystem besides the folder with the Vagrantfile&lt;/p&gt;
&lt;p&gt;config.vm.hostname does not appear to work on AWS EC2 so the workaround above (|| statements to prevent extra reconfiguration)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchellh/vagrant-aws"&gt;https://github.com/mitchellh/vagrant-aws&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html"&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="vagrant-and-ec2-vpc-ami-that-does-not-haveallow-sudo"&gt;Vagrant and EC2 VPC (AMI that does not have/allow sudo)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span class="c1"&gt;# vi: set ft=ruby :&lt;/span&gt;

&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;

    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synced_folder&lt;/span&gt; &lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/vagrant"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:aws&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;

        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_key_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURACCESSKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secret_access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURSECRETKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keypair_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURKEYPAIRNAME"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ami&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ami-7747d01e"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_ready_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"m4.large"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"Name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"MyCloudInstance"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;security_groups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"my_aws_security_group_id"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subnet_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"my_aws_subnet_id"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;associate_public_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"#cloud-boothook&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;#!/bin/bash&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;touch /opt/.license/.eula&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"&lt;/span&gt;

        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ubuntu"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;private_key_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/home/ubuntu/my_aws.pem"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vagrant up --provider=aws --no-provision --debug&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INFO vagrant: `vagrant` invoked: ["up", "--provider=aws", "--no-provision", "--debug"]

Bringing machine 'default' up with 'aws' provider...
==&amp;gt; default: Launching an instance with the following settings...
INFO interface: info:  -- Type: m4.large
INFO interface: info: ==&amp;gt; default:  -- User Data: #cloud-boothook
INFO interface: info: ==&amp;gt; default:  -- Assigning a public IP address in a VPC: true
==&amp;gt; default: Waiting for instance to become "ready"...
==&amp;gt; default: Waiting for SSH to become available...

DEBUG ssh: == Net-SSH connection debug-level log END ==
INFO ssh: SSH is ready!
DEBUG ssh: Re-using SSH connection.
INFO ssh: Execute:  (sudo=false)
DEBUG ssh: pty obtained for connection
DEBUG ssh: stdout: export TERM=vt100

**JOHN: cloud-boothook script should have run by now in here**

DEBUG ssh: stdout: logout
DEBUG ssh: Exit status: 0
INFO run_instance: Time for SSH ready: 48.444087982177734
INFO interface: info: Machine is booted and ready for use!

which rsync    
DEBUG ssh: stdout: /usr/bin/rsync

INFO interface: info: Machine not provisioning because `--no-provision` is specified.
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;After all of that it is safe to either have &lt;code&gt;vagrant provision&lt;/code&gt; or &lt;code&gt;vagrant ssh -c "ls -ahl"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Using a pseudo tty&lt;/strong&gt; is a required workaround if using an AMI that does not support tty / sudo (i.e. Amazon's default Linux AMI)&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.vagrantup.com/v2/vagrantfile/ssh_settings.html"&gt;https://docs.vagrantup.com/v2/vagrantfile/ssh_settings.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchellh/vagrant/issues/1482"&gt;https://github.com/mitchellh/vagrant/issues/1482&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disabling the /vagrant synced project folder&lt;/strong&gt; is nice if you don't automatically want the Vagrantfile and everything in there rsynced to your EC2 instance (and avoids the ugly &lt;code&gt;mkdir -p /vagrant&lt;/code&gt; which requires sudo)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AWS User Data&lt;/strong&gt; can be pushed in via Vagrant which allows for custom scripts / commands / package installation during the EC2 instance boot&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/CloudInit"&gt;https://help.ubuntu.com/community/CloudInit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudinit.readthedocs.org/en/latest/topics/format.html#cloud-boothook"&gt;https://cloudinit.readthedocs.org/en/latest/topics/format.html#cloud-boothook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17413598/vagrant-rsync-error-before-provisioning"&gt;http://stackoverflow.com/questions/17413598/vagrant-rsync-error-before-provisioning&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;One of the use cases for an aws.user_data #cloud-boothook script has been to add to /etc/sudoers.d/ (thus avoiding later sudo issues with rsync)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="virtualbox"&gt;VirtualBox&lt;/h3&gt;
&lt;p&gt;A really easy A way to start an Ubuntu 14.04 box locally with VirtualBox, the shell provisioner is less elegant than chef/puppet/ansible but gets the job done (installs Docker and Docker Compose)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.virtualbox.org/wiki/Linux_Downloads"&gt;https://www.virtualbox.org/wiki/Linux_Downloads&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="vagrantfile"&gt;Vagrantfile&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;VERSIONS = {
  'trusty' =&amp;gt; {
    'box' =&amp;gt; "canonical-ubuntu-14.04",
    'box_url' =&amp;gt; "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box",
    'ami' =&amp;gt; "ami-018c9568",
  },
}


Vagrant.configure("2") do |config|
    config.ssh.forward_agent = true

    version = VERSIONS[("trusty")]

    config.vm.provider "virtualbox" do |v, override|
      v.customize ["modifyvm", :id, "--memory", ENV['VM_MEMORY'] || 4096]
      v.customize ["modifyvm", :id, "--cpus", ENV['VM_CPUS'] || 2]

      override.vm.network :private_network, ip: "192.168.33.10"
      override.vm.box = version['box']
      override.vm.box_url = version['box_url']
    end

    config.vm.provision :shell, :inline =&amp;gt; "sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9"
    config.vm.provision :shell, :inline =&amp;gt; "sudo sh -c 'echo deb https://get.docker.io/ubuntu docker main &amp;gt; /etc/apt/sources.list.d/docker.list'"
    config.vm.provision :shell, :inline =&amp;gt; "sudo apt-get update"
    config.vm.provision :shell, :inline =&amp;gt; "sudo apt-get install -y lxc-docker python-pip"
    config.vm.provision :shell, :inline =&amp;gt; "sudo pip install --upgrade pip"
    config.vm.provision :shell, :inline =&amp;gt; "sudo pip install --upgrade docker-compose"

end
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ps aux | grep vagrant&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nothing to see here but there is still state for machines started...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant global-status
vagrant global-status --prune
rm -rf .vagrant
rm -rf /home/ubuntu/.vagrant.d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;If you use vagrant 1.7 don not be surprised if you see errors related to SSL, 1.6.3 FTW&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mitchellh/vagrant-aws"&gt;https://github.com/mitchellh/vagrant-aws&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="troubleshooting"&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vagrant up --provider=aws --debug&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ERROR: The provider 'aws' could not be found, but was requested to back the machine 'default'. Please use a provider that exists.&lt;/p&gt;
&lt;p&gt;RESOLUTION: try re-installing the vagrant-aws plugin again and immediately running the vagrant up command afterwards&lt;/p&gt;
&lt;p&gt;ERROR: Timeout when waiting for SSH , SSH not up: ... The private key to connect to the machine via SSH must be owned&lt;/p&gt;
&lt;p&gt;RESOLUTION: chown root:root  and chmod 400&lt;/p&gt;
&lt;p&gt;ERROR: INFO ssh: SSH not up: #&amp;lt;Vagrant::Errors::SSHAuthenticationFailed: SSH authentication failed! This is typically caused by the public/private keypair for the SSH user not being properly set on the guest VM&lt;/p&gt;
&lt;p&gt;RESOLUTION: ensure the correct user, i.e. ec2-user or ubuntu etc. is used in the override.ssh.username to match what the AMI expects&lt;/p&gt;
&lt;p&gt;ERROR: sudo: no tty present and no askpass program specified&lt;/p&gt;
&lt;p&gt;RESOLUTION: your VM (or more likely, AMI) does not have tty or allow sudo so try using the config.ssh.pty = true (and make sure no provisioning commands require sudo)&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 16 Jul 2014 21:12:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-07-16:using-vagrant-to-deploy-instances-on-aws/</guid></item><item><title>Docker Intro install run and port forward</title><link>https://blog.john-pfeiffer.com/docker-intro-install-run-and-port-forward/</link><description>&lt;p&gt;Docker is a union file system based layer system (previously leveraging linux lxc containers) for ultra lightweight virtualization/compartmentalization.&lt;/p&gt;
&lt;p&gt;Much like AWS cloud servers (api based dynamic deployment that should be tolerant of node failure) and automated deployment/configuration infrastructure (chef or puppet such that cloud servers are created idempotent, remotely and automatically managed at scale), Docker requires a change of mindset.&lt;/p&gt;
&lt;p&gt;Docker encourages design of modular, deterministic and defined, single purpose components that are easy to compose into larger services.&lt;/p&gt;
&lt;p&gt;As any tool, using it for managing complexity and packaging can be very helpful but it does expose other potential issues (composability, orchestration, security).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Images&lt;/strong&gt; are the initial templates, each image has a unique ID &lt;a href="https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/#content-addressable-storage"&gt;https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/#content-addressable-storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt; are the running virtual machines, each container has a unique ID  &lt;a href="https://en.wikipedia.org/wiki/Operating-system-level_virtualization"&gt;https://en.wikipedia.org/wiki/Operating-system-level_virtualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;From now on it is assumed you use &lt;strong&gt;sudo&lt;/strong&gt; before any docker command!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="install-docker"&gt;Install Docker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/engine/installation/linux/ubuntulinux/"&gt;https://docs.docker.com/engine/installation/linux/ubuntulinux/&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sh -c "echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' &amp;gt; /etc/apt/sources.list.d/docker.list"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get install linux-image-extra-$(uname -r)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get install docker-engine&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service docker status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker info&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure it lists /var/lib/docker/aufs&lt;/p&gt;
&lt;p&gt;OPTIONAL STEP IF YOU HAD AN OLD DOCKER INSTALLATION
&lt;code&gt;apt-get purge lxc-docker*&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="installing-on-mac-or-windows"&gt;Installing on Mac or Windows&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.docker.com/docker-toolbox"&gt;https://www.docker.com/docker-toolbox&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="custom-docker0-ip-range"&gt;Custom docker0 ip range&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Fixing the Docker Bridge docker0 taking a huge 172.17.0.1/16 address space...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Private IP address space is not normally a thing to worry about, unless someone does something silly and grabs 65,534 addresses (stare) (docker)&lt;/p&gt;
&lt;p&gt;Because the default docker0 bridge seems to cater to organizations that want to run thousands of containers simultaneously local developers need to do the following fix:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;apt-get install bridge-utils&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service docker stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ip link set docker0 down&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brctl delbr docker0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker daemon --bip=192.168.239.1/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker will be running interactively so you can see all the fun log messages&lt;/p&gt;
&lt;p&gt;You should see docker0 "inet addr:192.168.239.1  Bcast:0.0.0.0  Mask:255.255.255.0"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Assuming you do not have some other purpose for the 192.168.239 range in which case you can change it to something else&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To permanently have this custom ip range configuration for docker (assuming you have done the steps above):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Control + C to quit the previously interactive docker daemon&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vi /etc/default/docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_OPTS="--bip=192.168.239.1/24"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service docker start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;You should see docker0 "inet addr:192.168.239.1  Bcast:0.0.0.0  Mask:255.255.255.0"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More docs to further troubleshoot the docker0 bridge...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/userguide/networking/default_network/custom-docker0/"&gt;https://docs.docker.com/engine/userguide/networking/default_network/custom-docker0/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/admin/systemd/"&gt;https://docs.docker.com/engine/admin/systemd/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="quick-start-summary"&gt;Quick Start Summary&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm busybox /bin/sh -c "echo 'hi'"
hi

docker run -it --rm -e MYVAR=123 busybox env
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;"run" will pull the image from Docker Hub by default, e injects an environment variable, overrides the Docker Image CMD with "env"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --rm --entrypoint=/bin/sh python:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;run the docker container (from the latest public python image) and start the shell prompt instead of the python interpreter&lt;/li&gt;
&lt;li&gt;the entrypoint parameter overrides the Docker Image (in case they do not provide a helpfully overridable CMD)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/reference/builder/#entrypoint"&gt;https://docs.docker.com/engine/reference/builder/#entrypoint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="download-a-docker-image"&gt;Download a docker image&lt;/h2&gt;
&lt;p&gt;Official Images are he easiest to experiment with: &lt;a href="https://hub.docker.com/explore/"&gt;https://hub.docker.com/explore/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker pull ubuntu:trusty
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;(&lt;strong&gt;grabs the latest, i.e. 14.04.1&lt;/strong&gt;) or use a different tag to download a more specific version &lt;code&gt;sudo docker pull ubuntu:12.04.3&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;CRITICAL WARNING!&lt;/strong&gt; use the colon and a specific version! downloading all of the ubuntu images by accident sucks =(&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker pull redis:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;choose the latest for just messing around but...
ALWAYS use a specific version to avoid having your dependencies change unexpectedly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finding what versions of images (tags) you can pull requires using either the UI or the API:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/library/redis/tags/"&gt;https://hub.docker.com/r/library/redis/tags/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker pull redis:3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker pull redis:2.8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker pull redis:2.6&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Many of the tags are synonyms/symlinks, so latest is the same as 3 is the same as 3.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="remove-a-docker-image"&gt;Remove a docker image&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker rmi redis

docker rmi -f $(docker images --all --quiet | grep -v 5506de2b643b)
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove ALL images except one by taking the output (quiet means only image ids), excluding a specific one, and then force removing the images (by id)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker images --quiet --filter "dangling=true" | xargs docker rmi
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove all images that do not have a tag and are not a parent of a tagged image&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker rmi -f $(docker images --all --quiet)
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove ALL images&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;du -sh /var/lib/docker/aufs
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Summarize the amount of disk space taken by images and layers, e.g.: 72K    /var/lib/docker/aufs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sometimes a docker image is &lt;strong&gt;still connected to a container&lt;/strong&gt; (already exited or forgotten)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps -a
docker rm name_or_id

docker rm a1b2
docker rmi image_id
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;it will "smart match" the first characters of the container ID&lt;/strong&gt; the same as git short sha&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="docker-info"&gt;Docker info&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;get a helpful list of all the commands&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker --version

docker info

:::text
Containers: 1
Images: 23
Storage Driver: aufs
 Root Dir: /var/lib/docker/aufs
 Dirs: 25
Execution Driver: native-0.2
Kernel Version: 3.13.0-35-generic
Operating System: Ubuntu 14.04.1 LTS
WARNING: No swap limit support

du -sh /var/lib/docker/aufs
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;469M    /var/lib/docker/aufs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps --all
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;no containers are running yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps --help
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;docker images --tree&lt;/strong&gt; is a deprecated command to view the hashes and sizes of all of the parent images&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="controlling-containers"&gt;Controlling Containers&lt;/h2&gt;
&lt;h3 id="starting-a-container-from-an-image"&gt;Starting a container from an image&lt;/h3&gt;
&lt;h4 id="create-a-container"&gt;Create a container&lt;/h4&gt;
&lt;p&gt;First you must create a container from an image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;get a helpful list of how to run a container&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --rm -i -t ubuntu:14.04 /bin/bash

:::text
creates a container
--rm: automatically remove the container when it exits
-i: keep stdin open even if not attached
-t: allocate a tty, attach stdin and stdout
use the ubuntu 14.04 minimal image
Docker automatically gives the container a random name
Runs an interactive bash shell
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will continue to exist in a stopped state once exited (see "docker ps -a")&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@f5878ed6016e:/# cat /etc/issue
root@f5878ed6016e:/# uname -a
root@f5878ed6016e:/# df -h
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Control-p then Control-q to detach the tty without exiting the shell&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps

docker run --detach --name myapp -p 127.0.0.1:5000:5000 training/webapp python app.py
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;detached with port 5000 available only to the host and executing the command python with parameter app.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker exec myapp ls -ahl
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;runs the ls command inside the container named "myapp"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker run --rm -i -t --link myhipchat_mariadb_1 mariadb:5 /bin/bash -c "exec mysql --version"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run --rm -i -t --link myhipchat_mariadb_1:mysql mariadb:5 /bin/bash -c 'exec mysql -h"$MYSQL_PORT_3306_TCP_ADDR" -P"$MYSQL_PORT_3306_TCP_PORT" -uroot -p'&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;an Image can contain both the server and client code so run a "client container" to connect to a running server Container &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="start-resume-a-container"&gt;Start (resume) a container&lt;/h4&gt;
&lt;p&gt;After a container has already been created (which starts it so ironically this is actually a "restart")&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker start --interactive --attach container_id_or_name
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="attaching-to-a-running-container"&gt;Attaching to a running container&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps -a 
CONTAINER ID ... STATUS        NAMES
9e0ebf4421dd ... Up 6 seconds  myexample

docker attach 9e0ebf4421dd
docker attach myexample
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;since the above will expect the container to have /bin/bash it will reuse the instance of shell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker exec -i -t 9e0ebf4421dd /bin/bash
# ps aux
# exit
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;instead a new /bin/bash is executed inside creating a second shell - use the exit command to not leave it around&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="running-a-container-with-admin-privileges"&gt;Running a container with admin privileges&lt;/h4&gt;
&lt;p&gt;If your container requires elevated privileges from the host then you need to provide the extra parameter:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -it --cap-add SYS_NET_ADMIN alpine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alternatively give it all extended privileges and permissions:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -it --privileged alpine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"&gt;https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="stopping-a-container"&gt;Stopping a container&lt;/h3&gt;
&lt;p&gt;Part of the efficiency in docker is that containers can &lt;strong&gt;run in the background automatically&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --detach --name myredis redis
docker ps
docker stop myredis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another efficiency is that a docker container will only &lt;strong&gt;run as long as it takes to execute&lt;/strong&gt; a command (and any &lt;strong&gt;changes are not forgotten&lt;/strong&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run ubuntu:trusty uname -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this runs the container only as long as it takes to execute the command&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker attach f5878ed6016e
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Control + C&lt;/code&gt; &lt;em&gt;(now we have exited the container and it will clean itself up)&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;spun up another container but only long enough to run the command&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CONTAINER ID IMAGE        COMMAND      CREATED      STATUS    PORTS         NAMES
e4b436320442 ubuntu:14.04 -uname -a  3 minutes ago              elegant_engelbart
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="copying-a-file-out-of-a-container"&gt;Copying a file out of a container&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker cp &amp;lt;containerId&amp;gt;:/file/path/within/container /host/path/target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/engine/reference/commandline/cp/"&gt;https://docs.docker.com/engine/reference/commandline/cp/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="deleting-aka-removing-a-container"&gt;Deleting aka removing a container&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker rm e4b436320442
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Alternatively: &lt;code&gt;docker rm --force elegant_engelbart&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker rm -f $(docker ps -a -q)
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Deletes forcibly all containers (be careful!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="dockerfile-to-automate-building-an-image"&gt;Dockerfile to automate building an image&lt;/h2&gt;
&lt;p&gt;Dockerfiles allow automating the creation docker images.&lt;/p&gt;
&lt;p&gt;One advantage to Dockerfile is that each command creates a separate layer so if a specific layer fails all of the previous intermediate images can be re-used.&lt;/p&gt;
&lt;p&gt;Also the version style of imagename:tag allows for chaining of upgrades of child images&lt;/p&gt;
&lt;p&gt;Containers as fast, reliable, and deterministic prod/qa/dev environments can also be extended to be just an improved experimentation sandbox (for those used to SSH and using Linux as a common base OS).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p dockerfiles/trustyssh
vi dockerfiles/trustyssh/Dockerfile
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;one Dockerfile per directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM ubuntu:trusty
MAINTAINER John Pfeiffer "https://bitbucket.org/johnpfeiffer"

RUN apt-get update -y
RUN apt-get install -y openssh-server byobu
RUN mkdir /var/run/sshd
RUN echo 'root:root' | chpasswd
RUN echo 'ubuntu:ubuntu' | chpasswd
RUN sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
EXPOSE 22
CMD    ["/usr/sbin/sshd", "-D"]


docker build --tag=newimagename --rm ./dockerfiles/ubuntu-trusty-ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Each RUN command creates an intermediate container, so make sure you use the -rm option&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sending build context to Docker daemon  2.56 kB
Sending build context to Docker daemon
Step 0 : FROM ubuntu:trusty
 ---&amp;gt; 5506de2b643b
...
Removing intermediate container 135b686d82a6
Step 2 : RUN apt-get update -y
 ---&amp;gt; Running in 7fe06a9ef41b
Ign http://archive.ubuntu.com trusty InRelease
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since each run command creates a new layer it is best practice to consolidate commands for a single logical action when possible:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;RUN echo "#!/bin/bash" &amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "cd /opt/mydata/pelican-project" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "pelican content -r &amp;amp;" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "cd /opt/mydata/pelican-project/output" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "python -m SimpleHTTPServer" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  chmod +x /root/build-and-run.sh


docker history ubuntu-utopic-pelican:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;view the history of hashes (which can be run by themselves) and timestamps and sizes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;IMAGE               CREATED             CREATED BY                                      SIZE
39ac388d3c0d        37 seconds ago      /bin/sh -c #(nop) CMD [/bin/bash /root/build-   0 B
218edf407f18        37 seconds ago      /bin/sh -c echo "#!/bin/bash" &amp;gt; /root/build-a   129 B
d9d774d344bd        2 weeks ago         /bin/sh -c #(nop) EXPOSE 8000/tcp               0 B
ae1733e0e1b9        2 weeks ago         /bin/sh -c pip install pelican Markdown beaut   20.64 MB
24561ed8052f        2 weeks ago         /bin/sh -c curl https://bootstrap.pypa.io/get   9.826 MB
1878a9a052eb        2 weeks ago         /bin/sh -c apt-get update &amp;amp;&amp;amp; apt-get install    60.85 MB
5e5e0e9171da        2 weeks ago         /bin/sh -c #(nop) MAINTAINER John Pfeiffer "h   0 B
78949b1e1cfd        7 weeks ago         /bin/sh -c #(nop) CMD [/bin/bash]               0 B
21abcc4ef877        7 weeks ago         /bin/sh -c sed -i 's/^#\s*\(deb.*universe\)$/   1.895 kB
f552c527d701        7 weeks ago         /bin/sh -c echo '#!/bin/sh' &amp;gt; /usr/sbin/polic   215 kB
c4c77a6165f9        7 weeks ago         /bin/sh -c #(nop) ADD file:24ed1895f2e500dcec   194.2 MB
511136ea3c5a        22 months ago                                                       0 B
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;experimental:
&lt;code&gt;docker save 49b5a7a88d5 | sudo docker-squash -t ubuntu-utopic-pelican:squash | docker load&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="add-a-port-to-a-container"&gt;Add a port to a container&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker run --detach --publish 127.0.0.1:2222:22 --name johnssh trustyssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;run a detached container based on the trustyssh image that binds the private container port 22 to the host port 2222 (in this case the trustyssh image from above is running sshd on port 22)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker port johnssh 22&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;127.0.0.1:2222&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;netstat -antp | grep 2222&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tcp        0      0 127.0.0.1:2222          0.0.0.0:*               LISTEN      24393/docker-proxy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ssh -o StrictHostKeychecking=no -p 2222 root@127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;root@19ad0614b237:~#&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;command&lt;/th&gt;
&lt;th align="center"&gt;output&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker run --detach --publish 0.0.0.0:6379:6379 --name redis redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;feeb79581810a8c182202c73d4e1c6b905960bcfc860e04285f1ae03c6a47f18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;6379/tcp -&amp;gt; 0.0.0.0:6379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis 6379&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;0.0.0.0:6379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;redis-cli -h docker.example.com ping&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;PONG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker run --detach --publish-all --name redis redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;ff2f6d2e04d565f11d71664bf6cf23638656d9b633e4d3c94444c81b18b807bb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;6379/tcp -&amp;gt; 0.0.0.0:49153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis 6379&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;0.0.0.0:49153&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;docker run --detach -P --name johnssh trustyssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;publish all EXPOSE'd ports to random ports on the host&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="logs-from-the-containers"&gt;Logs from the containers&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker logs container_name&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;view the latest logs of a specific container in stdout&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker logs -f container_name&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tail the logs for&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="host-data-with-a-docker-container"&gt;Host data with a Docker Container&lt;/h2&gt;
&lt;p&gt;Volumes are where Docker Containers can access storage (either from the Host or other Containers)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/userguide/dockervolumes"&gt;https://docs.docker.com/userguide/dockervolumes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --interactive --tty --name mydata --volume /tmp/mydata:/opt/mydata trustyssh /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;create an interactive container named "mydata" that maps /tmp/mydata from the host onto /opt/mydata (warning: overriding any existing!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="managing-or-limiting-the-resources-available-to-a-container"&gt;Managing or limiting the resources available to a Container&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/engine/reference/run/#runtime-constraints-on-resources"&gt;https://docs.docker.com/engine/reference/run/#runtime-constraints-on-resources&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -i -t --rm --cpuset-cpu 0 --memory 512m ubuntu:14.04 /bin/bash
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the usual ubuntu trusty bash prompt but anything we run will be
pinned to cpu 0 (i.e. 25% of a 4 core system) and have
at most 512 MB of RAM and 512 MB of swap available&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="using-docker-for-a-gui-application"&gt;Using Docker for a GUI application&lt;/h2&gt;
&lt;p&gt;Mostly outside of the vision of containerization (neither isolation nor performance exactly) is using Docker to run GUI applications without installing them on the Host.&lt;/p&gt;
&lt;p&gt;Jessie Frazelle has done some excellent work pointing out how sharing the X11 socket from the host means lots of apps can run "without being installed" &lt;a href="https://github.com/jfrazelle/dockerfiles"&gt;https://github.com/jfrazelle/dockerfiles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One tip she did not include was the part about XManager security, run the following if you run into an error&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xhost local:root&lt;/code&gt;
- &lt;a href="https://www.netsarang.com/knowledgebase/xmanager/3898/xhost_and_how_to_use_it"&gt;https://www.netsarang.com/knowledgebase/xmanager/3898/xhost_and_how_to_use_it&lt;/a&gt;
- &lt;a href="http://www.x.org/archive/X11R6.8.0/doc/xhost.1.html"&gt;http://www.x.org/archive/X11R6.8.0/doc/xhost.1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xhost local:root; docker run --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY --device /dev/snd jess/chromium&lt;/code&gt;
- modify the xhost security to allow access to x windows
- ephemeral so do not save anything
- share the X11 unix socket
- bind to the current display (i.e. :0.0)
- allow sound from the Docker container&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="saving-a-docker-container-as-a-new-image"&gt;Saving a docker container as a new image&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker commit --help&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="docker-commit-for-a-container-ubuntutrusty-with-git"&gt;docker commit for a container: ubuntu:trusty with git&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker run -i -t ubuntu:trusty /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Control + p then Control + q&lt;/code&gt; &lt;em&gt;(to detach the tty without exiting the shell)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a&lt;/code&gt; &lt;em&gt;(make a note of the ID or NAME)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker attach ID_OR_NAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get update; apt-get install git -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd /root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git --version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://johnpfeiffer@bitbucket.org/johnpfeiffer/myrepo.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;now the Container will have git installed, a repo cloned, and will be stopped&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;docker commit container_name_here johnpfeiffer_git_repo&lt;blockquote&gt;
&lt;p&gt;4a74440186d976caeccc52f5ed2bd44269beb84d472391a7ce26ee3db8ffc1e9&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;docker images&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;output&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REPOSITORY               TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
johnpfeiffer_git_repo    latest              4a74440186d9        54 seconds ago      402 MB
ubuntu                   14.04               e54ca5efa2e9        3 weeks ago         276.5 MB
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;h3 id="python-and-pelican-static-site-generator-on-docker-ubuntu1404"&gt;Python and Pelican static site generator on docker ubuntu:14.04&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;apt-get update; apt-get install python python-setuptools openssl wget -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget -qO- https://raw.github.com/pypa/pip/master/contrib/get-pip.py | sudo python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install pelican Markdown beautifulsoup4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -i -t -p 127.0.0.1:8000:8000 --name john johnpfeiffer_git_repo:latest /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control+p then control+q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker attach john&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd /root/myrepo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican content  (assuming pelicanconf.py is here)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control+p then control+q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://127.0.0.1:8000&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="docker-pre-built-images-from-the-registry"&gt;Docker pre built Images from the Registry&lt;/h2&gt;
&lt;h3 id="redis"&gt;Redis&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker search redis&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;search from the CLI but NAME, DESCRIPTION, STARS, OFFICIAL will only help you if you sort of already know what you are looking for&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://registry.hub.docker.com/_/redis/"&gt;https://registry.hub.docker.com/_/redis/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --detach --publish 127.0.0.1:6379:6379 --name redis redis
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;detached container based on the redis latest bound to the host on port 6379&lt;/p&gt;
&lt;p&gt;the image already includes by default the expose port command: EXPOSE 6379...
&lt;code&gt;apt-get install redis-tools; redis-cli&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;connect from the host to the redis container to the redis interactive cli&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -i -t --link redis:db  johnssh /bin/bash

root@d95a758eaa6b:/#
apt-get install redis-tools
env
redis-cli -h $DB_PORT_6379_TCP_ADDR
ping
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;PONG&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;get mykey
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;"somevalue"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker stop johnssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker start --interactive --attach johnssh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@d95a758eaa6b:/#
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Environment variables are tricky&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo docker run --detach --publish 127.0.0.1:2222:22 --name johnssh trustyssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if you SSH into your container or use byobu "env" will not show you the info&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;From the host: &lt;/strong&gt; &lt;code&gt;sudo docker inspect --format '{{ .NetworkSettings.IPAddress }}' redis&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;172.17.0.72&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -p 2222 root@localhost
apt-get install redis-tools
redis-cli -h 172.17.0.72 keys *
1) mykey
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt; Add a route to the Host From inside a Container/Guest &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HOST:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip addr show
ip addr show | grep docker0
ip addr show | grep docker0 | grep global | awk '{print $2}' | cut -d / -f1
HOSTIP=$(ip addr show | grep docker0 | grep global | awk '{print $2}' | cut -d / -f1)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sudo docker run -i -t --rm --add-host=docker:${HOSTIP} python:2 /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="nl"&gt;bbe25092f19&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hosts&lt;/span&gt;

&lt;span class="mf"&gt;172.17.0.7&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;bbe25092f19&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;       &lt;span class="n"&gt;localhost&lt;/span&gt;
 &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;loopback&lt;/span&gt;
&lt;span class="n"&gt;fe00&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;localnet&lt;/span&gt;
&lt;span class="n"&gt;ff00&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mcastprefix&lt;/span&gt;
&lt;span class="n"&gt;ff02&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;allnodes&lt;/span&gt;
&lt;span class="n"&gt;ff02&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;allrouters&lt;/span&gt;

&lt;span class="mf"&gt;172.17.42.1&lt;/span&gt;     &lt;span class="n"&gt;docker&lt;/span&gt;

&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="nl"&gt;bbe25092f19&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;ping&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;

&lt;span class="n"&gt;PING&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;172.17.42.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="mf"&gt;172.17.42.1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.158&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/engine/reference/commandline/run/"&gt;https://docs.docker.com/engine/reference/commandline/run/&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="docker-compose"&gt;Docker Compose&lt;/h2&gt;
&lt;p&gt;Complex real systems have multiple dependencies and following the recommended Docker pattern of "do one thing per container" means needing a way to start/orchestrate a bunch of things at once.&lt;/p&gt;
&lt;p&gt;While there are some amazing open source projects (&lt;a href="http://kubernetes.io/"&gt;http://kubernetes.io/&lt;/a&gt; , &lt;a href="https://mesos.apache.org/documentation/latest/docker-containerizer/"&gt;https://mesos.apache.org/documentation/latest/docker-containerizer/&lt;/a&gt;) it is instructive to start with the simplest model provided directly from Docker, &lt;strong&gt;&lt;a href="https://docs.docker.com/compose/"&gt;https://docs.docker.com/compose/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install --upgrade docker-compose
docker-compose --version
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="apppy"&gt;app.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;redis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Redis&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;redis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Redis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'redis'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hits'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'Hello World! I have been seen &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; times.'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hits'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="requirementstxt"&gt;requirements.txt&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;flask
redis
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="dockerfile"&gt;Dockerfile&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM python:2.7
ADD . /code
WORKDIR /code
RUN pip install -r requirements.txt
CMD python app.py
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="docker-composeyml"&gt;docker-compose.yml&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"5000:5000"&lt;/span&gt;
  &lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;.:/&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;
  &lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;
&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;redis&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;dependencies like redis are "linked" for network access (ordering in the file is important)&lt;/li&gt;
&lt;li&gt;"web" app (which comes from the current directory Dockerfile)&lt;/li&gt;
&lt;li&gt;ports: exposes ports to the host (all of these are just like the docker run CLI parameters)&lt;/li&gt;
&lt;li&gt;volumes: allows live editing of app.py&lt;/li&gt;
&lt;li&gt;redis comes from the public docker registry image (not a Dockerfile nor a private registry) and is using the default tag of "latest"&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="docker-compose-up"&gt;docker-compose up&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker-compose up&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this will docker pull redis and build from the Dockerfile and then start them all in the correct order&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker-compose ps&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;run this command in the directory with the docker-compose.yml to see the state of the system&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;         Name                      Command             State           Ports          
-------------------------------------------------------------------------------------
composeexample_redis_1   /entrypoint.sh redis-server   Up      6379/tcp               
composeexample_web_1     /bin/sh -c python app.py      Up      0.0.0.0:5000-&amp;gt;5000/tcp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker-compose stop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://localhost:5000/"&gt;http://localhost:5000/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello World! I have been seen 2 times.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/docker/src"&gt;https://bitbucket.org/johnpfeiffer/docker/src&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="troubleshooting"&gt;Troubleshooting&lt;/h2&gt;
&lt;h3 id="building-images-with-dockerfile"&gt;Building images with Dockerfile&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Building images often depends on the network and DNS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you are using Wifi be careful as intermittent network connectivity may cause frustrating issues.&lt;/p&gt;
&lt;p&gt;For DNS with docker installed onto ubuntu via apt-get, try changing to Google DNS by uncommenting in:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi /etc/default/docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo service docker restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Building images often depends on dependencies&lt;/strong&gt;
look closely at error messages, i.e. make: not found and ensure that an early RUN statement has apt-get update &amp;amp;&amp;amp; apt-get install -y build-essential&lt;/p&gt;
&lt;h3 id="discovering-an-image-parent-from-history"&gt;Discovering an Image Parent from History&lt;/h3&gt;
&lt;p&gt;To see all of the images in detail: &lt;code&gt;docker images --all --digests=true&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python      2.7-alpine      sha256:834b44717d3928266472066d82208241a2582ce7b3787f32abbfb0def9fb0324   c80455665c57        6 weeks ago         71.49 MB
alpine      latest          sha256:dfbd4a3a8ebca874ebd2474f044a0b33600d4523d03b0df76e5c5986cb02d7e8   88e169ea8f46        6 weeks ago         3.984 MB
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then you can brute force query to see if an image has child dependencies:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;for i in $(docker images -q); do docker history $i | grep -q 7fb9bd20d612 &amp;amp;&amp;amp; echo $i; done&lt;/code&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="more-info"&gt;More Info&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Real World example of using Docker for behind the firewall delivery: &lt;a href="https://bitbucket.org/atlassianlabs/ac-koa-hipchat-sassy/pull-request/6/readmemd-contains-instructions-on-how-to/diff"&gt;https://bitbucket.org/atlassianlabs/ac-koa-hipchat-sassy/pull-request/6/readmemd-contains-instructions-on-how-to/diff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wsargent/docker-cheat-sheet"&gt;https://github.com/wsargent/docker-cheat-sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jpetazzo.github.io/2014/06/23/docker-ssh-considered-evil"&gt;http://jpetazzo.github.io/2014/06/23/docker-ssh-considered-evil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="docker-api-and-the-docker-hub-public-registry"&gt;Docker API and the Docker Hub Public Registry&lt;/h3&gt;
&lt;p&gt;Docker used to have an API endpoint at registry.hub.docker.com/v1 but in a fairly typical move for them they changed it so a lot of internet "documentation" examples are wrong.&lt;/p&gt;
&lt;p&gt;Also the Docker Hub was deprecated as of 1.7 so this is the last docs on how to use it (because the service is still running or compatible)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl https://index.docker.io/v1/_ping
true
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It uses basic authentication and while you can use the API to sign up it may just be easier to use the web site: &lt;a href="https://hub.docker.com/"&gt;https://hub.docker.com/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl https://username:password@index.docker.io/v1/users/
"OK"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;just curl with basic auth in order to check the credentials, the trailing slash is IMPORTANT &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Using a browser with the Docker REST API is often more convenient as it caches the Basic Authentication&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/v1.7/reference/api/docker-io_api/#users"&gt;https://docs.docker.com/v1.7/reference/api/docker-io_api/#users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/v1.6/reference/api/registry_api/"&gt;https://docs.docker.com/v1.6/reference/api/registry_api/&lt;/a&gt; (because the registry api was deprecated earlier?)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To see all of the images for a given repository (it is json formatted and there will be a lot of results!)
    curl https://username:password@index.docker.io/v1/repositories/python/images&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/v1.6/reference/api/registry_api/"&gt;https://docs.docker.com/v1.6/reference/api/registry_api/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you &lt;code&gt;docker search python&lt;/code&gt; and want to see the tags (i.e. you do not want to pull every python image ever made), then try curl with REST:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl https://username:password@index.docker.io/v1/repositories/python/tags

[{"layer": "a2db1214", "name": "latest"}, {"layer": "edb21ec7", "name": "2"}, {"layer": "82b600dd", "name": "2-alpine"}, {"layer": "6a4e9662", "name": "2-onbuild"}, {"layer": "99b38a11", "name": "2-slim"}, {"layer": "fe724fa0", "name": "2-wheezy"}, {"layer": "edb21ec7", "name": "2.7"}, {"layer": "82b600dd", "name": "2.7-alpine"}, {"layer": "6a4e9662", "name": "2.7-onbuild"}, {"layer": "99b38a11", "name": "2.7-slim"}, {"layer": "fe724fa0", "name": "2.7-wheezy"}, {"layer": "c71c2739", "name": "2.7.10"}, {"layer": "f1f35fa4", "name": "2.7.10-onbuild"}, {"layer": "843123ac", "name": "2.7.10-slim"}, {"layer": "fde41dc3", "name": "2.7.10-wheezy"}, {"layer": "edb21ec7", "name": "2.7.11"}, {"layer": "82b600dd", "name": "2.7.11-alpine"}, {"layer": "6a4e9662", "name": "2.7.11-onbuild"}, {"layer": "99b38a11", "name": "2.7.11-slim"}, {"layer": "fe724fa0", "name": "2.7.11-wheezy"}, {"layer": "a87a2288", "name": "2.7.7"}, {"layer": "481b175a", "name": "2.7.8"}, {"layer": "fbb30ed2", "name": "2.7.8-onbuild"}, {"layer": "3cf7f142", "name": "2.7.8-slim"}, {"layer": "6a873836", "name": "2.7.8-wheezy"}, {"layer": "2d0d0130", "name": "2.7.9"}, {"layer": "10948f7c", "name": "2.7.9-onbuild"}, {"layer": "e86252d0", "name": "2.7.9-slim"}, {"layer": "a11d441b", "name": "2.7.9-wheezy"}, {"layer": "a2db1214", "name": "3"}, {"layer": "bb6cd371", "name": "3-alpine"}, {"layer": "80662aa6", "name": "3-onbuild"}, {"layer": "07bfefb9", "name": "3-slim"}, {"layer": "2edf9614", "name": "3-wheezy"}, {"layer": "7575f4a5", "name": "3.2"}, {"layer": "31b273f6", "name": "3.2-onbuild"}, {"layer": "ca0a0ed6", "name": "3.2-slim"}, {"layer": "f5644650", "name": "3.2-wheezy"}, {"layer": "7575f4a5", "name": "3.2.6"}, {"layer": "31b273f6", "name": "3.2.6-onbuild"}, {"layer": "ca0a0ed6", "name": "3.2.6-slim"}, {"layer": "f5644650", "name": "3.2.6-wheezy"}, {"layer": "84717b99", "name": "3.3"}, {"layer": "4de0c1a0", "name": "3.3-alpine"}, {"layer": "e0985e72", "name": "3.3-onbuild"}, {"layer": "3c0f39af", "name": "3.3-slim"}, {"layer": "a13ad718", "name": "3.3-wheezy"}, {"layer": "e663e96e", "name": "3.3.5"}, {"layer": "79d3367e", "name": "3.3.5-onbuild"}, {"layer": "84717b99", "name": "3.3.6"}, {"layer": "4de0c1a0", "name": "3.3.6-alpine"}, {"layer": "e0985e72", "name": "3.3.6-onbuild"}, {"layer": "3c0f39af", "name": "3.3.6-slim"}, {"layer": "a13ad718", "name": "3.3.6-wheezy"}, {"layer": "c7184f4f", "name": "3.4"}, {"layer": "e6310f15", "name": "3.4-alpine"}, {"layer": "c38d9f7b", "name": "3.4-onbuild"}, {"layer": "ab9f7f65", "name": "3.4-slim"}, {"layer": "c98c4a9d", "name": "3.4-wheezy"}, {"layer": "b504e00c", "name": "3.4.1"}, {"layer": "07e5901a", "name": "3.4.1-onbuild"}, {"layer": "ec50e6a0", "name": "3.4.2"}, {"layer": "ade8543e", "name": "3.4.2-onbuild"}, {"layer": "dd1dee45", "name": "3.4.2-slim"}, {"layer": "de6911d6", "name": "3.4.2-wheezy"}, {"layer": "48bc52cc", "name": "3.4.3"}, {"layer": "bf599bc6", "name": "3.4.3-onbuild"}, {"layer": "0b92f173", "name": "3.4.3-slim"}, {"layer": "b8845e5b", "name": "3.4.3-wheezy"}, {"layer": "c7184f4f", "name": "3.4.4"}, {"layer": "e6310f15", "name": "3.4.4-alpine"}, {"layer": "c38d9f7b", "name": "3.4.4-onbuild"}, {"layer": "ab9f7f65", "name": "3.4.4-slim"}, {"layer": "c98c4a9d", "name": "3.4.4-wheezy"}, {"layer": "a2db1214", "name": "3.5"}, {"layer": "bb6cd371", "name": "3.5-alpine"}, {"layer": "80662aa6", "name": "3.5-onbuild"}, {"layer": "07bfefb9", "name": "3.5-slim"}, {"layer": "c64596cb", "name": "3.5.0"}, {"layer": "c9744d7e", "name": "3.5.0-onbuild"}, {"layer": "ac60c7d8", "name": "3.5.0-slim"}, {"layer": "31ef8f64", "name": "3.5.0b3"}, {"layer": "7c5e081c", "name": "3.5.0b3-onbuild"}, {"layer": "0c47d2de", "name": "3.5.0b3-slim"}, {"layer": "a2db1214", "name": "3.5.1"}, {"layer": "bb6cd371", "name": "3.5.1-alpine"}, {"layer": "80662aa6", "name": "3.5.1-onbuild"}, {"layer": "07bfefb9", "name": "3.5.1-slim"}, {"layer": "bb6cd371", "name": "alpine"}, {"layer": "80662aa6", "name": "onbuild"}, {"layer": "07bfefb9", "name": "slim"}, {"layer": "2edf9614", "name": "wheezy"}]
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="docker-engine-internal-api"&gt;Docker Engine internal API&lt;/h4&gt;
&lt;p&gt;If instead of the docker client you wish to interact more programatically...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/reference/api/docker_remote_api/"&gt;https://docs.docker.com/engine/reference/api/docker_remote_api/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/distribution"&gt;https://github.com/docker/distribution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="private-docker-registry"&gt;Private Docker Registry&lt;/h3&gt;
&lt;h4 id="login-to-a-private-docker-registry"&gt;Login to a private docker registry&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -i https://username:password@docker.example.com/v2/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;attempt to login to a private registry&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt; Using the docker client to login to a private registry &lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker login docker.example.com:443
&amp;gt; Username: user@example.com
&amp;gt; WARNING: login credentials saved in /home/USER/.docker/config.json
&amp;gt; Login Succeeded
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="private-registry-basics-via-the-browser"&gt;private registry basics via the browser&lt;/h4&gt;
&lt;p&gt;How to deploy your own docker registry: &lt;a href="https://docs.docker.com/registry/deploying/"&gt;https://docs.docker.com/registry/deploying/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://docker.example.com/_ping
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;{}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://docker.example.com/info
https://docker.example.com/version
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;note these commands may not be enabled or available in your private registry version &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://docker.example.com/v1/repositories/library/ubuntu/tags
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;{"13.04": "5e47ac691989afcd10285ea4e67b46bc0fdc98d90844e57a6d4221c1e3ab4388"}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://docker.example.com/v1/repositories/micros/baseimage-ubuntu/tags
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;{"latest": "5a14c1498ff4983793f6e5eddd16868dbad257195f0e85c66ece94d881ecb28f"}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://docker.example.com/v1/repositories/micros/baseimage-ubuntu/images
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list of the images available: [{"id":"8254ff58b098b72425854555204171352a69f5427ba83dee4642ba45d301d0b1"}]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://docker.example.com/v1/repositories/micros/baseimage-ubuntu/json
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;inspect an image (what OS, kernel, etc.) {"arch": "amd64", "docker_go_version": "go1.3.3", "docker_version": "1.3.3", "kernel": "3.16.7-tinycore64", "last_update": 1426041024, "os": "linux"}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://docker.example.com/v1/repositories/myuser/nginx/0348bf1e7cc54327b8c9ce8407c5b3eadade1ef1771d642d08ae16a6aad5bed5/json
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;inspect a very specific image (by id)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="searching-a-private-docker-registry"&gt;Searching a private docker registry&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://registry.hub.docker.com/v1/search?q=pfeiffer
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the public docker registry search query, deprecated in APIv2 so no longer functional&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker search docker.example.com/myuser
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the cli command returns a listing of all of the images for a user, deprecated in APIv2 so no longer functional&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If there is a proxy in front: &lt;code&gt;docker search user:password@docker.example.com/myuser&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -s -X GET https://user:password@docker.example.com/v1/search
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;LIST ALL IMAGES: or use a browser https://docker.example.com/v1/search&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET https://user:password@docker.example.com/v1/search?q=ubuntu
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;https://docker.example.com/v1/search?q=ubuntu
{"num_results": 4, "query": "ubuntu", "results": [{"description": null, "name": "example/ubuntu"}, {"description": null, "name": "library/ubuntu"}, {"description": null, "name": "micros/baseimage-ubuntu-ansible"}, {"description": null, "name": "micros/baseimage-ubuntu"}]}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-14-04"&gt;https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-14-04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 10 Jul 2014 17:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-07-10:docker-intro-install-run-and-port-forward/</guid><category>docker</category><category>containers</category></item><item><title>Markdown syntax cheatsheet</title><link>https://blog.john-pfeiffer.com/markdown-syntax-cheatsheet/</link><description>
&lt;h3 id="markdown-syntax"&gt;Markdown Syntax&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;html &amp;lt;em&amp;gt; is markdown &lt;code&gt;*emphasis* or _italics_&lt;/code&gt; = &lt;em&gt;emphasis&lt;/em&gt; or &lt;em&gt;italics&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;html &amp;lt;strong&amp;gt; is markdown &lt;code&gt;**strong* or __bold__&lt;/code&gt; = &lt;strong&gt;strong&lt;/strong&gt; or &lt;strong&gt;bold&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;html strikethrough is not supported but can just be &lt;code&gt;&amp;lt;del&amp;gt;strikethrough&amp;lt;/del&amp;gt;&lt;/code&gt; = &lt;del&gt;strikethrough&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;blockquote&amp;gt; is markdown &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;at the start of each line&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;html unordered list &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; = &lt;code&gt;- item&lt;/code&gt; or alternatives: &lt;code&gt;+ item&lt;/code&gt; , &lt;code&gt;* item&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;hr /&amp;gt; is markdown &lt;code&gt;- - -&lt;/code&gt; or alternatives: &lt;code&gt;* * *&lt;/code&gt; , &lt;code&gt;***&lt;/code&gt; , &lt;code&gt;*****&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;a href= for hyper links is:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;http://blog.john-pfeiffer.com&amp;gt;&lt;/code&gt; converts into a link that is automatically turned clickable:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href="http://johnpfeiffer.bitbucket.org"&amp;gt;http://johnpfeiffer.bitbucket.org&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[an example](http://example.com/ "ExampleTitle")&lt;/code&gt; &lt;a href="/about-john-pfeiffer" title="ExampleTitle"&gt;an example&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;both absolute and relative links are supported, as well as reference links that are defined elsewhere:
&lt;code&gt;This is [an example][someid]&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;[someid]: http://example.com/  "Optional Title Here"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li&gt;numbered list &lt;code&gt;1&lt;/code&gt; at the beginning of each line&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;any digit will do, the numbering is rendered in order&lt;/li&gt;
&lt;li&gt;ensure the numbered list is surrounded by empty lines&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Inline code&lt;/strong&gt; is markdown `backtick around the text` = &lt;code&gt;backtick around the text&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A code block&lt;/strong&gt; is markdown &lt;code&gt;indent 4 spaces or 1 tab&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;a blank line in the code block still needs to be indented&lt;/li&gt;
&lt;li&gt;ensure the code block is surrounded by empty lines&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;:::text or :::bash at the top of a code block will control the syntax highlighting, see &lt;a href="http://pygments.org/docs/lexers"&gt;http://pygments.org/docs/lexers&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="h1"&gt;H1&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;# H1&lt;/code&gt;&lt;/p&gt;
&lt;h6 id="h6"&gt;H6&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;###### H6&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="tables-are-sometimes-not-supported-but"&gt;Tables are (sometimes) not supported but...&lt;/h3&gt;
&lt;h4 id="table-with-left-justified-github-flavored-markdown"&gt;Table with left justified (GitHub Flavored Markdown)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;|in|out|other|
|---|---|---|
|yes|no|maybe|
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;in&lt;/th&gt;
&lt;th&gt;out&lt;/th&gt;
&lt;th&gt;other&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;maybe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*emphasis*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;emphasis&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;
&lt;h4 id="table-with-text-center-aligned"&gt;Table with text center aligned&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;|short|long centered|
|:-:|:-:|
|y|n|
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;short&lt;/th&gt;
&lt;th align="center"&gt;long centered&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;y&lt;/td&gt;
&lt;td align="center"&gt;n&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;
&lt;h4 id="html-table"&gt;HTML Table&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;header&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;first column in row 1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;2nd column&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;http://daringfireball.net/projects/markdown/syntax&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 02 Jul 2014 20:21:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-07-02:markdown-syntax-cheatsheet/</guid><category>markdown</category><category>html</category></item><item><title>Creating a static web site with Bitbucket</title><link>https://blog.john-pfeiffer.com/creating-a-static-web-site-with-bitbucket/</link><description>&lt;ol&gt;
&lt;li&gt;create a bitbucket account with username&lt;/li&gt;
&lt;li&gt;create a repo named username.bitbucket.org&lt;/li&gt;
&lt;li&gt;mkdir username.bitbucket.org&lt;/li&gt;
&lt;li&gt;cd username.bitbucket.org&lt;/li&gt;
&lt;li&gt;echo "hi" &amp;gt; index.html&lt;/li&gt;
&lt;li&gt;git init .&lt;/li&gt;
&lt;li&gt;git add&lt;/li&gt;
&lt;li&gt;git commit -m "first site index"&lt;/li&gt;
&lt;li&gt;git remote add origin git@bitbucket.org:username/username.bitbucket.org.git&lt;/li&gt;
&lt;li&gt;git push origin master&lt;/li&gt;
&lt;li&gt;git branch --set-upstream master origin/master&lt;/li&gt;
&lt;li&gt;git pull&lt;/li&gt;
&lt;li&gt;https://username.bitbucket.org&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+Bitbucket"&gt;https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+Bitbucket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scroll down to the comments:
&lt;em&gt;You can setup a CNAME for your account .  You cannot set up a CNAME for a static website hosted on Bitbucket.  The account you setup a CNAME for may have a repository that represents a static website.&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Pfeiffer</dc:creator><pubDate>Mon, 30 Jun 2014 20:20:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-06-30:creating-a-static-web-site-with-bitbucket/</guid><category>programming</category></item><item><title>How to set up a Pelican static blog site</title><link>https://blog.john-pfeiffer.com/how-to-set-up-a-pelican-static-blog-site/</link><description>
&lt;p&gt;Pelican is an open source project that converts static text files into an html site.&lt;/p&gt;
&lt;p&gt;Why use a static site generator (pelican) instead of a hosted blog platform or a CMS (Content Management System)?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Because less is more and you should use the right tool for the right job&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A static site made of html pages is very easy to maintain&lt;/li&gt;
&lt;li&gt;It is also more secure and performance is good too =)&lt;/li&gt;
&lt;li&gt;Allows for straightforward use of version control (git)&lt;/li&gt;
&lt;li&gt;Developers prefer to be able to customize and add functionality (python and javascript)&lt;/li&gt;
&lt;li&gt;Using widely adopted open source software reduces risk (more contributors, more testers, more bugfixes)&lt;/li&gt;
&lt;li&gt;Using a widely adopted platform increases leverage (themes, plugins, tutorials, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="install-pelican"&gt;Install Pelican&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo pip install pelican Markdown beautifulsoup4&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;installing both the pelican and the Markdown packages&lt;/li&gt;
&lt;li&gt;beautifulsoup4 is a dependency for the later step of the elegant theme TOC and search plugins&lt;/li&gt;
&lt;li&gt;optionally use virtualenv venv; source venv/bin/activate&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pelican-quickstart&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to pelican-quickstart v3.3.0.
This script will help you create a new Pelican-based website.
Please answer the following questions so this script can generate the files needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.]
&amp;gt; What will be the title of this web site? johnpfeiffer.bitbucket.org
&amp;gt; Who will be the author of this web site? john pfeiffer
&amp;gt; What will be the default language of this web site? [en]
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)
&amp;gt; What is your URL prefix? (see above example; no trailing slash) https://johnpfeiffer.bitbucket.org
&amp;gt; Do you want to enable article pagination? (Y/n)
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n)
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n)
&amp;gt; Do you want to upload your website using FTP? (y/N)
&amp;gt; Do you want to upload your website using SSH? (y/N)
&amp;gt; Do you want to upload your website using Dropbox? (y/N)
&amp;gt; Do you want to upload your website using S3? (y/N)
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)
Done. Your new project is available at /home/ubuntu/BLOG
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;tree&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.
├── content
├── develop_server.sh
├── fabfile.py
├── Makefile
├── output
├── pelicanconf.py
└── publishconf.py

2 directories, 5 files
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="create-content"&gt;Create Content&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vi content/hello_world.md&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Title: My first blog post
Date: 2014-06-21 20:20
Tags: python
Slug: my-first-blog-post
Author: John Pfeiffer
Summary: Short version for index and feeds

This is the content of my first blog post.
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;optional UI markdown editor: 
&lt;code&gt;sudo apt-get install retext&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="run-a-dev-server-to-see-the-results-locally"&gt;Run a dev server to see the results locally&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;make devserver&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;...Starting up Pelican and pelican.server...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;./develop_server.sh stop&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;stop the dev server (required if reloading the .conf file)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;This only works with the basic first setup, after that it is better to manually use multiple screens:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make clean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make regenerate&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;auto detects any content changes and reloads itself&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cd output; python -m SimpleHTTPServer&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Serving HTTP on 0.0.0.0 port 8000 ... (Control + C to quit)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;http://localhost:8000&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/latest/publish.html"&gt;http://docs.getpelican.com/en/latest/publish.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="setup-a-static-pages-directory"&gt;Setup a static Pages directory&lt;/h4&gt;
&lt;p&gt;Besides lots of articles in categories it can be useful to have a few pages like About or Contact
    mkdir -p content/pages
    echo "Title: About Us" &amp;gt; content/pages/about.md&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.getpelican.com/en/latest/content.html#pages"&gt;http://docs.getpelican.com/en/latest/content.html#pages&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="publish"&gt;Publish&lt;/h3&gt;
&lt;p&gt;I just use the pelicanconf output rather than publishconf, and I use git with a bitbucket static html site.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="example-pelican-configuration-file"&gt;Example pelican configuration file&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Contains the elegant theme and tipue search plugin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*- #
from __future__ import unicode_literals

AUTHOR = u'john pfeiffer'
SITENAME = u'johnpfeiffer'
SITEURL = u'https://blog-john-pfeiffer.com'
OUTPUT_PATH = 'output/'
DEFAULT_DATE_FORMAT = '%Y-%m-%d'
TIMEZONE="America/Los_Angeles"

# Feed generation is usually not desired when developing
FEED_ALL_ATOM = None
CATEGORY_FEED_ATOM = None
TRANSLATION_FEED_ATOM = None

# clean urls for pages , trailing slash to support HTTPS
PAGE_URL = '{slug}/'
PAGE_SAVE_AS = '{slug}/index.html'
# clean urls for articles
ARTICLE_SAVE_AS = '{slug}/index.html'
ARTICLE_URL = '{slug}/'

DEFAULT_PAGINATION = 10

THEME = 'themes/pelican-elegant'
PLUGIN_PATHS = ['plugins']
PLUGINS = ['sitemap', 'extract_toc', 'tipue_search', 'post_stats']
MD_EXTENSIONS = ['codehilite(css_class=highlight)', 'extra', 'headerid', 'toc']
DIRECT_TEMPLATES = (('index', 'tags', 'categories','archives', 'search', '404'))
STATIC_PATHS = ['theme/images', 'images']

SITEMAP = {
    'format': 'xml',
    'priorities': {
        'articles': 0.5,
        'indexes': 0.5,
        'pages': 0.5
     },
    'changefreqs': {
        'articles': 'monthly',
        'indexes': 'daily',
        'pages': 'monthly'
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Hint: if you use SSL (e.g. cloudflare) then make sure your SITEURL is https and there are trailing slashes on your clean url helpers PAGE_URL and ARTICLE_URL otherwise you may get mixed content warnings or mixed http and https links in your output html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp -a pelicanconf.py publishconf.py
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Update publishconf.py with any final tweaks that should occur only in Production&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="pelican-themes"&gt;Pelican Themes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pelican.readthedocs.org/en/latest/pelican-themes.html"&gt;http://pelican.readthedocs.org/en/latest/pelican-themes.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir themes
cp -a pelican-themes/elegant themes/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the lazy way, the correct way is to only copy in the theme you are using ;)&lt;/p&gt;
&lt;p&gt;FYI For the elegant with tipuesearch you need to also install the tipuesearch plugin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://moparx.com/2014/04/adding-search-capabilities-within-your-pelican-powered-site-using-tipue-search/"&gt;http://moparx.com/2014/04/adding-search-capabilities-within-your-pelican-powered-site-using-tipue-search/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="depedency-management-by-vendoring-in-version-control"&gt;Depedency Management by Vendoring in Version Control&lt;/h3&gt;
&lt;p&gt;Dependencies are always hard and leveraging the work of others (themes and plugins) means you have to consider how to manage changes to those moving parts too.&lt;/p&gt;
&lt;p&gt;Using your Build/CI/CD server to grab the latest themes/plugins is a mistake because while you would benefit from any new features and bug fixes you will also get burned (yes it has happened to me!) when you are publishing a blog post and suddenly your site doesn't work.  &lt;/p&gt;
&lt;p&gt;(Oh are you using Continuous Post Deploy Smoke Tests and Realtime Everything Monitoring to detect this on your blog?)&lt;/p&gt;
&lt;p&gt;I highly recommend "vendoring" by copying pelican-elegant into the themes subdirectory in your version control.&lt;/p&gt;
&lt;p&gt;This sort of pinning makes an explicit choice that will ensure your site will continue to work until you choose to next upgrade.  Pinning in the Build/CI/CD server by git sha will also work but makes it harder to keep everything in one place for development.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The drawback of "vendoring" is the technical debt by the inevitable customization that occurs in this "directory separated" fork of the original&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="pelican-plugins"&gt;Pelican Plugins&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;https://github.com/getpelican/pelican-plugins&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/getpelican/pelican-plugins
mkdir plugins
cp -a pelican-plugins/sitemap plugins/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;note this is the lazy way, a more precise way would be to only copy in the plugins used&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="hacking-listjs-and-per-article-word-count-into-a-theme"&gt;Hacking ListJS and per Article word count into a theme&lt;/h3&gt;
&lt;p&gt;Basically once you get the hang of the config file format (just python really) and the templating engine (HTML with some jinja2) you can add all sorts of interesting pieces.&lt;/p&gt;
&lt;p&gt;In this example I leverage some javascript and another pelican plugin (python) to allow sorting and filtering on more data than the usual "archives.html" provides.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"article-list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;date&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;title&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort=&lt;/span&gt;&lt;span class="s"&gt;"wordcount"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;word count&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort=&lt;/span&gt;&lt;span class="s"&gt;"category"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;category&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Find by filter"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"margin-top: 10px; height: 16px;"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="ni"&gt;&amp;amp;nbsp;&lt;/span&gt; from &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;dates&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; articles

    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;articles&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;categories&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;article&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;articles&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-right: 10px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;pubdate=&lt;/span&gt;&lt;span class="s"&gt;"pubdate"&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.date.isoformat&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.locale_date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{%&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;article.subtitle&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;small&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.subtitle&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/small&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;em&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wordcount"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.stats&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'wc'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; words)&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;em&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"category"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.category&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
...
...
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    var options = {
        valueNames: [ 'date', 'title', 'wordcount', 'category'],
        page: 1000
    };
    var hackerList = new List('article-list', options);
    hackerList.sort('date', { order: "desc" })
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.john-pfeiffer.com/listjs-sort-filters-search-and-more-for-html-lists-and-tables-in-javascript/"&gt;https://blog.john-pfeiffer.com/listjs-sort-filters-search-and-more-for-html-lists-and-tables-in-javascript/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/post_stats"&gt;https://github.com/getpelican/pelican-plugins/tree/master/post_stats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="advanced-skipping-the-makefile"&gt;Advanced: skipping the Makefile&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican --help
pelican ./content -o ./output -s ./publishconf.py
cd output ; python -m SimpleHTTPServer
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="importing-from-drupal-with-pelican-import"&gt;Importing from Drupal with pelican-import&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Hack the Drupal files to allow a lot more than 10 items per feed&lt;/strong&gt;
&lt;code&gt;grep -r 'items per feed' .&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;learned from drupal-7.28/modules/system/system.module&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi modules/system/system.admin.inc&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$form['feed_default_items']&lt;/p&gt;
&lt;p&gt;Add to the dropdown choices of 10, 15, 30 etc. the option of 999&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;feedparser&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pelican.readthedocs.org/en/latest/settings.html"&gt;https://pelican.readthedocs.org/en/latest/settings.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tweaking default syntax highlighting:&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pygments.org/docs/lexers"&gt;http://pygments.org/docs/lexers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pygments.org/demo"&gt;http://pygments.org/demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/docker/src"&gt;https://bitbucket.org/johnpfeiffer/docker/src&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 21 Jun 2014 20:21:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2014-06-21:how-to-set-up-a-pelican-static-blog-site/</guid><category>python</category><category>pelican</category><category>blog</category><category>static site</category></item><item><title>Cumulus compatible S3, nginx, and HMAC signed requests</title><link>https://blog.john-pfeiffer.com/cumulus-compatible-s3-nginx-and-hmac-signed-requests/</link><description>&lt;p&gt;With the exceptionally fast, reliable and popular web server &lt;strong&gt;&lt;a href="http://nginx.org/"&gt;nginx&lt;/a&gt;&lt;/strong&gt; as a front end customers can use a browser to access their uploaded files via a simple URL, the same as the SaaS Amazon S3 implementation, without knowing about the &lt;strong&gt;&lt;a href="http://www.nimbusproject.org/doc/nimbus/faq/#what-is-cumulus"&gt;Cumulus backend&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately there were edge cases around the encodings of spaces, pluses, slashes, etc. where nginx + Cumulus was returning "Access Denied" when trying to GET a file.&lt;/p&gt;
&lt;p&gt;Examining the relevant RFC's (&lt;a href="http://tools.ietf.org/html/rfc3986#section-2.1"&gt;http://tools.ietf.org/html/rfc3986#section-2.1&lt;/a&gt;), PHP
(&lt;a href="http://php.net/manual/en/function.rawurlencode.php"&gt;http://php.net/manual/en/function.rawurlencode.php&lt;/a&gt;) and Python  ﻿(&lt;a href="http://docs.python.org/2/library/urllib.html"&gt;http://docs.python.org/2/library/urllib.html&lt;/a&gt;) references, and examining the logs, I could see the files were PUT correctly, &lt;a href="http://s3tools.org/s3cmd"&gt;s3cmd&lt;/a&gt; could retrieve the  binary objects (files) from Cumulus fine... but the logs were showing a change in the URL's.&lt;/p&gt;
&lt;p&gt;Increasing the &lt;a href="http://nginx.org/en/docs/debugging_log.html"&gt;debugging in nginx&lt;/a&gt;, digging into the &lt;a href="https://github.com/nimbusproject/nimbus/tree/master/cumulus"&gt;Cumulus source
code&lt;/a&gt; and &lt;a href="https://github.com/anomalizer/ngx_aws_auth"&gt;nginx AWS Authentication Module&lt;/a&gt; (and adding more logging statements in  Python and C respectively), I realized there was a mismatch in the REST URL signature process.&lt;/p&gt;
&lt;p&gt;Since Cumulus was using the open source &lt;a href="http://docs.pythonboto.org/en/latest/"&gt;Python Boto library&lt;/a&gt; which is actually &lt;a href="https://github.com/boto/boto/graphs/contributors"&gt;supported&lt;/a&gt; by &lt;a href="http://aws.amazon.com/sdkforpython"&gt;Amazon&lt;/a&gt; (the de facto rulers of the S3 "standard"), I decided that their &lt;a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html"&gt;signing process&lt;/a&gt; was authoritative.&lt;/p&gt;
&lt;p&gt;A lot of digging into nginx configs and source, along with learning a bit about nginx module development and hacking the source of the ngx_aws_auth module, I finally came up with a matching signature process, (success!)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ngx_aws_auth/ngx_http_aws_auth.c&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* uses the source and length to copy the uri, does not escape characters&lt;/span&gt;
&lt;span class="cm"&gt;(the argument signature is compatible with ngx_escape_uri)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="kt"&gt;uintptr_t&lt;/span&gt; &lt;span class="nf"&gt;ngx_uri_extractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ngx_uint_t&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uintptr_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* customized to calculate the signature using the non escaped URI, compatible with cumulus boto&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ngx_int_t&lt;/span&gt;
&lt;span class="nf"&gt;ngx_http_aws_auth_variable_s3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ngx_http_request_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ngx_http_variable_value_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="kt"&gt;uintptr_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ngx_http_aws_auth_conf_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;aws_conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;md_len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;EVP_MAX_MD_SIZE&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;aws_conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ngx_http_get_module_loc_conf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ngx_http_aws_auth_module&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;    * This Block of code added to deal with paths that are not on the root -&lt;/span&gt;
&lt;span class="cm"&gt;    * that is, via proxy_pass that are being redirected and the base part of&lt;/span&gt;
&lt;span class="cm"&gt;    * the proxy url needs to be taken off the beginning of the URI in order&lt;/span&gt;
&lt;span class="cm"&gt;    * to sign it correctly.&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
    &lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ngx_palloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// allow room for escaping&lt;/span&gt;
    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;    u_char *uri_end = (u_char*) ngx_escape_uri(uri,r-&amp;gt;uri.data, r-&amp;gt;uri.len, NGX_ESCAPE_URI);&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
    &lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;uri_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ngx_uri_extractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;unparsed_uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;unparsed_uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NGX_ESCAPE_URI&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;uri_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// null terminate&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 26 Nov 2013 17:10:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-11-26:cumulus-compatible-s3-nginx-and-hmac-signed-requests/</guid><category>c</category><category>nginx</category></item><item><title>Selenium headless browser automated testing with PhantomJS and Python</title><link>https://blog.john-pfeiffer.com/selenium-headless-browser-automated-testing-with-phantomjs-and-python/</link><description>
&lt;h3 id="overview"&gt;Overview&lt;/h3&gt;
&lt;p&gt;selenium: an automation framework for interactions with websites (like a programmatic browser) &lt;a href="http://docs.seleniumhq.org/docs/02_selenium_ide.jsp#introduction"&gt;http://docs.seleniumhq.org/docs/02_selenium_ide.jsp#introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;webdriver is the interface: &lt;a href="http://selenium-python.readthedocs.org/api.html"&gt;http://selenium-python.readthedocs.org/api.html&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;useful for looking up things like &lt;code&gt;driver.current_url&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;phantomjs: headless browser &lt;a href="http://phantomjs.org"&gt;http://phantomjs.org&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="install"&gt;Install&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install selenium
wget &amp;lt;https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2&amp;gt;
tar -xjvf phantomjs-1.9.8-linux-x86_64.tar.bz2
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="run"&gt;Run&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;phantomjs-1.9.8-linux-x86_64/bin/phantomjs --webdriver=9134
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ghostdriver included and running on port 9134&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="example-python-script"&gt;Example python script&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;mini script to just show usage&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;

&lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PhantomJS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;executable_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'/opt/phantomjs-1.9.8-linux-x86_64/bin/phantomjs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9134&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"http://127.0.0.1"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;
&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"done"&lt;/span&gt;


&lt;span class="n"&gt;phantomjs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;phantomjs&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9134&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="advanced-python-example"&gt;Advanced Python example&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;more complete example with python unittest framework (used the Firefox Selenium IDE plugin -&amp;gt; Export)&lt;/p&gt;
&lt;p&gt;logs in, asserts there is an Admin tab which when clicked shows Group Info&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;By&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.common.keys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Keys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.support.ui&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Select&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.common.exceptions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;NoSuchElementException&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SeleniumAdminLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PhantomJS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/opt/phantomjs-1.9.2-linux-x86_64/bin/phantomjs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9134&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;implicitly_wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://myexample.org"&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verificationErrors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept_next_alert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_selenium_admin_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"/"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"admin@example.org"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"password"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"password"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"mypassword"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"signin"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://myexample.org/home"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_element_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LINK_TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Launch the web app"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_element_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CSS_SELECTOR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"a.admin &amp;gt; span"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_css_selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"a.admin &amp;gt; span"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Group Info"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_css_selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"h1"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_element_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;NoSuchElementException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_alert_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_to_alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;NoAlertPresentException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;close_alert_and_get_its_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;alert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_to_alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;alert_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept_next_alert&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;alert_text&lt;/span&gt;
            &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept_next_alert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;([],&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verificationErrors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="basic-polling-with-firefox-and-mac"&gt;Basic Polling with Firefox and Mac&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.firefox.firefox_binary&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FirefoxBinary&lt;/span&gt;


&lt;span class="n"&gt;FIREFOX_MAC_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/Applications/Firefox.app/Contents/MacOS/firefox-bin'&lt;/span&gt;
&lt;span class="n"&gt;G_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://g.example.com'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Usage error: requires a username'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior&lt;/span&gt;
    &lt;span class="n"&gt;new_server_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;%b%H%M%S'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FIREFOX_MAC_PATH&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FirefoxBinary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firefox_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FIREFOX_MAC_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;G_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'login'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_css_selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'input[type="submit"]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{}/deploy/simple_server'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;G_URL&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{}-{}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_server_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hostname'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hostname'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'{}-{}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_server_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_css_selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'input[type="submit"]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://{}-{}.example.com'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_server_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'requested build of {}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'waiting for {}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'done'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="references"&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://phantomjs.org/release-1.8.html"&gt;http://phantomjs.org/release-1.8.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ariya/phantomjs/wiki/API-Reference"&gt;https://github.com/ariya/phantomjs/wiki/API-Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs"&gt;http://www.realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 17 Sep 2013 21:04:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-09-17:selenium-headless-browser-automated-testing-with-phantomjs-and-python/</guid><category>selenium</category><category>python</category><category>programming</category><category>test</category><category>phantomjs</category><category>CI</category></item><item><title>Attack of the Spiders, Bots, and Crawlers</title><link>https://blog.john-pfeiffer.com/attack-of-the-spiders-bots-and-crawlers/</link><description>&lt;p&gt;It is well known that search engines need to index what the contents of webpages are in order to return accurate results to Users. It may not be well known how much traffic that generates.&lt;/p&gt;
&lt;p&gt;In this sampling from my logs (not representative of anything), 57% of the traffic in the log is from bots (I'm not turning them away, skip to the end on how to do that).&lt;/p&gt;
&lt;p&gt;Drupal (CMS) is remarkably good at making content for bots to read so it's not surprising they're all slurping, and of course if you want to be popular you need all of those indexes to know about you...&lt;/p&gt;
&lt;h3 id="how-many-hits-from-each-kind-of-bot"&gt;How many hits from each kind of bot&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | wc -l&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1108 hits&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat john-pfeiffer.access | grep -v &amp;quot;Baiduspider&amp;quot; | grep -v &amp;quot;bingbot&amp;quot; | grep -v &amp;quot;YandexBot&amp;quot; | grep -v &amp;quot;Sogou&amp;quot; | grep -v &amp;quot;Mail.RU\_Bot&amp;quot; | grep -v &amp;quot;Googlebot&amp;quot; | grep -v &amp;quot;SISTRIX Crawler&amp;quot; | grep -v &amp;quot;MJ12bot&amp;quot; | wc -l  
637
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Googlebot" | wc -l&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;105 hits from &lt;a href="https://en.wikipedia.org/wiki/Googlebot"&gt;https://en.wikipedia.org/wiki/Googlebot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "bingbot" | wc -l&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;96 hits from &lt;a href="http://en.wikipedia.org/wiki/Bingbot"&gt;http://en.wikipedia.org/wiki/Bingbot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Baiduspider" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;93 hits from &lt;a href="http://baidu.com/search/spider_english.html"&gt;http://baidu.com/search/spider_english.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "SISTRIX Crawler" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;76 hits from &lt;a href="http://crawler.sistrix.net"&gt;http://crawler.sistrix.net&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "YandexBot" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;64 hits from &lt;a href="http://www.botopedia.org/user-agent-list/search-bots/yandex-bot"&gt;http://www.botopedia.org/user-agent-list/search-bots/yandex-bot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Mail.RU\_Bot" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;23 hits from &lt;a href="http://www.webmasterworld.com/search_engine_spiders/4520951.htm"&gt;http://www.webmasterworld.com/search_engine_spiders/4520951.htm&lt;/a&gt; , &lt;a href="http://www.botopedia.org/user-agent-list/search-bots/mailru-bot"&gt;http://www.botopedia.org/user-agent-list/search-bots/mailru-bot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "MJ12bot" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;12 hits from &lt;a href="http://www.majestic12.co.uk/projects/dsearch/mj12bot.php"&gt;http://www.majestic12.co.uk/projects/dsearch/mj12bot.php&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Sogou" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7 hits from &lt;a href="http://www.botopedia.org/user-agent-list/search-bots/sogou-spider"&gt;http://www.botopedia.org/user-agent-list/search-bots/sogou-spider&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="more-info-on-bots-and-crawlers"&gt;More Info on Bots and Crawlers&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.incapsula.com/the-incapsula-blog/item/393-know-your-top-10-bots"&gt;http://www.incapsula.com/the-incapsula-blog/item/393-know-your-top-10-bots&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://searchenginewatch.com/article/2067357/Bye-bye-Crawler-Blocking-the-Parasites"&gt;http://searchenginewatch.com/article/2067357/Bye-bye-Crawler-Blocking-the-Parasites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Besides robots.txt you are pretty much left with ban by User-Agent or IP Address Range.)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 20 Jul 2013 23:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-07-20:attack-of-the-spiders-bots-and-crawlers/</guid></item><item><title>Logic Puzzles</title><link>https://blog.john-pfeiffer.com/logic-puzzles/</link><description>
&lt;h4 id="how-to-have-two-1-hour-uneven-burning-fuses-burn-for-45-mins"&gt;How to have two 1 hour uneven burning fuses burn for 45 mins?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;light only ONE end &lt;/li&gt;
&lt;li&gt;burn both ends = 30 mins&lt;/li&gt;
&lt;li&gt;when it finishes, light the other end&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="three-light-bulbs-are-all-off-in-one-room-three-light-switches-in-another"&gt;Three light bulbs are all off in one room, three light switches in another...&lt;/h4&gt;
&lt;p&gt;...If you can't see the bulbs from the switch room, how can you tell which connects to which if you can only enter the bulb room once?&lt;/p&gt;
&lt;p&gt;Flip the first switch for one bulb for many minutes, then turn it off.&lt;/p&gt;
&lt;p&gt;Flip the second switch on. Enter the bulb room, the bulb on connects to the second switch, the warmer of the two bulbs off is the first switch.  &lt;/p&gt;
&lt;h4 id="at-night-4-people-arrive-at-one-side-of-a-bridge"&gt;At night 4 people arrive at one side of a bridge...&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;...that can only support 2 people at a time and they have only one flashlight.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If each were alone here's how fast they could cross: the first in 15 minutes, the second in 10 minutes, the third in 2 minutes and the fourth in 1 minute. &lt;/p&gt;
&lt;p&gt;If the flashlight only has 17 minutes how do they cross?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The 1 minute and 2 minute cross together (takes 2 minutes). &lt;/li&gt;
&lt;li&gt;The 1 minute returns (total is now 3 minutes). &lt;/li&gt;
&lt;li&gt;The 10 and 5 minutes cross together (total is now 13 minutes). &lt;/li&gt;
&lt;li&gt;The 2 minute returns (the total is now 15 minutes). &lt;/li&gt;
&lt;li&gt;Finally the 1 minute and 2 minute cross again (17 minutes and complete).  &lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="3-bags-contain-all-oranges-all-apples-or-a-mix-of-oranges-and-apples"&gt;3 bags contain all oranges, all apples, or a mix of oranges and apples...&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;...BUT the label on each definitely is incorrect. How do you find out which bag has what and how many bags to you need to open?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Choose the one labeled "mixed" and if it contains apples, therefore the remaining bag which is labelled oranges must not contain all oranges and so must be the mixed one.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="there-are-3-red-hats-and-2-blue-hats-in-a-bag"&gt;There are 3 red hats and 2 blue hats in a bag....&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Andrew, Bob, and Carol each reach into the box and place one of the hats on their own head.
They cannot see what color hat they have chosen.
Then they sit down all facing in the same direction: Andrew &amp;lt;-- Bob &amp;lt;--Carol&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Such that Carol can see what color Bob and Andrew are wearing. &lt;/li&gt;
&lt;li&gt;Bob can see what color Andrew is wearing. &lt;/li&gt;
&lt;li&gt;Andrew can't see anyone's hats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The first person to say what color hat they are wearing wins.&lt;/strong&gt; 
The winner of the game gets a billion dollars... But if they guess wrong, they die... so nobody wants to try "just guessing"...&lt;/p&gt;
&lt;p&gt;SO... after they grab their hats and sit down, a long time passes...&lt;/p&gt;
&lt;p&gt;Eventually somebody says "I have the answer" and successfully states what color hat they have.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Since Carol can see Andrew and Bob, if they both were wearing blue hats she would immediately know that she was wearing red, so unlikely that a long time would pass before she answered (and take the money)...&lt;/li&gt;
&lt;li&gt;Therefore Andrew and Bob have one red hat and one blue hat. (And Carol knows there's a 33% chance she's got a blue hat and a 66% chance she's got a red hat).&lt;/li&gt;
&lt;li&gt;Since Bob knows that Carol delayed in answering "a long time passes" AND he can see the color of hat that Andrew is wearing, then&lt;/li&gt;
&lt;li&gt;Either Andrew is wearing a blue hat, and therefore Bob must be wearing a red hat.  &lt;/li&gt;
&lt;li&gt;Or Andrew is wearing a red hat, and therefore Bob must be wearing a blue hat.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bob successfully answers...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(unless Carol is more interested in sadistic plots and even though she knows both Bob and Andrew have blue hats she just waits to watch Bob get it wrong...)&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NOTE: this variation from the NY Times is slightly incorrect as it is essentially asking why Andrew wins... 
The clue in order for "Andrew" to know (the delay) is the same as what Bob uses, but Bob will be able to deduce it much faster. 
(Again, Carol could be deliberately waiting to watch Andrew fail too...)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://tierneylab.blogs.nytimes.com/2009/03/16/the-puzzle-of-the-3-hats"&gt;http://tierneylab.blogs.nytimes.com/2009/03/16/the-puzzle-of-the-3-hats&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="one-ball-of-8-weighs-more-than-the-other-7-how-can-you-identify-it-with-two-measurings-of-a-balance-scale"&gt;One ball of 8 weighs more than the other 7, how can you identify it with two measurings of a balance scale?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&lt;br/&gt;
Weigh 3 vs 3, if they match then weigh one of the "good" ones against
one of the remaining ones, if they're unequal you have the heavier one,
if they're equal then the last is the heavy one.  &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If the 3 vs 3 do not match then take two of the heavy side and weigh
them against each other: if they're unequal you have the heavier one, if
they're equal then the last of the heavy side is the heavy one.&lt;br/&gt;
&lt;/p&gt;
&lt;h4 id="one-ball-of-12-weighs-more-or-less-than-the-other-11-how-can-you-identify-it-and-whether-its-heavier-or-lighter-with-three-measurings-of-a-balance-scale"&gt;One ball of 12 weighs more OR less than the other 11, how can you identify it and whether it's heavier or lighter with three measurings of a balance scale?&lt;/h4&gt;
&lt;p&gt;&lt;/p&gt;&lt;br/&gt;
&lt;em&gt;Weigh 4 vs 4, label them ABCD and EFGH. If they balance then weigh
"good" ABC against WXY. If the second weighing balances then weigh Z
against A to see if Z is light or heavy. If the second weighing has WXY
heavier or lighter (make a note of which as we have solved whether the
imbalance is heavy or light), then weigh W with X. If they balance then
Y is the imbalance from step 2 (heavier or lighter). If they do not
balance then whichever matches the imbalance from step 2 is the off
ball.&lt;/em&gt;

&lt;p&gt;IF at the first weighing ABCD was lighter than EFGH, in the second
weighing rotate such that ABCZ is weighed against D with "good" XYZ. If
...&lt;/p&gt;

&lt;p&gt;Note that this problem can also be solved by carefully measuring the
results as the left and right groups of 4 are rotated.&lt;/p&gt;

&lt;p&gt;12 becomes 4 v 4 v (4) - if the balance the last 4 are easy  &lt;/p&gt;
&lt;p&gt;if not balanced: 1,2,5 vs 3,6,12&lt;/p&gt;

&lt;h4 id="5-pots-of-10g-coins-but-one-contains-9g-coins-which-pot-is-off-by-measuring-the-weight-once"&gt;5 pots of 10g coins BUT one contains 9g coins, which pot is off by measuring the weight once?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&lt;br/&gt;
1 from pot 1, 2 from pot 2, 3 from pot 3, 4 from pot 4, and 5 from pot 5  &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Expected weight should be 150g: if it’s 149 then pot 1 , if it’s 148 then pot 2, etc.&lt;br/&gt;
&lt;/p&gt;
&lt;h4 id="how-can-you-use-a-weighted-coin-ie-head-more-than-tails-and-still-create-a-fair-system-of-flips"&gt;How can you use a weighted coin (i.e. head more than tails) and still create a fair system of flips?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Aggregate the outcomes: treat two flips as a single result such that heads then tails = Heads, and tails followed by heads = Tails.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="10-are-heads-of-n-coins-how-to-create-2-groups-that-have-the-same-number-of-heads-up"&gt;10 are heads of N coins, how to create 2 groups that have the same number of heads up?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Take any 10 from N and flip them (inverted will mirror the number of heads in the N - 10 group)&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="3-colors-of-socks-how-many-to-take-out-until-you-have-a-pair"&gt;3 colors of socks: how many to take out until you have a pair?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;4 (1 of each and the last 1 must match 1 of the first 3)&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="100-closed-lockers-open-all-of-the-lockers-on-the-first-pass"&gt;100 closed lockers, open all of the lockers on the first pass...&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt; ...close every 2nd locker on the second pass, on the third pass and for every 3rd locker open it if it's closed, close it if it's open.&lt;/strong&gt;
&lt;strong&gt;After the hundreth pass, how many lockers are open?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;br/&gt;
i.e. after the hundreth the locker 12 was opened on pass 1, closed pass 2, opened pass 3, closed pass 4, opened pass 6, closed pass 12.  &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;locker 13 (prime) was opened on pass 1 and closed on pass 13.&lt;/p&gt;
&lt;p&gt;locker 16: opened on 1, closed on 2, opened on 4, closed on 8, opened on 16!&lt;/p&gt;

&lt;p&gt;There are 9 perfect squares under one hundred: 1, 4, 9, 16, 25, 36, 49, 64, 81  &lt;/p&gt;

&lt;h4 id="incomplete-puzzles"&gt;Incomplete Puzzles&lt;/h4&gt;

&lt;p&gt;Minutes Degrees from 12:00 = mins * 6  &lt;/p&gt;
&lt;p&gt;Hours Degrees From 12:00 = hours * 30 + mins * .5&lt;/p&gt;

&lt;p&gt;Find 1 duplicate in 100 numbers of 1 to 100 = add them up and subtract sum of 1 to 100  &lt;/p&gt;
&lt;p&gt;ALTERNATIVES: hashmap O(1), sort and then scan looking for a double entry (nLog(n) if mergesort? + n ), n\^2 if using brute force&lt;/p&gt;

&lt;p&gt;Sorted List rotated: find min = naive if curr &amp;lt; prev is O(n)  &lt;/p&gt;
&lt;p&gt;Binary Search compare first and mid, if ordered then reset is in partition &amp;gt; mid (RIGHT)  &lt;/p&gt;
&lt;p&gt;find any elem: if &amp;gt; first and Ordered then LEFT&lt;/p&gt;

&lt;p&gt;BAD: binary search against the "fixed" list using the min location as an offset with mod list size ?&lt;/p&gt;

&lt;p&gt;nxn matrix of numbers in ascending order in both dimensions how would you go about finding if the number y is in the matrix.&lt;/p&gt;

&lt;p&gt;5623 players in a tournament, how many matches must be played?&lt;/p&gt;
&lt;p&gt;5622 (everybody loses at least once except the winner)&lt;/p&gt;

&lt;h4 id="unsolved-puzzles"&gt;Unsolved Puzzles&lt;/h4&gt;

&lt;p&gt;N different flavored Cakes (each with a different Volume) for K people,
each person should get an equal volume of Cake (but only a single
flavor)  &lt;/p&gt;
&lt;p&gt;V’s 1, 2, 3, 4 for 5 people  &lt;/p&gt;
&lt;p&gt;add all volumes together / people = “theoretical best” (i.e. 10/5 = 2)  &lt;/p&gt;
&lt;p&gt;start with 2 cakes, 4 + 1, so V=1 for K, next 4 + 2 = doesn’t work, 4+3
doesn’t work  &lt;/p&gt;
&lt;p&gt;3 cakes: 4+3+2 = 9 BUT not divisible by 5  &lt;/p&gt;
&lt;p&gt;1 * 1, 2 * 1, 2 * 1 = waste 5 ( 10-5)  &lt;/p&gt;
&lt;p&gt;discard&lt;/p&gt;

&lt;h4 id="random-facts"&gt;Random Facts&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;World Population (estimated 2012) = 7 Billion  &lt;/li&gt;
&lt;li&gt;US Population (estimated 2012) = 316 Million  &lt;/li&gt;
&lt;li&gt;Earth circumference (equator) = 24,901.55 miles (40,075.16 kilometers)&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 13 May 2013 05:31:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-05-13:logic-puzzles/</guid></item><item><title>Best Computer Science online and a More Complete Education</title><link>https://blog.john-pfeiffer.com/best-computer-science-online-and-a-more-complete-education/</link><description>
&lt;p&gt;Learning is a life long pleasure.  Programming and Computer Science are challenging and take time but luckily the resources available today make it almost free to get access to top quality materials.&lt;/p&gt;
&lt;h2 id="things-often-not-covered-by-universities"&gt;Things Often Not Covered By Universities&lt;/h2&gt;
&lt;p&gt;For some reasons the "ivory tower" does not include all of the nitty gritty practicalities required to actually ship and run software in the real world.&lt;/p&gt;
&lt;p&gt;Here are some of those topics I wish were covered in the first year.  (Hint: they also help immensely in being gainfully employed)&lt;/p&gt;
&lt;h3 id="version-control"&gt;Version Control&lt;/h3&gt;
&lt;p&gt;The fundamental tool of managing change which was strangely ignored for a very long time in the short history of programming&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Version_control"&gt;https://en.wikipedia.org/wiki/Version_control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/what-is-version-control"&gt;https://www.atlassian.com/git/tutorials/what-is-version-control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://betterexplained.com/articles/a-visual-guide-to-version-control"&gt;https://betterexplained.com/articles/a-visual-guide-to-version-control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="quality-and-testing"&gt;Quality and Testing&lt;/h3&gt;
&lt;p&gt;The practical answer to actually attempting to validate correctness in practice (rather than just logical proofs)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Software_testing"&gt;https://en.wikipedia.org/wiki/Software_testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://martinfowler.com/bliki/TestPyramid.html"&gt;http://martinfowler.com/bliki/TestPyramid.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html"&gt;https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.se-radio.net/2015/04/episode-224-sven-johann-and-eberhard-wolff-on-technical-debt"&gt;http://www.se-radio.net/2015/04/episode-224-sven-johann-and-eberhard-wolff-on-technical-debt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="build-and-continuous-integration"&gt;Build and Continuous Integration&lt;/h3&gt;
&lt;p&gt;Automation as a solution to the shortage of developer time and the exponential increase in software and complexity&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Build_automation"&gt;https://en.wikipedia.org/wiki/Build_automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.drdobbs.com/tools/a-build-system-for-complex-projects-part/218400678"&gt;http://www.drdobbs.com/tools/a-build-system-for-complex-projects-part/218400678&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;https://en.wikipedia.org/wiki/Continuous_integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thoughtworks.com/continuous-integration"&gt;https://www.thoughtworks.com/continuous-integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.se-radio.net/2009/04/episode-133-continuous-integration-with-chris-read/"&gt;http://www.se-radio.net/2009/04/episode-133-continuous-integration-with-chris-read/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="performance-and-devops-and-operations"&gt;Performance and DevOps and Operations&lt;/h3&gt;
&lt;p&gt;With hardware having kept up with Moore's Law and "the cloud" providing so much elastic compute, performance is now often an afterthought. Additionally, how to quickly and efficiently deliver software has coalesced into the term DevOps.&lt;/p&gt;
&lt;p&gt;The big idea being that software that is not actually running is not very valuable ;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Software_performance_testing"&gt;https://en.wikipedia.org/wiki/Software_performance_testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jmeter.apache.org/"&gt;http://jmeter.apache.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.opensourcetesting.org/category/performance/"&gt;http://www.opensourcetesting.org/category/performance/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/DevOps"&gt;https://en.wikipedia.org/wiki/DevOps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/devops"&gt;https://www.atlassian.com/devops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/devops/what-is-devops/"&gt;https://aws.amazon.com/devops/what-is-devops/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.se-radio.net/2015/02/episode-221-jez-humble-on-continuous-delivery/"&gt;http://www.se-radio.net/2015/02/episode-221-jez-humble-on-continuous-delivery/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know it sounds crazy that Computer Science practitioners (or Developers) should sully their hands with "Operations" but to truly understand the problem domains watching the logs or responding to an outage can vastly change how we write code.&lt;/p&gt;
&lt;p&gt;Importantly, seeing latency, traffic volume, and environmental issues makes us thankful when we do get back to the keyboard and can just focus on the theoretical aspects of a problem.&lt;/p&gt;
&lt;h2 id="introduction-to-programming"&gt;Introduction to Programming&lt;/h2&gt;
&lt;h3 id="stanford-programming-methodology"&gt;Stanford "Programming Methodology"&lt;/h3&gt;
&lt;p&gt;by Mehran Sahami (very fun and Java is a good starting point)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://see.stanford.edu/see/lecturelist.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111"&gt;http://see.stanford.edu/see/lecturelist.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/programming-methodology/id384232896"&gt;https://itunes.apple.com/us/itunes-u/programming-methodology/id384232896&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="harvard"&gt;Harvard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.extension.harvard.edu/open-learning-initiative/intensive-introduction-computer-science"&gt;http://www.extension.harvard.edu/open-learning-initiative/intensive-introduction-computer-science&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="an-introduction-to-interactive-programming-in-python"&gt;An Introduction to Interactive Programming in Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/interactivepython"&gt;https://www.coursera.org/course/interactivepython&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="mit"&gt;MIT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/introduction-computer-science-python-mitx-6-00-1x"&gt;https://www.edx.org/course/introduction-computer-science-python-mitx-6-00-1x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="design-of-computer-programs"&gt;Design of Computer Programs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs101"&gt;https://www.udacity.com/course/cs101&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/ud036"&gt;https://www.udacity.com/course/ud036&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs212"&gt;https://www.udacity.com/course/cs212&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs253"&gt;https://www.udacity.com/course/cs253&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="udemy"&gt;Udemy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/learn-how-to-code/#about-course"&gt;https://www.udemy.com/learn-how-to-code/#about-course&lt;/a&gt; (paid)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="networking"&gt;Networking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://online.stanford.edu/course/intro-computer-networking-winter-2014"&gt;http://online.stanford.edu/course/intro-computer-networking-winter-2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="algorithms"&gt;Algorithms&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Algorithms of course!&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="khan-academy"&gt;Khan Academy&lt;/h3&gt;
&lt;p&gt;A really well designed introductory algorithms course: &lt;a href="https://www.khanacademy.org/computing/computer-science/algorithms"&gt;https://www.khanacademy.org/computing/computer-science/algorithms&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="mit_1"&gt;MIT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011"&gt;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/introduction-to-algorithms/id341597754"&gt;https://itunes.apple.com/us/itunes-u/introduction-to-algorithms/id341597754&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures"&gt;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="stanford"&gt;Stanford&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://see.stanford.edu/see/lecturelist.aspx?coll=11f4f422-5670-4b4c-889c-008262e09e4e"&gt;http://see.stanford.edu/see/lecturelist.aspx?coll=11f4f422-5670-4b4c-889c-008262e09e4e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/programming-abstractions/id384232917"&gt;https://itunes.apple.com/us/itunes-u/programming-abstractions/id384232917&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/algo"&gt;https://www.coursera.org/course/algo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.coursera.org/course/algo2"&gt;https://www.coursera.org/course/algo2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.coursera.org/learn/algorithm-design-analysis"&gt;https://www.coursera.org/learn/algorithm-design-analysis&lt;/a&gt; NEW!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="princeton"&gt;Princeton&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/algs4partI"&gt;https://www.coursera.org/course/algs4partI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/algs4partII"&gt;https://www.coursera.org/course/algs4partII&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="theoretical-computer-science"&gt;Theoretical Computer Science&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs313"&gt;https://www.udacity.com/course/cs313&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="information-and-models"&gt;Information and Models&lt;/h2&gt;
&lt;h3 id="mit_2"&gt;MIT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-050j-information-and-entropy-spring-2008/"&gt;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-050j-information-and-entropy-spring-2008/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/information-and-entropy/id424082281"&gt;https://itunes.apple.com/us/itunes-u/information-and-entropy/id424082281&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="university-of-michigan"&gt;University of Michigan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://class.coursera.org/modelthinking-2012-002/class/index"&gt;https://class.coursera.org/modelthinking-2012-002/class/index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="harvard_1"&gt;Harvard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.extension.harvard.edu/open-learning-initiative/bits"&gt;http://www.extension.harvard.edu/open-learning-initiative/bits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="software-engineering"&gt;Software Engineering&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/security"&gt;https://www.coursera.org/course/security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/ud805"&gt;https://www.udacity.com/course/ud805&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs258"&gt;https://www.udacity.com/course/cs258&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="vanderbilt"&gt;Vanderbilt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/posa"&gt;https://www.coursera.org/course/posa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="mit_3"&gt;MIT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/"&gt;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="practice-practice-practice"&gt;PRACTICE, PRACTICE, PRACTICE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://codingbat.com/python"&gt;http://codingbat.com/python&lt;/a&gt; (beginner)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projecteuler.net"&gt;https://projecteuler.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://acm.timus.ru"&gt;http://acm.timus.ru&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spoj.com/problems/classical"&gt;http://www.spoj.com/problems/classical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/onlinejudge"&gt;https://leetcode.com/onlinejudge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codeforces.com/problemset"&gt;http://codeforces.com/problemset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com"&gt;https://www.hackerrank.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tour.golang.org"&gt;https://tour.golang.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 09 May 2013 16:52:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-05-09:best-computer-science-online-and-a-more-complete-education/</guid><category>computer science</category><category>cs</category><category>mooc</category><category>free education</category><category>distance learning</category><category>cs on iphone</category><category>programming videos</category><category>programming</category><category>online learning</category></item><item><title>Jinja2, a web html template layout for everyone</title><link>https://blog.john-pfeiffer.com/jinja2-a-web-html-template-layout-for-everyone/</link><description>
&lt;p&gt;Web development used to be so hard (and static). (read &amp;amp;#60;bold&amp;amp;#62;)&lt;/p&gt;
&lt;p&gt;Now everyone realizes (along with version control and automated testing) that decoupling views and displays from dynamic code makes everyone's life easier! &lt;/p&gt;
&lt;p&gt;(Refresh your colors and layout without having to touch your backend logic! Re-engineer your persistence layer and business logic but leave your uber wow design intact! Allow front end and back end developers to work in parallel!)&lt;/p&gt;
&lt;p&gt;Jinja2 is an excellent framework for python developers (to go with your uwsgi + django or webapp2) to get html templates (do not repeat yourself!) that can show off all of your backend python data magic with some pizazz.&lt;/p&gt;
&lt;p&gt;It's fairly easy to do all sorts of powerful things (like accessing variables, loops, etc.)
&lt;a href="http://jinja.pocoo.org/docs"&gt;http://jinja.pocoo.org/docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When combined with css and jquery (i.e. tablesorter) you can quickly throw together a decent looking interactive experience.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jquery.com/download"&gt;http://jquery.com/download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tablesorter.com/docs"&gt;http://tablesorter.com/docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's my budding ode to sorting algorithms (yes, Google App Engine is free)
&lt;a href="http://john-pfeiffer.appspot.com/algorithms"&gt;http://john-pfeiffer.appspot.com/algorithms&lt;/a&gt;  #TODO: finish using jquery tablesorter&lt;/p&gt;
&lt;p&gt;A webapp2 project layout and source code example (please excuse the code formatting, you'll need to imagine the correct indents)...&lt;/p&gt;
&lt;h2 id="file-layout"&gt;File Layout&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;assets/css/style.css  
assets/css/tablesorter.css  
assets/images/css/asc.gif (bg.gif, desc.gif, etc.)  
assets/js/jquery-1.9.1.min.js  
assets/js/jquery.tablesorter.min.js

mainhandler.py  
templates/main.html  
app.yaml (only required if using AppEngine)  
main.py  
routes.py
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="appyaml"&gt;app.yaml&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jinja2&lt;/span&gt;  
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;  
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;  
&lt;span class="n"&gt;static_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;  
&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;  
&lt;span class="n"&gt;static_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;  
&lt;span class="n"&gt;static_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;  
&lt;span class="n"&gt;static_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/.*&lt;/span&gt;  
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;


&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;  
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;  
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latest&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="mainpy"&gt;main.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;routes&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;entry_points&lt;/span&gt;

&lt;span class="c1"&gt;# must be named "application" for uwsgi webapp2, in AppEngine it should be "app"&lt;/span&gt;
&lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;entry_points&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="routespy"&gt;routes.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mainhandler&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;

&lt;span class="c1"&gt;# Map url's to handlers in the handlers module , optionally choosing specific target method and request type&lt;/span&gt;
&lt;span class="n"&gt;entry_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/main'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handler_method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'get'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="mainhandlerpy"&gt;mainhandler.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jinja2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="c1"&gt;# weird hack to ensure we go up a directory level to correctly find the templates directory&lt;/span&gt;
&lt;span class="n"&gt;jinja_environment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# a list of tuples&lt;/span&gt;
        &lt;span class="n"&gt;result_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'apples'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bananas'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'cherries'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; 
        &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja_environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'templates/main.html'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;template_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'fruits and colors'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'body_content'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'fruits and colors'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'result_list'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;result_list&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'text/html'&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template_values&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="templatesmainhtml"&gt;templates/main.html&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt; &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/html"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/html; charset=utf-8"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/css/tablesorter.css"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/js/jquery-1.9.1.min.js"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/js/jquery.tablesorter.min.js"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;body_content&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"results"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"tablesorter"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;thead&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Fruit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Color&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;thead&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tbody&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;result_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tbody&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#results"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;tablesorter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sortList&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;sort&lt;/span&gt; &lt;span class="nx"&gt;descending&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="non-google-app-engine-etcinitduwsgish-might-look-like"&gt;Non Google App Engine /etc/init.d/uwsgi.sh might look like:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# 2013-02-22 johnpfeiffer&lt;/span&gt;

start&lt;span class="o"&gt;(){&lt;/span&gt;
    /usr/local/bin/uwsgi --pidfile /var/www/pidfile-uwsgi.pid --touch-reload&lt;span class="o"&gt;=&lt;/span&gt;/var/www/pidfile-uwsgi.pid --logto2 /var/www/python-john/uwsgi.log --http :8080 --wsgi-file /var/www/main.py --pythonpath /var/www/ &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="nb"&gt;kill&lt;/span&gt; -INT &lt;span class="sb"&gt;`&lt;/span&gt;cat /var/www/pidfile-uwsgi.pid&lt;span class="sb"&gt;`&lt;/span&gt;
    sleep &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

status&lt;span class="o"&gt;(){&lt;/span&gt;
    ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep uwsgi
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; in
status&lt;span class="o"&gt;)&lt;/span&gt;
    status
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
start&lt;span class="o"&gt;)&lt;/span&gt;
    start
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
stop&lt;span class="o"&gt;)&lt;/span&gt;
    stop
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
reload&lt;span class="p"&gt;|&lt;/span&gt;restart&lt;span class="p"&gt;|&lt;/span&gt;force-reload&lt;span class="o"&gt;)&lt;/span&gt;
    stop
    start
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
**&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|reload}"&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="alternate-flask-jinja2-example"&gt;Alternate Flask Jinja2 Example&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/tddflask/src"&gt;https://bitbucket.org/johnpfeiffer/tddflask/src&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 30 Apr 2013 04:35:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-04-30:jinja2-a-web-html-template-layout-for-everyone/</guid><category>programming</category><category>jinja2</category><category>python</category><category>webapp2</category><category>tablesorter.js</category></item><item><title>Fix Byobu infinite scroll bug on Ubuntu 12.04 Precise Pangolin</title><link>https://blog.john-pfeiffer.com/fix-byobu-infinite-scroll-bug-on-ubuntu-1204-precise-pangolin/</link><description>
&lt;p&gt;After installing Ubuntu Server 12.04 (Precise Pangolin) I was disappointed to see that one of my favorite utilities, byobu (an improvement on the classic screen = multi ssh screen with status and hotkeys), had an infinite scroll problem. &lt;/p&gt;
&lt;p&gt;(Quick, type exit before your screen disappears entirely!)&lt;/p&gt;
&lt;p&gt;Amazingly this bug shipped in the official Ubuntu Release even though byobu 5.17 lists it as a fixed.&lt;/p&gt;
&lt;h2 id="easy-workaround-is"&gt;Easy workaround is:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;byobu-config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Toggle status notifications&lt;/li&gt;
&lt;li&gt;Use the arrow keys to scroll down and space bar to disable the logo &lt;/li&gt;
&lt;li&gt;Tab and Enter to Apply -&amp;gt; then Exit &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now you can safely use "byobu" on the command line in Ubuntu 12.04! (apparently not persisting in 12.04.2?)&lt;/p&gt;
&lt;p&gt;p.s. Control + a (screen mode) and then Control + a , then c ... 
now you've got multiple screens! &lt;/p&gt;
&lt;p&gt;(Control + a + 0 to go to screen 0, control + a + a to jump to the last used screen)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.ubuntu.com/community/Byobu"&gt;https://help.ubuntu.com/community/Byobu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Of course you can always use normal BASH navigation: &lt;a href="http://www.gnu.org/software/bash/manual/html_node/Commands-For-Moving.html"&gt;http://www.gnu.org/software/bash/manual/html_node/Commands-For-Moving.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A fix for Windows Putty users ... Window -&amp;gt; Translation -&amp;gt; UTF8 (the ISO-8859 + byobu UTF8 logo = ugh)&lt;/p&gt;
&lt;p&gt;(An untested alternate workaround: .byobu/status::tmux_left : "logo" -&amp;gt; "#logo" )&lt;/p&gt;
&lt;h2 id="update-for-12042"&gt;UPDATE for 12.04.2!&lt;/h2&gt;
&lt;p&gt;byobu in Ubuntu 12.04 uses tmux as the backend. You can change this by running byobu-select-backend and selecting screen&lt;/p&gt;
&lt;p&gt;Thanks for the tip Eric!&lt;/p&gt;
&lt;p&gt;ALTERNATE:
    .byobu/status::tmux_left : "logo" -&amp;gt; "#logo" )&lt;/p&gt;
&lt;h2 id="byobu-installation-and-basics"&gt;byobu installation and basics&lt;/h2&gt;
&lt;h3 id="installing-a-better-tmux-multiple-remote-virtual-console-screens"&gt;installing a better tmux (multiple remote virtual console screens)&lt;/h3&gt;
&lt;p&gt;BYOBU = BETTER GUI FOR SCREEN + CPU/RAM USAGE + DATETIME &lt;a href="https://help.ubuntu.com/community/Byobu"&gt;https://help.ubuntu.com/community/Byobu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(an improvement on the classic "screen" = multi ssh screen with status and hotkeys)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install byobu
byobu-config
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Toggle status notifications -&amp;gt; spacebar to disable logo -&amp;gt; Apply -&amp;gt; Exit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;byobu
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;F2 ... or control + a , then c to create a new screen&lt;/li&gt;
&lt;li&gt;F3 to move to a previous screen&lt;/li&gt;
&lt;li&gt;F4 to move to the next screen&lt;/li&gt;
&lt;li&gt;control + a , then 0 = to go to screen zero, etc.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;control + a , then a = to go to the last used screen&lt;/p&gt;
&lt;p&gt;byobu-enable&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;will have it start on every ssh connection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;byobu-disable&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;stops auto-starting of byobu&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="if-byobu-seems-stuck-when-using-vi"&gt;If byobu seems stuck when using vi&lt;/h3&gt;
&lt;p&gt;try Control + Q  (or Control + S)&lt;/p&gt;
&lt;h3 id="moving-the-cursor-in-byobu-f7-and-beyond"&gt;Moving the cursor in byobu (f7 and beyond)&lt;/h3&gt;
&lt;p&gt;F7 = scrollback mode , vi like commands to search and copy paste&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;h - Move the cursor left by one character
j - Move the cursor down by one line
k - Move the cursor up by one line
l - Move the cursor right by one character
0 - Move to the beginning of the current line
$ - Move to the end of the current line
G - Moves to the specified line (defaults to the end of the buffer)
/ - Search forward
? - Search backward
n - Moves to the next match, either forward or backword
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="screen-the-previous-generation-of-remote-virtual-console-utility"&gt;screen - the previous generation of remote virtual console utility&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install screen
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SSH into your machine and type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;screen           //to start your screen session.
ctrl + a + c     //to create a new session
ctrl + a + d     //to disconnect from the screen session, then log out of your SSH session
when you get disconnected/dropped by the network then log back in using SSH

screen -ls          //shows current screen sessions

There is a screen on:
        19894.pts-1.servername    (Attached)
1 Socket in /var/run/screen/S-username.


screen -r    //When you're ready to reconnect to the last screen session

screen -d 19894         //detach the screen from the other ssh session
screen -r 19894         //connect to the screen to see everything's ok

ctrl-a-d                //detach from the screen

who -u                  //find the id of the "lost" ssh session
sudo kill sessionid     //kill off the disconnected ssh session

screen -r 19894         //resume work

screen -r -d                //force detach an existing and attach a session
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;setting the config for no visual bell!&lt;/p&gt;
&lt;p&gt;in your /home/USERNAME (or /root) directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch .screenrc

vbell off
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 15 Feb 2013 17:36:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-02-15:fix-byobu-infinite-scroll-bug-on-ubuntu-1204-precise-pangolin/</guid><category>byobu</category><category>linux</category><category>ubuntu</category></item><item><title>Google App Engine Python</title><link>https://blog.john-pfeiffer.com/google-app-engine-python/</link><description>
&lt;h2 id="setting-up"&gt;Setting Up&lt;/h2&gt;
&lt;p&gt;Sign up for Google App Engine (gmail + SMS verification)&lt;/p&gt;
&lt;p&gt;"Google App Engine (often referred to as GAE or simply App Engine, and also used by the acronym GAE/J) is a platform as a service (PaaS) cloud computing platform for developing and hosting web applications in Google-managed data centers."&lt;/p&gt;
&lt;p&gt;The Admin Dashboard is linked to your Google profile &lt;a href="https://console.cloud.google.com"&gt;https://console.cloud.google.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Login and create an Application (e.g. named john-pfeiffer reachable at &lt;a href="http://john-pfeiffer.appspot.com"&gt;http://john-pfeiffer.appspot.com&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Download and extract the SDK (e.g. gae-python.zip)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd google_appengine
cp -a new_project_template helloworld
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Inside is the minimum file structucture required to have an application&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;app.yaml is the configuration file&lt;/li&gt;
&lt;li&gt;index.yaml is how to override configuration for database indices&lt;/li&gt;
&lt;li&gt;favicon.ico is the icon that appears in the browser tab or bookmark &lt;a href="https://en.wikipedia.org/wiki/Favicon"&gt;https://en.wikipedia.org/wiki/Favicon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;main.py is the entrypoint for your application&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h3 id="a-first-helloworldappyaml"&gt;A first helloworld/app.yaml&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pfeiffer&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;\.&lt;/span&gt;&lt;span class="n"&gt;ico&lt;/span&gt;
  &lt;span class="n"&gt;static_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
  &lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;\.&lt;/span&gt;&lt;span class="n"&gt;ico&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.*&lt;/span&gt;
  &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;
  &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;yaml files are indentation based&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="a-revised-yaml-file"&gt;A revised yaml file&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.*&lt;/span&gt;
  &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;
  &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the newer requirement is to NOT include the application name or version, apparently that is passed as a CLI parameter &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/standard/python/getting-started/hosting-a-static-website#creating_the_appyaml_file"&gt;https://cloud.google.com/appengine/docs/standard/python/getting-started/hosting-a-static-website#creating_the_appyaml_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/sdk/gcloud/reference/config/set"&gt;https://cloud.google.com/sdk/gcloud/reference/config/set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="helloworldmainpy"&gt;helloworld/main.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Hi World!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="view-the-app-on-your-local-machine"&gt;View the app on your local machine&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd google_appengine
./dev_appserver.py ./helloworld

    INFO 2012-12-27 04:20:20,399 dev_appserver_multiprocess.py:655]
    Running application dev\~john-pfeiffer on port 8080:
    http://localhost:8080

    INFO 2012-12-27 04:20:20,399 dev_appserver_multiprocess.py:657] Admin console is available at: http://localhost:8080/\_ah/admin
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="upload-the-app-to-google-app-engine"&gt;Upload the app to Google App Engine&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="nt"&gt;appcfg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;py&lt;/span&gt; &lt;span class="nt"&gt;update&lt;/span&gt; &lt;span class="nt"&gt;helloworld&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;appengine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;com&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;john-pfeiffer&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Starting&lt;/span&gt; &lt;span class="nt"&gt;update&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;app&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;john-pfeiffer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Getting&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;resource&lt;/span&gt; &lt;span class="nt"&gt;limits&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Scanning&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt; &lt;span class="nt"&gt;local&lt;/span&gt; &lt;span class="nt"&gt;disk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Cloning&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;static&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Cloning&lt;/span&gt; &lt;span class="nt"&gt;3&lt;/span&gt; &lt;span class="nt"&gt;application&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Uploading&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;blobs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Uploaded&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;blobs&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Compilation&lt;/span&gt; &lt;span class="nt"&gt;starting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Compilation&lt;/span&gt; &lt;span class="nt"&gt;completed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;44&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Starting&lt;/span&gt; &lt;span class="nt"&gt;deployment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;45&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Checking&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="nt"&gt;deployment&lt;/span&gt; &lt;span class="nt"&gt;succeeded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;45&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Will&lt;/span&gt; &lt;span class="nt"&gt;check&lt;/span&gt; &lt;span class="nt"&gt;again&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt; &lt;span class="nt"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;45&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Checking&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="nt"&gt;deployment&lt;/span&gt; &lt;span class="nt"&gt;succeeded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;45&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Will&lt;/span&gt; &lt;span class="nt"&gt;check&lt;/span&gt; &lt;span class="nt"&gt;again&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt; &lt;span class="nt"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;45&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Checking&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="nt"&gt;deployment&lt;/span&gt; &lt;span class="nt"&gt;succeeded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="nt"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;45&lt;/span&gt; &lt;span class="nt"&gt;PM&lt;/span&gt; &lt;span class="nt"&gt;Deployment&lt;/span&gt; &lt;span class="nt"&gt;successful&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Verify with &lt;code&gt;curl http://john-pfeiffer.appspot.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="download-an-existing-application-from-google-app-engine"&gt;Download an existing application from Google App Engine&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /tmp/myapp
appcfg.py download_app -A john-pfeiffer /tmp/myapp
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will use OAuth 2 to open a browser/give you a link where you can confirm the action
Once confirmed it will download the latest version off your application code and files
This is independent of and not a replacement for version control!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="updating-the-application-for-routes-and-post-requests"&gt;Updating the Application for routes and POST requests&lt;/h2&gt;
&lt;p&gt;It is easy to use the MVC pattern while inheriting from the framework &lt;a href="https://webapp-improved.appspot.com/guide/handlers.html"&gt;https://webapp-improved.appspot.com/guide/handlers.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="appyaml"&gt;app.yaml&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the version has to be explicitly updated in order to deploy something new&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pfeiffer&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
  &lt;span class="n"&gt;static_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
  &lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/.*&lt;/span&gt;
  &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;
  &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="mainpy"&gt;main.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hello John Pfeiffer!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PageOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;span class="s2"&gt;            PageOne&lt;/span&gt;
&lt;span class="s2"&gt;        """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PageTwo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'PageTwo'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;get_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;
        &lt;span class="n"&gt;post_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_values&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/page-one'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PageOne&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/page-two'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PageTwo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;run_wsgi_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="update-the-google-app-engine-application-code-that-is-running-in-the-cloud"&gt;Update the google app engine application code that is running in the cloud&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./appcfg.py update john-pfeiffer
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;update does not publish the new version yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./appcfg.py set_default_version john-pfeiffer
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;or you can use the WebUI dashboard to change the default or delete a Version for an Application Instance&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/config/appref"&gt;https://cloud.google.com/appengine/docs/python/config/appref&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="a-simple-single-file-crud-app-using-the-google-appengine-database"&gt;A simple single file CRUD app using the Google AppEngine Database&lt;/h2&gt;
&lt;p&gt;Google AppEngine applications can leverage the platforms NoSQL database &lt;a href="https://cloud.google.com/appengine/docs/python/datastore/"&gt;https://cloud.google.com/appengine/docs/python/datastore/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The example application below also shows how to override the default 404 and 500 errors with custom jinja2 templates which would require installing the jinja2 dependency and an extra subdirectory named templates with the HTML&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.john-pfeiffer.com/jinja2-a-web-html-template-layout-for-everyone/"&gt;https://blog.john-pfeiffer.com/jinja2-a-web-html-template-layout-for-everyone/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/ndb/"&gt;https://cloud.google.com/appengine/docs/python/ndb/&lt;/a&gt; has improved and deprecated the DB Datastore library used below&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# 2013-01-20 johnpfeiffer&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;traceback&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cgi&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jinja2&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google.appengine.ext&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;

&lt;span class="n"&gt;jinja_environment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="vm"&gt;__file__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringProperty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringProperty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringProperty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTimeProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;auto_now_add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# TODO: navigation bar&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"""Welcome &amp;lt;br/&amp;gt;&lt;/span&gt;

&lt;span class="s2"&gt;         &amp;lt;form action="/listnodes" method="get"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;             &amp;lt;input type="submit" value="List Nodes"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;form action="/createnodeform" method="get"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;             &amp;lt;input type="submit" value="Create Node"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;form action="/deletenode" method="post"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;             &amp;lt;label&amp;gt;id&amp;lt;/label&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type="text" id="id" name="id" /&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;             &amp;lt;input type="submit" value="Delete Node"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="s2"&gt;         """&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ListNodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Welcome &amp;lt;br/&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; , &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; , &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; ( &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; )&amp;lt;br/&amp;gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"id"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"parent_id"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"created"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; , &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; , &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; ( &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; )&amp;lt;br/&amp;gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# TODO: use template system&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreateNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Create uses POST'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;post_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;

    &lt;span class="c1"&gt;# todo extract to helper for input validation and sanitization&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"nodename"&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"id"&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"parentid"&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ERROR: DEBUG:'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post_values&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;

        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'successfully created: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;form action="/listnodes" method="get"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;             &amp;lt;input type="submit" value="List Nodes"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        """&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreateNodeForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;span class="s2"&gt;         &amp;lt;form action="/createnode" method="post"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;            &amp;lt;table&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;label&amp;gt;node name&amp;lt;/label&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type="text" id="nodename" name="nodename" /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;label&amp;gt;id&amp;lt;/label&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type="text" id="id" name="id" /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;label&amp;gt;parent id&amp;lt;/label&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type="text" id="parentid" name="parentid" /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type="submit"&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;            &amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;          &amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        """&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# TODO: use template system&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DeleteNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Delete uses POST'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;post_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;

    &lt;span class="c1"&gt;# todo extract to helper for input validation and sanitization&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"id"&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#    q = db.Query( Node )    # keys_only is faster and cheaper than retrieving the entities&lt;/span&gt;
&lt;span class="c1"&gt;#    q.filter( "id=" , id )&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;keys_only&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"id="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;node_to_delete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;#    db.delete( )&lt;/span&gt;
&lt;span class="c1"&gt;#    node_key =          # __key__&lt;/span&gt;

    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; , &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; , &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; ( &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; )&amp;lt;br/&amp;gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"parent_id"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node_to_delete&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="c1"&gt;# url handler below -----------------------------&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainPage&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/listnodes'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ListNodes&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/createnode'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CreateNode&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/createnodeform'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CreateNodeForm&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/deletenode'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DeleteNode&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_404&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;template_dictionary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ERROR 404'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'body_content'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja_environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'templates/error.html'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template_dictionary&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_status&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_int&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle_500&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_exc&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;template_dictionary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Meow'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'body_content'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Meow.  Meow meow meow, meow meow.'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja_environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'templates/error.html'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template_dictionary&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_status&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error_handlers&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;handle_404&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error_handlers&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;handle_500&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 26 Jan 2013 15:01:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2013-01-26:google-app-engine-python/</guid><category>programming</category><category>google app engine</category><category>python</category><category>webapp2</category></item><item><title>Server Operations: Cloud versus Build Your Own</title><link>https://blog.john-pfeiffer.com/server-operations-cloud-versus-build-your-own/</link><description>&lt;p&gt;Here's my response to Jeff Atwood's calculations and incorrect conclusion about Building Your Own Server: I'm not sure I know when an organization's Production deployment doesn't need reduced
complexity/costs (people!), flexibility for load, and redundancy...&lt;/p&gt;
&lt;p&gt;"Anyway, I want to make it clear that building and colocating your own servers isn't (always) crazy, it isn't scary, heck, it isn't even particularly hard. In some situations it can make sense to build and rack your own servers, provided ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you want absolute top of the line server performance without paying thousands of dollars per month for the privilege&lt;/li&gt;
&lt;li&gt;you are willing to invest the time in building, racking, and configuring your servers&lt;/li&gt;
&lt;li&gt;you have the capital to invest up front&lt;/li&gt;
&lt;li&gt;you desire total control over the hardware&lt;/li&gt;
&lt;li&gt;you aren't worried about the flexibility of quickly provisioning new servers to handle unanticipated load&lt;/li&gt;
&lt;li&gt;you don't need the redundancy, geographical backup, and flexibility that comes with cloud virtualization"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://www.codinghorror.com/blog/2012/10/building-servers-for-fun-and-prof-ok-maybe-just-for-fun.html"&gt;http://www.codinghorror.com/blog/2012/10/building-servers-for-fun-and-prof-ok-maybe-just-for-fun.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Jeff, long time fan, first time commenter... I love building servers too and I've managed a small group of servers, I personally use Linode, and my currently company uses AWS and some internal servers...&lt;/p&gt;
&lt;p&gt;You would agree that in coding you pick the right tool for the job (scientific computing would use a different technology stack than a standard ecommerce startup website)...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;AWS is elastic (you pay a premium for being to scale up or down - and there's value to the agility with which you can change or add new services)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS RDS is a huge improvement over managing MySQL replication, and they have Elastic Load Balancing and lots of other addons that take serious Ops chops to create and maintain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server operations cost is not the raw hardware:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The biggest cost in Ops is people (same as coding), so leveraging Amazon saves on how many people you need to pay to manage your server farm (yes, SysAdmins take holidays and change jobs so cost = N+1 )... you can outsource half way by colocating but setting up the redundancy, monitoring, auto scaling, etc. becomes a physical pain (you want West Coast and East Coast  servers, right?).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The infrastructure of cooling, UPS, network (bandwidth!), backups, etc. is also a big factor in Operations (does your server room have building security? a backup generator?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My point is that for a stealth mode startup or any internal lab testing buying servers is a no brainer - do it with ESXi or OpenStack and hack away!&lt;/p&gt;
&lt;p&gt;BUT for Production you'll need some Cloud strategy (AWS competitors: RedHat OpenShift, RackSpace Cloud, IBM, ATT Compute, Google AppEngine, etc. means lower prices and improved services)&lt;/p&gt;
&lt;p&gt;Unless, as you've already mentioned, "if you happen to have hanging around a pile of cash and tech expertise that's underutilized..."&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 08 Nov 2012 17:06:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-11-08:server-operations-cloud-versus-build-your-own/</guid><category>cloud</category><category>startup planning</category><category>ops</category></item><item><title>Tomcat deployment on Openshift for free</title><link>https://blog.john-pfeiffer.com/tomcat-deployment-on-openshift-for-free/</link><description>
&lt;p&gt;openshift is the cloud PaaS offering from RedHat&lt;/p&gt;
&lt;h3 id="prerequisites-and-dependencies"&gt;Prerequisites and dependencies&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update
sudo apt-get install ruby1.9.3 git-core
//yay for ubuntu 12.04

sudo gem install rhc
//red hat openshift client
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="openshift-client-tools-setup"&gt;OpenShift Client tools setup&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rhc setup&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Created local config file: /home/ubuntu/.openshift/express.conf
The express.conf file contains user configuration, and can be transferred to different computers.
No SSH keys were found. We will generate a pair of keys for you.

2: No such file or directory
Created: /home/ubuntu/.ssh/id_rsa.pub

Your public ssh key must be uploaded to the OpenShift server. Would you like us to upload it for you? (yes/no) yes
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="rhc-commands"&gt;rhc commands&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rhc -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc domain show&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;prompts for password&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;rhc app create -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Valid application types are (nodejs-0.6, ruby-1.9, jbossas-7, python-2.6, jenkins-1.4, ruby-1.8, jbosseap-6.0, diy-0.1, php-5.3, perl-5.10)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app create -a john -t diy-0.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app show -a john&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app cartridge list&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="your-local-git-repo"&gt;Your local git repo&lt;/h3&gt;
&lt;p&gt;ON YOUR LOCAL MACHINE BROWSE TO WHERE YOU WANT TO STORE YOUR GIT REPO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone ssh://a261d0fc2932413694456e3473fdc972@APPNAME-DOMAIN.rhcloud.com/~/git/...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="repo-layout-of-johnrepo"&gt;REPO LAYOUT of ~/john/repo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.openshift/action_hooks/start - Script that gets run to start your application  
.openshift/action_hooks/stop - Script that gets run to stop your application  
.openshift/action_hooks/pre_build - Script that gets run every git push before the build  
.openshift/action_hooks/build - Script that gets run every git push as part of the build process &lt;span class="o"&gt;(&lt;/span&gt;on the CI system &lt;span class="k"&gt;if&lt;/span&gt; available&lt;span class="o"&gt;)&lt;/span&gt;  
.openshift/action_hooks/deploy - Script that gets run every git push after build but before the app is restarted  
.openshift/action_hooks/post_deploy - Script that gets run every git push after the app is restarted

diy  
misc  
README  
static/ If it exists externally exposed static content goes here
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CHANGES ARE ONE DIRECTIONAL FROM THE GIT CLONE TO THE OPENSHIFT BOX&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv diy/testrubyserver.rb ../misc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv diy/index.html ../misc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -m "moved initial test stuff to /misc"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if the app is running then a git push automatically ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Counting objects: 6, done.
Delta compression using up to 4 threads.  
Compressing objects: 100% (4/4), done.  
Writing objects: 100% (4/4), 607 bytes, done.  
Total 4 (delta 1), reused 1 (delta 0)  
remote: Stopping application...  
remote: Done  
remote: ~/git/john.git ~/git/john.git  
remote: ~/git/john.git
remote: Running .openshift/action_hooks/pre_build  
remote: Running .openshift/action_hooks/build  
remote: Running .openshift/action_hooks/deploy  
remote: Starting application...  
remote: Done  
remote: Running .openshift/action_hooks/post_deploy
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ssh 33d90ea45fd91e42096651d937e@john-pfeiffer.rhcloud.com&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;//note that HOME is /var/lib/stickshift/12315longidentifier  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cd app-root/data&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget http://mirror.cc.columbia.edu/pub/software/apache/tomcat/tomcat-7/v7.0.29/bin/apache-tomcat-7.0.29.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;tar -xzvf apache-tomcat-7.0.29.tar.gz&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;expands to 13MB, note that JAVA is already installed by default&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;rm apache-tomcat-7.0.29.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="openshift-ports-and-proxy"&gt;Openshift ports and proxy&lt;/h3&gt;
&lt;p&gt;Since OpenShift has a proxy setup that passes port 80 to your local server on port 8080, BUT  &lt;/p&gt;
&lt;p&gt;OpenShift does not allow users to bind to any port below 15000 other than 8080, so...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh 33d90ea45fd91e42096651d937e@john-pfeiffer.rhcloud.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;shows you all of the environment variables in the openShift&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;multitenant config&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env | grep INTERNAL&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OPENSHIFT_INTERNAL_PORT=8080&lt;br/&gt;
OPENSHIFT_INTERNAL_IP=127.13.29.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi app-root/data/apache-tomcat-7.0.29/conf/server.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;escape key then :x (save and quit)&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;cd app-root/data/apache-tomcat-7.0.29/bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh startup.sh &amp;amp;&amp;amp; tail -f ../logs/*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(this is how you can start it manually from within ssh, you'll have to stop it manually too!)&lt;/p&gt;
&lt;p&gt;ADDING Tomcat to your default start and stop scripts (which are used during every git push)&lt;/p&gt;
&lt;p&gt;In your local git repo there is a hidden directory ".openshift"&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd APPNAME/.openshift/action_hooks&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="vi-openshiftaction_hooksstart"&gt;vi .openshift/action_hooks/start&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#nohup $OPENSHIFT_REPO_DIR/diy/testrubyserver.rb&lt;/span&gt;
&lt;span class="nv"&gt;$OPENSHIFT_INTERNAL_IP&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_REPO_DIR&lt;/span&gt;/diy &amp;gt; &lt;span class="nv"&gt;$OPENSHIFT_LOG_DIR&lt;/span&gt;/server.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT&lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;DATA&lt;span class="se"&gt;\_&lt;/span&gt;DIR/apache-tomcat-7.0.29/bin
nohup sh startup.sh
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"completed tomcat7 startup"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="vi-openshiftaction_hooksstop"&gt;vi .openshift/action_hooks/stop&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;/apache-tomcat-7.0.29/bin  
nohup sh shutdown.sh  
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"completed tomcat7 shutdown"&lt;/span&gt;  
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;`git commit -m "removed testrubyserver.rb and added tomcat to start/stop scripts"  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://APPNAME-DOMAINNAME.rhcloud.com"&gt;http://APPNAME-DOMAINNAME.rhcloud.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="autodeploy-the-latest"&gt;Autodeploy the latest&lt;/h3&gt;
&lt;p&gt;MOVE YOUR WEBAPPS DIRECTORY TO THE GIT REPO SO THAT A GIT PUSH WILL AUTO DEPLOY THE NEWEST&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv $OPENSHIFT_DATA_DIR/apache-tomcat-7.0.29/webapps ~/john/repo/diy/webapps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ln -s ~/john/repo/diy/webapps webapps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Strongly advised to remove the manager and example apps (just deploy your .war's)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app stop -a APPNAME -p YOURPASSWORD&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;yes, it uses your RHCloud account username and password for app management&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ssh 33d90ea45fd91e42096651d937e@john-pfeiffer.rhcloud.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv ~/app-root/data/apache-tomcat-7.0.29/webapps/* app-root/repo/misc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv app-root/repo/misc/ROOT ~/app-root/data/apache-tomcat-7.0.29/webapps&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rhc app start -a APPNAME -p YOURPASSWORD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="once-youve-sshd-in"&gt;ONCE YOU'VE SSH'D IN...&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;help&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps|ls|
ctl_app start [stop|restart|status]
mysql | mongo | quota
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: sometimes it's easier to use a UI &lt;a href="https://openshift.redhat.com/app/console/applications"&gt;https://openshift.redhat.com/app/console/applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My Account -&amp;gt; Public Keys&lt;/p&gt;
&lt;p&gt;My Applications -&amp;gt; APPLICATION_NAME -&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app add-alias -a myapp --alias myapp.net&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="future-thoughts"&gt;Future Thoughts&lt;/h2&gt;
&lt;p&gt;Eclipse + m2e (maven plugin) + jetty plugin for fast and easy dependency management -&amp;gt; mvn install + added custom script can put your .war into your local openshift repo for continuous deployment.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.openshift.com/"&gt;https://www.openshift.com/&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 11 Sep 2012 13:48:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-09-11:tomcat-deployment-on-openshift-for-free/</guid><category>cloud</category><category>paas</category><category>openshift</category><category>tomcat</category></item><item><title>Creating Economies of Scale in Software Development</title><link>https://blog.john-pfeiffer.com/creating-economies-of-scale-in-software-development/</link><description>
&lt;h3 id="planning-to-be-a-successful-software-company"&gt;Planning to be a successful software company&lt;/h3&gt;
&lt;p&gt;Economies of Scale in Software Development is about planning to be successful.&lt;/p&gt;
&lt;p&gt;Software development is rather cheap when compared to physical manufacturing but that doesn't mean it doesn't cost money to create a product or service.&lt;/p&gt;
&lt;p&gt;The classic myth of the lone wolf hacker who creates a viral product runs counter to the reality of billions of dollars generated by the software industry.&lt;/p&gt;
&lt;h3 id="elements-of-a-software-team"&gt;Elements of a Software Team&lt;/h3&gt;
&lt;p&gt;Consider the many elements required to create a software product:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Developers (hiring, location, communication, etc.)  &lt;/li&gt;
&lt;li&gt;Developer tools (IDE, compiler, debugger, etc.)  &lt;/li&gt;
&lt;li&gt;QA (you do run tests of some sort, don't you?!?!)  &lt;/li&gt;
&lt;li&gt;Distribution/Release (shrink wrapped or delivered by Internet continuously, it still costs something)  &lt;/li&gt;
&lt;li&gt;Support (assuming you've actually got users)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="making-software-better-faster-cheaper"&gt;Making Software Better, Faster, Cheaper&lt;/h3&gt;
&lt;p&gt;What can you do to make your software cheaper, faster, and most importantly, better?&lt;/p&gt;
&lt;h4 id="1-use-open-source"&gt;1. Use Open Source&lt;/h4&gt;
&lt;p&gt;(like facebook, twitter, google, netflix). Leverage the crowd and reduce your costs (e.g. not buying software licenses, not paying someone to audit your software licenses, etc.)&lt;/p&gt;
&lt;p&gt;Spending money on licenses becomes cost prohibitive for large successful organizations.&lt;/p&gt;
&lt;p&gt;More importantly, get the quality of years of development by lots of different perspectives. The homogeneous gets wiped out by a single cause, get diversified!&lt;/p&gt;
&lt;p&gt;Concerns about competitive advantage based on your supply chain (e.g. the myth "using Open Source tools doesn't give you an edge") are unfounded as:&lt;/p&gt;
&lt;p&gt;a. If your competitive advantage is a "secret supplier" then your business will go bust as soon as anyone else finds out your secret.&lt;/p&gt;
&lt;p&gt;b. If you're paranoid enough to worry your competitors are messing with your tools then you shouldn't trust a closed source vendor - keep it in the open where everyone's watching.&lt;/p&gt;
&lt;p&gt;Giving back to open source projects you depend on has a multiplier effect: a healthy community project is far cheaper than paying full time to support your critical requirements and has built in support and marketing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://readwrite.com/2013/10/17/is-facebook-the-worlds-largest-open-source-company"&gt;http://readwrite.com/2013/10/17/is-facebook-the-worlds-largest-open-source-company&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnet.com/news/worlds-biggest-open-source-company-google/"&gt;http://www.cnet.com/news/worlds-biggest-open-source-company-google/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/2010/12/why-we-use-and-contribute-to-open.html"&gt;http://techblog.netflix.com/2010/12/why-we-use-and-contribute-to-open.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="2-standardization"&gt;2. Standardization&lt;/h4&gt;
&lt;p&gt;Consider the trend of large clusters of commodity hardware. Using the same internal development tools means it's easier to focus on the real problems and not get lost in translation.&lt;/p&gt;
&lt;p&gt;This doesn't mean sticking to old versions or being afraid to innovate, but make success a formula and not an accident.&lt;/p&gt;
&lt;p&gt;Larger efficiencies can be generated by getting a decent level of determinism in the workflow.&lt;/p&gt;
&lt;p&gt;This means use the same IDE, the same dependency libraries, communication channels, etc. If you have rock stars that can't learn the common tool or won't teach others why their method is better then you run the risk of a dysfunctional "all-star" time bomb.&lt;/p&gt;
&lt;p&gt;This also applies to fairness: office perks, salaries, etc. Make it an organization about transparent achievable results, not a labyrinth of back room exceptions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/2011/08/building-with-legos.html"&gt;http://techblog.netflix.com/2011/08/building-with-legos.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.quora.com/Why-hasn-t-Facebook-migrated-away-from-PHP"&gt;http://www.quora.com/Why-hasn-t-Facebook-migrated-away-from-PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spectrum.ieee.org/telecom/internet/under-the-hood-at-google-and-facebook"&gt;http://spectrum.ieee.org/telecom/internet/under-the-hood-at-google-and-facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/presentations/Development-at-Google"&gt;http://www.infoq.com/presentations/Development-at-Google&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3-reduced-specialization-and-silos"&gt;3. Reduced specialization (and silos)&lt;/h4&gt;
&lt;p&gt;System Administrator's whose sole purpose is to watch machines is a dying breed. &lt;/p&gt;
&lt;p&gt;An army of QA who manually walk through the same test plan over and over is also legacy. &lt;/p&gt;
&lt;p&gt;Start with "DRY - Do Not Repeat Yourself".&lt;/p&gt;
&lt;p&gt;Develop automation early and make the process simple and obvious. &lt;/p&gt;
&lt;p&gt;(i.e. Amazon's internal conversion to APIs &lt;a href="http://apievangelist.com/2012/01/12/the-secret-to-amazons-success-internal-apis"&gt;http://apievangelist.com/2012/01/12/the-secret-to-amazons-success-internal-apis&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This also means avoiding purchasing hardware (and the associated inventory/maintenance/overhead).&lt;/p&gt;
&lt;p&gt;The more virtual servers you buy the larger volume discount you can negotiate. It's not entirely about cost: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;you're renting somebody else's implementation of best practice &lt;/li&gt;
&lt;li&gt;you need to make your product number one, distractions from that reduce velocity.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your feature set will continually grow. (Even with careful pruning). &lt;/p&gt;
&lt;p&gt;By looking at software as the solution to quality/delivery/maintenance/etc. you can reduce your running cost to a fraction of what it would be AND be able scale up quickly when you become wildly successful.&lt;/p&gt;
&lt;p&gt;Note: people are still irreplaceable but by having a lot more Developers (and less unique specialists) you can distribute the load more evenly.&lt;/p&gt;
&lt;p&gt;Getting more cross functional individuals means less silos and less communication gaps. &lt;/p&gt;
&lt;p&gt;The network mesh effect destroys productivity if everyone's a separate bottleneck.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.learningapi.com/blog/archives/000079.html"&gt;http://www.learningapi.com/blog/archives/000079.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/2012/06/netflix-operations-part-i-going.html"&gt;http://techblog.netflix.com/2012/06/netflix-operations-part-i-going.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/articles/sw-eating-silos"&gt;http://www.infoq.com/articles/sw-eating-silos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hbr.org/2011/12/quiet-but-unsubtle-innovation.html"&gt;https://hbr.org/2011/12/quiet-but-unsubtle-innovation.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="4-make-it-real"&gt;4. Make it real&lt;/h4&gt;
&lt;p&gt;Code that lives solves problems and is valuable. &lt;/p&gt;
&lt;p&gt;Uncommitted, unused, and otherwise un-useful code costs money to debug and deconstruct; much worse it costs time.&lt;/p&gt;
&lt;p&gt;Continuous integration gets your stable unit tested code some real world bruises. Continuous deployment gets your code crunching data and making users happy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://royal.pingdom.com/2010/06/18/the-software-behind-facebook/"&gt;http://royal.pingdom.com/2010/06/18/the-software-behind-facebook/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/presentations/cd-linkedin"&gt;http://www.infoq.com/presentations/cd-linkedin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="critical-leadership"&gt;Critical Leadership&lt;/h3&gt;
&lt;p&gt;There will be bugs. &lt;/p&gt;
&lt;p&gt;Far more important are to ensure the product fits the market and have the ability to quickly fix what's broken - sometimes amputation due to business needs is critical (i.e. how Flickr the photo sensation was born &lt;a href="http://en.m.wikipedia.org/wiki/Flickr"&gt;http://en.m.wikipedia.org/wiki/Flickr&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Your team must be able to execute. &lt;/p&gt;
&lt;p&gt;You lead them by example (both the late nights and the high fives) and these real people will deliver exponential success.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.fastcompany.com/3044952/hit-the-ground-running/how-bill-gates-andy-grove-and-steve-jobs-found-success-without-busine"&gt;http://www.fastcompany.com/3044952/hit-the-ground-running/how-bill-gates-andy-grove-and-steve-jobs-found-success-without-busine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hbr.org/2012/04/the-real-leadership-lessons-of-steve-jobs"&gt;https://hbr.org/2012/04/the-real-leadership-lessons-of-steve-jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kissmetrics.com/brian-chesky-alfred-lin-culture/"&gt;https://blog.kissmetrics.com/brian-chesky-alfred-lin-culture/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fastcompany.com/3007268/where-are-they-now/not-happy-accident-how-google-deliberately-designs-workplace-satisfaction"&gt;http://www.fastcompany.com/3007268/where-are-they-now/not-happy-accident-how-google-deliberately-designs-workplace-satisfaction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 29 Jul 2012 04:39:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-07-29:creating-economies-of-scale-in-software-development/</guid><category>Software</category><category>Thoughts</category></item><item><title>An Evolution of Questions and Answers</title><link>https://blog.john-pfeiffer.com/an-evolution-of-questions-and-answers/</link><description>&lt;p&gt;Socrates oral questions (and answers) were immortalized by Plato's writings.&lt;/p&gt;
&lt;p&gt;I love books, the distillation of the wisdom of the ages, and the libraries where they are enshrined and shared. &lt;/p&gt;
&lt;p&gt;Visiting a library is an exciting insight into the culture and values of a location.&lt;/p&gt;
&lt;p&gt;Encyclopedias, Dictionaries, and all manner of reference books were the compendium of answers; questions had to be researched (sometimes
involving extensive legwork, detective work, and persistence).&lt;/p&gt;
&lt;p&gt;Digitization of books (e.g. encyclopedia on cd-rom) enabled huge improvement in the access and distribution of information.&lt;/p&gt;
&lt;p&gt;Physical bulletin boards and community centers are also places of information exchange; digital communication (modems!) transformed the reach and capacity.&lt;/p&gt;
&lt;p&gt;Television and Video, despite many attempts, has long remained a one way medium. (Though too there's something inherently relaxing about passive entertainment).&lt;/p&gt;
&lt;p&gt;The Internet (and especially Google search) means specialist websites and esoteric questions are a couple links away; it has also enabled crowd sourcing answers.&lt;/p&gt;
&lt;p&gt;I'm amazed at the speed and accuracy of answers aggregated by Wikipedia, StackExchange, Quora, etc. (which admittedly still require filtering and research for correctness and comprehension).&lt;/p&gt;
&lt;p&gt;It's gotten so that now I receive answers to questions which I didn't realize I had! &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 21 Jun 2012 17:46:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-06-21:an-evolution-of-questions-and-answers/</guid><category>Information</category><category>Thoughts</category></item><item><title>Mid 2012 technology and business prediction for 2013 and beyond</title><link>https://blog.john-pfeiffer.com/mid-2012-technology-and-business-prediction-for-2013-and-beyond/</link><description>&lt;p&gt;The well known perceived future business model is constant (mobile) targeted (user profiling) advertising (everywhere) with instant purchase (online + mobile) and delivery (streaming)&lt;/p&gt;
&lt;p&gt;So Apple (Android) + Facebook + Google + Amazon + (Netflix?) , right?&lt;/p&gt;
&lt;p&gt;I think there's more to think about: the infrastructure is the gold; Hardware Manufacturers (CPU + RAM + SSD), Servers, Routers, ISP's, Content Producers, Transaction Processing, Data and User Platforms.&lt;/p&gt;
&lt;p&gt;The new ecosystem is inherently more distributed (more users globally, more devices) and fragmented (more OS, Apps, Content Producers, etc.) than the "Microsoft Era".&lt;/p&gt;
&lt;p&gt;Complexity increases with more data to aggregate/index/filter and many smaller transactions: consider previously purchasing a single desktop, monitor, (Windows bundled with it) and MS Word + one or two apps (Quickbooks or Photoshop).&lt;/p&gt;
&lt;p&gt;Now it's a laptop + phone + tablet (Windows + Android + iOS), each with many apps (including online services like Facebook) and the challenge of maintaining a consistent view of security, data, and even application state.&lt;/p&gt;
&lt;p&gt;Business purchases used to be larger, even grouped for volume (i.e. a company orders 1,000 desktops + monitors at $1,500 a piece); now it's bring your own device ($500) and many small app and content purchases for 99 cents to $10.&lt;/p&gt;
&lt;p&gt;Companies that solve the &lt;strong&gt;multi platform and scalability problems&lt;/strong&gt; (along with of course actually creating a product that fulfills a need or desire) &lt;strong&gt;will get bigger faster&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The opportunities are growing exponentially (network effect) for the talented, hard working teams that can execute.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 31 May 2012 16:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-05-31:mid-2012-technology-and-business-prediction-for-2013-and-beyond/</guid><category>prediction</category><category>business model</category></item><item><title>Amazon S3 Bucket HTML Redirect</title><link>https://blog.john-pfeiffer.com/amazon-s3-bucket-html-redirect/</link><description>
&lt;p&gt;Goal: More efficient and less error prone method to update a regularly changed downloadable file&lt;/p&gt;
&lt;p&gt;Web page redirects enable you to change the URL of a web page on your S3 hosted website (e.g., from www.example.com/oldpage to www.example.com/newpage) without breaking links pointing to the old URL. Users accessing the old URL will automatically be redirected to the new one.&lt;/p&gt;
&lt;h3 id="redirect-a-single-object"&gt;Redirect a single object&lt;/h3&gt;
&lt;p&gt;Amazon updated their functionality to allow per object meta data based redirects:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;WebUI&lt;/li&gt;
&lt;li&gt;Object properties&lt;/li&gt;
&lt;li&gt;Metadata&lt;/li&gt;
&lt;li&gt;Add Website Redirect Location&lt;/li&gt;
&lt;li&gt;either /newpage.html (internal redirect) or http://example2.com/page.html (external redirect)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Or PUT the object (or a zero byte file) with the x-amz-website-redirect-location header set (i.e. http://example2.com/page.html)&lt;/p&gt;
&lt;p&gt;Or use the universal static html redirect method:&lt;/p&gt;
&lt;p&gt;So upload the following download.html that includes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"refresh"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0; url=http://example.com/file-v2.tar.gz"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Whenever you have a new version of your file you only have to upload a new "download.html" with an updated meta refresh header and any Users and links will always download the newest version of your file.&lt;/p&gt;
&lt;p&gt;Note, javascript may help you open the download and then return to the original page but have strange interactions for a .txt file...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"text/javascript"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://example.com/file-v2.tar.gz"&lt;/span&gt;
&lt;span class="c1"&gt;//--&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="redirect-a-domain"&gt;Redirect a domain&lt;/h3&gt;
&lt;p&gt;With two domains, example1.com and example2.com:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an s3 bucket for example1.com (static web hosting)&lt;/li&gt;
&lt;li&gt;Set bucket property in the "Static Web Hosting" section, select "Redirect all requests to another host name" to redirect to example2.com&lt;/li&gt;
&lt;li&gt;Configure Route53 (AWS DNS) for example1.com to have an A record that has an Alias Target as an S3 Website Endpoint (the bucket from step 1)&lt;/li&gt;
&lt;li&gt;Register example1.com to use the Amazon name servers (from Route53)&lt;/li&gt;
&lt;li&gt;Add any further subdomain redirects (e.g. www.example1.com) by repeating steps 1 and 2&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html"&gt;http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 13 Apr 2012 23:57:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-04-13:amazon-s3-bucket-html-redirect/</guid><category>Amazon</category><category>S3</category><category>html redirect</category></item><item><title>LDAP and LDAPS with Apache Directory Studio and the Java Keystore</title><link>https://blog.john-pfeiffer.com/ldap-and-ldaps-with-apache-directory-studio-and-the-java-keystore/</link><description>&lt;p&gt;The popularity of LDAP for directory service/lookup means Apache Directory Services + Apache Directory Studio is an excellent combination for getting started with identity and user management.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://directory.apache.org/apacheds/"&gt;http://directory.apache.org/apacheds/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;on windows it requires a 32bit JRE =(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Download then install: &lt;code&gt;dpkg -i  apacheds-1.5.7.deb&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;later on uinstall is possible via: &lt;code&gt;dpkg -r apacheds&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By default Apache DS listens on &lt;strong&gt;10389&lt;/strong&gt; and &lt;strong&gt;10636&lt;/strong&gt; (SSL)&lt;/p&gt;
&lt;p&gt;You can connect to it with Apache Dir Studio with "LDAP -&amp;gt; New Connection -&amp;gt; hostname , port = 10389"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;BindDN or user (click on Check Authentication)
uid=admin,ou=system
password= secret

ldapsearch -v -H ldap://ldap.domain.com:10389 -x -D &amp;quot;uid=admin,ou=system&amp;quot; -w &amp;quot;secret&amp;quot; &amp;quot;(objectclass=*)&amp;quot; -b &amp;quot;ou=system&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="self-signed-java-keystore"&gt;Self Signed Java Keystore&lt;/h3&gt;
&lt;p&gt;A Java Keystore is different from a normal cert + key combo. Example "self signed" java keystore, key, certificate combo&lt;/p&gt;
&lt;p&gt;NOTE: CN should really be ldap.domain.com , not Zanzibar!!!!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keytool -genkey -keyalg &amp;quot;RSA&amp;quot; -dname &amp;quot;cn=zanzibar, ou=ApacheDS, o=ASF, c=US&amp;quot;  -alias zanzibar -keystore zanzibar.jks -storepass secret -validity 730
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Press Enter to use the same password for certificate as we already entered above for the keystore&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keytool -list -v -keystore zanzibar.jks -storetype jks -storepass secret
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="apacheds-config-file"&gt;ApacheDS Config File&lt;/h3&gt;
&lt;p&gt;SSL is enabled by default but needs to be modified to use a separate certificate:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vi /var/lib/apacheds-1.5.7/default/conf/server.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;ldapServer&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ldapServer&amp;quot;&lt;/span&gt;

            &lt;span class="err"&gt;allowAnonyn&lt;/span&gt; &lt;span class="na"&gt;mousAccess=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;saslHost=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ldap.example.com&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;saslPrincipal=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ldap/ldap.example.com@EXAMPLE.COM&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;searchBaseDn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ou=users,ou=system&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;maxTimeLimit=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;15000&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;maxSizeLimit=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;
   &lt;span class="na"&gt;keystoreFile=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/var/lib/ssl/zanzibar.jks&amp;quot;&lt;/span&gt;
   &lt;span class="na"&gt;certificatePassword=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;secret&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;transports&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;tcpTransport&lt;/span&gt; &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;port=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10389&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;nbThreads=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;8&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;backLog=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;enableSSL=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;tcpTransport&lt;/span&gt; &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;port=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10636&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;nbThreads=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;8&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;backLog=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;enableSSL=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/transports&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3 id="start-and-verify-the-new-config"&gt;Start and verify the new config&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/apacheds-1.5.7-default restart
/etc/init.d/apacheds-1.5.7-default status

netstat -an --inet
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;start the service and check ports listening, established, time wait (especially 10636)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JXplorer or ApacheDirectoryStudio connection "LDAP -&amp;gt; New Connection -&amp;gt; hostname , port = 10636" (SSL or LDAPS)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;BindDN or user (click on Check Authentication)
uid=admin,ou=system 
password= secret
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;SELF SIGNED CERTIFICATE WARNING - you can view the certificate and choose to manually accept...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE IF YOU SEE THE ERROR "The connection failed - Connection refused: connect (zanzibar:10636)"&lt;br /&gt;
    javax.naming.CommunicationException: zanzibar:10636 [Root exception is java.net.ConnectException: Connection refused: connect]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ENSURE THAT YOUR TRANSPORT IS NOT ONLY ALLOWING localhost! (below is the locked down setting...)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;tcpTransport address=&amp;quot;localhost&amp;quot; port=&amp;quot;10636&amp;quot; enableSSL=&amp;quot;true&amp;quot;/&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="modify-the-iptables-firewall"&gt;Modify the iptables firewall&lt;/h3&gt;
&lt;p&gt;Allow well known LDAP (389) and LDAPS (636) ports to work with ApacheDS&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 389 -j REDIRECT --to-port 10389
iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 636 -j REDIRECT --to-port 10636
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="test-and-verify-connectivity-from-a-remote-machine"&gt;Test and verify connectivity from a remote machine&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ldapsearch -H ldap://ldap.domain.com:389 -x -D &amp;quot;uid=example,ou=system&amp;quot; -W -b &amp;quot;ou=system&amp;quot; &amp;quot;(uid=example)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="extract-a-certificate-from-the-java-key-store"&gt;Extract a Certificate from the Java Key Store&lt;/h3&gt;
&lt;p&gt;EXTRACT A CERTIFICATE FROM A JKS INTO A .DER, THEN CONVERT IT INTO A .PEM AND IMPORT INTO THE JVM cacerts
(this allows a java based app to connect to your self signed cert LDAP server)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jks&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storetype&lt;/span&gt; &lt;span class="n"&gt;jks&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt;
  &lt;span class="n"&gt;Alias&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;

&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jks&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;der&lt;/span&gt;
&lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;x509&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;der&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inform&lt;/span&gt; &lt;span class="n"&gt;DER&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;outform&lt;/span&gt; &lt;span class="n"&gt;PEM&lt;/span&gt;
&lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;x509&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;verify&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;valid&lt;/span&gt; &lt;span class="n"&gt;cert&lt;/span&gt;

&lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;s_client&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10636&lt;/span&gt;                           &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Verify&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="n"&gt;signed&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;openssl&lt;/span&gt; &lt;span class="n"&gt;s_client&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10636&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;CAfile&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;      &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Verify&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;trustcacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;security&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;changeit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="test-and-verify-the-ldaps-connection"&gt;Test and Verify the LDAPS connection&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl s_client -connect ldap.domain.com:636
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Verify return code: 18 (self signed certificate)
    openssl s_client -connect ldap.domain.com:636 -CAfile zanzibar.crt
Verify return code: 0 (ok)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;h3 id="use-an-existing-certificate-and-key-and-create-a-java-key-store"&gt;Use an existing certificate and key and create a Java Key Store&lt;/h3&gt;
&lt;p&gt;EXISTING CERTIFICATE AND KEY AND CREATE A .JKS&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;openssl pkcs12 -export -in cert.crt -inkey cert.key -out keystore.p12 -name serveraliashostname -CAfile intermediatebundle.crt -caname root
Enter Export Password: secret

keytool -list -v -keystore keystore.p12 -storetype pkcs12
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="convert-the-pkcs12-to-jks-format"&gt;CONVERT THE PKCS12 TO JKS FORMAT&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keytool -importkeystore -srckeystore keystore.p12 -srcstoretype PKCS12 -deststoretype JKS -destkeystore keystore.jks

keytool -list -v -keystore keystore.jks -storetype jks

sudo vi /var/lib/apacheds-1.5.7/default/conf/server.xml 
      keystoreFile=&amp;quot;/var/lib/ssl/keystore.jks&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;still need to figure out how to include the intermediate CAcert root chain...!&lt;/p&gt;
&lt;h3 id="importingreplacing-a-jks-keystore"&gt;IMPORTING/REPLACING A JKS KEYSTORE&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keytool -importkeystore -deststorepass secret -destkeypass secret -destkeystore keystore.jks -srckeystore keystore.p12 -srcstoretype PKCS12 -srcstorepass secret -alias oldaliasname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;GUI CONVERTER FROM PKCS12 to JKS (requires Java 1.6 or higher)
&lt;a href="http://portecle.sourceforge.net/"&gt;http://portecle.sourceforge.net/&lt;/a&gt;  (open the .p12 , Tools -&amp;gt; Keystore type to JKS)
(seems to have a funny message where it needed change the password to "password)")&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;trustcacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;ldap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;cert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ks&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storepass&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt;
&lt;span class="n"&gt;keytool&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;trustcacerts&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="n"&gt;GeoTrust&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keystore&lt;/span&gt; &lt;span class="n"&gt;zanzibar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Both self signed and third party certificates can be supported with ApacheDS LDAPS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;LDAP with SSL is a little tricky and it's useful to use openssl and ldapsearch to verify.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;ldapServer&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ldapServer&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;allowAnonymousAccess=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;saslHost=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ldap.example.com&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;saslPrincipal=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ldap/ldap.example.com@EXAMPLE.COM&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;searchBaseDn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ou=users,ou=system&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;maxTimeLimit=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;15000&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;maxSizeLimit=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;keystoreFile=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/var/lib/ssl/zanzibar.jks&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;certificatePassword=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;secret&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;transports&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;tcpTransport&lt;/span&gt; &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;port=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10389&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;nbThreads=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;8&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;backLog=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;enableSSL=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;tcpTransport&lt;/span&gt; &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;port=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10636&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;nbThreads=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;8&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;backLog=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;enableSSL=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/transports&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;openssl s_client -connect domain.com:10636 -CAfile intermediate.crt&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ldapsearch -H ldaps://ldap.domain.com:10636 -x -D &amp;quot;uid=example,ou=system&amp;quot; -w PASSWORD -b &amp;quot;ou=system&amp;quot; &amp;quot;(uid=example)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;ERROR: ldap_sasl_bind(SIMPLE): Can't contact LDAP server (-1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ON A REMOTE MACHINE IN ORDER TO USE LDAPSEARCH WITH LDAPS 636...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo nano /etc/ldap/ldap.conf

TLS_CACERT /var/lib/ssl/intermediate.crt
TLS_CACERTDIR /var/lib/ssl/
TLS_CERT /var/lib/ssl/cert.crt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NOW THE BELOW WILL WORK&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ldapsearch -H ldaps://ldap.domain.com:10636 -x -D &amp;quot;uid=example,ou=system&amp;quot; -w PASSWORD -b &amp;quot;ou=system&amp;quot; &amp;quot;(uid=example)&amp;quot;
ldapsearch -H ldaps://ldap.domain.com:636 -x -D &amp;quot;uid=example,ou=system&amp;quot; -w PASSWORD -b &amp;quot;ou=system&amp;quot; &amp;quot;(objectclass=*)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 29 Mar 2012 21:44:51 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-03-29:ldap-and-ldaps-with-apache-directory-studio-and-the-java-keystore/</guid><category>linux</category><category>ldap</category><category>apache</category><category>directory</category><category>studio</category><category>ldaps</category><category>ldapsearch</category><category>java keystore</category><category>keystore</category><category>keytool</category></item><item><title>Self configuration tests for scalability</title><link>https://blog.john-pfeiffer.com/self-configuration-tests-for-scalability/</link><description>
&lt;p&gt;Goal: Customers (Users = system admins) able to self verify configuration.&lt;/p&gt;
&lt;p&gt;The more a user can self verify with software, the less support required per customer deployment.&lt;/p&gt;
&lt;p&gt;I used the Java API to quickly prototype a solution and exported a runnable .jar file...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.google.com/p/atmos-java/"&gt;https://code.google.com/p/atmos-java/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="java-source-code-for-a-configuration-validation"&gt;Java source code for a configuration validation&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.EsuApi&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.rest.EsuRestApi&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.EsuException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.ObjectId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.ObjectInfo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.Level&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.Logger&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.ConsoleAppender&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.PatternLayout&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AtmosConnect&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt; &lt;span class="n"&gt;rootLogger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRootLogger&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getAllAppenders&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;hasMoreElements&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setLevel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;Level&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addAppender&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ConsoleAppender&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PatternLayout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PatternLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TTCC_CONVERSION_PATTERN&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Entering application"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" does not equal the 4 required arguments."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"version 0.1: java -jar AtmosConnect.jar HOST PORT SUBTENANTID/UID SECRETKEY"&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

        &lt;span class="n"&gt;displayConnectionCredentials&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;        &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;EsuRestApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;EsuException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"EsuRestApi Constructor failed."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;createAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;displayAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;deleteAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Application Successful"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// end main()&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;displayConnectionCredentials&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Connecting to Host: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Connecting on Port: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Full Token ID: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Secret Key: **************"&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//System.out.println( "Secret Key: " + SECRETKEY );&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="nf"&gt;createAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"application/octet-stream"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Created object: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Create Object failed."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//e.printStackTrace();&lt;/span&gt;
            &lt;span class="c1"&gt;// JUnit Tests: Invalid Host, Port, SubtenantID, UID, Shared Secret, etc.&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;displayAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;ObjectInfo&lt;/span&gt; &lt;span class="n"&gt;myObjectInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;myObjectInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getObjectInfo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//System.out.println( "ObjectInfo: " + myObjectInfo.toString() );&lt;/span&gt;
        &lt;span class="c1"&gt;//System.out.println( "ObjectInfo as XML: " + myObjectInfo.getRawXml() );&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;deleteAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Trying to delete Server Object: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;myEsuAPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;deleteObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Test Object deleted on Server: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Delete Object "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" failed "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//e.printStackTrace();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// end class&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="verify-the-bash-commands"&gt;Verify the bash commands&lt;/h3&gt;
&lt;p&gt;Verify bash commands that will help extract the configuration:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/bin/grep -i 'emcIpAddress=' /var/lib/tomcat6/webapps/storagegateway/WEB-INF/app.properties | cut -f 2 -d '='
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="modify-the-perl-console-menu-script"&gt;Modify the perl console menu script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;start on stopped rc RUNLEVEL=[2345]  
stop on runlevel [!2345]

respawn

exec /sbin/getty -n -l /etc/init.d/CONSOLEMENU.pl 38400 tty1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sudo vi /etc/init.d/CONSOLEMENU.pl&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;sub&lt;/span&gt; &lt;span class="nf"&gt;testatmosconnect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"clear"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$sourcefilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/var/lib/tomcat6/webapps/storagegateway/WEB-INF/app.properties"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$applicationfilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/var/lib/tomcat6/oxygen-storagegateway/atmosconnect.jar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;$sourcefilename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;$applicationfilename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcipaddress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcIpAddress=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcipaddress&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcportnumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcPortNumber=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcportnumber&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcuid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcUid=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcuid&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcsharedsecret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcSharedSecret=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcsharedsecret&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;@status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /usr/bin/java -jar $applicationfilename $emcipaddress $emcportnumber $emcuid $emcsharedsecret )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"@status\n"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"$sourcefilename or $applicationfilename does not exist.\n"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# end atmosconnect()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="goal-achieved"&gt;Goal Achieved&lt;/h3&gt;
&lt;p&gt;A user can self test if they've misconfigured the VM or there's  missing conf files/app, etc. SUCCESS!&lt;/p&gt;
&lt;p&gt;Next steps: further unit and system tests, debug, refactor&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 12 Mar 2012 02:42:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-03-12:self-configuration-tests-for-scalability/</guid><category>java</category><category>perl</category><category>TDD</category></item><item><title>Technology Careers (part 1)</title><link>https://blog.john-pfeiffer.com/technology-careers-part-1/</link><description>
&lt;h3 id="a-system-administrator-is-like-a-firefighter"&gt;A System Administrator is like a Firefighter&lt;/h3&gt;
&lt;p&gt;Always available to fix an emergency, but without the glamour; after putting out a fire a SysAdmin has to report (with vague implications of guilt): what happened, why it happened, and how it can be prevented in the future. (Who's fault is it?)&lt;/p&gt;
&lt;p&gt;Good System Administrators are well paid but usually work on the invisible and complex "back end" and are on "on call".&lt;/p&gt;
&lt;p&gt;(Yes, your dinner, sleep, and other private activities will be interrupted.)&lt;/p&gt;
&lt;p&gt;A stable, in demand, career since it's hard to fire a good System Administrator but there's often a belief that the position could/should be outsourced.&lt;/p&gt;
&lt;p&gt;(Ever hear the story of the SysAdmin who was so good at automating server tasks and desktop deployments that he put himself out of a job?)&lt;/p&gt;
&lt;p&gt;The overly general term "Operations" is often applied.  In non technology focused companies you might be managed by a Chief Operations Officer who is more concerned with facilities (buildings), logistics (trucks, ships, planes, etc.) or even janitorial services.&lt;/p&gt;
&lt;p&gt;If you're not careful, methodical, detailed, and cool headed then this may not be the right path for you. (Cynical is optional but it helps a lot).&lt;/p&gt;
&lt;h3 id="an-it-manager-is-like-an-accountant"&gt;An IT Manager is like an Accountant&lt;/h3&gt;
&lt;p&gt;Always asked to do more with less. In fairness an IT Manager gets to be more creative (legally) as innovation and change drive technological efficiency.&lt;/p&gt;
&lt;p&gt;Good IT Managers spend as little time as possible in meetings but can organize and automate the heck out of everything. Diagrams, Business Cases, Reporting, Schedules; not often a hands on role.&lt;/p&gt;
&lt;p&gt;Being in charge of IT resources is well paid and it's a stable career (you're in charge of the budget, right?) but when "downsizing" occurs you may be considered an acceptable loss (if your business cases prove you've saved/earned enough then it's usually a non issue).&lt;/p&gt;
&lt;p&gt;Gluing together services often means jugging time zones (remote contractors and services are the norm) and balancing/network internal departmental demands.&lt;/p&gt;
&lt;p&gt;If you're not good at understanding people or technology (yes you have to hire/fire people and purchase wisely) then this may not be the right path for you.&lt;/p&gt;
&lt;h2 id="a-developer-is-like-an-artist"&gt;A Developer is like an Artist&lt;/h2&gt;
&lt;p&gt;Eccentric, misunderstood, and something rare for the Arts, well paid.&lt;/p&gt;
&lt;p&gt;Good Developers understand it's Art with a purpose and apply rigorous engineering principles to their work (since software runs things like airplanes and hospitals this is a good thing).&lt;/p&gt;
&lt;p&gt;It's well paid but sometimes unpredictable work (software project done = goodbye expensive labor), luckily there's an endless demand for the foreseeable future. &lt;/p&gt;
&lt;p&gt;(Interestingly it often takes awhile to discover a "bad" developer and even then employers are reluctant to let them go).&lt;/p&gt;
&lt;p&gt;If you're not creative and logical; unable to unriddle paradoxes (yes it's a required dependency but no we don't want it), or just don't want to spend most of your waking hours in front of a screen (human contact optional), then this might not be the right path for you.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 27 Feb 2012 02:38:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-02-27:technology-careers-part-1/</guid><category>career</category></item><item><title>Test Driven Development Introduction and QA Domains</title><link>https://blog.john-pfeiffer.com/test-driven-development-introduction-and-qa-domains/</link><description>
&lt;h3 id="why-test-driven-development"&gt;Why Test Driven Development&lt;/h3&gt;
&lt;p&gt;"6% progress" in engineering&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cost: Organizations want to reduce the time and cost associated with releasing code including the post release support, debugging, and maintenance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agility: TDD enables faster product reactions to market changes and more drastic product changes and continued extension of successful products&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Growth: it’s a proven method for Organizations building a strong brand and looking for 6% compound growth, enables larger teams and rotation of personnel&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Individual Time: less time is spent in long debugging session or writing "dead code" (code that never reaches production for either Business reasons – i.e. no customer demand, or Engineering decisions – i.e. quality of the overall product never reaches a release point).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Individual Careers: ability to work on more complex projects and clear contribution to business success&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Individual Satisfaction: confidence in what’s been delivered and happier users&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="acceptance-test-driven-development"&gt;Acceptance Test Driven Development&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Everyone agrees on done!&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Automated Tests create concrete artifacts for all stakeholders (i.e. PM, QA, Engineering, etc.) to understand scope, review progress, and agree on "done".   This vastly improves inefficiencies in communication, scheduling, and manual testing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Design is codified into a common language of Tests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Specifications require less translation and have faster validation&lt;/li&gt;
&lt;li&gt;Deliverables are more accurate to the business needs and progress is more accurate&lt;/li&gt;
&lt;li&gt;Future maintenance and extendibility is built into the process&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Acceptance Tests do require more up front discussions (not coding!) and setup time for automation.&lt;br/&gt;
&lt;em&gt;Good tests must match production environments and requirements in order to be valid.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Tests must be engineered well in order to give good results as they are a product too.
TDD does not guarantee good designs, good thinking, or good code.  &lt;strong&gt;It’s up to people to make it work!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(Unit) Test Driven Development&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple, easy, lean, fast, readable, and early.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Testing should be easy so start small, ask questions, and get used to the world being upside down =)&lt;/li&gt;
&lt;li&gt;Tests must factor out Dependencies (helps design modularization and isolation)&lt;/li&gt;
&lt;li&gt;Tests must run fast (slow tests can be moved into Acceptance Testing)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consider writing tests in order of expected probability of occurrence (balanced by severity if coverage is missed) i.e. the most common usage is correct inputs generating correct output, next maybe 2% of invalid inputs will generate 85% of data corruption&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;"Happy Path" verifies that the code will fulfill the functionality specifically asked for so these are the "high value" tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Next verify most likely invalid inputs and important exception handling&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The law of diminishing returns: more tests means more code writing and more tests that require maintenance&lt;/li&gt;
&lt;li&gt;Tests uncover assumptions, dependencies, tight coupling, and duplication.&lt;/li&gt;
&lt;li&gt;Every Developer must be able to read and maintain the tests; it is a shared effort at making a better product so clarity and readability are critical.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tdd-workflow"&gt;TDD Workflow&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Write Acceptance Test -&amp;gt; Run Acceptance Test -&amp;gt; Passes = Next TDD feature please =)
                         /                 ^
             AT Fails   /                  | UT Passes
                       /                   |
                  Write Unit Test -&amp;gt; Run Unit Tests
                                      \    ^
                             UT Fails  \   |
                                        \  |
                                  Write Code to make it pass
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="trivial-example-using-an-adding-positive-integers-only-calculator"&gt;Trivial Example using an "Adding Positive Integers Only Calculator"&lt;/h4&gt;
&lt;p&gt;add( int a , int b)
- testPositiveIntegerPlusPositiveInteger ("happy path")
- testIntegerMinusPositiveInteger (invalid input)
- testZeroPlusPositiveInteger (invalid input)
- testStringPlusInteger (edge case invalid input: maybe the compiler does not catch this)&lt;/p&gt;
&lt;h4 id="test-doubles-using-stubs-or-mocks-factoring-out-dependencies"&gt;"Test Doubles" using Stubs or Mocks (Factoring out dependencies)&lt;/h4&gt;
&lt;p&gt;Using stubs or mocks we can focus testing only the code we’ve written, Stubs generally are simple hard coded ways to validate state.&lt;/p&gt;
&lt;h3 id="source-code-examples-of-tdd"&gt;Source code examples of TDD&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;dependencyLibrary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;adder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;Class&lt;/span&gt; &lt;span class="n"&gt;dependencyLibraryStub&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;dependencyLibrary&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;dependencyLibraryStub&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expectedResult&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Override&lt;/span&gt; &lt;span class="nf"&gt;adder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;expectedResult&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mocks are usually leveraged with a framework and can validate process, multiple interactions, as well as state.&lt;/p&gt;
&lt;h3 id="qa-domains"&gt;QA Domains&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Start Testing with the most used paths and most user visible areas.&lt;/li&gt;
&lt;li&gt;Find the most serious consequence -&amp;gt; force error handling or crash.&lt;/li&gt;
&lt;li&gt;Make it easy to test (invest in GUI / scripting, don't slow testing down by requiring careful command line typing)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automate testing (especially regression testing).&lt;/p&gt;
&lt;p&gt;functionality
communication / documentation
command structure
performance / load
output (including error messages)
compatible softare / hardware
stack overflow
garbage collection&lt;/p&gt;
&lt;p&gt;errors - boundary
        -math / time
        -startup
        -long running
        -pause &amp;amp; restart / resume
        -backup &amp;amp; restore
        -different data back &amp;amp; forth
        -race conditions
        -denial of resources&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="dependencies"&gt;Dependencies&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;RAM full, Hard Drive full scenarios, cpu full, network slow
locked files (e.g. OS is using)
Error accessing media (slow disk, bad network, etc.)
Other Shared Resource locks?
Special Modes (i.e. airplane/offline mode, disconnected peripheral, etc.

Remove/Rename files and folders the app depends on
  Corrupt one of the above
  hidden file? permissions changed...
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="file-systems-language-and-text"&gt;File Systems, Language, and Text&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ascii vs UTF8&lt;/li&gt;
&lt;li&gt;File size 0, negative? and very large&lt;/li&gt;
&lt;li&gt;Many small files, many large files&lt;/li&gt;
&lt;li&gt;Directory or Folder instead of File and vice versa&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Symbolic links and shortcuts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Invalid paths (OS do the checks!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Max path length&lt;/li&gt;
&lt;li&gt;longest file name (symbols)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reserved file names?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;try pasting (rather than typing)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;special control chars \n  &amp;lt;a href&lt;br/&gt;
&lt;code&gt;-1234567890-1234567890--1234567890--1234567890&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Escape sequences
    &lt;code&gt;‘\’. ‘\’ = %5C = %255C = %%35%63 = %25%35%63 )&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML Encoding check where applicable: &lt;code&gt;‘&amp;lt;’ = &amp;lt; = &amp;amp;#x3C = &amp;amp;60&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;!  #   $&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="byte-boundaries"&gt;byte boundaries&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 to 65,535
-2,147,483,648 to 2,147,483,647
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="standard-test-cases"&gt;Standard Test Cases&lt;/h4&gt;
&lt;h4 id="viewing"&gt;Viewing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Resolution 1024 x 768 but also try 800x600 and 1280 and strange ones&lt;/li&gt;
&lt;li&gt;Resizing? (all the way down and back up)&lt;/li&gt;
&lt;li&gt;Minimizing and backgrounding&lt;/li&gt;
&lt;li&gt;Excessive Requests&lt;/li&gt;
&lt;li&gt;performance (too slow might be unusable)&lt;/li&gt;
&lt;li&gt;Single item too long horizontal&lt;/li&gt;
&lt;li&gt;Single item too long vertical&lt;/li&gt;
&lt;li&gt;Too many items returned horizontal &lt;/li&gt;
&lt;li&gt;Too many items returned vertical&lt;/li&gt;
&lt;li&gt;Dropdown &lt;/li&gt;
&lt;li&gt;scrollbar = logical / physical batches of results?&lt;/li&gt;
&lt;li&gt;Web Page&lt;/li&gt;
&lt;li&gt;chrome, firefox(2,3), ie (6,7,8,9), safari (i.e. without SSO), opera?&lt;/li&gt;
&lt;li&gt;able to bookmark?&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="user-input"&gt;User Input&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Text Entry&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;too few (blank) and too many chars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;funny chars (UTF8? and symbols &lt;code&gt;!@#$%&amp;amp;^*()[]\|;':",./&amp;lt;&amp;gt;?&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Special case = Email Address or Phone Number?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Excessive Submits&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;empty username and or empty password&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;wrong username&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;wrong password&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;already logged in&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;username does not exist?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;user does not have permission?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;back button&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search (similar to above but also includes)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;case sensitive? (user notified?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;wild card&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;no data set exists to search (e.g. user search but no users?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;permissions - should be able to see these results?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="upload-a-file"&gt;Upload a file&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;UTF8 file names, very long names, very short names, special characters (. / ? &amp;lt; &amp;gt;)&lt;/li&gt;
&lt;li&gt;case sensitivity, reserved key names&lt;/li&gt;
&lt;li&gt;upload normal expected extensions (jpg, gif, png etc.)&lt;/li&gt;
&lt;li&gt;try random or restricted extensions (.exe, .bat, no extension, super long chars, special chars)&lt;/li&gt;
&lt;li&gt;tiny file or really large file&lt;/li&gt;
&lt;li&gt;0 byte file&lt;/li&gt;
&lt;li&gt;compressed (zip, 7z, rar, etc.)&lt;/li&gt;
&lt;li&gt;interrupt the upload (does it fail cleanly? resume?)&lt;/li&gt;
&lt;li&gt;race condition of two different sessions uploading the same file name (different content)&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="whitebox-glassbox-looking-in-the-code"&gt;Whitebox "Glassbox" Looking in the code&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;InvalidSession Exception&lt;/li&gt;
&lt;li&gt;Offline Exception, &lt;/li&gt;
&lt;li&gt;No Permission Exception&lt;/li&gt;
&lt;li&gt;Could not retrieve from source Exception&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unexpected Exception&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;array boundary&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;memory leaks / free&lt;/li&gt;
&lt;li&gt;race conditions / locked&lt;/li&gt;
&lt;li&gt;global variables (creates a hidden race condition or lock)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="error-messages"&gt;Error Messages&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Do they appear when there's a problem?&lt;/li&gt;
&lt;li&gt;Are they accurate?&lt;/li&gt;
&lt;li&gt;Can they be understood?&lt;/li&gt;
&lt;li&gt;Do they direct the user on how to the correct the problem?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What to log or print in an error&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Title = source of the error 
You cannot do "action user tried".
Reason why Source is throwing error.

"MyComponent Driver Error"
You cannot reply to "user@domain.com"
You do not have write permission on that file.
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="for-your-consideration"&gt;For your consideration&lt;/h3&gt;
&lt;h4 id="stress"&gt;Stress&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;"thundering herd" and exponential backoff&lt;/li&gt;
&lt;li&gt;cpu processing, data sizes, input volumes, frequency&lt;/li&gt;
&lt;li&gt;what breaks when it fails&lt;/li&gt;
&lt;li&gt;can it be disabled&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="time"&gt;Time&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;concurrency&lt;/li&gt;
&lt;li&gt;stale/null/indeterminate state&lt;/li&gt;
&lt;li&gt;archived/deleted&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="operations"&gt;Operations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;upgrades, migrations, backups/restore&lt;/li&gt;
&lt;li&gt;UX: new users and new features&lt;/li&gt;
&lt;li&gt;power users vs newbs vs admins, international, 3rd party devs, support&lt;/li&gt;
&lt;li&gt;logging, metrics, and analytics&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="platform"&gt;Platform&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;variability in OS, browser, screens, devices, databases, connections&lt;/li&gt;
&lt;li&gt;external dependency handling?&lt;/li&gt;
&lt;li&gt;licensing and tier thresholds (i.e. group storage limit)&lt;/li&gt;
&lt;li&gt;SaaS vs cluster vs on premise considerations&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="usability"&gt;Usability&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;consistency&lt;/li&gt;
&lt;li&gt;empty state, keyboard vs mouse vs ?&lt;/li&gt;
&lt;li&gt;customization? (saved preferences)&lt;/li&gt;
&lt;li&gt;what's the learning curve? too little/too much documentation?&lt;/li&gt;
&lt;li&gt;list UI: sorting, ordering, &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="security"&gt;Security&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Access and Audit logs&lt;/li&gt;
&lt;li&gt;who should be able to access via Web UI, API, etc.&lt;/li&gt;
&lt;li&gt;XSS, XSRF&lt;/li&gt;
&lt;li&gt;where's the edge? tiered service layers (clearly defined boundaries for authorization)&lt;/li&gt;
&lt;li&gt;leaking information (what can anonymous or normal users see they should not)&lt;/li&gt;
&lt;li&gt;logging password/sensitive info&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 20 Jan 2012 17:44:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2012-01-20:test-driven-development-introduction-and-qa-domains/</guid><category>tests</category><category>tdd</category><category>qa</category><category>edge cases</category><category>testing</category></item><item><title>Yes, Change your Password regularly</title><link>https://blog.john-pfeiffer.com/yes-change-your-password-regularly/</link><description>
&lt;h3 id="security-is-risk-management"&gt;Security is risk management&lt;/h3&gt;
&lt;p&gt;The hundreds of articles about "changing passwords doesn't improve security" are just hype/noise without context.&lt;/p&gt;
&lt;p&gt;There is an absolute spectrum of password management that creates untenable risk (no password or simply the word "password") all the way to very low risk (100 random characters of every category changed every day) but at an unbearable overhead.&lt;/p&gt;
&lt;p&gt;While "changing the highly complex password every 90 days" is considered inefficient and draconian...&lt;/p&gt;
&lt;h3 id="what-about-at-least-changing-the-password-once-a-year"&gt;What about at least changing the password once a year?&lt;/h3&gt;
&lt;p&gt;While it's likely that an external attacker or disgruntled employee will use a compromised password immediately, it doesn't mean there isn't a good reason to choose a frequency of password change:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If a sticky note attached to a laptop sold at a garage sale is still valid for the company's online bank account then you're in trouble.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Reduce the risk, have a policy to manage that window of access to something you're comfortable with.&lt;/p&gt;
&lt;h3 id="dependency-visibility"&gt;Dependency Visibility&lt;/h3&gt;
&lt;p&gt;The opportunity to improve your infrastructure is well worth the cost of finding every hard coded place that a password is embedded in your organization:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The password was just changed&lt;/li&gt;
&lt;li&gt;You quickly find something is not working&lt;/li&gt;
&lt;li&gt;You either change the password back or refactor/reorganized and break the dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Far better than:&lt;/strong&gt;
- a random event like a forgotten password reset by one individual in the organization
- creates a mystery problem in mission critical systems for everyone else to track down&lt;/p&gt;
&lt;h3 id="but-i-use-a-password-management-tool"&gt;But I use a password management tool!&lt;/h3&gt;
&lt;p&gt;Password management tools have to store their passwords somewhere (hopefully encrypted).  &lt;/p&gt;
&lt;p&gt;Over time there is a chance that a "bad actor" will end up with your local password store.&lt;/p&gt;
&lt;p&gt;Man in the middle attacks (NSA anyone?) can snatch credentials from secure channels.&lt;/p&gt;
&lt;p&gt;There is an even higher likelihood that the remote services you are using will be compromised (database or password hashes leak).&lt;/p&gt;
&lt;p&gt;Given time hackers can use rainbow tables and GPU based brute force attacks they will crack your password.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Every time you change your password you reset the clock on every type of attack&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 27 Dec 2011 17:10:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2011-12-27:yes-change-your-password-regularly/</guid><category>security</category><category>password</category></item><item><title>Using find grep cut awk sort dd with files and text and listing files with ls</title><link>https://blog.john-pfeiffer.com/using-find-grep-cut-awk-sort-dd-with-files-and-text-and-listing-files-with-ls/</link><description>
&lt;p&gt;There are amazing linux command line utilities that make finding and manpiulating files very easy&lt;/p&gt;
&lt;h2 id="create-copy-truncate"&gt;create copy truncate&lt;/h2&gt;
&lt;p&gt;Assuming you understand the basics like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch example.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;make an empty file named file.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "hi" &amp;gt;&amp;gt; example.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;append the hi content into example.txt, note that a single &amp;gt; will overwrite the contents&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat example.txt | tee -a example2.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;display the contents of the file to the output console and also pipe the result to the &lt;strong&gt;tee&lt;/strong&gt; utility which appends it to another file - tee is better than &amp;gt;&amp;gt; &lt;/li&gt;
&lt;li&gt;except that tee always returns 0 so if you have set -e then prefer &amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:&amp;gt; example.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;truncate the file without disturbing any existing readers of that file (e.g. zero a log without messing up an applications ability to write to the file)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp -a example.txt example2.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;copy archive which preserves timestamp (but will also overwrite the target - in this example probably zero bytes)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm example.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove a file, -f forces removal without a prompt, -rf to recursively force remove a file or directory &lt;strong&gt;be careful&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="ls-lists-files-in-a-directory"&gt;ls lists files in a directory&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls /etc
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list the files and directories in the /etc directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists just the names (not including hidden .dot files or directories) in the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -1a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists just the names including hidden .dot files&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -ahl | grep -v IGNORETHIS
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;exclude lines that match IGNORETHIS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -f
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;unsorted list of files which is the only way to work with directories with a very large number of files&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="list-directories"&gt;list directories&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -d */
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list names of directories in the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -1 -d */
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;using a "numeral one" parameter lists one directory name per line&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l -d */
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;using a "lowercase letter L" parameter lists the extended information (permissions, owner, timestamps)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -d ./*/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list names of directories in the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo */
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists the names of directories in the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find -type d
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find recursively starting from the current directory and display the relative path all objects of type directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find /tmp -maxdepth 1 -type d
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find all directories in /tmp up to 1 level deep (/tmp/foo)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find /tmp -maxdepth 2 -type d
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find all directories in /tmp up to 2 levels deep (/tmp/foo/bar)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="counting-the-listings"&gt;counting the listings&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -1 | wc
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists just the names of non hidden files piped to word count, number one looks a lot like lowercase L (sadindeed)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -1 | wc -l
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list just names and count only the lines (number one, then lowercase L)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -ahl | wc -l
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;counting hidden files BUT directories too&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for file in /PATH/foo*; do cp "$file" /mnt/BAR/; done
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;when there are too many files in a directory: "/bin/cp: Argument list too long"
a one liner for copying each file as a parameter&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="sorting-by-size-or-timestamp"&gt;sorting by size or timestamp&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -Sla
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sort by size (largest to smallest with full details displayed, show . hidden files too)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -Slar
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sort by size (reversed, so smallest to largest with full details displayed, show . hidden files too)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -Slarh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sort by size (reversed, so smallest to largest with full details displayed, show . hidden files too, human sizes like MB)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -ahtlr
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sort by timestamp (reversed so oldest first, show . hidden files too, human sizes like MB)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -ahtlr | head -n3
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only the 3 oldest lines&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -la --time-style=full-iso foobar.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;list the full modified timestamp
&lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/Formatting-file-timestamps.html"&gt;https://www.gnu.org/software/coreutils/manual/html_node/Formatting-file-timestamps.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="find"&gt;find&lt;/h2&gt;
&lt;p&gt;find is better than locate because locate depends on a cron job to index the file system and so may miss recent results&lt;/p&gt;
&lt;h3 id="find-to-list-files"&gt;find to list files&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find -type f
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find and display the relative path all objects of type file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find /tmp -maxdepth 1 -type f -print | wc -l
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;wc = count lines = files in the /tmp directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find -type f -print | wc -l
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;to get all subdirs too&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="find-a-specific-file-or-types-of-files"&gt;find a specific file or types of files&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find -name "MyCProgram.c"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;case sensitive, starts in the current directory &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find startdirectory -name 'partoffileordirname'
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g. find /home/joe -name '.tx'
which would return txt's as well as txv?'s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -iname "MyCProgram.c"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;case insensitive, starts from root &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find -maxdepth 1 -not -iname "MyCProgram.c"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;case insensitive, starts from current directory, will search subdirectory(ies) and list all items //that do NOT match the query&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -exec ls -s {} \; | sort -n -r | head -5
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the largest 5 files&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -not -empty -type f -exec ls -s {} \; | sort -n | head -5
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the smallest not empty 5 files &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type d
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;all directories in the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f | wc
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;count the number of files (can recurse subdirectories)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -iname '*.pyc' -exec mv {} /tmp/PYC/ \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;move all .pyc files (start from this directory and indefinitely recurse down)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -name "*api*" -exec cat {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find everything containing api and cat it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="find-and-exec-to-modify-a-set-of-files"&gt;find and exec to modify a set of files&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -name "*api*" -exec cat {} \; | grep objectid
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find all files that contain an api and output the contents but filter to only display lines that contain "objectid"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -maxdepth 1 -type d -exec du -sh {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only one level down if it's a directory show the disk usage summary (human sizes)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find DIR1 DIR2 -maxdepth 1 -type f -exec basename {} \; | sort | uniq -d
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists all file names in directories, sorted, show only repeats (aka duplicates)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -name '*.txt' -exec sh -c 'mv "$0" "&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;.java"' {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find all .txt files and renames them to .java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for f in ; do mv "$f" "$(echo $f | sed 's/-/\ /g')"; done find . -type f -iname ".py" | rename s/.py/.py.txt/ .py {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only works on the current directory (no recursion?)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -iname '.py' | while read filename; do mv -v "&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;" "echo "&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;" | sed -e 's/\.py$/\.py.txt/'"; done
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a lot of extra work to achieve a recursive rename from .py to .py.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -iname "*.java" -exec grep -Hni "case-insensitive-text" {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find java files and return if they contain some text&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -iname "*.java" -exec grep -Hn "fileSizeInMB &amp;lt; 100" {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find java files and return if they contain some case sensitive text&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type d -name directoryname* -exec ls -ahl {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find case insensitive directories beginning with "directoryname" and list their contents&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt; &lt;span class="nt"&gt;find&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;java&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; &lt;span class="nt"&gt;f&lt;/span&gt; &lt;span class="nt"&gt;-iname&lt;/span&gt; &lt;span class="s2"&gt;".txt"&lt;/span&gt; &lt;span class="nt"&gt;-exec&lt;/span&gt; &lt;span class="nt"&gt;chown&lt;/span&gt; &lt;span class="nt"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;www-data&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find case insensitive files ending with ".txt" and change their owner to root and group to  www-data&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo find /var/www/java -type f -iname "*.txt" -exec chmod 640 {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find case insensitive files ending with ".txt" and change their permissions to 640&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo find /var/www/d -type d -iname "web*" -exec chmod 750 {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find case insensitive directories beginning with "web" and change their permissions to 750&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -iname "*.sh" -exec mv {} . ";"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find files ending in .sh and move them into the current directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find /dir/dir -type f -mtime +540 -mtime -720 -printf \%p\,\%s\,\%AD\,|%TD\\n &amp;gt; /dir/dir/output.csv

find ~ -empty //check the home directory for empty files (size 0)


find / -mindepth 3 -maxdepth 5 -iname passwd
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;case insensitive, starts from root, will search subdirectory levels between 2 and 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / 3 -maxdepth 5 -iname passwd &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;case insensitive, starts from root, will search at most 4 subdir levels, will start in background 
note that you'll have to press enter once as the text results will scroll to interrupt your 
bash session ... once the job's done pressing enter will return you to the prompt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; find -iname "MyCProgram.c" -exec md5sum {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;interesting use: creating a md5sum of all of the results&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find -inum 16187430 -exec mv {} new-test-file-name \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;interesting - find a file by inode number (ls -i) and then rename/move it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -perm 700 -type f
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find all files from root below, with permissions set exactly to 700, only regular files (-type f)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -perm 700 -type f -exec ls -l {} \;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;while the above just lists the files the below runs an ls -l to see everything about them...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;RUN "man find" IF YOU NEED TO FIND SOMETHING SPECIFIC ABOUT FILES AND PERMISSIONS&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;any files newer than the one given find -newer file-i-made-yesterday&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;search the home directory size equal to 100 MB, use +100MB for greater than and -100MB for less than find ~ -size 100M&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.thegeekstuff.com/2009/03/15-practical-linux-find-command-examples/"&gt;http://www.thegeekstuff.com/2009/03/15-practical-linux-find-command-examples/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="find-files-by-modified-time"&gt;find files by modified time&lt;/h3&gt;
&lt;p&gt;There is an implied AND operator with find but for OR or NOT...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -mmin -10
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;something modified 10 minutes ago&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -mtime 1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find files modified between 24 and 48 hours ago &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -mtime +1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find files modified more than 48 hours ago&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -mmin +5 -mmin -10
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find files modifed between # 6 and 9 minutes ago&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -type f -mtime -7 | xargs tar -rf weekly_incremental.tar
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find files modified in the last 7 days and create a .tar file from them&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -name core -delete
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;same if using Gnu find&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -user username
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;find all of the files a user owns..&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-mtime +60 means you are looking for a file modified 60 days ago. -mtime -60 means less than 60 days. -mtime 60 If you skip + or - it means exactly 60 days.

find / -mtime 9 -mtime -10
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;24 hours&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="grep"&gt;grep&lt;/h2&gt;
&lt;p&gt;grep is an amazing tool for getting efficiently finding text, &lt;a href="http://www.gnu.org/software/grep/manual/grep.html"&gt;http://www.gnu.org/software/grep/manual/grep.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="grep-parameters-and-examples-explained"&gt;grep parameters and examples explained&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat access.log | grep -v "bingbot"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;exclude from output lines that match bingbot&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep -r -i -w -n -A2 -B1 'hidden' /tmp
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;search the /tmp directory and subdirectories recursively&lt;/li&gt;
&lt;li&gt;case insensitive&lt;/li&gt;
&lt;li&gt;only match the whole word, so "thidden" would not be returned as a match&lt;/li&gt;
&lt;li&gt;print the line number in the file where it was found&lt;/li&gt;
&lt;li&gt;print the two lines after the grep match&lt;/li&gt;
&lt;li&gt;print the one line before the grep match&lt;/li&gt;
&lt;li&gt;start the search in the /tmp directory&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep -c 'hidden' ./myfile&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;only display the number of matches in the file&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep -r -l 'hidden' /tmp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;recursively search /tmp and only display the file names which contain "hidden"&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep "hidden treasure" /home/ubuntu/*.txt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;search only txt files&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep ab.d file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;find a single character wildcard&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep "ab.*e" file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;find a infinite repitions of a single character, word ends in e&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep "ab.*e." file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;find a infinite repitions of a single character, word ends with a single character&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;grep "ab[c-e]f" file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;find with a wildcard of a subset of range of characters&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="useful-parameters-for-grep"&gt;Useful parameters for grep&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; = invert the match so do NOT show lines that match (typically | grep -v 'myexclude')&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; = whole line match only&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-C 2&lt;/code&gt; = print two lines before and two lines after a match&lt;/p&gt;
&lt;p&gt;grep ubuntu /etc/passwd | cut -d: -f3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;only print the user id by piping the match to cut which delimits by colon and outputs the 3rd column&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ls -t -d -1 -r path/directory/ &amp;gt;&amp;gt; oldest.m3u&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;list reverse order by timestamp
ls -t -d -1 path/directory/ | grep -v DONOTLIKE &amp;gt;&amp;gt; newest.m3u
list by timestamp (sort by modification time, newest first), list directories themselves, not their contents, only 1 level deep
pipe to grep and ignore matches of DONOTLIKE, then append output to the newest.m3u file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="grep-files-without-match"&gt;grep files without match&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep -L 'foobar' *
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;--files-without-match , display filenames that do not contain the string foobar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Grep"&gt;https://en.wikipedia.org/wiki/Grep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/grep/manual/grep.html"&gt;http://www.gnu.org/software/grep/manual/grep.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_04_02.html"&gt;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_04_02.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cut"&gt;cut&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps auxwwww | grep someappname | tr -s [:space:] | cut -d\  -f11-
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;filter to only view someappname from all processes (wide) THEN shorten all whitespace to a single space THEN cut delimited by a single space (escaped by the slash) and then only prints all after the 11th field/column&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat sometext.txt | cut -f1 -d"["
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;delimiter of square bracket , only take after the first "field" token, so essentially print everything after the first occurence of a left square bracket&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ss64.com/bash/cut.html"&gt;http://ss64.com/bash/cut.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linux.die.net/man/1/cut"&gt;http://linux.die.net/man/1/cut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cut-to-only-display-a-part-of-a-path"&gt;cut to only display a part of a path&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# iterate through the list of subdirectories&lt;/span&gt;
&lt;span class="c1"&gt;# cut out each subdirectory name (using forward slash delimiter)&lt;/span&gt;
&lt;span class="c1"&gt;# compare a text file within to a similarly organized TEMP directory&lt;/span&gt;

&lt;span class="nv"&gt;DIRECTORY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/tomcat6/webapps/*

&lt;span class="k"&gt;for&lt;/span&gt; dir in &lt;span class="nv"&gt;$DIRECTORY&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -d &lt;span class="nv"&gt;$dir&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt;
    &lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;"/"&lt;/span&gt; -f &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;
    diff &lt;span class="nv"&gt;$dir&lt;/span&gt;/WEB-INF/app.properties /var/lib/tomcat6/TEMP/&lt;span class="nv"&gt;$NAME&lt;/span&gt;/WEB-INF/app.properties
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="awk"&gt;awk&lt;/h2&gt;
&lt;p&gt;awk to parse columns of data , some overlap with cut&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;awk -F"," '{ print $2 }' results.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;csv parsing , set the delimiter to a comma and print the second column&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;awk '&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;' results.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;assuming space delimited and remove the first column but print all else in results.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;ps aux | grep someappname | awk '&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;print everything after the nth (10th) column&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat sometext.txt | cut -f1 -d"("
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;using cut can be more effective: deleting everything after the first occurence of a left parenthesis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep -r 'beta/dists/precise/main/binary-amd64' | grep -v 1.2.3.4 | grep -v AccessDenied | awk '{print $5}' | sort -u

grep --exclude-dir=.git -r 'foo' .  # recursively search this directory for foo but ignore the .git directory
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;recursive search for a string, pipe the output to exclude lines that contain IP 1.2.3.4 , pipe to exclude AccessDenied, print the 5th column, sort for uniqueness&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If the 5th column of results.txt contains numbers then ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat results.txt | awk '{total = total + $5} END{print total}'

ls -tahl | awk '{print $5,$6,$7,$8}'

awk &amp;lt;search pattern&amp;gt; {&amp;lt;program actions&amp;gt;}

1.5K 2009-07-14 12:14 backupCHECKUP.sh
5.2K 2009-07-14 12:03 email-backup.txt
4.0K 2009-07-14 10:06 .
330 2009-07-14 09:55 test.sh
253 2009-07-14 08:54 daily-backup-projects.sh
4.0K 2009-07-12 11:09 ..
3.9K 2009-03-18 16:01 mtrac.ini
5.0K 2008-11-25 11:50 CreateProject.sh

awk '/2009/ {print $5,$6,$7,$8}' ls_output.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that Awk recognizes the field variable $0 as representing the entire line, so this could also be written as:
    awk '/gold/ {print $0}'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.grymoire.com/Unix/Awk.html"&gt;http://www.grymoire.com/Unix/Awk.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/gawk/manual/gawk.html"&gt;https://www.gnu.org/software/gawk/manual/gawk.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sed"&gt;sed&lt;/h2&gt;
&lt;p&gt;sed does string substitution&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed regular expression 's=start/olditem/newitem/g=end' filename

sed -e 's/ /\t /g' email-backup.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;replace a space with a tab&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -i 's/\x85/.../g' *.md
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;replace a UTF-8 character (in this case the single character horizontal ellipsis) with three dots&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /var/www/html/themes/bartik/css/style.css | tr '\n' '\r' | sed -e 's/#site-slogan {\r  font-size: 0.929em/#site-slogan {\r  font-size: 2.929em/' | tr '\r' '\n' &amp;gt; /var/www/html/themes/bartik/css/style.css.updated
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;replace multiline with a newline using tr to translate \n to \r&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;REMEMBER&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;\t = tab
\n = newline
\r = carriage return

sed -e 's/$/\r/' inputfile &amp;gt; outputfile                # UNIX to DOS  (adding CRs)
sed -e 's/\r$//' inputfile &amp;gt; outputfile                # DOS  to UNIX (removing CRs)
perl -pe 's/\r\n|\n|\r/\r\n/g' inputfile &amp;gt; outputfile  # Convert to DOS
perl -pe 's/\r\n|\n|\r/\n/g'   inputfile &amp;gt; outputfile  # Convert to UNIX
perl -pe 's/\r\n|\n|\r/\r/g'   inputfile &amp;gt; outputfile  # Convert to old Mac
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.grymoire.com/Unix/Sed.html"&gt;http://www.grymoire.com/Unix/Sed.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/sed/manual/sed.txt"&gt;https://www.gnu.org/software/sed/manual/sed.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dd"&gt;dd&lt;/h2&gt;
&lt;p&gt;dd can delete things very quickly (dangerous!)&lt;/p&gt;
&lt;p&gt;But a useful tool for testing upload limits or compression or any other miscellaneous file tasks is to generate a file of a specified length:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dd if=/dev/zero of=a.log bs=1M count=2
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;zero filled 2MB file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dd if=/dev/urandom of=random.txt bs=1M count=2
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;random contents 2MB file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hexdump random.txt | head
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notes about randomness (on linux):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/dev/urandom
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;semi-random data generated by a PRNG which is fed by the trickle of real entropy from &lt;code&gt;/dev/random&lt;/code&gt; (which blocks until the entropy pool has some randomness)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;watch -n 0 'cat /proc/sys/kernel/random/entropy_avail'

cat /dev/random &amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Drain the entropy from your system&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cpuid | grep -i rand
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Look for RDRAND &lt;a href="http://en.wikipedia.org/wiki/RdRand"&gt;http://en.wikipedia.org/wiki/RdRand&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /dev/urandom | rngtest -c 1000
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;how good is your non blocking urandom?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki//dev/random"&gt;https://en.wikipedia.org/wiki//dev/random&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linuxcommand.org/man_pages/rngtest1.html"&gt;http://linuxcommand.org/man_pages/rngtest1.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 12 Nov 2011 02:37:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2011-11-12:using-find-grep-cut-awk-sort-dd-with-files-and-text-and-listing-files-with-ls/</guid><category>grep</category><category>linux</category><category>bash</category><category>cut</category><category>awk</category><category>sort</category><category>dd</category><category>files</category><category>text</category><category>ls</category><category>sort by size</category><category>sort by date</category><category>exec</category></item><item><title>A concise summary of amazing and great ideas</title><link>https://blog.john-pfeiffer.com/a-concise-summary-of-amazing-and-great-ideas/</link><description>
&lt;h3 id="test-driven-development-tdd"&gt;Test Driven Development (TDD)&lt;/h3&gt;
&lt;p&gt;Test, Code, Refactor &lt;a href="https://en.wikipedia.org/wiki/Test-driven_development"&gt;https://en.wikipedia.org/wiki/Test-driven_development&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="lean"&gt;Lean&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lean: Identify Value -&amp;gt; Breakdown Steps -&amp;gt; Continuous Flow -&amp;gt; Reduce Waste&lt;/li&gt;
&lt;li&gt;Lean Startup: Measure, Learn, Build &lt;a href="http://theleanstartup.com/principles"&gt;http://theleanstartup.com/principles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="better-than-free"&gt;Better than Free&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.kk.org/thetechnium/archives/2008/01/better_than_fre.php"&gt;http://www.kk.org/thetechnium/archives/2008/01/better_than_fre.php&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;immediacy&lt;/li&gt;
&lt;li&gt;personalization&lt;/li&gt;
&lt;li&gt;interpretation/support&lt;/li&gt;
&lt;li&gt;authenticity&lt;/li&gt;
&lt;li&gt;accessibility&lt;/li&gt;
&lt;li&gt;embodiment&lt;/li&gt;
&lt;li&gt;patronage&lt;/li&gt;
&lt;li&gt;findability&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="persuasion"&gt;Persuasion&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Robert_Cialdini"&gt;https://en.wikipedia.org/wiki/Robert_Cialdini&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;reciprocity &lt;/li&gt;
&lt;li&gt;commitment/consistency&lt;/li&gt;
&lt;li&gt;social proof&lt;/li&gt;
&lt;li&gt;authority&lt;/li&gt;
&lt;li&gt;liking&lt;/li&gt;
&lt;li&gt;scarcity&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="competition-and-profit"&gt;Competition and Profit&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Porter_five_forces_analysis"&gt;https://en.wikipedia.org/wiki/Porter_five_forces_analysis&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Threat of new competition (barriers to entry, customer loyalty, desirability of that industry/biz model)&lt;/li&gt;
&lt;li&gt;Threat of substitute products or services (switching costs, quality, compatibility)&lt;/li&gt;
&lt;li&gt;Bargaining power of customers (switching costs, market options, dependency for other services)&lt;/li&gt;
&lt;li&gt;Bargaining power of suppliers (switching costs, supplier choice, supplier becoming competitor)&lt;/li&gt;
&lt;li&gt;Intensity of competitive rivalry (innovation, branding, economies of scale)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="schellings-segregation-model"&gt;Schelling's segregation model&lt;/h3&gt;
&lt;p&gt;Micromotives and macrobehavior , &lt;a href="https://en.wikipedia.org/wiki/Thomas_Schelling#Models_of_segregation"&gt;https://en.wikipedia.org/wiki/Thomas_Schelling#Models_of_segregation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Granovetter threshold model for peer effect on collective behavior and Strength of Weak Ties (aka how LinkedIn gets you a new job), &lt;a href="https://en.wikipedia.org/wiki/Mark_Granovetter"&gt;https://en.wikipedia.org/wiki/Mark_Granovetter&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="cognitive-biases"&gt;Cognitive Biases&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bandwagon Effect (Groupthink)&lt;/li&gt;
&lt;li&gt;Confirmation Bias: search for and interpret information and memories that support preconceptions&lt;/li&gt;
&lt;li&gt;Gambler's Fallacy: future probabilities are affected by previous outcomes&lt;/li&gt;
&lt;li&gt;Negativity Bias: paying more attention to bad news&lt;/li&gt;
&lt;li&gt;Neglect of Probability: disregarding probabilities when making a decision (risk of flying versus driving)&lt;/li&gt;
&lt;li&gt;Observational Selection Bias (Frequency Illusion): noting something previously ignored results in a misconception that it has increased in frequency &lt;/li&gt;
&lt;li&gt;Projection Bias: wrongly presuming others think like us&lt;/li&gt;
&lt;li&gt;Status Quo Bias: things should stay the same&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="logical-fallacies-and-disinformation"&gt;Logical Fallacies and Disinformation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Appeal to probability: because something could happen it is inevitable that it will happen (see Gambler's Fallacy and Neglect of Probability)&lt;/li&gt;
&lt;li&gt;Silence, Indignant, Rumors, Straw Man, Ad Hominem, Hit and Run, Question Motives, Invoke Authority, Play Dumb, "That's old news", Confess to a lesser item and "come clean", Enigma, Rube Goldberg Logic, Demand a complete solution, Fit the facts to alternate conclusions, Remove witnesses/evidence, Change the subject, Antagonize, Ignore proof and demand impossible proof, False evidence/facts, Loudly call for a separate investigation (ideally either biased or with confidential findings), Manufacture a new truth, Larger distractions, Silence critics, Lie low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://www.nowandfutures.com/spew_tools.html"&gt;http://www.nowandfutures.com/spew_tools.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="keys-to-being-successful"&gt;Keys to being successful&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;lists&lt;/li&gt;
&lt;li&gt;organize (categorize)&lt;/li&gt;
&lt;li&gt;prioritize&lt;/li&gt;
&lt;li&gt;schedule&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;brainstorm goals and feelings: "say what you're going to do and then do what you say"&lt;/p&gt;
&lt;h4 id="concentrate-iterate-automate-validate-appreciate"&gt;Concentrate, Iterate, Automate, Validate, Appreciate&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Software version: core tech strengths &amp;amp; problem, quick releases, automate, test!, style? + recognize the contributions&lt;/li&gt;
&lt;li&gt;Military version: core strength and enemy weaknesses, rapid short executions, make excellence a reflex, check for brittleness, engender loyalty&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="7-habits-of-highly-effective-people"&gt;7 habits of highly effective people&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;be proactive&lt;/li&gt;
&lt;li&gt;"begin with the end in mind" (envision the goal)&lt;/li&gt;
&lt;li&gt;"put first things first" (order and prioritize)&lt;/li&gt;
&lt;li&gt;"think win-win" (good outcomes for everyone)&lt;/li&gt;
&lt;li&gt;"Seek First to Understand, Then to be Understood" (listen, then persuade)&lt;/li&gt;
&lt;li&gt;"synergize" (teamwork)&lt;/li&gt;
&lt;li&gt;"sharpen the saw" (sustainable balance)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/The_7_Habits_of_Highly_Effective_People"&gt;http://en.wikipedia.org/wiki/The_7_Habits_of_Highly_Effective_People&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="maslows-hierarchy-of-needs"&gt;Maslow's Hierarchy of Needs&lt;/h4&gt;
&lt;p&gt;The lowest levels of the pyramid must be satisfied before people can focus and succeed at higher levels.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; Self-Actualization
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;--------Esteem--------
  -----Love/Belonging-----
 ---------Safetey----------
-------Physiological--------&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Maslow's_hierarchy_of_needs"&gt;https://en.wikipedia.org/wiki/Maslow's_hierarchy_of_needs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="important-software-concepts"&gt;Important Software Concepts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Do Not Repeat Yourself (DRY)&lt;/li&gt;
&lt;li&gt;Model View Controller (MVC)&lt;/li&gt;
&lt;li&gt;Atomic Consistent Isolation Durability (ACID)&lt;/li&gt;
&lt;li&gt;Abstraction Polymorphism (overloading, inheritance, overriding interface) ,  Inheritance , Encapsulation&lt;/li&gt;
&lt;li&gt;Consistency Availability Partition tolerance vs Basically Available Soft-State with Eventual consistency&lt;/li&gt;
&lt;li&gt;Nondeterministic Polynomial ... NP-hard &lt;a href="http://en.wikipedia.org/wiki/NP-hard"&gt;http://en.wikipedia.org/wiki/NP-hard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;NP-complete (subset sum problem can be verified) &lt;a href="http://en.wikipedia.org/wiki/NP-complete"&gt;http://en.wikipedia.org/wiki/NP-complete&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;co-NP (verifier of "no" answer")&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Timeline_of_algorithms"&gt;http://en.wikipedia.org/wiki/Timeline_of_algorithms&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="amdahls-law"&gt;Amdahl's Law&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;A system cannot be sped up by parallelization more than the inherently serial steps &lt;a href="http://en.wikipedia.org/wiki/Amdahl%27s_law"&gt;http://en.wikipedia.org/wiki/Amdahl%27s_law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;So benchmark your system, then determine what parts can be parallelized and how much that will improve the result and how much will it cost to do so&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="conways-law"&gt;Conway's Law&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The system design produced by an organization will reflect the organization's communication structure. &lt;a href="http://www.melconway.com/Home/Conways_Law.html"&gt;http://www.melconway.com/Home/Conways_Law.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.thoughtworks.com/insights/blog/demystifying-conways-law"&gt;http://www.thoughtworks.com/insights/blog/demystifying-conways-law&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Possibly disastrous results when combined with Groupthink &lt;a href="http://en.wikipedia.org/wiki/Groupthink"&gt;http://en.wikipedia.org/wiki/Groupthink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Commonly referred to when considering how adding a new person or new team to organization will affect productivity&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="brooks-law"&gt;Brooks' Law&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Adding resources (people) later in a project will make it even later &lt;a href="http://en.wikipedia.org/wiki/Brooks%27s_law"&gt;http://en.wikipedia.org/wiki/Brooks%27s_law&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;A decent observation given the above "laws": if a task has serial parts adding people (parallelization) will not speed it up AND every person will have to interface &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="moores-law"&gt;Moore's Law&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Computing power will double (or become cheaper by half) every two years &lt;a href="http://en.wikipedia.org/wiki/Moore%27s_law"&gt;http://en.wikipedia.org/wiki/Moore%27s_law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Sustained in part by improvements in complimentary technologies like Memory, Storage, Cooling, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;At a certain point in the future potentially only possible using parallel computing but with an increased coordination cost (including software that leverages parellization)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="postels-law"&gt;Postel's Law&lt;/h4&gt;
&lt;p&gt;Be conservative in what you do, be liberal in what you accept from others&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.m.wikipedia.org/wiki/Robustness_principle"&gt;https://en.m.wikipedia.org/wiki/Robustness_principle&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="laws-of-unix"&gt;Laws of Unix&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Unix_philosophy#Eric_Raymond.E2.80.99s_17_Unix_Rules"&gt;http://en.wikipedia.org/wiki/Unix_philosophy#Eric_Raymond.E2.80.99s_17_Unix_Rules&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modularity: Write simple parts connected by clean interfaces.&lt;/li&gt;
&lt;li&gt;Clarity: Clarity is better than cleverness.&lt;/li&gt;
&lt;li&gt;Composition: Design programs to be connected with other programs.&lt;/li&gt;
&lt;li&gt;Separation: Separate policy from mechanism; separate interfaces from engines.&lt;/li&gt;
&lt;li&gt;Simplicity: Design for simplicity; add complexity only where you must.&lt;/li&gt;
&lt;li&gt;Parsimony: Write a big program only when it is clear by demonstration that nothing else will do.&lt;/li&gt;
&lt;li&gt;Transparency: Design for visibility to make inspection and debugging easier.&lt;/li&gt;
&lt;li&gt;Robustness: Robustness is the child of transparency and simplicity.&lt;/li&gt;
&lt;li&gt;Representation: Fold knowledge into data, so program logic can be stupid and robust.&lt;/li&gt;
&lt;li&gt;Least Surprise: In interface design, always do the least surprising thing.&lt;/li&gt;
&lt;li&gt;Silence: When a program has nothing surprising to say, it should say nothing.&lt;/li&gt;
&lt;li&gt;Repair: Repair what you can, but when you must fail, fail noisily and as soon as possible.&lt;/li&gt;
&lt;li&gt;Economy: Programmer time is expensive; conserve it in preference to machine time.&lt;/li&gt;
&lt;li&gt;Generation: Avoid hand-hacking; write programs to write programs when you can.&lt;/li&gt;
&lt;li&gt;Optimization: Prototype before polishing. Get it working before you optimize it.&lt;/li&gt;
&lt;li&gt;Diversity: Distrust all claims for one true way.&lt;/li&gt;
&lt;li&gt;Extensibility: Design for the future, because it will be here sooner than you think. (Or, to put it another way, your creations will last longer than you think!)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="clean-code"&gt;Clean Code&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Source Code is for humans, make it easy to read and understand&lt;/li&gt;
&lt;li&gt;The code is the authoritative source (comments add context)&lt;/li&gt;
&lt;li&gt;Leave the campground cleaner than you found it&lt;/li&gt;
&lt;li&gt;Tests reveal what the code outputs; clean code runs all of the tests&lt;/li&gt;
&lt;li&gt;Meaningful Names&lt;/li&gt;
&lt;li&gt;Functions: A minimum number of parameters and the smaller the better&lt;/li&gt;
&lt;li&gt;Open - Close principle&lt;/li&gt;
&lt;li&gt;Single Responsibility (do one thing, and do it well)&lt;/li&gt;
&lt;li&gt;No Duplication (DRY)&lt;/li&gt;
&lt;li&gt;Objects allow modularity, Boundaries keep you sane&lt;/li&gt;
&lt;li&gt;Separate Constructing a System from Using it (and Initialization from Runtime)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="fallacies-of-distributed-computing"&gt;Fallacies of Distributed Computing&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing"&gt;https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The network is reliable.&lt;/li&gt;
&lt;li&gt;Latency is zero.&lt;/li&gt;
&lt;li&gt;Bandwidth is infinite.&lt;/li&gt;
&lt;li&gt;The network is secure.&lt;/li&gt;
&lt;li&gt;Topology doesn't change.&lt;/li&gt;
&lt;li&gt;There is one administrator.&lt;/li&gt;
&lt;li&gt;Transport cost is zero.&lt;/li&gt;
&lt;li&gt;The network is homogeneous.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="how-complex-systems-fail"&gt;How Complex Systems Fail&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://web.mit.edu/2.75/resources/random/How%20Complex%20Systems%20Fail.pdf"&gt;http://web.mit.edu/2.75/resources/random/How%20Complex%20Systems%20Fail.pdf&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Complex systems are intrinsically hazardous systems&lt;/li&gt;
&lt;li&gt;Complex systems are heavily and successfully defended against failure&lt;/li&gt;
&lt;li&gt;Catastrophe requires multiple failures – single point failures are not enough&lt;/li&gt;
&lt;li&gt;Complex systems contain changing mixtures of failures latent within them&lt;/li&gt;
&lt;li&gt;Complex systems run in degraded mode&lt;/li&gt;
&lt;li&gt;Catastrophe is always just around the corner&lt;/li&gt;
&lt;li&gt;Post-accident attribution accident to a ‘root cause’ is fundamentally wrong&lt;/li&gt;
&lt;li&gt;Hindsight biases post-accident assessments of human performance&lt;/li&gt;
&lt;li&gt;Human operators have dual roles: as producers &amp;amp; as defenders against failure&lt;/li&gt;
&lt;li&gt;All practitioner actions are gambles&lt;/li&gt;
&lt;li&gt;Actions at the sharp end resolve all ambiguity&lt;/li&gt;
&lt;li&gt;Human practitioners are the adaptable element of complex systems&lt;/li&gt;
&lt;li&gt;Human expertise in complex systems is constantly changing&lt;/li&gt;
&lt;li&gt;Change introduces new forms of failure&lt;/li&gt;
&lt;li&gt;Views of ‘cause’ limit the effectiveness of defenses against future events&lt;/li&gt;
&lt;li&gt;Safety is a characteristic of systems and not of their components&lt;/li&gt;
&lt;li&gt;People continuously create safety&lt;/li&gt;
&lt;li&gt;Failure free operations require experience with failure&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="why-do-computers-stop-and-what-can-be-done-about-it"&gt;Why do computers stop and what can be done about it&lt;/h3&gt;
&lt;p&gt;Jim Gray: &lt;a href="http://www.hpl.hp.com/techreports/tandem/TR-85.7.pdf"&gt;http://www.hpl.hp.com/techreports/tandem/TR-85.7.pdf&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="dickersons-hierarchy-of-reliability"&gt;Dickerson's Hierarchy of Reliability&lt;/h3&gt;
&lt;p&gt;Product
Development
Capacity Planning
Testing and Release Procedures
Postmortem and Root Cause Analysis
Incident Response
Monitoring&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/drawings/d/1kshrK2RLkW-XV8enmWZxeRFRgADj6d4Ru_w5txz_k9I/edit"&gt;https://docs.google.com/drawings/d/1kshrK2RLkW-XV8enmWZxeRFRgADj6d4Ru_w5txz_k9I/edit&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="designerscreators-of-programming-languages"&gt;Designers/Creators of Programming Languages&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Language&lt;/th&gt;
&lt;th align="center"&gt;Creator/Designer&lt;/th&gt;
&lt;th align="center"&gt;Year&lt;/th&gt;
&lt;th align="center"&gt;more info&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Fortran&lt;/td&gt;
&lt;td align="center"&gt;John Backus&lt;/td&gt;
&lt;td align="center"&gt;  1957&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/Fortran"&gt;https://en.wikipedia.org/wiki/Fortran&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Lisp&lt;/td&gt;
&lt;td align="center"&gt;John McCarthy&lt;/td&gt;
&lt;td align="center"&gt;  1958&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/Lisp_(programming_language)"&gt;https://en.wikipedia.org/wiki/Lisp_(programming_language)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;C&lt;/td&gt;
&lt;td align="center"&gt;Dennis Ritchie&lt;/td&gt;
&lt;td align="center"&gt;  1972&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/C_(programming_language)"&gt;https://en.wikipedia.org/wiki/C_(programming_language)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;C++&lt;/td&gt;
&lt;td align="center"&gt;Bjarne Stroustrup&lt;/td&gt;
&lt;td align="center"&gt;  1983&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/C%2B%2B"&gt;https://en.wikipedia.org/wiki/C%2B%2B&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Perl&lt;/td&gt;
&lt;td align="center"&gt;Larry Wall&lt;/td&gt;
&lt;td align="center"&gt;  1987&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/Perl"&gt;https://en.wikipedia.org/wiki/Perl&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Python&lt;/td&gt;
&lt;td align="center"&gt;Guido van Roosum&lt;/td&gt;
&lt;td align="center"&gt;  1991&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/Python_(programming_language)"&gt;https://en.wikipedia.org/wiki/Python_(programming_language)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Java&lt;/td&gt;
&lt;td align="center"&gt;James Gosling&lt;/td&gt;
&lt;td align="center"&gt;  1995&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/Java_(programming_language)"&gt;https://en.wikipedia.org/wiki/Java_(programming_language)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;PHP&lt;/td&gt;
&lt;td align="center"&gt;Rasmus Lerdorf&lt;/td&gt;
&lt;td align="center"&gt;  1995&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/PHP"&gt;https://en.wikipedia.org/wiki/PHP&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Javascript&lt;/td&gt;
&lt;td align="center"&gt;Brendan Eich&lt;/td&gt;
&lt;td align="center"&gt;  1995&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/JavaScript"&gt;https://en.wikipedia.org/wiki/JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Ruby&lt;/td&gt;
&lt;td align="center"&gt;Yukihiro Matsumoto&lt;/td&gt;
&lt;td align="center"&gt;  1995&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/Ruby_(programming_language)"&gt;https://en.wikipedia.org/wiki/Ruby_(programming_language)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Go&lt;/td&gt;
&lt;td align="center"&gt;Robert Griesemer, Rob Pike, Ken Thompson&lt;/td&gt;
&lt;td align="center"&gt;  2009&lt;/td&gt;
&lt;td align="center"&gt;  &lt;a href="https://en.wikipedia.org/wiki/Go_(programming_language)"&gt;https://en.wikipedia.org/wiki/Go_(programming_language)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="a-quick-history-of-software-in-ascii"&gt;A quick history of software (in ascii)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hardcoded hardware (ENIAC) -&amp;gt;
  von neumann architecture (stored programs) -&amp;gt;
    mainframes with custom punch cards (assembly) -&amp;gt;
      procedural code (fortran, c) -&amp;gt;
        object oriented (simula, java) -&amp;gt;
          parallel programming -&amp;gt;
            Artificial Intelligence that writes self adapting Domain Specific Langauges for everything?
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start by reading all of the following to nitpick how the above is fast and loose with history and the truth...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Computer"&gt;http://en.wikipedia.org/wiki/Computer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/ENIAC"&gt;http://en.wikipedia.org/wiki/ENIAC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Von_Neumann_architecture"&gt;http://en.wikipedia.org/wiki/Von_Neumann_architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Programming_paradigm"&gt;http://en.wikipedia.org/wiki/Programming_paradigm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Object-oriented_programming#History"&gt;http://en.wikipedia.org/wiki/Object-oriented_programming#History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Parallel_computing#Software"&gt;http://en.wikipedia.org/wiki/Parallel_computing#Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Concurrent_computing"&gt;http://en.wikipedia.org/wiki/Concurrent_computing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="hackers-jargon"&gt;Hacker's Jargon&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.catb.org/jargon/oldversions/"&gt;http://www.catb.org/jargon/oldversions/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 08 Aug 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2011-08-08:a-concise-summary-of-amazing-and-great-ideas/</guid><category>thoughts</category><category>tdd</category><category>lean</category><category>persuasion</category><category>great</category><category>efficiency</category><category>laws</category><category>software</category></item><item><title>Time for Programmers</title><link>https://blog.john-pfeiffer.com/time-for-programmers/</link><description>
&lt;p&gt;Computer (Unix / POSIX) time starts 1970-01-01 00:00:00 UTC &lt;a href="http://en.wikipedia.org/wiki/Unix_time"&gt;http://en.wikipedia.org/wiki/Unix_time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An excellent article about time, especially for java programmers, &lt;a href="http://www.odi.ch/prog/design/datetime.php"&gt;http://www.odi.ch/prog/design/datetime.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inside the "river of time" measurement is absurd, but Physicists have spacetime, &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"...cycles of radiation corresponding to the transition between the two electron spin energy levels of the ground state of the 133 Caesium atom".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;24 hours, UTC and NTP can synchronize the world (especially servers!), but days, calendars, time zones, weeks, etc. will drive you crazy, so think carefully and use the utility libraries!&lt;/p&gt;
&lt;h3 id="java-datetime-timezone-example"&gt;Java datetime timezone example&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Date&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Calendar&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.TimeZone&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.text.DateFormat&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.text.SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// not thread-safe&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt; &lt;span class="n"&gt;dfm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"yyyy-MM-dd"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;DateFormat&lt;/span&gt; &lt;span class="n"&gt;dfm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"yyyy-MM-dd HH:mm:ss"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;dfm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setTimeZone&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TimeZone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getTimeZone&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Europe/Zurich"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dfm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2007-02-26 20:15:00"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="yesterday-in-python"&gt;Yesterday in python&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;span class="n"&gt;yesterday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromordinal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toordinal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="dateutil-and-helper-functions"&gt;dateutil and helper functions&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dateutil.parser&lt;/span&gt;      
&lt;span class="c1"&gt;# http://labix.org/python-dateutil  (for google app engine put the source directory at the root project level)&lt;/span&gt;

&lt;span class="n"&gt;myd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Thu, 11 Jul 2013 05:01:21 -0700'&lt;/span&gt;
&lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dateutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myd&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;seconds_to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;datetime_string_to_seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date_str&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dateutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Thu, 11 Jul 2013 05:01:21 -0700&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Utility&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime_to_seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;datetime_to_seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;datetime_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timetuple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="pytz-for-timezones"&gt;pytz for timezones&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt; &lt;span class="c1"&gt;# sometimes requires complex installation, easy_install --upgrade pytz&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"UTC"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;utc&lt;/span&gt;

&lt;span class="n"&gt;date_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"UTC"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;date_utc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="time-and-datetime-tuples"&gt;time and datetime tuples&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="n"&gt;mytime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Mon Apr 07 13:05:55 PDT 2014"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"%a %b &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; %H:%M:%S %Z %Y"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# time.struct_time(tm_year=2014, tm_mon=4, tm_mday=7, tm_hour=13, tm_min=5, tm_sec=55, tm_wday=0, tm_yday=97, tm_isdst=1)&lt;/span&gt;
&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mytime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 1396901155.0&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mytime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 2014-04-07 13:05:55&lt;/span&gt;

&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 2008-11-10 17:53:59&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="n"&gt;date_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;date_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 2008-11-10 17:53:59&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# repr prints with limits on sizes of objects&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;calendar&lt;/span&gt;
&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# time tuple in utc time to timestamp&lt;/span&gt;
&lt;span class="n"&gt;timestamp_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;calendar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timegm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;date_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"2008-11-10 17:53:59"&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# local time&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcfromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# conversions to time tuples&lt;/span&gt;

&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timetuple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;date_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"2008-11-10 17:53:59"&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="n"&gt;local_time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# local time&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;utc_time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# UTC&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;utc_time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# conversions to timestamps&lt;/span&gt;

&lt;span class="c1"&gt;# time tuple in local time to timestamp&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# time tuple in utc time to timestamp&lt;/span&gt;
&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;timestamp_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;calendar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timegm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# results&lt;/span&gt;
&lt;span class="c1"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# 2008-11-10 17:53:59&lt;/span&gt;
&lt;span class="c1"&gt;# 2008-11-12 13:51:18&lt;/span&gt;
&lt;span class="c1"&gt;# datetime.datetime(2008, 11, 12, 13, 51, 18)&lt;/span&gt;
&lt;span class="c1"&gt;# datetime.datetime(2008, 11, 10, 17, 53, 59)&lt;/span&gt;
&lt;span class="c1"&gt;# datetime.datetime(2008, 11, 12, 13, 59, 27, 595983)&lt;/span&gt;
&lt;span class="c1"&gt;# datetime.datetime(2008, 11, 12, 21, 59, 27, 595983)&lt;/span&gt;
&lt;span class="c1"&gt;# (2008, 11, 10, 17, 53, 59, 0, 315, -1)&lt;/span&gt;
&lt;span class="c1"&gt;# (2008, 11, 10, 17, 53, 59, 0, 315, -1)&lt;/span&gt;
&lt;span class="c1"&gt;# (2008, 11, 12, 21, 59, 27, 2, 317, 0)&lt;/span&gt;
&lt;span class="c1"&gt;# (2008, 11, 12, 13, 59, 27, 2, 317, 0)&lt;/span&gt;
&lt;span class="c1"&gt;# 1226527167.0&lt;/span&gt;
&lt;span class="c1"&gt;# 1226498367&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 05 Jun 2011 21:20:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2011-06-05:time-for-programmers/</guid><category>time</category><category>epoch</category><category>java</category><category>python</category></item><item><title>Amazon SES on EC2 free tier to search for a kitteh!</title><link>https://blog.john-pfeiffer.com/amazon-ses-on-ec2-free-tier-to-search-for-a-kitteh/</link><description>
&lt;h3 id="mission-hourly-poll-of-a-website"&gt;Mission: hourly poll of a website&lt;/h3&gt;
&lt;p&gt;...to find out if the Kitteh is available for adoption and immediate email notification if Kitteh is found.&lt;/p&gt;
&lt;p&gt;Estimated time to complete: between 15 minutes and hours (depending on setting up your EC2 instance, SES service, etc.)&lt;/p&gt;
&lt;p&gt;Skills: Amazon EC2 setup, SSH, centos yum, bash, wget, cronjob&lt;/p&gt;
&lt;h3 id="amazon-free-services-tier"&gt;Amazon Free services tier&lt;/h3&gt;
&lt;p&gt;If you have an Amazon EC2 instance running (e.g. EC2 Linux Micro Instance in Free Tier = centos!)&lt;/p&gt;
&lt;p&gt;(And you're not running over the GET/POST upload/download free tier bandwidths)&lt;/p&gt;
&lt;p&gt;(If you don't know how to setup a quick Amazon Linux Micro Instance in the free tier search this blog for more info)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign up for SES (then receive a verification email for your Amazon AWS Account)&lt;/li&gt;
&lt;li&gt;Account Security Credentials (for AWS access identifiers)  &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use nano or vi to create a file "aws-credentials" (Amazon's sample below)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;AWSAccessKeyId=022QF06E7MXBSH9DHM
AWSSecretKey=kWcrlUX5JEDGM/LtmEENI/aVmYvHNif5zB+d9+
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download the example perl scripts via: &lt;a href="http://aws.amazon.com/code/Amazon-SES"&gt;http://aws.amazon.com/code/Amazon-SES&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://aws-catalog-download-files.s3.amazonaws.com/AmazonSES-2011-02-02.zip
unzip AmazonSES-2011-02-02.zip
chmod +x /home/ec2-user/*.pl
/home/ec2-user/bin/ses-verify-email-address.pl -k aws-credentials -v youreemail@example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="amazon-ec2-missing-some-perl"&gt;Amazon EC2 Missing some perl&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;"Can't locate XML/LibXML.pm in @INC (@INC contains:

/usr/local/lib64/perl5
/usr/local/share/perl5       
/usr/local/share/perl5 
/usr/lib64/perl5   
/usr/share/perl5
/usr/share/perl5
/usr/lib64/perl5
/usr/share/perl5
/usr/local/lib64/perl5/site_perl/5.10.0/x86_64-linux-thread-multi

/usr/local/lib/perl5/site_perl/5.10.0
/usr/lib64/perl5/vendor_perl/5.10.0/x86_64-linux-thread-multi
/usr/lib/perl5/vendor_perl
/usr/lib/perl5/site_perl .) at ./ses-verify-email-address.pl line 26.

BEGIN failed--compilation aborted at ./ses-verify-email-address.pl line 26."
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;THANKS AMAZON! Using their preconfigured Instance means they don't have all of the Perl packages installed...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo yum install perl-XML-LibXML perl-digest-SHA&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo yum provides */SHA.pm&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;tells me what other packages I might have missed...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo yum search perl-Digest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo yum install perl-Digest-SHA&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;What a difference a D versus d makes!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;sudo yum perl-libxml-perl libxml2-devel perl-IO-Socket-SSL libxslt-devel ?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Debian: &lt;code&gt;sudo apt-get install libio-socket-ssl-perl libxml-libxml-perl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail /var/log/maillog&lt;/code&gt; for troubleshooting sendmail...&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="verify-an-ses-linked-email-address-by-running-the-perl-script"&gt;Verify an SES linked email address by running the perl script&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/home/ec2-user/bin/ses-verify-email-address.pl -k aws-credentials -v youreemail@example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the email account you gave above for verification and click on the link...  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have successfully verified an email address with Amazon Simple Email Service.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~/amazonses/bin/ses-send-email.pl -k ~/amazonses/bin/aws-credentials -s "Test AWS" -f youremail@example.com youremail@example.com,secondemail@example.com &amp;lt; ~/kittysearch/result.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="searchsh"&gt;Search.sh&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#/bin/bash&lt;/span&gt;
wget -O ~/kittysearch/page1.htm &lt;span class="s1"&gt;'http://adopt.hssv.org/search/searchResults.asp?task=search&amp;amp;searchid=&amp;amp;advanced=&amp;amp;s=adoption&amp;amp;animalType=2%2C15&amp;amp;statusID=3&amp;amp;state=&amp;amp;regionID=&amp;amp;submitbtn=Find+Animals'&lt;/span&gt;
wget -O ~/kittysearch/page2.htm &lt;span class="s1"&gt;'http://adopt.hssv.org/search/searchResults.asp?tpage=2&amp;amp;task=search&amp;amp;searchid=&amp;amp;advanced=&amp;amp;s=&amp;amp;animalType=2,15&amp;amp;statusID=3&amp;amp;state=&amp;amp;regionID=&amp;amp;submitbtn=Find+Animals'&lt;/span&gt;
wget -O ~/kittysearch/page3.htm &lt;span class="s1"&gt;'http://adopt.hssv.org/search/searchResults.asp?tpage=3&amp;amp;task=search&amp;amp;searchid=&amp;amp;advanced=&amp;amp;s=&amp;amp;animalType=2,15&amp;amp;statusID=3&amp;amp;state=&amp;amp;regionID=&amp;amp;submitbtn=Find+Animals'&lt;/span&gt;
grep -i &lt;span class="s2"&gt;"bandit"&lt;/span&gt; ~/kittysearch/page1.htm ~/kittysearch/page2.htm ~/kittysearch/page3.htm &amp;gt; ~/kittysearch/result.txt

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -s ~/kittysearch/result.txt &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="c1"&gt;# must move to the directory to use the SES.pm&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; ~/amazonses/bin
    ./ses-send-email.pl -k ~/amazonses/bin/aws-credentials -s &lt;span class="s2"&gt;"Test AWS"&lt;/span&gt; -f myemail@domain.com myemail@domain.com,secondrecipient@domain.com &amp;lt; ~/kittysearch/result.txt
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="c1"&gt;# http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/ for full details about email.pl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="trigger-the-search-with-cron"&gt;Trigger the search with cron&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;i key to enter input in vi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;55 * * * * /home/ec2-user/kittysearch/kittysearch.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;escape key gets : then x to save and quit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="troubleshooting-cannot-locate-sespm"&gt;Troubleshooting "Cannot locate SES.pm"&lt;/h3&gt;
&lt;p&gt;Running the script from a different directory or CRON gets the error: "Can't locate SES.pm in @INC"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /home/ec2-user/amazonses/bin/SES.pm /home/ec2-user/kittysearch
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;FIXED! must move to the directory in the script using cd first to have access to SES.pm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ses-message-limit"&gt;SES Message Limit&lt;/h3&gt;
&lt;p&gt;Yyou can send 2,000 messages for free each day when you call Amazon SES from an Amazon EC2
instance directly or through AWS Elastic Beanstalk. (Note bandwidth charges may still apply)&lt;/p&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;p&gt;Apparently since 2011 there has come along infrastructure like page2rss and ifttt that makes these kind of custom solutions less helpful (unless you need customization!)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 28 Feb 2011 00:07:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2011-02-28:amazon-ses-on-ec2-free-tier-to-search-for-a-kitteh/</guid><category>AWS</category><category>EC2</category><category>SES</category><category>cron</category></item><item><title>Command Line DOS Networking</title><link>https://blog.john-pfeiffer.com/command-line-dos-networking/</link><description>
&lt;p&gt;Disk Operating System is still quite useful even in Windows XP/2003/Vista/7 if you know the commands (and parameters).&lt;/p&gt;
&lt;h3 id="diagnostic-and-networking-commands"&gt;Diagnostic and Networking Commands&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;systeminfo.exe&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uptime, OS, originall install, ram, domain, logonserver, nic's  &lt;/p&gt;
&lt;p&gt;(note that window98 had a gui, winipcfg from the Run prompt)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systeminfo.exe /s computername /u domain\\username /p password
ipconfig /all
ipconfig /renew
ipconfig /flushdns
ping  
tracert  
pathping  
netstat

net view \\10.0.0.13  
net use x: \\10.0.0.13
net use /delete x:  
net use /delete \\10.0.0.13\share
net use * \\fileservername\share
net user username newpassword /domain

net localgroup /add administrators "domain users"

# prompts for new password  
net user username * /domain

# Note: If you type these commands on a member server or workstation and  
# you don't add the /domain switch, the command will be performed on the  
# local SAM and NOT on the DC SAM.

# Note: Non-administrators receive a "System error 5 has occurred. Access is denied"  
# error message when they attempt to change the password.

nbtstat -a 127.0.0.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nbtstat [-a RemoteName] [-A IPAddress] [-c] [-n] [-r] [-R] [-RR] [-s] [-S] [Interval]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-a RemoteName : Displays the NetBIOS name table of a remote computer, where RemoteName is the NetBIOS computer name of the remote computer.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The NetBIOS name table is the list of NetBIOS names that corresponds to NetBIOS applications running on that computer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-A IPAddress : Displays the NetBIOS name table of a remote computer, specified by the IP address (in dotted decimal notation) of the remote computer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-c : Displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-n : Displays the NetBIOS name table of the local computer. 
The status of Registered indicates that the name is registered either by broadcast or with a WINS server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-r : Displays NetBIOS name resolution statistics. 
On a Windows XP computer that is configured to use WINS, this parameter returns the number of names that have been resolved and registered using broadcast and WINS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-R : Purges the contents of the NetBIOS name cache and then reloads the #PRE-tagged entries from the Lmhosts file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-RR : Releases and then refreshes NetBIOS names for the local computer that is registered with WINS servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-s : Displays NetBIOS client and server sessions, attempting to convert the destination IP address to a name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-S : Displays NetBIOS client and server sessions, listing the remote computers by destination IP address only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interval : Redisplays selected statistics, pausing the number of seconds specified in Interval between each display. Press CTRL+C to stop redisplaying statistics. If this parameter is omitted, nbtstat prints the current configuration information only once.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/nbtstat.mspx"&gt;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/nbtstat.mspx&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-logon-ids"&gt;Windows Logon Ids&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2 interactive  &lt;/li&gt;
&lt;li&gt;3 network  &lt;/li&gt;
&lt;li&gt;4 batch  &lt;/li&gt;
&lt;li&gt;5 service  &lt;/li&gt;
&lt;li&gt;7 unlock  &lt;/li&gt;
&lt;li&gt;8 network cleartext  &lt;/li&gt;
&lt;li&gt;9 RunAs  &lt;/li&gt;
&lt;li&gt;10 RemoteInteractive  &lt;/li&gt;
&lt;li&gt;11 CachedInteractive&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="monitor-logon-script"&gt;Monitor Logon Script&lt;/h3&gt;
&lt;p&gt;Create your logon script and place it in the %SystemRoot%\System32 folder.  &lt;/p&gt;
&lt;p&gt;Run Regedt32.exe and go to the following value:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\WindowsNT\CurrentVersion
\Winlogon\Appsetup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After the last entry in the Appsetup value, place a comma and a space and then enter the name and extension of the logon script you placed in the %SystemRoot%\System32 folder. &lt;/p&gt;
&lt;p&gt;For example, if the value of Appsetup is:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Usrlogon.cmd, Rmvlinks.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After adding an entry for Termlogon.cmd, the value would look like:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Usrlogon.cmd, Rmvlinks.exe, Termlogon.cmd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo %computername% %username% %date% %time% &amp;gt;&amp;gt; %homedrive%\%homepath%\log\log.txt&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="net-use"&gt;Net Use&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;net use /help&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NET USE [devicename | *] [\\computername\sharename[\volume] [password | *]]
[/USER:[domainname\]username]
[/USER:[dotted domain name\]username]
[/USER:[username@dotted domain name]
[/SMARTCARD]
[/SAVECRED]
[[/DELETE] | [/PERSISTENT:{YES | NO}]]

NET USE {devicename | *} [password | *] /HOME

NET USE [/PERSISTENT:{YES | NO}]

NET USE connects a computer to a shared resource or disconnects a
computer from a shared resource. When used without options, it lists
the computer's connections.

[devicename] Assigns a name to connect to the resource or specifies the 
device to be disconnected. There are two kinds of
devicenames: disk drives (D: through Z:) and printers
(LPT1: through LPT3:). Type an asterisk instead of a
specific devicename to assign the next available     devicename.

\\computername Is the name of the computer controlling the shared
resource. If the computername contains blank characters,
enclose the double backslash (\\) and the computername
in quotation marks (" "). The computername may be from 1 to 15 characters long.

\sharename Is the network name of the shared resource.

\volume Specifies a NetWare volume on the server. You must have
Client Services for Netware (Windows Workstations)
or Gateway Service for Netware (Windows Server)
installed and running to connect to NetWare servers.
password Is the password needed to access the shared resource.

* Produces a prompt for the password. The password is
not displayed when you type it at the password prompt.

/USER Specifies a different username with which the connection is made.
domainname Specifies another domain. If domain is omitted,
the current logged on domain is used.
username Specifies the username with which to logon.

/SMARTCARD Specifies that the connection is to use credentials on a smart card.

/SAVECRED Specifies that the username and password are to be saved.
This switch is ignored unless the command prompts for username
and password.

/HOME Connects a user to their home directory.

/DELETE Cancels a network connection and removes the connection
from the list of persistent connections.

/PERSISTENT Controls the use of persistent network connections.
The default is the setting used last.
YES Saves connections as they are made, and restores
them at next logon.
NO Does not save the connection being made or subsequent
connections; existing connections will be restored at
next logon. Use the /DELETE switch to remove persistent connections.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;NET HELP command | MORE&lt;/code&gt; displays Help one screen at a time.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Net_use"&gt;http://en.wikipedia.org/wiki/Net_use&lt;/a&gt;
&lt;a href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/net_use.mspx"&gt;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/net_use.mspx&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 29 Nov 2010 16:37:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-11-29:command-line-dos-networking/</guid><category>DOS</category></item><item><title>Eclipse IDE C Wascana on Windows 7</title><link>https://blog.john-pfeiffer.com/eclipse-ide-c-wascana-on-windows-7/</link><description>
&lt;blockquote&gt;
&lt;p&gt;The Wascana IDE project was discontinued: &lt;a href="http://speedydeletion.wikia.com/wiki/Wascana_Desktop_Developer"&gt;http://speedydeletion.wikia.com/wiki/Wascana_Desktop_Developer&lt;/a&gt; which is probably why links no longer work&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately I was trying to install the 64 bit version of everything below but could not find a reliable method of getting mingw 64 bit to work with Eclipse... &lt;/p&gt;
&lt;p&gt;See the very end for the workaround. &lt;/p&gt;
&lt;p&gt;(Note: having a 64 bit compiler should theoretically compile faster but with gcc 32 bit you can compile / target both 32 and 64 applications.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;install JRE (64 bit)&lt;/li&gt;
&lt;li&gt;install Eclipse CDT (64 bit)&lt;/li&gt;
&lt;li&gt;install Wascana (mingw for eclipse)&lt;/li&gt;
&lt;li&gt;configure the path variable&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="install-the-java-runtime-environment-jre"&gt;Install the Java Runtime Environment (JRE)&lt;/h3&gt;
&lt;p&gt;A pre-requisite is to download the JRE (Java Runtime Environment, 5.0 or higher, newer is often better).&lt;/p&gt;
&lt;p&gt;FIRST, check if you have a 64 bit or older 32 bit system.&lt;/p&gt;
&lt;p&gt;If you have a 64 bit system, use a "64 bit browser" to go to the java page because otherwise it will keep giving you the 32 bit version to download...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.java.com/en/download/faq/java_win64bit.xml"&gt;http://www.java.com/en/download/faq/java_win64bit.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The link and filename should be something like: "jre-6u22-windows-x64.exe"&lt;/p&gt;
&lt;p&gt;Otherwise in Eclipse you may get the Error exit code=13 or "failed to load the JNI shared library"...&lt;/p&gt;
&lt;p&gt;This will most likely install in C:\Program Files\Java (or some variant). (with the \bin\javaw.exe)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;on Windows 7 the C:\Program Files (x86)\ directory contains 32 bit installations/applications&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="install-eclipse-cdt-64-bit"&gt;Install Eclipse CDT (64 bit)&lt;/h3&gt;
&lt;p&gt;The base Eclipse CDT supports integration with the GNU toolchain but may not come with a compiler...&lt;/p&gt;
&lt;p&gt;All Linux distributions include the GNU toolchain (but might not be installed by default...)  &lt;/p&gt;
&lt;p&gt;MinGW provides the best integration support with the CDT due to it's direct support for the Windows environment.&lt;/p&gt;
&lt;p&gt;If you download the Eclipse IDE for C/C++ you'll get the "CDT" plugins along with the default Eclipse platform:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.eclipse.org/cdt/downloads.php"&gt;http://www.eclipse.org/cdt/downloads.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The eclipse.ini file allows you to configure your program (e.g. specify the JRE location)  &lt;/p&gt;
&lt;p&gt;(Notedpad2 or notepad++ handle the linux versus windows line breaks transparently...)  &lt;/p&gt;
&lt;p&gt;e.g. insert the line to specify where your java run time environment is, maybe you have two...&lt;/p&gt;
&lt;h4 id="eclipseini"&gt;eclipse.ini&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-vm
C:\Java\jre6\bin\javaw.exe
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Double clicking the eclipse.exe icon will start it with an empty Workbench (and use the default JRE)  &lt;/p&gt;
&lt;p&gt;The first time you will be given the opportunity to choose your "Workspace" (aka directory where all of your files will be stored).&lt;/p&gt;
&lt;p&gt;I prefer to have it in the Eclipse folder but obviously in a multi user setup the "My Docs" or Network Folder would also make sense... or Dropbox?   (DropBox -&amp;gt; Public might make Open Source Distribution even easier?)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;File -&amp;gt; New -&amp;gt; C Project&lt;/li&gt;
&lt;li&gt;Fill in the basics (you can choose the pre-made hello world app)&lt;/li&gt;
&lt;li&gt;Then click on the "Go To Workbench" so you can see the Project File Explorer, Code Editor, Console   &lt;blockquote&gt;
&lt;p&gt;Window -&amp;gt; Preferences allows you to customize Eclipse e.g. disable usage statistics)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Click on the hammer symbol (Build) to ensure that you create an object file (.o) before trying to test run an executable...&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="gcc-error"&gt;gcc error&lt;/h3&gt;
&lt;p&gt;Of course when you try to build you get an error...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Internal Builder: Cannot run program "gcc" (in directory "C:\My Dropbox\workspace\hello\Debug"): CreateProcess error=2, The system cannot find the file specified
Build error occurred, build is stopped
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Help -&amp;gt; Install New Software&lt;/strong&gt; (previously Software Installer)&lt;/p&gt;
&lt;p&gt;Work With gets pasted the URL of the Wascana C/C++ compiler for Eclipse, then click ADD&lt;br/&gt;
&lt;a href="http://svn.codespot.com/a/eclipselabs.org/wascana/repo"&gt;http://svn.codespot.com/a/eclipselabs.org/wascana/repo&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;seems to have moved to Google Code but does not allow access, maybe &lt;a href="http://sourceforge.net/projects/wascana/"&gt;http://sourceforge.net/projects/wascana/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Click on the Checkbox for "Wascana C/C++ Developer for Windows, then NEXT  &lt;/p&gt;
&lt;p&gt;(review items to be installed, e.g. wascana.core) NEXT, then Agree to the License Terms...&lt;/p&gt;
&lt;p&gt;After it downloads, installs, and restarts Eclipse you'll find the new mingw and msys directories in your Eclipse folder.&lt;/p&gt;
&lt;p&gt;Now you have to update the Path, in Windows it's usually under System Properties -&amp;gt; Advanced System Settings  &lt;/p&gt;
&lt;p&gt;Environment Variables -&amp;gt; System Variables scroll area, highlight "Path" (click on the edit button)&lt;/p&gt;
&lt;p&gt;It should already have something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Append a semi colon to continue the long list and add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;c:\eclipse\mingw\bin
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Apparently some people feel eclipse does not autodetect unless it's c:\mingw&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Theoretically you could also try installing MingW directly from their website, which I've done, but it again is not 64 bit).&lt;/p&gt;
&lt;h3 id="always-32-mingw-gcc-oops"&gt;Always 32 mingw gcc (oops)&lt;/h3&gt;
&lt;p&gt;Unfortunately fundamental flaw - even when using Eclipse 64 bit the
Install New Software gets the Wascana 32 bit mingw gcc.&lt;/p&gt;
&lt;p&gt;The Workaround is to use the Wascana Desktop as a single download/install (which includes 32 bit versions of: JRE 1.6.0 , Mingw 3.4.5 , Eclipse IDE)&lt;/p&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://code.google.com/a/eclipselabs.org/p/wascana/"&gt;http://code.google.com/a/eclipselabs.org/p/wascana/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apparently inaccessible due to strange Google Code permissions issues&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also try: &lt;a href="http://mclserver.eecs.ucf.edu/trac/courses/wiki/COP3402Spring2011/InstallEclipseCpp"&gt;http://mclserver.eecs.ucf.edu/trac/courses/wiki/COP3402Spring2011/InstallEclipseCpp&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 05 Nov 2010 02:21:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-11-05:eclipse-ide-c-wascana-on-windows-7/</guid><category>eclipse</category><category>IDE</category><category>c</category><category>win7</category></item><item><title>Drupal Security Tip: disabling anonymous access to cron</title><link>https://blog.john-pfeiffer.com/drupal-security-tip-disabling-anonymous-access-to-cron/</link><description>
&lt;p&gt;Drupal is a wonderful way of leveraging many open source advanced web features into one interface that conceivably can be handed off to a "non developer" to maintain.&lt;/p&gt;
&lt;p&gt;Along with all of the installation / implementation (often customized to fit the customers' needs) there are two further things that should be considered, Security and Useability.&lt;/p&gt;
&lt;p&gt;Here's some tips on security and maintenance.&lt;/p&gt;
&lt;p&gt;Drupal is a Content Management System that allows remote users to run scripts and access databases on your web server, this is a &lt;strong&gt;serious responsibility&lt;/strong&gt; as Shared Hosting means your runaway/hacked scripts affects others, and Hackers/Spammers are always looking for new Zombies...&lt;/p&gt;
&lt;h3 id="restrict-access-to-php-scripts"&gt;Restrict access to PHP Scripts&lt;/h3&gt;
&lt;p&gt;Restrict the PHP scripts access from ANONYMOUS USERS ON THE INTERNET!&lt;/p&gt;
&lt;p&gt;"index.php" should be allowed (it's your home page) but...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cron is the method in linux to run scheduled tasks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Drupal requires regular scheduled actions for maintenance (e.g. update content in search, cleaning up log files, checking for updates, etc.)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://drupal.org/cron.php"&gt;http://drupal.org/cron.php&lt;/a&gt; (should not be) accessible but &lt;a href="http://example.com/cron.php"&gt;http://example.com/cron.php&lt;/a&gt; may be accessible to ANYONE as that's the default install =( &lt;/p&gt;
&lt;p&gt;To secure the cron.php file in .htacess, you have to do lock it down manually after installation.&lt;/p&gt;
&lt;p&gt;To block remote access to cron.php, in the server's .htaccess file or vhost configuration file:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.htaccess&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Order Deny,Allow
Deny from all
Allow from localhost
Allow from 127.0.0.1
Allow from xx.xx.xx.xx &amp;lt;-- your remote IP address
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or protect update.php too in the .htaccess file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;order deny,allow
deny from all
allow from 127.0.0
# add allowed specific remote IP addresses
allow from a.b.c.d
allow from a.b.c.d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOW ANONYMOUS ACCESS TO CRON.PHP should return either "access denied" or "page not found"...&lt;/p&gt;
&lt;h3 id="running-drupal-cron-manually"&gt;Running Drupal cron manually&lt;/h3&gt;
&lt;p&gt;You can still run cron manually from either of the options below:  &lt;/p&gt;
&lt;p&gt;Administer -&amp;gt; Reports -&amp;gt; Status&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/reports/status/run-cron&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There's even a way to schedule it to run against localhost or 127.0.0.1 (which is trusted in the .htaccess file we created above)&lt;/p&gt;
&lt;h3 id="cron-explained"&gt;Cron explained&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Cpanel -&amp;gt; Advanced -&amp;gt; Cron Jobs&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* * * * * http://example.com/cron.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(e.g. for rochen or bluehost cpanelx command should be the 8 char directory)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;php -q /home/yoursite/public_html/cron.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OR if you have multiple subdomains running different drupal installs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;php -q /home/8chars/public_html/subdomain/cron.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check using your drupal admin to ensure that the cron job has run&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Administer -&amp;gt; Reports -&amp;gt; Status&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This will allow you to test if your cpanel really has the correct permissions as&lt;/p&gt;
&lt;p&gt;Administer -&amp;gt; Reports -&amp;gt; Status should now show the cron job status as updated frequently! =)&lt;/p&gt;
&lt;p&gt;Here is a diagram of the general crontab syntax, for illustration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# +---------------- minute (0 - 59)&lt;/span&gt;
&lt;span class="c1"&gt;# | +------------- hour (0 - 23)&lt;/span&gt;
&lt;span class="c1"&gt;# | | +---------- day of month (1 - 31)&lt;/span&gt;
&lt;span class="c1"&gt;# | | | +------- month (1 - 12)&lt;/span&gt;
&lt;span class="c1"&gt;# | | | | +---- day of week (0 - 7) (Sunday=0 or 7)&lt;/span&gt;
&lt;span class="c1"&gt;# | | | | |&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;executed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g. 59 23 31 12 * /bin/execute/this/script.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;the five stars (with a space in between each!) represent wildcards:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;when minute = 59&lt;/li&gt;
&lt;li&gt;when hour = 23&lt;/li&gt;
&lt;li&gt;when day = 31&lt;/li&gt;
&lt;li&gt;when month = 12&lt;/li&gt;
&lt;li&gt;every day (could be = 5 to limit it to only every friday)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="update-free-access-false"&gt;Update free access = FALSE&lt;/h3&gt;
&lt;p&gt;/sites/default/settings.php should definitely have:&lt;/p&gt;
&lt;p&gt;$update_free_access = FALSE;&lt;/p&gt;
&lt;h3 id="restricting-file-upload-extensions"&gt;Restricting file upload extensions&lt;/h3&gt;
&lt;p&gt;Administer -&amp;gt; Site configuration -&amp;gt; File uploads  &lt;/p&gt;
&lt;p&gt;"Default permitted file extensions field" for each role should be limited, because obviously you don't want ANONYMOUS users uploading .php files! &lt;/p&gt;
&lt;p&gt;(Or in INPUT FORMAT, .php code entered by an anonymous or hacked authenticated user!)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 30 Aug 2010 17:33:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-08-30:drupal-security-tip-disabling-anonymous-access-to-cron/</guid><category>Drupal</category><category>security</category></item><item><title>Drupal 6 wysiwyg module so users can insert images</title><link>https://blog.john-pfeiffer.com/drupal-6-wysiwyg-module-so-users-can-insert-images/</link><description>
&lt;p&gt;Content manager made easy = WYSIWYG (what you see is what you get) (for Drupal 6)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.drupal.org/project/wysiwyg"&gt;https://www.drupal.org/project/wysiwyg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="download-and-install-the-drupal-6-wysiwyg-module"&gt;Download and install the Drupal 6 WYSIWYG module&lt;/h3&gt;
&lt;p&gt;Download and install (aka get the .tgz and upload it to /sites/all/modules) and enable the module  (in the main Drupal Modules menu)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable it with: Administer -&amp;gt; Site building -&amp;gt; Modules&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; Wysiwyg&lt;/li&gt;
&lt;li&gt;lists which editor modules you can use (and a helpful download link)&lt;/li&gt;
&lt;li&gt;e.g. TinyMCE (Download) Not installed.&lt;/li&gt;
&lt;li&gt;Extract the archive and copy its contents into a new folder in the following location: &lt;strong&gt;sites/all/libraries/tinymce&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; Input formats&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure that the "Content Manager Role" (or authenticated user?) has access to Full HTML&lt;br/&gt;
Also you can set the default format to Full HTML
(alternatively you can create a more limited input type role that matches your paranoia)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Administer -&amp;gt; Site configuration -&amp;gt; Wysiwyg&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Input Format = Full HTML = TinyMCE 3.8.8&lt;/li&gt;
&lt;li&gt;Edit the profile of your WYSIWYG editor to decide which buttons/functions are displayed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Up until now (by default) you only get bold and inserting images that are already uploaded...&lt;/p&gt;
&lt;h3 id="setting-up-imce-image-manager"&gt;Setting up IMCE (Image Manager)&lt;/h3&gt;
&lt;p&gt;IMCE (image manager) (with the WYSIWYG bridge module)&lt;/p&gt;
&lt;p&gt;Download and install (aka get the .tgz and upload it to /sites/all/modules) and enable the module  (in the main Drupal Modules menu)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Administer -&amp;gt; Site building -&amp;gt; Modules&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; IMCE -&amp;gt; User-1  &lt;/li&gt;
&lt;li&gt;Configure any specific settings, then give a role (e.g. Content Manager) permission&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; IMCE&lt;/li&gt;
&lt;li&gt;Enable the Image button (as IMCE is accessed from the Image plugin).&lt;/li&gt;
&lt;li&gt;Enable the IMCE plugin in the plugins/buttons configuration of the wysiwyg profiles of your choice. (checkbox)&lt;/li&gt;
&lt;li&gt;Edit the profile of your WYSIWYG editor to decide which buttons/functions are displayed.  &lt;blockquote&gt;
&lt;p&gt;You MUST include the checkbox IMCE...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="permissions"&gt;Permissions&lt;/h3&gt;
&lt;p&gt;One of the common gotchas in Drupal is forgetting to set permissions (and having to dig through a ton of UI to find them)&lt;/p&gt;
&lt;p&gt;Ensure the future "content manager" role has create content permissions  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Administer -&amp;gt; User management -&amp;gt; Roles = Add Role  &lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; User management -&amp;gt;Permissions&lt;/li&gt;
&lt;li&gt;Then assign that role to the user&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="verify-it-all-works"&gt;Verify it all works&lt;/h3&gt;
&lt;p&gt;Finally a user with the appropriate role (e.g. "content manager" above) can insert bold/underline/etc.  and insert images (and upload photos using IMCE).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log In&lt;/li&gt;
&lt;li&gt;Create a new article/post&lt;/li&gt;
&lt;li&gt;In the UI you should see the menu has a lot more buttons&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 26 Aug 2010 05:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-08-26:drupal-6-wysiwyg-module-so-users-can-insert-images/</guid><category>drupal</category><category>wysiwyg</category></item><item><title>CSS 3 column liquid layout example</title><link>https://blog.john-pfeiffer.com/css-3-column-liquid-layout-example/</link><description>
&lt;p&gt;CSS is much better than HTML, but making a webpage look the way it ought to look can be very painful, frustrating, and time consuming.&lt;/p&gt;
&lt;p&gt;Not only do you have to create cross browser compatible code, but it has to look nice when you're done!&lt;/p&gt;
&lt;p&gt;This is just a basic example that you can experiment with and add to later, there are some comments but the code is mostly self explanatory:&lt;/p&gt;
&lt;h3 id="3-column-css-source-code"&gt;3 column css source code&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="na"&gt;xml:lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;


&lt;span class="c"&gt;/* required to kill off any extra "helpful" browser padding  */&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c"&gt;/* full length column */&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c"&gt;/* wraps the div around the left of the prev object */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c"&gt;/* prevent the right column from being pushed down! */&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"column1"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            left left left left left left left left left left left left
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"column2"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                center center center
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"column3"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            right right right right right right right right right
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- end div container --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="3-column-css-example"&gt;3 column css example&lt;/h3&gt;
&lt;div class="field field-name-body field-type-text-with-summary field-label-hidden"&gt;
&lt;html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;style type="text/css"&gt;/* required to kill off any extra "helpful" browser padding  */html, body {  margin: 0;   padding: 0;  height: 99%;} #container{    min-height: 100%;    height: 100%;    margin:0;     border: 1px solid green;}#column1 {    float: left;         width: 33%;  height: 100%;           /* full length column */ position: relative;   border: 1px solid red;}#column2 {  float: left;    /* wraps the div around the left of the prev object */   width: 34%;  height: 100%;    position: relative;   border: 1px solid yellow;}#column3 {   float: right;    width: 33%;  margin-left: -1%;   /* prevent the right column from being pushed down! */   height: 100%;    position: relative;   border: 1px solid blue;  overflow: hidden;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id="container"&gt; &lt;div id="column1"&gt;         left left left left left left left left left left left left      &lt;/div&gt; &lt;div id="column2"&gt;             center center center     &lt;/div&gt; &lt;div id="column3"&gt;         right right right right right right right right right        &lt;/div&gt;&lt;/div&gt;&lt;!-- end div container --&gt;&lt;/body&gt;&lt;/html&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 15 Aug 2010 14:14:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-08-15:css-3-column-liquid-layout-example/</guid><category>css</category></item><item><title>Tiny Core Linux with Linksys Wireless Card - no CD required installation</title><link>https://blog.john-pfeiffer.com/tiny-core-linux-with-linksys-wireless-card-no-cd-required-installation/</link><description>
&lt;p&gt;Tiny Core Linux is fast and works great... but it does take some effort to get setup... &lt;/p&gt;
&lt;p&gt;Here's how I got my Linksys wpc54g (v3) pci wireless card working with WPA - and I didn't burn a tiny core cd!&lt;/p&gt;
&lt;p&gt;You can't repartition a hard drive while actually using it so you'll most likely need GParted (ie from SystemRescueCD bootable cd) so that you can repartition / (root) and resize to have a spare linux partition... AND use:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mke2fs -t ext3 /dev/hda3&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(or wherever it is...)
hda3 = third partition on the first hard drive, you may need to use &lt;code&gt;fdisk -l&lt;/code&gt;
or Start -&amp;gt; Control Panel -&amp;gt; Administrative Tools -&amp;gt; Computer Management -&amp;gt; Disk Management&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;grub bootloader installed (preferrably to the MBR)  &lt;/li&gt;
&lt;li&gt;tinycore.iso (cd image of tiny core installation/live cd)  &lt;/li&gt;
&lt;li&gt;uniextract or isobuster (to open files from iso's)  &lt;/li&gt;
&lt;li&gt;ext2fsd (winxp application that allows copying files in/out of an ext2/ext3 partition)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;tcz&lt;/em&gt; files from an FTP repository listed in the section "Install on a Hard Drive Without Being Connected to the Internet" from  &lt;a href="http://wiki.tinycorelinux.net/wiki:start#installing"&gt;http://wiki.tinycorelinux.net/wiki:start#installing&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wireless-2.6.29.1-tinycore.tcz  &lt;/li&gt;
&lt;li&gt;wireless_tools.tcz  &lt;/li&gt;
&lt;li&gt;wpa_supplicant.tcz  &lt;/li&gt;
&lt;li&gt;b43-fwcutter.tcz  &lt;/li&gt;
&lt;li&gt;open-ssl-0.9.8m.tcz&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="getting-the-pieces-ready"&gt;Getting the pieces ready&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Extract the files from the &lt;strong&gt;tinycore.iso&lt;/strong&gt; (using IsoBuster or UniExtract)...&lt;br/&gt;
OR if you have linux: &lt;code&gt;mount -o loop /path-to-iso/image-filename.iso /mnt/custom&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;We only need the &lt;strong&gt;bzImage&lt;/strong&gt; and &lt;strong&gt;tinycore.gz&lt;/strong&gt; files... &lt;blockquote&gt;
&lt;p&gt;CAPITAL I ON THE bzImage!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;USING Ext2 Volume Manager (ext2fsd) ... browse to your linux partition and create the following folder: &lt;strong&gt;/boot/tinycore&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Copy the "bzimage" and "tinycore.gz" files into the linux partition &lt;strong&gt;/boot/tinycore folder&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Also create the following text file: &lt;strong&gt;/tce/onboot.lst&lt;/strong&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wireless-2.6.29.1-tinycore.tcz
wireless_tools.tcz
b43-fwcutter.tcz
openssl-0.9.8m.tcz
wpa_supplicant.tcz
nano.tcz
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;BE CAREFUL TO NOT HAVE ANY MISSPELLINGS OR EXTRA SPACES&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally, create the directory /tce/optional and copy the above .tcz files into it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TinyCore uses /tce/mydata.tgz to store your files in the /home and /opt directories. (Therefore you could sneak something in if you wanted to...?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ALSO, it uses .ashrc (e.g. not BASH command prompt) so any aliases are in /tce/mydata.tgz -&amp;gt; home/tc/.ashrc&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="modify-your-grub-legacy-menu"&gt;Modify your Grub (legacy) menu&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;menu.lst&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;title tinycore  
root (hd0,2)  
kernel /boot/tinycore/bzimage  
initrd /boot/tinycore/tinycore.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="oh-wait-wifi-drivers"&gt;Oh Wait, Wifi Drivers!&lt;/h3&gt;
&lt;p&gt;BUT my wifi depends on this Linksys wpc54g (v3) pci wireless card AND wpa encryption...&lt;/p&gt;
&lt;p&gt;So I've got &lt;strong&gt;wl_apsta.o&lt;/strong&gt; from my previous debian kernel 2.6.26 (with all of the linux-header and make and compiling commands to get that binary...)&lt;/p&gt;
&lt;p&gt;Without the correct fw5 (b43 firmware) &lt;code&gt;dmesg&lt;/code&gt; will contain:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;b43-phy0 ERROR: firmware file "b43/ucode5.fw"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;kernel firmware unhappy with wrong linksys driver&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;COPY &lt;strong&gt;wl_apsta.o&lt;/strong&gt; into &lt;strong&gt;/mnt/hda3/tce&lt;/strong&gt; (with EXT2FSD or usb stick or whatever)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Rather than hack into my-data.tgz we'll wait until we've booted into Tiny Core...&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="booting-into-tiny-core-linux"&gt;Booting into Tiny Core Linux&lt;/h3&gt;
&lt;p&gt;BOOTING INTO TINY CORE IS VERY FAST... (fingers crossed about everything before)&lt;/p&gt;
&lt;p&gt;Right Click -&amp;gt; Control Panel or a funny icon in the middle with screwdriver = Control Panel&lt;/p&gt;
&lt;p&gt;First check that our "onboot.lst" hack worked: Apps Audit -&amp;gt; OnBoot -&amp;gt; Maintenance&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(could also use: nano /mnt/hda3/tce/onboot.lst)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHEN YOU CHOOSE TO SAVE/BACKUP&lt;/strong&gt; (or when prompted when closing to Save a Backup)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mydata.tgz&lt;/strong&gt; is created and it includes any modifications to &lt;strong&gt;/opt/bootlocal.sh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;since things put in the &lt;strong&gt;bootlocal.sh&lt;/strong&gt; script are run as root... my wifi hack works...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano bootlocal.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /lib/firmware  
b43-fwcutter -w /lib/firmware /mnt/hda3/tce/wl_apsta.o  
wpa_supplicant -B -iwlan0 -c/mnt/hda3/tce/wpa_supplicant.conf  
udhcpc -H hostname -b -i wlan0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the /lib/firmware directory is necessary for the kernel to get the new drivers  &lt;/p&gt;
&lt;p&gt;the b43-fwcutter firmware cutter gets the drivers to the directory  &lt;/p&gt;
&lt;p&gt;wpa_supplicant starts in the background using wlan0 and the config file wpa_supplicant.conf&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wpa_passphrase ssid-network-name &amp;gt; wpa_supplicant.conf&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;prompts for the wireless network password, after you type it in press enter&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;udhcpc is busybox's dhcp client using "hostname", in the background on wlan0&lt;/p&gt;
&lt;p&gt;An alternative configuration in bootlocal.sh for a static ip would be...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig wlan0 10.0.0.99 netmask 255.255.255.0 up  
route add default gw 10.0.0.138  
echo "nameserver 10.0.0.138" &amp;gt; /etc/resolv.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="verify-after-reboot"&gt;Verify after reboot&lt;/h3&gt;
&lt;p&gt;AFTER I REBOOTED ifconfig wlan0 //shows me my ip address  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping 10.0.0.138&lt;/code&gt; and &lt;code&gt;ping http://kittyandbear.net&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ALL OK!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="adding-a-browser-to-tiny-core-linux"&gt;Adding a browser to Tiny Core Linux&lt;/h3&gt;
&lt;p&gt;Of course, now I have to install a browser...&lt;/p&gt;
&lt;p&gt;Since tinycore works from the core image and with then added modifications to be as lean and fast as possible you really need to explicitly choose what you want on your hard drive AND what you want started at boot time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right Click -&amp;gt; AppsBrowser or funny icon on the bottom right (gears)&lt;/li&gt;
&lt;li&gt;File -&amp;gt; Install Local Extension (anything on your hard drive but not in onboot.lst)  &lt;/li&gt;
&lt;li&gt;By default it lists your TCE/optional directory, double click on the one you want...
(If it isn't onboot and it isn't "installed" by above then it's not on your tinycore yet!)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OR File -&amp;gt; AppsBrowser ... when you choose to install something from the "repository" be prepared to wait for about 5 minutes for it to load the hundreds of packages...&lt;/p&gt;
&lt;h3 id="miscellaneous-tiny-core-linux-notes"&gt;Miscellaneous Tiny Core Linux Notes&lt;/h3&gt;
&lt;p&gt;Right Click -&amp;gt; Shells -&amp;gt; Shell Dark or funny icon on the bottom left (terminal with prompt)&lt;/p&gt;
&lt;p&gt;Right Click -&amp;gt; Control Panel -&amp;gt; System Stats OR funny icon in the middle with screwdriver = Panel -&amp;gt; System Stats&lt;/p&gt;
&lt;p&gt;dmesg TAB shows you the b43 stuff  &lt;/p&gt;
&lt;p&gt;cpu is cpu type  &lt;/p&gt;
&lt;p&gt;mem is RAM free  &lt;/p&gt;
&lt;p&gt;net is network devices installed...&lt;/p&gt;
&lt;p&gt;loadkmap &amp;lt; /usr/share/kmap/uk.kmap&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 04 Aug 2010 01:52:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-08-04:tiny-core-linux-with-linksys-wireless-card-no-cd-required-installation/</guid><category>linux</category><category>tiny core linux</category></item><item><title>Electric Car Rebate... Why not go European?</title><link>https://blog.john-pfeiffer.com/electric-car-rebate-why-not-go-european/</link><description>&lt;p&gt;I don't expect anybody to read this as Slashdot articles grow exponentially in comments each hour but...&lt;/p&gt;
&lt;p&gt;The price of petrol in London is about 116 pence per liter &lt;a href="http://www.whatprice.co.uk/petrol-prices"&gt;http://www.whatprice.co.uk/petrol-prices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1 US gallon = 3.78 liter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;4.39 GBP (pounds) per gallon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1 pound = 1.5 dollars (exchange rates are always crazy)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;= 6.59 dollars per gallon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;miles driven / mpg ... -&amp;gt; total cost of gasoline?  &lt;/p&gt;
&lt;p&gt;195k / 49.5 = 3939.40 * $6.59 = $25,960 (hybrid)  &lt;/p&gt;
&lt;p&gt;195k / 30 = 6500 * $6.59 = $42,835 (fuel efficient car)  &lt;/p&gt;
&lt;p&gt;195k / 15 = 13000 * $6.59 = $85,670 (normal/big car)&lt;/p&gt;
&lt;p&gt;So, while many will argue that "Europeans" are "controlling their oil consumption" through taxes, I would argue that the world has been susidizing the oil industry. Additionally, many American vehicles get 20 mpg or even 15 mpg.&lt;/p&gt;
&lt;p&gt;PLEASE REMEMBER, money is fiction (pieces of paper), work is economic fiction, government is fiction, and the price of Gas/Fossil Fuels is fiction. We all agree to a system but the system can and should be changed towards improvement.&lt;/p&gt;
&lt;p&gt;IEA: To promote efficiency, cut fossil fuel subsidies&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cnet.com/news/iea-to-promote-efficiency-cut-fossil-fuel-subsidies/"&gt;http://www.cnet.com/news/iea-to-promote-efficiency-cut-fossil-fuel-subsidies/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iea.org/files/energy_subsidies.pdf"&gt;http://www.iea.org/files/energy_subsidies.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/publications/national_transportation_statistics/html/table_04_23.html"&gt;http://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/publications/national_transportation_statistics/html/table_04_23.html&lt;/a&gt;
&lt;em&gt;Table 4-23: Average Fuel Efficiency of U.S. Light Duty Vehicles&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So perhaps instead of silly electric car rebates we should reduce Fossil Fuel susbidies and increase the tax on gas (yes, there are both Federal and State taxes on gas already so I'm not proposing some radical communist ideology), thereby making the market pay the actual costs (not even counting externalities like environmental impact!).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 02 Aug 2010 13:13:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-08-02:electric-car-rebate-why-not-go-european/</guid><category>electric cars</category></item><item><title>Can't delete FTP folder in Drupal - Filezilla hidden files</title><link>https://blog.john-pfeiffer.com/cant-delete-ftp-folder-in-drupal-filezilla-hidden-files/</link><description>&lt;p&gt;I couldn't delete a folder in FTP (which can be pretty frustrating) until I realized that Filezilla (my FTP/SFTP application with UI of choice) has an option to "force showing hidden files"&lt;/p&gt;
&lt;p&gt;In Filezilla 3 = Server -&amp;gt; Force showing hidden files&lt;/p&gt;
&lt;p&gt;I could then see the .htaccess file and delete it.&lt;/p&gt;
&lt;p&gt;(Right click on a folder/file and File Attributes shows me the permissions e.g. Read / Write / Execute)...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 13 Jul 2010 18:30:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-07-13:cant-delete-ftp-folder-in-drupal-filezilla-hidden-files/</guid><category>drupal</category><category>filezilla</category></item><item><title>How to install a Drupal tag cloud</title><link>https://blog.john-pfeiffer.com/how-to-install-a-drupal-tag-cloud/</link><description>&lt;p&gt;How to install a Drupal Cloud Tag Block First, in case you've stumbled on this by mistake (you were looking for Blocks of Drupal "Cloud" cheese with price tags?)...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Drupal is a "content management system" - a fancy way of saying software that takes your text/photos and makes them pretty...     automatically!&lt;/li&gt;
&lt;li&gt;Tag is an associated "label" - kind of like you might call a sandwich a "cheese sandwich", or "lunch", or a "snack". It's a neat free form way to categorize your thoughts without much effort (oh the wonders of Computers).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tagadelic module for Drupal creates a weighted "cloud" of the tags you have on your content nodes. &lt;/p&gt;
&lt;p&gt;If you create a "block" on your pages it is MUCH easier for you and any readers (if you have them?) to navigate...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the module &lt;a href="http://drupal.org/project/tagadelic"&gt;http://drupal.org/project/tagadelic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract the tar.gz (izarc2go and 7zip) into a folder Upload the folder to /drupal-root/sites/all/modules (using FTP or preferrably SFTP)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Administer -&amp;gt; Site building -&amp;gt; Modules -&amp;gt; List (It appears under Taxonomy ... Tagadelic&lt;/strong&gt;, fill in the checkbox to Enable the module.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Administer -&amp;gt; Site building -&amp;gt; Blocks -&amp;gt; List Blocks&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tagadelic has already created the following Block parts for you: &lt;strong&gt;Tags in Blog Tags&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Use the dropdown to put the tag in the "Right sidebar" &lt;/li&gt;
&lt;li&gt;Then drag and drop it to determine it's order (ie below the search box)&lt;/li&gt;
&lt;li&gt;Finally click on "configure" next to it to select: customize the "title" above the cloud tag (e.g. Tag Cloud) what pages the block will appear.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note: Tags for the current post is an easy way to show "related content"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;These tags also may help your SEO but be careful to not overdo it! I personally like adding the other Block, "Tags for this post" as well because&lt;/p&gt;
&lt;p&gt;As per my very smart's wife very smart suggestion - an image...&lt;/p&gt;
&lt;p&gt;[![example-of-a-drupal-tagadelic-tag-cloud.gif]]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 06 Jul 2010 12:04:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-07-06:how-to-install-a-drupal-tag-cloud/</guid><category>drupal</category></item><item><title>America's Great Recession and Wealth Without Borders</title><link>https://blog.john-pfeiffer.com/americas-great-recession-and-wealth-without-borders/</link><description>&lt;p&gt;Why do countries like Germany and Japan have such a high quality of life AND high productivity? &lt;/p&gt;
&lt;p&gt;Remember that their unemployed have free medical care, education, and unemployment benefits...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oecdbetterlifeindex.org/countries/germany"&gt;http://www.oecdbetterlifeindex.org/countries/germany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.oecdbetterlifeindex.org/countries/japan"&gt;http://www.oecdbetterlifeindex.org/countries/japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.oecdbetterlifeindex.org/countries/united-states"&gt;http://www.oecdbetterlifeindex.org/countries/united-states&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are they just smarter than Americans?&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;While the US has the "highest average income" it comes at the price of the lower tiers not having the same opportunities for medical care and education, so maybe it's an active choice of American inequality?&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;"The economists Emmanuel Saez and Thomas Piketty examined tax returns from 1913 to 2008. They discovered an interesting pattern. In the late 1970s, the richest 1 percent of American families took in about 9 percent of the nation’s total income; by 2007, the top 1 percent took in 23.5 percent of total income."&lt;/p&gt;
&lt;p&gt;Lower income taxes encourages risk taking and short term "me first now" gains.&lt;/p&gt;
&lt;p&gt;Higher income taxes motivates creating methods of long term wealth accrual, e.g. businesses with continual steady profits.&lt;/p&gt;
&lt;p&gt;Corporations and Wealthy Individuals do not have geographic or political boundaries. &lt;/p&gt;
&lt;p&gt;It is the mainstream and poor of a society that cannot simply pack up and move some place sunnier with low taxes (Monaco). &lt;/p&gt;
&lt;p&gt;So don't worry about the "wealth moving away because of high taxes"... it's already done so (e.g. Microsoft Ireland and Offshore bank accounts etc.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.gpo.gov/fdsys/pkg/CHRG-110shrg45575/html/CHRG-110shrg45575.htm"&gt;http://www.gpo.gov/fdsys/pkg/CHRG-110shrg45575/html/CHRG-110shrg45575.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ctj.org/ctjreports/2014/05/dozens_of_companies_admit_using_tax_havens"&gt;http://ctj.org/ctjreports/2014/05/dozens_of_companies_admit_using_tax_havens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.bloomberg.com/news/articles/2010-05-13/american-companies-dodge-60-billion-in-taxes-even-tea-party-would-condemn"&gt;http://www.bloomberg.com/news/articles/2010-05-13/american-companies-dodge-60-billion-in-taxes-even-tea-party-would-condemn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What's left? Businesses and Organizations that bring people together and give them a common purpose. &lt;/p&gt;
&lt;p&gt;They receive money for their time and work which is then spent in the local economies.  I call it the &lt;strong&gt;Exponential Spending Effect&lt;/strong&gt; of capitalism (as opposed to the failed Trickle Down Economic
Policy).&lt;/p&gt;
&lt;p&gt;There's a lie that "businesses are made for profit" - If you own and work in a business (the quintessential small business) and you pay your employees, suppliers, contractors regularly and you receive a salary of $100,000 but your business doesn't show a profit... &lt;/p&gt;
&lt;p&gt;You can still have a wonderful life! and everyone in that interconnected ecology is healthy and stable. In fact, you're even contributing to the mythical GDP.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.economist.com/blogs/economist-explains/2014/03/economist-explains-26"&gt;http://www.economist.com/blogs/economist-explains/2014/03/economist-explains-26&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yet if policemen, firemen, nurses, teachers, etc. aren't able to work and spend then the quality of life for everyone will degrade into misery. &lt;/p&gt;
&lt;p&gt;The wealth gap will drive America's great experiment, a Democratic Capitalist Republic, into Depression and Oligarchy... &lt;a href="http://en.m.wikipedia.org/wiki/Income_inequality_in_the_United_States"&gt;http://en.m.wikipedia.org/wiki/Income_inequality_in_the_United_States&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enrich your mind: Your vote makes a difference!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.usa.gov/Citizen/Topics/Voting/Register.shtml"&gt;http://www.usa.gov/Citizen/Topics/Voting/Register.shtml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 05 Jul 2010 14:09:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-07-05:americas-great-recession-and-wealth-without-borders/</guid></item><item><title>Outlook RPC over HTTP with a non standard port</title><link>https://blog.john-pfeiffer.com/outlook-rpc-over-http-with-a-non-standard-port/</link><description>
&lt;p&gt;"The proxy server you have specified is invalid. Correct it and try again."&lt;/p&gt;
&lt;p&gt;Oh, the wonderful error messages from Microsoft...  &lt;/p&gt;
&lt;p&gt;So Outlook 2003 has HTTP and HTTPS hard coded to ports 80 and 443 (wonderfully modular thinking).&lt;/p&gt;
&lt;p&gt;Imagine you want to move your Outlook Web Access to a different port (security reasons? Or maybe just that another application is hard coded to port 443...)&lt;/p&gt;
&lt;p&gt;Now it's easy to tell people: &lt;strong&gt;https://mailserver.example.com:4430&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;BUT you might have to update any Blackberry using OWA to connect to Exchange users with the new port...&lt;/p&gt;
&lt;p&gt;and RPC over HTTP (s) is quite useful for the non VPN inclined ...&lt;/p&gt;
&lt;p&gt;The following unsupported workaround works, use at your own risk, registry editing is required...  &lt;/p&gt;
&lt;h3 id="the-ui-configuration"&gt;The UI Configuration&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;In Control Panel -&amp;gt; Mail -&amp;gt; Email Accounts -&amp;gt; View or Change -&amp;gt; Change (button) -&amp;gt; More Settings (button) -&amp;gt; Connection (tab)&lt;/li&gt;
&lt;li&gt;Checkbox: Connect to my Exchange mailbox using HTTP  &lt;/li&gt;
&lt;li&gt;Then the button: Exchange Proxy Settings &lt;strong&gt;https://mailserver.example.com:4430&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Connect using SSL only (for the paranoid)  &lt;/li&gt;
&lt;li&gt;Mutually authenticate...  &lt;/li&gt;
&lt;li&gt;Yes, we need the following: msstd:mailserver.example.com&lt;/li&gt;
&lt;li&gt;(note that you may have to download and install the certificate from your mail server for RPC over HTTP to work, the name we've entered doesn't have a port because it's the name that's on the SSL certificate)&lt;/li&gt;
&lt;li&gt;Authentication (NTLM = SSL, Basic means anything - i.e. not encrypted)&lt;/li&gt;
&lt;li&gt;Click ok a million times and we've finished the easy part...&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="hacking-the-windows-registry"&gt;Hacking the Windows Registry&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Start -&amp;gt; Run -&amp;gt; regedit (and hit the OK button)&lt;/li&gt;
&lt;li&gt;(HKCU = hkey_current_user)&lt;/li&gt;
&lt;li&gt;HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows Messaging Subsystem\Profiles\&lt;/li&gt;
&lt;li&gt;Browse down to the subkey: "13dbb0c8aa05101a9bb000aa002fc45a"   (don't ask me why these settings are exactly there)&lt;/li&gt;
&lt;li&gt;Locate in the name column: "001f6622" of type REG_BINARY and double click on it...&lt;/li&gt;
&lt;li&gt;The "Value Data" will be in hex code (with a preview of the ascii on the right)&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0000 6D 00 61 00 69 00 6C 00 m.a.i.l.
0008 65 00 72 00 2E 00 65 00 ......d.
0010 78 00 61 00 6D 00 70 00 o.m.a.i.
0018 6C 00 65 00 2E 00 63 00 n......c.
0020 6F 00 6D 00 2D 00 34 00 o.m.-.4.
0028 34 00 33 00 30 00 30 00 4.3.0.0.
0030 00 00
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You'll see the 2D in the middle - that's the hex code for '-', we're going to change it to 3A (or the hex code for ':')
(yes, we click inside, use the delete key to remove those two and type
in 3A)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0020 6F 00 6D 00 3A 00 34 00 o.m.:.4.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Click OK... Whew, hard part's over...  &lt;/p&gt;
&lt;h3 id="verify-the-changes"&gt;Verify the Changes&lt;/h3&gt;
&lt;p&gt;Now check that your change has taken by going to:&lt;/p&gt;
&lt;p&gt;Control Panel -&amp;gt; Mail -&amp;gt; Email Accounts -&amp;gt; View or Change -&amp;gt; Change (button) -&amp;gt; More Settings (button) -&amp;gt; Connection (tab)&lt;/p&gt;
&lt;p&gt;You should now see: &lt;strong&gt;https://mailserver.example.com:4430&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Note that you won't be able to click OK (because Outlook detects that unpermitted colon) but hit Cancel a bunch of times and open up Outlook to try connecting to your Exchange Server!&lt;/p&gt;
&lt;p&gt;PLEASE NOTE: first ensure that you can get RPC over HTTP working with the default port 443 (e.g. no colons needed) BEFORE trying a non standard port as it is a little tricky to remember the certificate, the firewall port forwarding (if you need to), etc.&lt;/p&gt;
&lt;p&gt;ALSO, remember that to do this you've already changed your Exchange Mail Server IIS SSL port to the non standard 4430 AND you've fixed any firewall forwarding for your server so that 4430 goes to your mail server...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 14 Jun 2010 13:03:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-06-14:outlook-rpc-over-http-with-a-non-standard-port/</guid><category>Microsoft</category><category>Exchange Server</category><category>SSL</category></item><item><title>The Magical Million 3 helicopters scratchcard scam</title><link>https://blog.john-pfeiffer.com/the-magical-million-3-helicopters-scratchcard-scam/</link><description>&lt;p&gt;The Magical Million scratch card scam...&lt;/p&gt;
&lt;p&gt;Magazines and newspapers get money from advertisers, some of which run contests and promotions.&lt;/p&gt;
&lt;p&gt;I was not surprised to see that Rupert Murdoch's "Times" had scratch cards for the Magical Million from PurelyCreative.com&lt;/p&gt;
&lt;p&gt;Considering the fake news from Fox, it's no surprise there's a long standing fake contest advertised in Murdoch's paper.&lt;/p&gt;
&lt;p&gt;A scatch card says "3 identical symbols - you can claim a GUARANTEED CASH PAYOUT".&lt;/p&gt;
&lt;p&gt;So our three helicopters... &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;by calling the £1.50 per minute premium number (or premium text messages) you can find out how much you've won... &lt;/li&gt;
&lt;li&gt;which you then send by post (including a return stamp) and wait months. &lt;/li&gt;
&lt;li&gt;When you chase them up many times in many months you might receive your £10 award (in vouchers?!?!), or then again you might not&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Greed. Something for nothing. You're luckier than everyone else...&lt;/p&gt;
&lt;p&gt;If you are silly enough to insist on "playing" (because you already are a winner), then hopefully you'll recycle the scratch card and go buy a lottery ticket.&lt;/p&gt;
&lt;p&gt;Consider that £9 buys a lot of fun for a homeless person in your neighborhood, or supports your local charity (RSPCA, Red Cross, etc.)&lt;/p&gt;
&lt;p&gt;These companies are the lowest level of legal scam possible (eventually they graduate into selling derivatives, junk bonds, or insurance); if you are using a computer and the internet to read about this scam then you should be too smart to fall for it.&lt;/p&gt;
&lt;p&gt;Oh, do you want some "research", try &lt;a href="http://blogs.mirror.co.uk/investigations/2010/01/watchdog-takes-scratchcard-fir.html"&gt;http://blogs.mirror.co.uk/investigations/2010/01/watchdog-takes-scratchcard-fir.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Original link is too old for the Mirror to keep around so some updated ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.bbc.com/news/uk-19993931"&gt;http://www.bbc.com/news/uk-19993931&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mirror.co.uk/news/uk-news/king-scam-mail-conmen-adrian-3719698"&gt;http://www.mirror.co.uk/news/uk-news/king-scam-mail-conmen-adrian-3719698&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 13 Jun 2010 11:25:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-06-13:the-magical-million-3-helicopters-scratchcard-scam/</guid><category>scam</category></item><item><title>CSS 3 column liquid layout with background image stretch</title><link>https://blog.john-pfeiffer.com/css-3-column-liquid-layout-with-background-image-stretch/</link><description>
&lt;p&gt;CSS keeps improving but sometimes it takes some creativity to meet what might seem like obvious demands: a background image stretched in a column&lt;/p&gt;
&lt;p&gt;The following example gives two different methods of background image stretching, though I admit that the background image is just a color gradient and that this kind of stretching on a graphical image (in a liquid layout) could appear at best, "funny".&lt;/p&gt;
&lt;p&gt;I created a color gradient and then resized it to be 640x2 pixels, otherwise all of the code is below:&lt;/p&gt;
&lt;h3 id="3-column-liquid-layout-with-background-image-stretch-code"&gt;3 column liquid layout with background image stretch code&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="na"&gt;xml:lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;/* required to kill off any extra "helpful" browser padding  */&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c"&gt;/* full length column */&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* bg-body-left is a 640 wide by 2 pixel tall image color gradient */&lt;/span&gt;
    &lt;span class="k"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bg-body-left.png'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;repeat-y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c"&gt;/* wraps the div around the left of the prev object */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c"&gt;/* prevent the right column from being pushed down! */&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* a class is defined below called stretch to force an image to stretch */&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;stretch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;       
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"column1"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            left left left left left left left left left left left left
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"column2"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                center center center
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"column3"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
right right right right right right right right right
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"bg-body-left.png"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"stretch"&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- end div container --&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please leave a comment if you've appreciated this or any other posts on my site! Thanks! -John&lt;/p&gt;
&lt;h3 id="3-column-liquid-layout-with-background-image-stretch-example"&gt;3 column liquid layout with background image stretch example&lt;/h3&gt;
&lt;div class="field field-name-body field-type-text-with-summary field-label-hidden"&gt;
&lt;html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;&lt;style type="text/css"&gt;

/* required to kill off any extra "helpful" browser padding  */
html, body {
    margin: 0;
    padding: 0;
    height: 99%;
}

#container
{
    min-height: 100%;   
    height: 100%;
    margin:0;   
    border: 1px solid green;
}
#column1 {
    float: left;        
    width: 20%; 
    height: 100%;           /* full length column */
    position: relative;

    border: 1px solid red;
    /* bg-body-left is a 640 wide by 2 pixel tall image color gradient */
    background-image: url('bg-body-left.png');
    background-repeat: repeat-y;
}
#column2 {
    float: left;    /* wraps the div around the left of the prev object */
    width: 60%; 
    height: 100%;
    position: relative;
    border: 1px solid yellow;
}
#column3 {
    float: right;
    width: 20%;
    margin-left: -1%;   /* prevent the right column from being pushed down! */
    height: 100%;
    position: relative; 
    border: 1px solid blue;
    overflow: hidden;
}
/* a class is defined below called stretch to force an image to stretch */
.stretch {       
    width:100%;
    height:100%;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="container"&gt;
&lt;div id="column1"&gt;
            left left left left left left left left left left left left
        &lt;/div&gt;
&lt;div id="column2"&gt;
                center center center
        &lt;/div&gt;
&lt;div id="column3"&gt;
right right right right right right right right right
        &lt;img alt="" class="stretch" src="bg-body-left.png"/&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- end div container --&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 15 May 2010 14:30:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-05-15:css-3-column-liquid-layout-with-background-image-stretch/</guid><category>css</category><category>html</category></item><item><title>French Toast recipe aka Purjeni Filiki</title><link>https://blog.john-pfeiffer.com/french-toast-recipe-aka-purjeni-filiki/</link><description>&lt;p&gt;First put oil in a pan and heat it (we use temperature setting 3 of 6 on our electric stove). &lt;/p&gt;
&lt;p&gt;Then beat/whip two or three eggs in a bowl, then take slices of bread and dip them in the whipped eggs (or you can soak them if you want them more egg full) and put them on the frying pan to fry.&lt;/p&gt;
&lt;p&gt;The medium heat should cook the egg slowly (too hot and the egg turns white/yellow like fried eggs on bread), after about 5-10 minutes? (peek underneath and check if they're golden brown) you flip them and cook the other side.&lt;/p&gt;
&lt;p&gt;I sometimes add my secret ingredient, a slice of butter on top to melt, after flipping them over.&lt;/p&gt;
&lt;p&gt;When done you can have them with one of the following yummy toppings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;soft cream cheese (Philadelphia cream cheese)&lt;/li&gt;
&lt;li&gt;kashkaval or mozarella and honey&lt;/li&gt;
&lt;li&gt;jam (raspberry/blueberry/strawberry you name it!)&lt;/li&gt;
&lt;li&gt;helva&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To quote Bobby "Filiki are divine!" or "Helva na filiki e strahotno".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 15 May 2010 10:50:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-05-15:french-toast-recipe-aka-purjeni-filiki/</guid><category>cooking</category></item><item><title>Blackberry Enterprise Server Express on same domain as BES (windows and exchange 2003)</title><link>https://blog.john-pfeiffer.com/blackberry-enterprise-server-express-on-same-domain-as-bes-windows-and-exchange-2003/</link><description>
&lt;p&gt;Goal: Blackberry Express Server install: Windows 2003 with Exchange Server 2003 with BES 5 already installed&lt;/p&gt;
&lt;h3 id="why-blackberry-express"&gt;Why Blackberry Express?&lt;/h3&gt;
&lt;p&gt;Well it's the core Blackberry experience (email + contacts + calendar) but only requires a data plan, not a special (expensive) Blackberry plan.&lt;/p&gt;
&lt;p&gt;The big item missing: Wireless activation is only available with BES dataplan.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://crackberry.com/blackberry-101-lecture-2-bes-and-bis-whats-difference"&gt;http://crackberry.com/blackberry-101-lecture-2-bes-and-bis-whats-difference&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-dilemma-if-you-already-have-a-bes-installation-can-you-setup-a-besx-too"&gt;The dilemma, if you already have a BES installation, can you setup a BESX too?&lt;/h3&gt;
&lt;p&gt;"the two BES servers cannot be in the same BES Domain, but can be in the same AD tree and access the same exchange server."&lt;/p&gt;
&lt;p&gt;"provided BlackBerry Enterprise Server Express is introduced as a new deployment with its own BlackBerry domain, as defined by the BlackBerry configuration database... the BlackBerry Enterprise Server and BlackBerry Enterprise Server Express can run independently in the same Microsoft Exchange environment in a Microsoft Windows Domain and would be managed from separate BlackBerry Administration Service consoles."&lt;/p&gt;
&lt;p&gt;Apparently there is a difference between a BES Domain and a windows domain... &lt;/p&gt;
&lt;p&gt;Basically a BES Domain SHOULD only be the BES installation and Database, therefore you should be
able to have multiple BES installations in the same Windows Domain (e.g. a large corporation with
many exchange servers all in the same Windows Domain?).&lt;/p&gt;
&lt;p&gt;I will try it with my own twist - Not only a separate BESX installation on a windows 2003 server BUT also creating a separate BESADMIN for the new BESX installation.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://supportforums.blackberry.com/t5/BlackBerry-Professional-Software/Installing-BESX-when-BES-5-exists/m-p/488112"&gt;http://supportforums.blackberry.com/t5/BlackBerry-Professional-Software/Installing-BESX-when-BES-5-exists/m-p/488112&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-server-and-exchange-server-setup"&gt;Windows Server and Exchange Server Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Setup a Windows 2003 Server SP2 in the Domain (exchange sys mgmr must match version to exchange server!)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NEEDS at least 1GB RAM - but give it more if you suffer performance issues!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Exchange 2003 SP2 System Manager (Requires Exchange Install CD -&amp;gt; Deployment Tools)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exch2k3\setup\i386\setup.exe =&amp;gt; Action = Custom&lt;/li&gt;
&lt;li&gt;Action = Install (next to MS Exch System Management Tools) ... NEXT... 112MB required, NEXT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download and Install Exchange Service Pack 2 (E3SP2ENG.exe for an old Exchange 2k3 cd)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=535bef85-3096-45f8-aa43-60f1f58b3c40&amp;amp;displaylang=en"&gt;http://www.microsoft.com/downloads/details.aspx?FamilyID=535bef85-3096-45f8-aa43-60f1f58b3c40&amp;amp;displaylang=en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;E3SP2ENG\setup\i386\update.exe (goes from version 6.5 to ? requiring 2 &amp;amp; 13 MB space)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure TCP port 3101 (outgoing) is open on your firewall&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Ensure your anti-spam is not blocking "blackberry.net"&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="permissions-for-a-service-account-for-blackberry-enterprise-server-for-microsoft-exchange"&gt;Permissions for a service account for BlackBerry Enterprise Server for Microsoft Exchange&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.blackberry.com/btsc/viewContent.do?externalId=KB02276"&gt;http://www.blackberry.com/btsc/viewContent.do?externalId=KB02276&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;CREATE a user BESADMIN for the Domain (in Active Directory Users and Computers)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the exchange server with the Mailbox enabled user creation &lt;code&gt;dsa.msc&lt;/code&gt; -&amp;gt; right click = new user&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSION SEND AS: On the domain, &lt;code&gt;dsa.msc&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From the Active Directory "View" option choose Advanced Features&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Right click on the root of the domain for Properties -&amp;gt; Security -&amp;gt; Advanced  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add BESADMIN and Apply Onto = User Objects (dropdown) , Allow = Send As (checkbox)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maybe? more secure: only right click on each OU or user that will be using Blackberry and&lt;br/&gt;
give the BESADMIN "Send As" permission&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Exch 2k3 System Manager -&amp;gt; Administrative Groups right click the Group for your BES  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(e.g. First Administrative Group) -&amp;gt; Delegate Control -&amp;gt; Add  Browse -&amp;gt; Role = Exchange View Only Administrator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Exchange Server: Start -&amp;gt; Programs -&amp;gt; Microsoft Exchange -&amp;gt; System Manager  &lt;/p&gt;
&lt;p&gt;Administrative Groups -&amp;gt; First Administrative Group -&amp;gt; Servers -&amp;gt; right click SERVERNAME (properties) Security -&amp;gt; find the BESADMIN and enable checkboxes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Administer Information Store&lt;/li&gt;
&lt;li&gt;Send As&lt;/li&gt;
&lt;li&gt;Receive As&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Click on Advanced and ensure that "Allow inheritable permissions" is checked)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Local Admin: each server that will have Blackberry Enterprise Server Express components&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My Computer right click -&amp;gt; Manage -&amp;gt; Local Users and Groups -&amp;gt; Groups -&amp;gt; Administrators  &lt;/li&gt;
&lt;li&gt;Add = BESADMIN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My Computer right click -&amp;gt; Properties -&amp;gt; Remote -&amp;gt; Enable Remote Desktop -&amp;gt; Select RemoteDesktop Users =&amp;gt; Add = BESADMIN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Log on Locally and Log on as a Service  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start -&amp;gt; Administrative Tools -&amp;gt; Local Security Settings =&amp;gt; Local Policies -&amp;gt; User Rights Assignment&lt;/li&gt;
&lt;li&gt;double click Log on Locally &amp;amp; Log on as a Service and add BESADMIN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="installing-blackberry-and-database"&gt;Installing Blackberry (and Database)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;BLACKBERRY warn that you need the Microsoft hotfixes 823343 and 894470 , &lt;a href="http://support.microsoft.com/kb/823343"&gt;http://support.microsoft.com/kb/823343&lt;/a&gt; , &lt;a href="http://support.microsoft.com/kb/894470"&gt;http://support.microsoft.com/kb/894470&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Verify by c:\exchsvr\bin\cdo.dll 708KB right click Version 6.5.7232 or later&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REBOOT the server (ok, just an old habit)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log in as the BESADMIN user  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;C:\Research In Motion\BlackBerry Enterprise Server 5.0.1\setup.exe&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Blackberry Configuration Database (aka BES Domain?)  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Blackberry Enterprise Server with all components  &lt;/li&gt;
&lt;li&gt;preinstallation checklist will show you everything is ready (or will be auto installed)  &lt;/li&gt;
&lt;li&gt;Install MS SQL Server 2005 Express SP3&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;note that the extracted setup folder is very similar to the target install folder  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C:\Research In Motion\BlackBerry Enterprise Server 5.0.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C:\Program Files\Research In Motion\BlackBerry Enterprise Server\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;enter BESADMIN password and the NAME of the Server where the SQL Express will be installed  &lt;/li&gt;
&lt;li&gt;(e.g. the name of the server you are installed Blackberry Express!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;read the summary, click INSTALL ... watch and wait.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You are prompted to restart the computer - do so and then log in again with the BESADMIN user.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation continues with the Database Information ... just click Next  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The database BESMgmt doesn't exist, would you like to create it ... YES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter Blackberry CAL Key e.g. besexp-123456-123456-123456-123456&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SRP Host name: gb.srp.blackberry.com and port number: 3101 were already provided  &lt;/li&gt;
&lt;li&gt;SRP identifier = (Serial Number from Blackberry download) S12345678&lt;/li&gt;
&lt;li&gt;SRP authentication key = (Licence Key from Blackberry download)&lt;/li&gt;
&lt;li&gt;1234-1234-1234-1234-1234-1234-1234-1234-1234-1234&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CLICK VERIFY BUTTON 1 AND BUTTON 2 (should be successful and valid! NEEDS dashes - inbetween!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Microsoft Exchange Server popup - type in the Exchange Server Name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Administration Settings (already filled in by default) CLICK NEXT&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(no, I don't want to use SSL between the Blackberry Admin and my LAN browser)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type in the BESADMIN password and click NEXT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advanced Administration = leave as windows default click NEXT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;click Start Services button&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BlackBerry Router has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Attachment Service has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Dispatcher has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry MDS Connection Service has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Alert has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Administration Service - NCC has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Administration Service - AS has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Controller has successfully started.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a note of the Web Admin address(es)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="test-your-blackberry-express-installation"&gt;Test your Blackberry Express Installation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Locally on the Server you can check services.msc (all BB services started) and eventvwr.msc (no Blackberry errors)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a browser (IE8?) &lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(don't worry about the Browser "Security Alert" as it will be a self signed SSL certificate, you can install the certificate and add it to Trusted Sites too...)&lt;/li&gt;
&lt;li&gt;Install the RimWebComponents.cab&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a user (you just need their email address - user should only be on one BES Domain so not on BES 5 and BES X at the same time!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Create User with an Activation Password (e.g. something simple that times out in 4 hours)&lt;/li&gt;
&lt;li&gt;Wait until it gives you the OK message that the user was created (and activation email sent)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="assign-a-device-to-a-user"&gt;Assign a device to a User&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://docs.blackberry.com/en/admin/deliverables/14334"&gt;http://docs.blackberry.com/en/admin/deliverables/14334&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using the Blackberry Administration Service (web)  &lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the left there's a DEVICES area -&amp;gt; Attached Devices (if it doesn't expand?)&lt;/li&gt;
&lt;li&gt;Connect the BlackBerry device to the computer.  &lt;/li&gt;
&lt;li&gt;Click Manage current device -&amp;gt; Click Assign current device -&amp;gt; Search for a user account&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users can activate their BlackBerry devices by connecting them to computers using a USB cable or Bluetooth connection and logging in (with a browser) to the BlackBerry Web Desktop Manager.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;When users complete the activation process, the BESX synchronizes through the BlackBerry Router.  &lt;/li&gt;
&lt;li&gt;If a connection to the BlackBerry Router is interrupted, the data transfer continues over the  wireless network.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blackberry Desktop Manager installed on a computer (and connected to their Outlook Profile)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attach/Connect to a Device&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not likely to be enabled but theoretically after sending the Activation Password the BlackBerry Enterprise Server sends an email message with an etp.dat&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the Device choose Options -&amp;gt; Advanced Options -&amp;gt; Enterprise Activation&lt;/li&gt;
&lt;li&gt;"Activation request failed. A service connection is unvailable"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="tips"&gt;Tips&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Setup a default Password requirement&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Policy -&amp;gt; Manage IT Policies -&amp;gt; Edit IT Policy (default) -&amp;gt; Device Only Tab&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increase the default synchronization of messages when activating&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Servers and components -&amp;gt; BlackBerry Solution topology -&amp;gt; BlackBerry Domain -&amp;gt; Component view -&amp;gt; Email&lt;/li&gt;
&lt;li&gt;Click on the "instance" (e.g. computername_EMAIL) -&amp;gt; click on Messaging tab  &lt;/li&gt;
&lt;li&gt;Scroll down and click on "Edit Instance"&lt;/li&gt;
&lt;li&gt;Change Message prepopulation settings to 14 days and 750 messages  &lt;/li&gt;
&lt;li&gt;scroll down and click SAVE ALL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="useless-steps-from-blackberry"&gt;Useless Steps from Blackberry&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Install SQL Express Service Pack 3 (already included in the Blackberry Express Install!)&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;- &amp;lt;http://www.microsoft.com/downloads/details.aspx?FamilyID=3181842a-4090-4431-acdd-9a1c832e65a6&amp;amp;displaylang=en&amp;gt;
- OTHERWISE theoretically you could re-use an existing SQL database (maybe with old Blackberry data?)
- Install CDO support (for Exch 2010) &amp;lt;http://support.microsoft.com/kb/917481&amp;gt;
- Microsoft Exchange Server MAPI Client and Collaboration Data Objects 1.2.1  
- &amp;lt;http://www.microsoft.com/downloads/details.aspx?FamilyID=4825F157-5816-4802-850D-67A0C5423770&amp;amp;displayLang=en&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;TEST your BESADMIN account access to User Accounts&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;- double click on the self extracting BESX_express_5.0.1.exe but DO NOT run setup.exe)
- `C:\Research In Motion\BlackBerry Enterprise Server 5.0.1\tools\IEMSTest.exe`
- The setup application configures the startup type for the BlackBerry Mail Store Service, BlackBerry Policy Service, and BlackBerry Synchronization Service to manual.
- You cannot activate a BlackBerry device that is associated with the BlackBerry Internet Service over  the wireless network or over wifi.
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 03 May 2010 13:41:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-05-03:blackberry-enterprise-server-express-on-same-domain-as-bes-windows-and-exchange-2003/</guid><category>blackberry</category><category>bes</category><category>besx</category><category>windows server</category><category>exchange server 2003</category></item><item><title>Is Programming Simple? Contrasting FizzBuzz Solutions: 365 programming project day forty two</title><link>https://blog.john-pfeiffer.com/is-programming-simple-contrasting-fizzbuzz-solutions-365-programming-project-day-forty-two/</link><description>
&lt;h3 id="simple-programming-challenge-fizzbuzz"&gt;Simple Programming Challenge: FizzBuzz&lt;/h3&gt;
&lt;p&gt;The following is an example of a simple programming "challenge": &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Write a program that prints the numbers from 1 to 100. 
But for multiples of three print "Fizz" instead of the number and for the multiples of five print "Buzz". 
For numbers which are multiples of both three and five print "FizzBuzz".
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Below I've thrown together a solution in less than 5 minutes, BUT, I thought to myself, experimentally, what would the code look like if I needed something more "Best Practice"...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="quick-and-dirty-fizzbuzz-solution-in-c"&gt;Quick and Dirty FizzBuzz Solution in C&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* 2010-03-29:1800 john pfeiffer  "simple programming" examples */&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Fizz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Buzz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"%d"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end main */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Imagine instead of a challenge it's a professional assignment, requiring scalability, portability, modular parts, future maintenance (by someone totally different who may not be very good at coding and/or not have a lot of time to understand the code)... &lt;/p&gt;
&lt;p&gt;Suddenly a simple answer transforms into the following:&lt;/p&gt;
&lt;h3 id="complex-enterprise-solution-to-fizzbuzz"&gt;Complex "Enterprise" solution to FizzBuzz&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* 2010-03-29 john pfeiffer  "simple programming" examples */&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define BUFFERMAX 128&lt;/span&gt;

&lt;span class="cm"&gt;/* prototyping of functions */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;datasize&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="cm"&gt;/* ------------ MAIN ------------------------------------ */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* clear the output buffer each time */&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Fizz"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Fizz"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Buzz"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Buzz"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%d"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end for i=1 to 100 loop */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end main */&lt;/span&gt;


&lt;span class="cm"&gt;/* ------------- FUNCTION DEFINITIONS ----------------------&lt;/span&gt;
&lt;span class="cm"&gt;perhaps better to put all function definitions in an include file?&lt;/span&gt;

&lt;span class="cm"&gt;The modular abstraction of creating more functions allows us to swap out an existing&lt;/span&gt;
&lt;span class="cm"&gt;implementation, e.g. if there's a faster way of determining "multiple of three"&lt;/span&gt;

&lt;span class="cm"&gt;It also improves portability because most of the code would remain the same except &lt;/span&gt;
&lt;span class="cm"&gt;the output function writing to a win32 Device Context ... aka window&lt;/span&gt;

&lt;span class="cm"&gt;Or we could quickly add functionality by calling a new "write to log" function...&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;


&lt;span class="cm"&gt;/* display a string to the stdout */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* write data to the buffer */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;datasize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;datasize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* determine if the parameter is a multiple of three using "modulo",&lt;/span&gt;
&lt;span class="cm"&gt;if true return 1, if false return 0 */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;intcounter&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* determine if the parameter is a multiple of five using "modulo",&lt;/span&gt;
&lt;span class="cm"&gt;if true return 1, if false return 0 */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;intcounter&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that long convoluted giant isn't even modular enough! &lt;/p&gt;
&lt;p&gt;Obviously the two "isMultiple" functions could both rely on a common modulo wrapper function...&lt;/p&gt;
&lt;p&gt;I guess at a certain point it will start looking like Java or C# ... &lt;/p&gt;
&lt;p&gt;Where if you want to do anything you have to look it up in the manual and change the parameters and hope the designer of the function didn't do anything buggy...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 29 Mar 2010 20:37:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-03-29:is-programming-simple-contrasting-fizzbuzz-solutions-365-programming-project-day-forty-two/</guid><category>c</category><category>fizzbuzz</category><category>code style</category></item><item><title>Windows CE Programming - writing text to the display: 365 programming project day forty one</title><link>https://blog.john-pfeiffer.com/windows-ce-programming-writing-text-to-the-display-365-programming-project-day-forty-one/</link><description>
&lt;h3 id="building-a-program-properly-requires-a-lot-of-discipline"&gt;Building a program properly requires a lot of discipline&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;define goals (what functionality will be achieved?) &lt;/li&gt;
&lt;li&gt;write up a high level flow/state chart &lt;/li&gt;
&lt;li&gt;create modular parts from the flow chart (e.g.functions) &lt;/li&gt;
&lt;li&gt;create tests - e.g. know what input goes in and what should come out &lt;/li&gt;
&lt;li&gt;fill in the functions with dummy information (e.g. always return constants) &lt;/li&gt;
&lt;li&gt;integrate and ensure that your "demo" version achieves your goal &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note that all of this ignores the tools to be used, estimating time and cost, scheduling, etc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;BUT you could just as easily use the above for your "Life Plan for Success"... &lt;/p&gt;
&lt;h3 id="real-life-example-of-programming-for-success"&gt;Real life example of "programming" for success&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Goal: I want to play professional soccer &lt;ul&gt;
&lt;li&gt;find the position I am best at&lt;/li&gt;
&lt;li&gt;go to at least 3 tryouts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flow: &lt;code&gt;fitness -&amp;gt; skills -&amp;gt; recognition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modular Parts:&lt;ul&gt;
&lt;li&gt;physical fitness&lt;/li&gt;
&lt;li&gt;skills&lt;/li&gt;
&lt;li&gt;networking and agent &lt;/li&gt;
&lt;li&gt;tryout special training camps + video of playing &lt;/li&gt;
&lt;li&gt;feedback from experts on my best position&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tests: &lt;ul&gt;
&lt;li&gt;Must run 5km in under 18 minutes.&lt;/li&gt;
&lt;li&gt;Must sprint 40 yards in 5 seconds.&lt;/li&gt;
&lt;li&gt;Must be able to shoot the ball from 30 yards out into top quarter of the goal 10 out of
10 times&lt;/li&gt;
&lt;li&gt;Agent must have history of signing players to contracts&lt;/li&gt;
&lt;li&gt;Tryouts must show a history of players being brought into the team&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sample Info:&lt;ul&gt;
&lt;li&gt;run 5km in 16 minutes&lt;/li&gt;
&lt;li&gt;sprint in 4.7 seconds&lt;/li&gt;
&lt;li&gt;10 for 10 on shooting&lt;/li&gt;
&lt;li&gt;signed a contract with an agency who manages 100's of professional players&lt;/li&gt;
&lt;li&gt;scheduled 3 tryouts where players have been signed onto the first team every year&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integration: &lt;/p&gt;
&lt;p&gt;If I attend a special training camp and give some professional coaches tapes of me playing in different positions I will receive suggestions on what is my best position (and possibly tips on
how to improve at that position).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Based on total "dummy" information + extra edge from sub goal (networking + expert advice)...&lt;/p&gt;
&lt;p&gt;YES, very high probability of success. &lt;/p&gt;
&lt;h3 id="plan-for-a-successful-win-ce-program"&gt;Plan for a Successful Win CE Program&lt;/h3&gt;
&lt;p&gt;Whew, let's get back to some programming! &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Goal: to put text on the screen &lt;/li&gt;
&lt;li&gt;Flow: &lt;code&gt;WinMain -&amp;gt; get the text -&amp;gt; draw the screen -&amp;gt; draw the text&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modular: &lt;ul&gt;
&lt;li&gt;drawtext function &lt;/li&gt;
&lt;li&gt;char to wchar function &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tested: &lt;ul&gt;
&lt;li&gt;program ran with just quit button&lt;/li&gt;
&lt;li&gt;drawing text to the screen direct from Main using a wchar L"string" constant string &lt;/li&gt;
&lt;li&gt;drawing text to the screen from Main using a wchar[] array populated by a wsprintf &lt;/li&gt;
&lt;li&gt;moving the above to a function and calling it from main &lt;/li&gt;
&lt;li&gt;passing a char string to the conversion function and printing the resulting wchar string &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;the "dummy" info was the use of constant wchar L"string" but I also printed the sizeof and strlen and wcstrlen numbers I defined some sub functions so that I could use the char string functions instead of constantly referring to the Windows functions... &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'd hoped it would be more portable but that's something I discuss at the end... Anyways, &lt;/p&gt;
&lt;h3 id="win-ce-code-for-writing-text-to-the-display"&gt;Win CE code for writing text to the display&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* 2010-01 john pfeiffer writing text to the display */&lt;/span&gt;

&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windowsx.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;commctrl.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;aygshell.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define IDC_ExitButton 40099&lt;/span&gt;

&lt;span class="cm"&gt;/* wchar[] must be cleared empty first! */&lt;/span&gt; 
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;stringToWchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kt"&gt;wchar_t&lt;/span&gt; &lt;span class="n"&gt;longstring&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;longstring&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WCHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* convert a char string to wchar and Display it on the screen */&lt;/span&gt;

&lt;span class="cm"&gt;/* here we take the handle to device context (aka logical buffer about the &lt;/span&gt;
&lt;span class="cm"&gt;screen and begin painting it - we then draw a single line of text (windows &lt;/span&gt;
&lt;span class="cm"&gt;wide character format but first converting the character string to wchar string)...&lt;/span&gt;
&lt;span class="cm"&gt;The end paint matches the begin paint and without them the text will flicker constantly */&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;drawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;wchar_t&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/* good practice to zero things before using them */&lt;/span&gt;
    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;stringToWchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;ExtTextOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_tcslen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;ReleaseDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* our big message loop with all sorts of interrupt options */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_LBUTTONDOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_CHAR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_KEYDOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;drawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"press quit button to quit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_CREATE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end function MenuWndProc */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ExitButton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CS_HREDRAW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CS_VREDRAW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WNDPROC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WHITE_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"errors "&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;"IMPORTANT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MB_OK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* Make sure the window uses the Menu App Class name defined above! */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;"menu demo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* -------- -------- -------- -------- */&lt;/span&gt;

    &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;"BUTTON"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;"quit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end WinMain */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="convert-to-a-desktop-application"&gt;Convert to a Desktop Application&lt;/h3&gt;
&lt;p&gt;As always I try to give as much info as possible, therefore to convert this to a Windows Desktop application you must change the following: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Line 32: _tcslen( outputtext ), NULL);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;changed to: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;wcslen( outputtext ), NULL);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;All of the explicit conversions to "Long" that are necessary for Win CE (16 bit) have to be removed... &lt;/p&gt;
&lt;p&gt;which just means getting rid of those pesky 'L' s &lt;/p&gt;
&lt;p&gt;&lt;code&gt;wc.lpszClassName = (LPTSTR) L"App";&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For this to really work in Windows Desktop you'd have to replace my custom char to wchar string conversion with Microsoft's MultiByteToWideChar OR...&lt;/p&gt;
&lt;p&gt;you would probably prefer using wsprintf() to write any text to a wchar_t string and then ExtTextOut is very happy...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 21 Mar 2010 09:44:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-03-21:windows-ce-programming-writing-text-to-the-display-365-programming-project-day-forty-one/</guid><category>windows</category><category>win ce</category><category>c</category></item><item><title>Drupal in 2D - pictures of pixels</title><link>https://blog.john-pfeiffer.com/drupal-in-2d-pictures-of-pixels/</link><description>&lt;p&gt;I've finally got a Drupal WYSIWYG editor (FCK Editor) working with Image Assist? Or just plain Upload?&lt;/p&gt;
&lt;p&gt;Anyways, here's a kitty for my Kitty!&lt;/p&gt;
&lt;p&gt;![cyber-kitty][]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 18 Mar 2010 20:59:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-03-18:drupal-in-2d-pictures-of-pixels/</guid><category>drupal</category></item><item><title>Windows CE programming: A win32 api button: 365 programming project day forty</title><link>https://blog.john-pfeiffer.com/windows-ce-programming-a-win32-api-button-365-programming-project-day-forty/</link><description>&lt;p&gt;Win CE uses a subset of the win32 API which is neat because technically anything written for it can be compiled for a "full" windows as well.   &lt;/p&gt;
&lt;p&gt;Even though the Win32 API is very outdated I prefer the concept of building blocks and getting your hands dirty with implementation - that's how you really learn how things work. &lt;/p&gt;
&lt;p&gt;C# and .Net, especially with a super GUI IDE, make it easy to quickly build something but also
obscure why performance might be slow, why different parts aren't integrating together, and really require you to build based on the vision of the platform designers - for better or for worse.  &lt;/p&gt;
&lt;p&gt;This is probably why many programs written in C that are speed critical have important parts hand written in assembly. So here's a Windows API button for Win CE...&lt;/p&gt;
&lt;p&gt;Don't forget the batch file for pocket gcc:&lt;/p&gt;
&lt;p&gt;\pgcc\cc1plus \pgcc\source-code.txt -o \pgcc\cwms.s -I \pgcc\include -include \pgcc\fixincl.h -fms-extensions \pgcc\as \pgcc\cwms.s -o \pgcc\cwmo.o \pgcc\ld \pgcc\cwmo.o -o \pgcc\cwme.exe -L \pgcc\lib -l cpplib -l corelibc -l coredll -l aygshell -l runtime -l portlib&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* 2010-03-06 john pfeiffer wince quit button&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* these three are included for pocketgcc compatibility */&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windowsx.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;commctrl.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;aygshell.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* not only do we have those complex included Windows headers&lt;/span&gt;
&lt;span class="cm"&gt;but we have to define a special numeric ID for our buttons */&lt;/span&gt;

&lt;span class="cp"&gt;#define  IDC_ExitButton      40099&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_clearScreen    40098&lt;/span&gt;

&lt;span class="cm"&gt;/* HDC = handle to device context - a logical buffer of the screen. &lt;/span&gt;
&lt;span class="cm"&gt;You &amp;quot;write&amp;quot; things to it and then it can write to the display in a chunk.&lt;/span&gt;
&lt;span class="cm"&gt;A paint structure contains the info about the area being painted.&lt;/span&gt;

&lt;span class="cm"&gt;Direct from MSDN...&lt;/span&gt;
&lt;span class="cm"&gt;typedef struct tagPAINTSTRUCT {&lt;/span&gt;
&lt;span class="cm"&gt;  HDC  hdc;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fErase;&lt;/span&gt;
&lt;span class="cm"&gt;  RECT rcPaint;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fRestore;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fIncUpdate;&lt;/span&gt;
&lt;span class="cm"&gt;  BYTE rgbReserved[32];&lt;/span&gt;
&lt;span class="cm"&gt;} PAINTSTRUCT, *PPAINTSTRUCT;&lt;/span&gt;

&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;HDC&lt;/span&gt;  &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="cm"&gt;/* prepares the window for painting */&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="cm"&gt;/* done painting */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* This is the prototype to the &amp;quot;do everything&amp;quot; window message&lt;/span&gt;
&lt;span class="cm"&gt;processing switch function */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* each button gets a window handle */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;clearScreenButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CS_HREDRAW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CS_VREDRAW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WNDPROC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WHITE_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;errors &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IMPORTANT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MB_OK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* create our main window letting windows decide the placement &amp;amp; size */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;quit button app&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* ----------- ----------- ----------- ----------- */&lt;/span&gt;
    &lt;span class="cm"&gt;/* here we get the coordinate dimensions of the main window */&lt;/span&gt;
    &lt;span class="n"&gt;GetWindowRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


    &lt;span class="cm"&gt;/* this makes a quit button at the bottom of the screen */&lt;/span&gt;
    &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BUTTON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 
        &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="cm"&gt;/* button top left corner x,y */&lt;/span&gt;
        &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* width &amp;amp; height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;clearScreenButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
            &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BUTTON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Clear&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 
            &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
            &lt;span class="cm"&gt;/* button top left corner x,y */&lt;/span&gt;
            &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)),&lt;/span&gt;
            &lt;span class="cm"&gt;/* width &amp;amp; height */&lt;/span&gt;
            &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;IDC_clearScreen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;   
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end WinMain */&lt;/span&gt;

&lt;span class="cm"&gt;/* ----------- ----------- ----------- ----------- */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* here we test for what events happened/the user might have done */&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_CREATE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="cm"&gt;/* draw the main window */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_LBUTTONDOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="cm"&gt;/* left button pressed / tap on screen */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_MOUSEMOVE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="cm"&gt;/* mouse pointer is moving */&lt;/span&gt;
            &lt;span class="cm"&gt;/*     if(wParam &amp;amp; MK_LBUTTON)*/&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="cm"&gt;/* quit button pressed */&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_clearScreen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="cm"&gt;/* clear button pressed */&lt;/span&gt;
                    &lt;span class="n"&gt;InvalidateRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;/* wipe the main window */&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end case command */&lt;/span&gt;      
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/*  end case message */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see a button is just a predefined "window" object... &lt;/p&gt;
&lt;p&gt;but hopefully I'll figure out how to design my own button infrastructure so that I better understand the challenges, have increased portability, and maybe even enhanced functionality! ...  &lt;/p&gt;
&lt;p&gt;Further research when compiling using GCC on Windows XP gave warnings about the "long" formatting of some text,&lt;/p&gt;
&lt;p&gt;e.g. the "L" &lt;strong&gt;MessageBox(NULL, TEXT("errors "), L"IMPORTANT", MB_OK);&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;If you don't remove the "L" designation then your buttons won't appear in your binary compiled for Windows XP...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;clearScreenButton = CreateWindow(L"BUTTON", L"Clear", WS_CHILD&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Should be: clearScreenButton = CreateWindow("BUTTON", "Clear", WS_CHILD  &lt;/p&gt;
&lt;p&gt;If you forget to remove the L from wc.lpszClassName = (LPTSTR) L"AppClass"; Then your program will have "undefined behavior" =)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 16 Mar 2010 20:27:00 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-03-16:windows-ce-programming-a-win32-api-button-365-programming-project-day-forty/</guid><category>windows</category><category>win ce</category><category>c</category><category>win32</category></item><item><title>How to customize a Drupal Zen theme Primary Links into Horizontal: 365 programming project day thirty nine</title><link>https://blog.john-pfeiffer.com/how-to-customize-a-drupal-zen-theme-primary-links-into-horizontal-365-programming-project-day-thirty-nine/</link><description>
&lt;p&gt;I'm squeezing my brain to get Drupal theme customization and CSS working as quickly as possible (while working a more than a full time job and doing something besides computers every once in a while)...&lt;/p&gt;
&lt;p&gt;"Creating" a Zen sub theme is relatively easy, mostly a lot of copying, replacing STARTERKIT, and uploading again to a different directory...&lt;/p&gt;
&lt;h3 id="web-admin-configs"&gt;Web Admin configs&lt;/h3&gt;
&lt;p&gt;But to make significant changes in the layout you have to modify &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before that! FIRST MODIFY THE SETTINGS THAT ARE GIVEN VIA THE WEB ADMIN e.g. Theme configuration&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/build/themes/settings/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here you can choose whether to display the "Theme" Primary Links (appears just below the header section)...  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;(I think it's best to uncheck it and use Blocks instead...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/build/block&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Block layouts is where you can put the Primary links up at the top and Secondary links at the bottom.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="firefox-firebug-plugin"&gt;Firefox Firebug Plugin&lt;/h3&gt;
&lt;p&gt;Allows you to "peek" at the html and css source and figure out exactly what code controls what...&lt;br/&gt;
&lt;a href="http://getfirebug.com"&gt;http://getfirebug.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools -&amp;gt; AddOns -&amp;gt; disable&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;when you're not working on a website CSS  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="modifying-layoutcss"&gt;Modifying layout.css&lt;/h3&gt;
&lt;p&gt;LOOK AT THE SOURCE CODE FROM YOUR UNMODIFIED SITE (with Firebug too...) e.g. line 37 of the home page&lt;/p&gt;
&lt;p&gt;WE FIND "menu-primary" in &lt;strong&gt;zen.css&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To "override" the default &lt;strong&gt;zen.css&lt;/strong&gt; all we have to do is create our own version in &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="c"&gt;/* "Primary links" block */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To take advantage of the "nested" control principle, so any links in div "block-menu-primary-links" will now be red, we add the following to &lt;strong&gt;layout.css&lt;/strong&gt; (with comments explaining it too, of course!)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TRY UPLOADING &lt;strong&gt;layout.css&lt;/strong&gt; and forcing your browser to refresh... neat!&lt;/p&gt;
&lt;h3 id="horizontal-menu-in-layoutcss"&gt;Horizontal menu in layout.css&lt;/h3&gt;
&lt;p&gt;SOME ADDITIONAL EXAMPLES (finally the horizontal menu!)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;/* "Primary links" block */&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* this means by default ordered and unordered lists and anchors have no underlines */&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* specifically "anchors" or links will appear as blocks */&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#008000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#CCBA22&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately haven't figured out why the drupal menu width, when set, makes them appear to go down instead of widening to the right... material for a future post I suppose...&lt;/p&gt;
&lt;p&gt;Scratch that, 30 frantic minutes later, a solution has arrived...&lt;/p&gt;
&lt;h3 id="horizontal-menu-in-layoutcss-with-the-width-workaround"&gt;Horizontal menu in layout.css with the width workaround&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;/* FORCING THEM TO BE HORIZONTAL? 2010-02-22 JOHNPFEIFFER   */&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="c"&gt;/* overriding the zen.css "Primary links" block */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c"&gt;/* remove any previously defined margins or padding */&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* this means by default ordered and unordered lists and anchors have no underlines */&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c"&gt;/* no underlining links */&lt;/span&gt;
    &lt;span class="k"&gt;list-style-type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c"&gt;/* no bullet points */&lt;/span&gt;
    &lt;span class="k"&gt;list-style-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* no custom bullet images */&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* I prefer my text to be neat and centered */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* specifically "anchors" or links will horizontal */&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/*inline;  /* blocks force a newline but inline just uses a little width */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c"&gt;/* wide enough for the longest element, unless you want words on two lines */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#008000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;   &lt;span class="c"&gt;/* light blue */&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;       &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#CCBA22&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;   &lt;span class="c"&gt;/* light brown */&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="how-to-create-a-zen-subtheme-part-one"&gt;How to create a zen subtheme (part one)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Note - you should only create custom themes in a test environment, leave your production website alone until you've got everything working!&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the newest version: &lt;a href="http://drupal.org/project/zen"&gt;http://drupal.org/project/zen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract the files into a directory (e.g. &lt;code&gt;tar -xzvf zen-6.x-1.1.tar.gz&lt;/code&gt; or winzip and extract)&lt;/li&gt;
&lt;li&gt;Upload the files using FTP (or better yet, SFTP) into the &lt;strong&gt;/drupal-root/sites/all/themes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Upload the STARTERKIT directory that's inside your zen-6.x-1.1 folder from your pc into the &lt;strong&gt;/drupal-root/sites/all/themes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rename both the pc version and online STARTERKIT directory to your_subtheme_name (lowercase and underscores only)&lt;/li&gt;
&lt;li&gt;Inside both the pc version and the online STARTERKIT directory, rename the &lt;strong&gt;STARTERKIT.info.txt&lt;/strong&gt; to &lt;strong&gt;your_subtheme_name.info&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;On your pc, open the your_subtheme_name.info file and find and replace every "STARTERKIT" with "your_subtheme_name"&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;inside &lt;strong&gt;your_subtheme_name.info&lt;/strong&gt; find the following lines:&lt;/p&gt;
&lt;p&gt;; The name and description of the theme used on the admin/build/themes page.
name        = Zen Sub-theme Starter Kit&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Replace the "zen Sub-theme Starter Kit" with your_subtheme_name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repeat step 7 for the "template.php" file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Repeate step 7 for the "theme-settings.php" file&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upload all 3 modified files (overwrite) to your &lt;strong&gt;/drupal-root/sites/all/themes/your_subtheme_name&lt;/strong&gt; directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using your FTP download the following files from:       &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/drupal-root/sites/all/themes/zen-6.x-1.1/zen/zen&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;html-elements.css, layout-fixed.css, layout-liquid.css, print.css, zen.css&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upload all of the above files into your directory: &lt;strong&gt;/drupal-root/sites/all/themes/your_subtheme_name&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;12a. If you want a fixed (ie 1024px) css layout then rename &lt;strong&gt;layout-fixed.css&lt;/strong&gt; to &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;12b. If you want a resizable css layout then rename &lt;strong&gt;layout-liquid.css&lt;/strong&gt; to &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As the Drupal administrator login to your site and enable your new sub theme: &lt;strong&gt;Administer -&amp;gt; Site building -&amp;gt; Themes&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/build/themes/select&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;you'll probably want to set it as default&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Apparently Drupal 6 is smart enough that when you click save:&lt;/p&gt;
&lt;p&gt;For easier theme development, the theme registry is being rebuilt on every page request. 
It is extremely important to turn off this feature on production websites.&lt;/p&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;p&gt;You may have to:&lt;/p&gt;
&lt;p&gt;run cron manually (or you should be) so that the new options appear on the Drupal Menus.&lt;/p&gt;
&lt;p&gt;Reload after you save the new theme as enabled and default&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 23 Feb 2010 20:52:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-23:how-to-customize-a-drupal-zen-theme-primary-links-into-horizontal-365-programming-project-day-thirty-nine/</guid><category>drupal</category><category>drupal theme</category><category>zen theme</category></item><item><title>A better CSS 3 column header footer layout: 365 programming project day thirty eight</title><link>https://blog.john-pfeiffer.com/a-better-css-3-column-header-footer-layout-365-programming-project-day-thirty-eight/</link><description>&lt;p&gt;It's messy as some of the code could be removed but it gets you most of the way there - a footer at the bottom (even if the content doesn't fill the page)... &lt;/p&gt;
&lt;p&gt;a header at the top that's full width, and 3 columns... with a little weird bug on the right column...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xml:lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;/* required to kill off any extra &amp;quot;helpful&amp;quot; browser padding */&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container1&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container2&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container3&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;column3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;


&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        header
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;column1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                left left left left left left left left left left left left
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;column2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                standard 3 column layout with header and footer
                content and columns are ordered by SEO priority             
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;column3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                right right right right right right right right right
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;image.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    footer
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;


&lt;span class="c"&gt;&amp;lt;!--div id=&amp;quot;container1&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;    &amp;lt;div id=&amp;quot;container2&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;        &amp;lt;div id=&amp;quot;c3&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;/div--&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 18 Feb 2010 14:57:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-18:a-better-css-3-column-header-footer-layout-365-programming-project-day-thirty-eight/</guid><category>css</category><category>html</category></item><item><title>How to center with CSS: 365 programming project day thirty seven</title><link>https://blog.john-pfeiffer.com/how-to-center-with-css-365-programming-project-day-thirty-seven/</link><description>&lt;p&gt;This is a tiny post, but it covers a very important part of how a CSS layout might look: how do you center something?&lt;/p&gt;
&lt;p&gt;The "Centering CSS Blocks Trick" forces the text (or image too, hopefully, depending on a post 2006 browser)...&lt;/p&gt;
&lt;h3 id="css-center-horizontal"&gt;CSS center (horizontal)&lt;/h3&gt;
&lt;h4 id="css"&gt;CSS&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="html"&gt;HTML&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;footer text goes here&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the text-align instruction is perhaps redundant but it's better to be safe (and more universally compatible).&lt;/p&gt;
&lt;h3 id="css-centering-vertically"&gt;CSS centering vertically&lt;/h3&gt;
&lt;p&gt;To VERTICALLY CENTER things takes a bit of creativity,  basically you must pretend that an "inner div" is actually a table cell and use the "new" property of vertical-align (alot like html table cell valign)...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;contentsContainer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;/* height must be a fixed number */&lt;/span&gt;
        &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;table-cell&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;vertical-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c"&gt;/* height must be a fixed number */&lt;/span&gt;
        &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;contentsContainer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        CONTENTS Lots of contents Vertically and horizontally centered CONTENTS
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;contents&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            test more content (this is horizontally centered too)
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="inline-css-centered"&gt;Inline CSS centered&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text-align: center; width: 100%; margin-left: auto; margin-right: auto;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Logo&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/img/icons/logo_256.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Welcome&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whew, back to work!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 17 Feb 2010 15:05:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-17:how-to-center-with-css-365-programming-project-day-thirty-seven/</guid><category>css</category><category>html</category></item><item><title>C programming windows clock v4 (failure is only feedback): 365 programming project day thirty six</title><link>https://blog.john-pfeiffer.com/c-programming-windows-clock-v4-failure-is-only-feedback-365-programming-project-day-thirty-six/</link><description>&lt;p&gt;It seems I've bitten off more than I thought with regularly updating a Window every second...&lt;/p&gt;
&lt;p&gt;I need to go back and learn more about how &lt;strong&gt;WM_PAINT&lt;/strong&gt; works in windows because my current version is very funky... though it does work!&lt;/p&gt;
&lt;p&gt;A couple of obvious other things: &lt;strong&gt;WM_TIMER&lt;/strong&gt; and perhaps &lt;strong&gt;strcpy&lt;/strong&gt; instead of &lt;strong&gt;get_current_time&lt;/strong&gt; again...&lt;/p&gt;
&lt;p&gt;The reason I've chosen the awkward system of getting the system time over and over instead of the "convenient" windows timer is that I'm trying to learn and understand what I can do with programming, not how to copy and paste someone else's function.&lt;/p&gt;
&lt;p&gt;The "modular" aspect of &lt;strong&gt;get_current_time&lt;/strong&gt; returning a string becomes very interesting as theoretically I could modify it to get time from an atomic clock or the internet and the application wouldn't know the difference.&lt;/p&gt;
&lt;p&gt;Anyways, here's some source code that does compile (but I think it has a very slow memory leak so don't leave it running all night... LOL)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* 2010-02-12  john pfeiffer, MS windows clock v4 (updating time)&lt;/span&gt;
&lt;span class="cm"&gt;todo: wm_paint, wm_timer, strcpy instead of get_current?&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_ExitButton 40001&lt;/span&gt;


&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;WINAPI&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPSTR&lt;/span&gt; &lt;span class="n"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                     &lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoadCursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_ARROW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LTGRAY_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;


    &lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindowEx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Windows Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* create button and store the handle */&lt;/span&gt;
    &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                       &lt;span class="cm"&gt;/* class name */&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Push to Quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                 &lt;span class="cm"&gt;/* button caption */&lt;/span&gt;
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* the styles */&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                            &lt;span class="cm"&gt;/* the left and top coordinates */&lt;/span&gt;
        &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                         &lt;span class="cm"&gt;/* width and height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="cm"&gt;/* parent window handle */&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="cm"&gt;/* the ID of your button */&lt;/span&gt;
        &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* the instance of your application */&lt;/span&gt;
        &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;                         &lt;span class="cm"&gt;/* unnecessary extra */&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;

    &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="cm"&gt;/* get the current time initially */&lt;/span&gt;

    &lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* nasty polling business, should be done with WM_TIMER */&lt;/span&gt;
        &lt;span class="cm"&gt;/* if strings aren&amp;#39;t the same then update the window */&lt;/span&gt;
        &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;strcmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;   
            &lt;span class="cm"&gt;/* debugging - am I getting the time comparison? */&lt;/span&gt;
            &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="cm"&gt;/* theoretically the rest of this forces the window to refresh */&lt;/span&gt;
            &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="cm"&gt;/* update the new &amp;quot;old time&amp;quot; */&lt;/span&gt;
            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;               
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;
&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* a struct to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to a DC (buffer) for the screen */&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="cm"&gt;/* find out what&amp;#39;s been clicked */&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;GetClientRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;
            &lt;span class="n"&gt;InvalidateRect&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;

            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;DrawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                   &lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end of WinMain */&lt;/span&gt;


&lt;span class="cm"&gt;/* Get the current time from the system and update the time string */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
    &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 12 Feb 2010 14:47:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-12:c-programming-windows-clock-v4-failure-is-only-feedback-365-programming-project-day-thirty-six/</guid><category>c</category><category>windows</category><category>time</category><category>clock</category></item><item><title>Drupal Basic Site Configuration: the Search Block</title><link>https://blog.john-pfeiffer.com/drupal-basic-site-configuration-the-search-block/</link><description>
&lt;p&gt;A basic Drupal theme has "regions" where you can put things...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            header  
left side                  right side
            content

            footer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Blocks are the "extra parts" that can appear in addition to your "node" (stuff in the Content only)&lt;/p&gt;
&lt;p&gt;While it is easy to get advanced functionality with a few clicks, it can be a chore to remember the order and location of those clicks.&lt;/p&gt;
&lt;h3 id="enable-site-search"&gt;Enable Site Search&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; Site Building -&amp;gt; Modules -&amp;gt; List  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Click the checkbox next to &lt;strong&gt;SEARCH&lt;/strong&gt; to enable it.&lt;/p&gt;
&lt;p&gt;Hit the &lt;strong&gt;SAVE&lt;/strong&gt; button (&lt;em&gt;way down at the bottom&lt;/em&gt;).&lt;/p&gt;
&lt;h3 id="site-search-permissions"&gt;Site Search Permissions&lt;/h3&gt;
&lt;p&gt;Now you have to give Anonymous users (or just Authenticated Users, or maybe your custom category of LOLcatz?) permission to actually see/use the Search.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; User Management -&amp;gt; Permissions  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Click the check boxes next to Search Module for the Anonymous and Authenticated User columns (note you can also give access to Advanced Search... cool.)&lt;/p&gt;
&lt;p&gt;Hit the &lt;strong&gt;SAVE&lt;/strong&gt; button (&lt;em&gt;way down at the bottom&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE that the "administrator/root" user isn't a column (and therefore you can't remove your own permission to administer the site... not that anyone'd ever be so silly...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For Garland, specifically, when you add the Search it will make a "double" so you have to disable the one that's built into the theme...  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; Site Building -&amp;gt; Themes -&amp;gt; Configure -&amp;gt; Global Settings&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Whew! Almost there...&lt;/p&gt;
&lt;h3 id="adding-a-site-search-block"&gt;Adding a Site Search Block&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; Site Building -&amp;gt; Blocks -&amp;gt; List&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From here you can either drag and drop (or use the "dropdown" next to the Block name) to get the Search into the region of the page you want.&lt;/p&gt;
&lt;p&gt;Hit the &lt;strong&gt;SAVE&lt;/strong&gt; button (way down at the bottom) before doing anything else.&lt;/p&gt;
&lt;p&gt;(Very frequently I forget to press save and all of my changes don't get saved... must be a bug.)&lt;/p&gt;
&lt;p&gt;THEN click on &lt;strong&gt;"Configure"&lt;/strong&gt; next to the Search Block to specify some details. (e.g. Search only appears on the page, or the title above the Search Block will be FIND, or only show the Search Block to certain user roles...)&lt;/p&gt;
&lt;p&gt;OK, hit your &lt;strong&gt;SAVE&lt;/strong&gt; button one last time... not only can you, super root administrator see Search but hopefully Anonymous users can now find your secret buried treasure...&lt;/p&gt;
&lt;p&gt;Are you ready for URL's and page titles?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 11 Feb 2010 21:35:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-11:drupal-basic-site-configuration-the-search-block/</guid><category>drupal</category></item><item><title>C programming windows clock v3: 365 programming project day thirty five</title><link>https://blog.john-pfeiffer.com/c-programming-windows-clock-v3-365-programming-project-day-thirty-five/</link><description>&lt;p&gt;My windows clock project is slowly progressing...&lt;/p&gt;
&lt;p&gt;Now I can create a window with a QUIT button and display the current system time (only once)...&lt;/p&gt;
&lt;p&gt;If you want to know more about the project from the beginning search the site for winclock (or click on the time tag).&lt;/p&gt;
&lt;p&gt;I've stripped out most of the project header stuff - perhaps in the future I'll just have it as an "include" so that it's in the project but since it doesn't change much I only have to look at it when I refer back to it (instead of at the top of the file ALL THE TIME!)&lt;/p&gt;
&lt;p&gt;Ok, enough planning and review, here's the code:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;notepad gcwin.bat&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;winclock-v3.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* 2010-02-08  john pfeiffer, MS windows clock v3 (the windows)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_MyExitButton 40001 &lt;/span&gt;&lt;span class="cm"&gt;/* case sensitive! random high number to keep windows happy */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;


&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;WINAPI&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPSTR&lt;/span&gt; &lt;span class="n"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                     &lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoadCursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_ARROW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LTGRAY_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;


    &lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindowEx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Windows Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="cm"&gt;/* create button and store the handle */&lt;/span&gt;
    &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                       &lt;span class="cm"&gt;/* class name */&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Push to Quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                 &lt;span class="cm"&gt;/* button caption */&lt;/span&gt;
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* the styles */&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                            &lt;span class="cm"&gt;/* the left and top coordinates */&lt;/span&gt;
        &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                         &lt;span class="cm"&gt;/* width and height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="cm"&gt;/* parent window handle */&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="cm"&gt;/* the ID of your button */&lt;/span&gt;
        &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* the instance of your application */&lt;/span&gt;
        &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;                         &lt;span class="cm"&gt;/* unnecessary extra */&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;

    &lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;           
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;
&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="cm"&gt;/* a struct to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to a DC (buffer) for the screen */&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="cm"&gt;/* find out what&amp;#39;s been clicked */&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                                
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;GetClientRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;
            &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;
            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;DrawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* send a WM_QUIT */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                         &lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="cm"&gt;/* Get the current time from the system and update the time string */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
    &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 11 Feb 2010 13:42:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-11:c-programming-windows-clock-v3-365-programming-project-day-thirty-five/</guid><category>c</category><category>time</category><category>clock</category><category>windows</category><category>gcc</category></item><item><title>Customize your linux bash console: bashrc, aliases, colors, hotkeys, history length</title><link>https://blog.john-pfeiffer.com/customize-your-linux-bash-console-bashrc-aliases-colors-hotkeys-history-length/</link><description>
&lt;p&gt;The hidden file &lt;strong&gt;.bashrc&lt;/strong&gt; in each user's home directory (~ or or /home/username or /root) controls the configuration of how the console (and certain commands) behave.&lt;/p&gt;
&lt;p&gt;NOTE CENTOS/REDHAT also uses &lt;strong&gt;.bash_profile&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The shell is the program that interfaces between the user and the Linux kernel. There are different shells with different features.&lt;/p&gt;
&lt;p&gt;Ash is a reimplementation of the System V shell  May 6, 1989&lt;/p&gt;
&lt;p&gt;GNU Bourne Again Shell  Bash is an sh-compatible command language interpreter that
 executes commands read from the standard input or from a file. Bash also incorporates
  useful features from the Korn and C shells (ksh and csh)&lt;/p&gt;
&lt;p&gt;June 18, 1999
Zsh is a command interpreter which mostly resembles the Korn shell. Includes a
 command-line editor and many other enhancements over the other shells. &lt;/p&gt;
&lt;h3 id="favorite-aliases"&gt;Favorite Aliases&lt;/h3&gt;
&lt;p&gt;Here are my favorite aliases that are in my .bashrc:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias ls='ls --color=auto'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;color highlighting of a directory listing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias ll='ls -ahlF --color=auto'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;directory listing: all, hidden too, long format, show type with symbols: dir/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias la='ls -A'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;directory listing almost all so exclude . and ..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias l='ls -CF'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;list in columns with trailing type symbols: dir/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias free='free -m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;free RAM in megabytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias df='df -h'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;disk free in human sizes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias nano='nano -c -S -u'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;simple editor with cursor position, smooth scroll, and undo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gp='git pull'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;pull remote changes with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gt='git status'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;current git status with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gw='git whatchanged'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;git history with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gd="GIT_PAGER='' git diff"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;git history with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias rm='rm -i'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;extra prompt before deleting a file or directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias cp='cp -i'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;extra prompt before overwriting a file or directory with a copy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias mv='mv -i'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;extra prompt before overwriting a file or directory with a move&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;export PATH=$PATH:~/bin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;your own local scripts are loaded in the console&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;set bell-style none&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no more annoying bash beeps!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xset -b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no more annoying bash beeps for x windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;alias ssh='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh will not check nor store remote server signatures: insecure!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;unalias free&lt;/code&gt; or &lt;code&gt;\free&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE to escape or override the alias&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To enable the new aliases immediately go to the directory type one of the following:
&lt;code&gt;. ./bashrc&lt;/code&gt; or &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nano /home/username/.bashrc or /root/.bashrc
export PATH=$PATH:~/bin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;p&gt;.bashrc or .profile are where your shell (BASH) gets it's initial settings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root:~# ls -al
total &lt;span class="m"&gt;20&lt;/span&gt;
drwxr-xr-x  &lt;span class="m"&gt;2&lt;/span&gt; root root &lt;span class="m"&gt;4096&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;:56 .
drwxr-xr-x &lt;span class="m"&gt;21&lt;/span&gt; root root &lt;span class="m"&gt;4096&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:26 ..
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;183&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:31 .bash_history
-rw-r--r--  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;2225&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:31 .bashrc
-rw-r--r--  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;141&lt;/span&gt; May &lt;span class="m"&gt;15&lt;/span&gt;  &lt;span class="m"&gt;2007&lt;/span&gt; .profile
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;if a lot of commands start failing try a cat /etc/passwd and see if you are using &lt;strong&gt;/sbin/bash&lt;/strong&gt; or &lt;strong&gt;/bin/sh&lt;/strong&gt; - the older and less functional shell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;whoami&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;display what user is logged in or is being impersonated by su&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;echo $HOME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;display the current user's home directory (which should match what's in /etc/passwd)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;echo $PATH&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;list what binary executable directories are accessible by default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;normal centos user has&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;/usr/local/bin:/bin:/usr/bin:/home/username/bin&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;changing to root with: &lt;code&gt;su -&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;NOTE that if you simply use "su" you will only get the normal user path...&lt;/p&gt;
&lt;h3 id="increasing-bash-history-length"&gt;increasing bash history length&lt;/h3&gt;
&lt;p&gt;.bash_profile allows you to customize your command history size... (sometimes it's a section in .bashrc)&lt;/p&gt;
&lt;p&gt;if it doesn't exist (e.g. ubuntu can't find it ".bash_profile doesn't exist"), create it and make it executable and then add the following lines...  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "#defaults are 500" &amp;gt;&amp;gt; .bash_profile
echo "HISTFILESIZE=10000" &amp;gt;&amp;gt; .bash_profile
echo "HISTSIZE=10000" &amp;gt;&amp;gt; .bash_profile    
chmod 700 ~/.bash_profile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HISTFILE is where the history saves to (/dev/null = no history file), the default is: ~/.bash_history.&lt;/p&gt;
&lt;p&gt;HISTFILESIZE how many commands to keep in HISTFILE (default 500)&lt;/p&gt;
&lt;p&gt;HISTSIZE how many commands to keep in the current session (default 500)&lt;/p&gt;
&lt;p&gt;HISTIGNORE Controls which commands to ignorea nd not save. The variable takes a list of colon separated patterns. Pattern &amp;amp; matches the previous history command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cut -f1 -d" " .bash_history | sort | uniq -c | sort -nr | head -n 30&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;what command you've typed the most&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cut -f1 -d" " /root/.bash_history | sort | uniq -c | sort -nr | head -n 30&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;what command root has typed the most&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cut -f1 /root/.bash_history | sort | uniq -c | sort -nr | head -n 30&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;what command + parameters root has typed the most&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="example-default-bash_profile"&gt;Example default .bash_profile&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Get the aliases and functions
if [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

# User specific environment and startup programs
PATH=$PATH:$HOME/bin
export PATH

# note this last command only exists in the /root/.bash_profile
unset USERNAME
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;nano .bashrc&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uncomment (remove the leading # from the two lines with --color=auto)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# enable color support of ls and also add handy aliases
if [ "&lt;span class="nv"&gt;$TERM&lt;/span&gt;" != "dumb" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    #alias dir='ls --color=auto --format=vertical'
    #alias vdir='ls --color=auto --format=long'
fi

# ALSO, uncomment the following line to get a color prompt:

# Comment in the above and uncomment this below for a color prompt
#PS1='&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;debian_chroot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;debian_chroot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[$
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And comment out the two lines above it...&lt;/p&gt;
&lt;h3 id="hotkeys"&gt;hotkeys&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-r&lt;/td&gt;
&lt;td&gt;to search through your command history in reverse (newest to oldest)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-k&lt;/td&gt;
&lt;td&gt;to clear all the text after cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-u&lt;/td&gt;
&lt;td&gt;to clear all the text before cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-a&lt;/td&gt;
&lt;td&gt;move to beginning of the current&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-e&lt;/td&gt;
&lt;td&gt;move to end of the current&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-f&lt;/td&gt;
&lt;td&gt;move forward one char&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-b&lt;/td&gt;
&lt;td&gt;move backward one word&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="example-recycle-bin-for-root"&gt;Example recycle bin for root&lt;/h3&gt;
&lt;p&gt;Now you can do fun things like have a "recycle bin" for root:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir /recycle-bin&lt;/code&gt;
&lt;code&gt;echo "mv $1 /recycle-bin" &amp;gt; del.sh&lt;/code&gt;
&lt;code&gt;chmod 700 del.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;AND THEN VERIFY WITH: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;touch test.txt&lt;/li&gt;
&lt;li&gt;./del.sh test.txt&lt;/li&gt;
&lt;li&gt;ls -al /recycle-bin&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h3 id="bashrc-xterm-ansi-escape-color-codes"&gt;bashrc - xterm - ANSI escape color codes&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;.bashrc&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias xterm1='xterm -fg black -bg white'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nano /home/username/.icewm/toolbar
prog xterm xterm1 x-terminal-emulator&lt;/p&gt;
&lt;p&gt;nano /home/username/.icewm/keys&lt;/p&gt;
&lt;p&gt;key "Ctrl+Alt+j" xterm -fg black -bg white&lt;/p&gt;
&lt;p&gt;FIRST print out what colors are available...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dircolors -p &amp;gt; dircolors.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;after reading through that and being thoroughly mystified...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo -e "\033[44;37;5m ME \033[0m COOL"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if you put the above into your bash shell you'll see that the ANSI 
control of colors is basically what controls BASH/TERMINALS...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Attribute codes:
00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed

Text color codes:
30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white

Background color codes:
40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white

Black       0;30     Dark Gray     1;30
Blue        0;34     Light Blue    1;34
Green       0;32     Light Green   1;32
Cyan        0;36     Light Cyan    1;36
Red         0;31     Light Red     1;31
Purple      0;35     Light Purple  1;35
Brown       0;33     Yellow        1;33
Light Gray  0;37     White         1;37

echo -e "\e[1;34mThis is a blue text.\e[0m"

so \e[attribute code; text color code0m

framed by the [ --- 0m 
note that the \033 in the first example has been replaced by \e

echo -e "\e[30;470mtest"

FOREGROUND WHITE (in case you accidentally set it to black on black)
echo -e "\033[37m\]"

BACKGROUND WHITE
echo -e "\033[47m\]"

FOREGROUND BLACK
echo -e "\033[1;30m\]"



changing the foreground and background color of your bash shell
(and font?)

TEMPORARY SOLUTION

xterm -fg *color* -bg *color*

PERMENANT SOLUTION


.Xdefaults file in your home directory
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 10 Feb 2010 16:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-10:customize-your-linux-bash-console-bashrc-aliases-colors-hotkeys-history-length/</guid><category>linux</category><category>bash</category><category>bashrc</category><category>bash alias</category><category>bash history</category></item><item><title>Drupal Themes customization intro: 365 programming project day thirty four</title><link>https://blog.john-pfeiffer.com/drupal-themes-customization-intro-365-programming-project-day-thirty-four/</link><description>&lt;p&gt;Drupal is meant to be a dynamic website platform (that runs quite well out of the box) yet customizable.&lt;/p&gt;
&lt;p&gt;Despite the good advice to create a "sub theme" by copying and pasting the current files into a new folder i went ahead and hacked at the core php and css...&lt;/p&gt;
&lt;p&gt;While Garland itself (I'm using the "configurable sub theme Minelli" which must be modified through Garland) is very hard to work with (I will probably end up using Zen to get my final customized effect)...&lt;/p&gt;
&lt;p&gt;FTP into your website hosting and ... /drupal-root/themes/garland&lt;/p&gt;
&lt;p&gt;Modifying page.tpl.php with my trusty notepad2...&lt;/p&gt;
&lt;p&gt;Line 66 has the very interesting terms:&lt;/p&gt;
&lt;p&gt;From there you have to also modify "style.css" to the related terms (that's the way css works, to abstract the content &amp;amp; functionality in html/php and the design in css)...&lt;/p&gt;
&lt;p&gt;FUNNILY ENOUGH, THINGS WORK BACKWARDS...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sidebars&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* min-width: 980px; */&lt;/span&gt;
    &lt;span class="k"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;680&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So as you can see, I cleverly commented out the original and modified it to be smaller (right?)... but it actually made the sidebars bigger... so I'll try the reverse... but changes don't really appear...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Admin -&amp;gt; Flush All Caches is supposed to help make the theme changes appear!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After enough fiddling to understand it I've reset style.css to it's default in Garland...&lt;/p&gt;
&lt;p&gt;Apparently the "Minnelli" sub folder minnelli.css overrides the style.css so that's what I need to work on...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/drupal-root/themes/garland/minnelli/minnelli.css&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;wrapper&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 560px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;960&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sidebars&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;wrapper&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 980px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;480&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sidebar-left&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;wrapper&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sidebar-right&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;wrapper&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 770px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;570&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Except that once again, the settings above have SHRUNK the body...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sidebar-left&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;wrapper&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sidebar-right&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;wrapper&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 770px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;870&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above is the only bit of code needed to widen the body slightly, all of the rest is the garland/minnelli default.&lt;/p&gt;
&lt;p&gt;Ironically the changes only appear so far in the Admin User logged on screen (not for anonymous users)...&lt;/p&gt;
&lt;p&gt;But that's enough for today's post!&lt;/p&gt;
&lt;p&gt;More info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.drupal.org/theme-guide/6-7"&gt;https://www.drupal.org/theme-guide/6-7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.drupal.org/node/225125"&gt;https://www.drupal.org/node/225125&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 10 Feb 2010 15:02:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-10:drupal-themes-customization-intro-365-programming-project-day-thirty-four/</guid><category>drupal</category><category>drupal theme</category><category>css</category></item><item><title>Javascript Form Validation, Lots of work: 365 programming project day thirty three</title><link>https://blog.john-pfeiffer.com/javascript-form-validation-lots-of-work-365-programming-project-day-thirty-three/</link><description>&lt;p&gt;I'm working too much which is why these posts are more infrequent (though I will keep numbering them sequentially and hopefully one day I'll have enough time to backfill all 365 before the 1 year deadline)...&lt;/p&gt;
&lt;p&gt;Javascript is meant to easily add functionality to a webpage.&lt;/p&gt;
&lt;p&gt;Unfortunately some people don't really test it enough, case in point, an email newsletter went out with a link to an online competition page BUT the submit button "didn't work"...&lt;/p&gt;
&lt;p&gt;Here comes John to save the day!&lt;/p&gt;
&lt;p&gt;From the HTML everything appeared fine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;f&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;send_enquiry_displays.asp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;First Name:*  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pTextBox1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;txFirstName&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    More form stuff here...  Notice that the radio button only has one choice...

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;radio&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;5.7 VGA TFT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Wireless LAN:  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ckWirelessLAN&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;whereDidYouHear&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;WUNL0309#1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:checkSingupForm()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;this.blur()&amp;quot;&lt;/span&gt;

    &lt;span class="na"&gt;onmouseover&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;genericRollover(&amp;#39;elImgSubmit&amp;#39;,&amp;#39;images/buttons/submit_over.gif&amp;#39;);&lt;/span&gt;
&lt;span class="s"&gt;    window.status=&amp;#39;Submit Form&amp;#39;;return true;&amp;quot;&lt;/span&gt;

    &lt;span class="na"&gt;onmouseout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;genericRollover(&amp;#39;elImgSubmit&amp;#39;,&amp;#39;images/buttons/submit.gif&amp;#39;);&lt;/span&gt;
&lt;span class="s"&gt;    window.status=&amp;#39;&amp;#39;;return true;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;images/buttons/submit.gif&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;elImgSubmit&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Submit Form&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;66&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;22&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;hspace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;JavaScript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkSingupForm&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//this array should contain every text field you require to be filled in&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txFirstName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;First Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txLastName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Last Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txCompany&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Company&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txTown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Town&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txEmail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;E-mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//for loop checks each value if it is blank &amp;quot;&amp;quot; ... then popup alert and changes focus&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please fill in &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//a regular expression check to ensure the email is in a valid email format&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;emailRE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9_\-])+\.)+([a-zA-Z0-9]{2,4})+$/&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;emailRE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txEmail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please fill in a valid e-mail address.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txEmail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//ensures that the display size have been filled out...&lt;/span&gt;

    &lt;span class="nx"&gt;rdDisplaySizeValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;   
            &lt;span class="nx"&gt;rdDisplaySizeValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;rdDisplaySizeValid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please choose a Display size.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//ensures that the embeddedconfiguration field has been checked at least once...&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdEmbeddedConfiguration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdEmbeddedConfiguration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please choose a Embedded Configuration.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdEmbeddedConfiguration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//--&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After downloading the ASP file and creating a backup copy...&lt;/p&gt;
&lt;p&gt;So what was the problem?&lt;/p&gt;
&lt;p&gt;The incorrect validation of radio button rdDisplaySize had to be commented out.&lt;/p&gt;
&lt;p&gt;I also added the nifty "default CHECKED" option as the form only gave one Radio Button option (but it was a Required field!)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input type="radio" name="rdDisplaySize" value="5.7 VGA TFT CHECKED"&amp;gt;&amp;lt;/td&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Whew, another crisis averted, customers now able to register for the competition and turn themselves into Leads for our company!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 04 Feb 2010 14:59:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-04:javascript-form-validation-lots-of-work-365-programming-project-day-thirty-three/</guid><category>javascript</category><category>html form</category></item><item><title>Replace Windows XP SP3 notepad with notepad2</title><link>https://blog.john-pfeiffer.com/replace-windows-xp-sp3-notepad-with-notepad2/</link><description>&lt;p&gt;Each XP service pack seems to make the process of replacing notepad.exe with notepad2.exe even more complex (somebody at Microsoft really likes the original notepad)...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updated steps for SP3:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download a replacement text editor: &lt;a href="http://www.flos-freeware.ch/notepad2.html"&gt;http://www.flos-freeware.ch/notepad2.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(If you have the \servicepackfiles\i386 folder...)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;rename C:\WINDOWS\ServicePackFiles\i386\notepad.exe C:\WINDOWS\ServicePackFiles\i386\notepad.exe.bak&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now rename notepad2.exe notepad.exe and copy it into:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:\WINDOWS\ServicePackFiles\i386\
C:\WINDOWS\system32\dllcache
C:\WINDOWS\system32\notepad.exe
C:\WINDOWS
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check that your new notepad is in place (the filesize change from 68k to 243k)...&lt;/p&gt;
&lt;p&gt;(In service pack 2 it would complain with 2 popups and you would just hit cancel both times... as \system32 files were immediately replaced by the "original" from dllcache)&lt;/p&gt;
&lt;p&gt;ADDITIONALLY, the "file type" may get messed up so you might have to have notepad2.exe in the C:\ and when you double click a .txt from windows explorer you'll have to choose Open With other -&amp;gt; Browse -&amp;gt; c:\notepad2.exe&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 02 Feb 2010 13:41:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-02:replace-windows-xp-sp3-notepad-with-notepad2/</guid><category>windows</category><category>notepad</category><category>notepad2</category></item><item><title>Debugging and "Accidental Difficulties" with getchar and loops: 365 programming project day thirty two</title><link>https://blog.john-pfeiffer.com/debugging-and-accidental-difficulties-with-getchar-and-loops-365-programming-project-day-thirty-two/</link><description>&lt;p&gt;So for fun I tried to "port" my code (of winclockv2.c) into Linux and compile it with gcc.  &lt;/p&gt;
&lt;p&gt;Remarkably easy since most Linux distributions come with GCC installed (in case you need to build a new application from source code... it sounds scary until you've done it once or twice and then it's easy). &lt;/p&gt;
&lt;p&gt;Just open up a text editor, paste it in, save it (getchar-loop.c). The only thing to change was my Windows "batch" file,  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch gc.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chmod +x gc.sh&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano gc.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash  &lt;/span&gt;
gcc -o &lt;span class="nv"&gt;$1&lt;/span&gt;.exe &lt;span class="nv"&gt;$1&lt;/span&gt; -Wall -ansi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;./gc.sh getchar-loop.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So today's entry is an offshoot program I wrote to investigate why my previous version loop control wasn't working correctly. A little googling showed me that this particular "getchar() buffer problem" is a classic...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* 2010-02-01 john pfeiffer  &lt;/span&gt;
&lt;span class="cm"&gt; getchar() only takes one character from the buffer, &lt;/span&gt;
&lt;span class="cm"&gt; but when a user presses &amp;quot;enter&amp;quot;... &lt;/span&gt;
&lt;span class="cm"&gt; that&amp;#39;s another character in the buffer...&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This program will take in one character you type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; and display it back to you.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GeekSpeak = Demo the extra &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;\n\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; in the&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; getchar() from user &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;loop dilemma&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Please enter one character and press enter...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;(y to quit)... Do not attempt to type in a word or else!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%c&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* we must clear the stdin buffer of extra char&amp;#39;s and the \n for the y!*/&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Ha ha, to quit press &amp;#39;y&amp;#39; again&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;((this corrected version will only display the first char entered).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Press a key or enter a word, then press enter (use y to quit):&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%c&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end of main */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 01 Feb 2010 21:46:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-01:debugging-and-accidental-difficulties-with-getchar-and-loops-365-programming-project-day-thirty-two/</guid><category>c</category><category>getchar</category><category>gcc</category></item><item><title>C programming command line clock continued (winclockv2): 365 programming project day thirty one</title><link>https://blog.john-pfeiffer.com/c-programming-command-line-clock-continued-winclockv2-365-programming-project-day-thirty-one/</link><description>&lt;p&gt;Slowly working towards the final product, indeed I do see that I have a working executable at every stage (even if the steps are small and the tests are numerous)...&lt;/p&gt;
&lt;p&gt;(The looping part does not quite work yet...)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt;2010-01-31 john pfeiffer, MS windows clock&lt;/span&gt;

&lt;span class="cm"&gt;PROGRAM DESIGN&lt;/span&gt;
&lt;span class="cm"&gt;    MS window with X, quit button, and current system time displayed&lt;/span&gt;
&lt;span class="cm"&gt;    Hour:minute:second  (hh:mm:ss)&lt;/span&gt;

&lt;span class="cm"&gt;HIGH LEVEL FUNCTIONS&lt;/span&gt;

&lt;span class="cm"&gt;    update current time&lt;/span&gt;
&lt;span class="cm"&gt;    see if user clicked button&lt;/span&gt;
&lt;span class="cm"&gt;        quit if button clicked&lt;/span&gt;

&lt;span class="cm"&gt;    display current time on window&lt;/span&gt;


&lt;span class="cm"&gt;ORGANIC ITERATIVE BUILDS&lt;/span&gt;
&lt;span class="cm"&gt;    1. build a program to show current time (in c/dos) then exits immediately&lt;/span&gt;
&lt;span class="cm"&gt;        *TEST: should show correct system time &lt;/span&gt;
&lt;span class="cm"&gt;        each time user presses enter show new current time (ctrl+c to exit)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: should show correct system time on each click&lt;/span&gt;

&lt;span class="cm"&gt;    2. build a windows &amp;quot;quit button app&amp;quot; (can reuse previous work)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should quit cleanly&lt;/span&gt;

&lt;span class="cm"&gt;    3. windows with current time (once) and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should show correct system time and when button clicked quit&lt;/span&gt;

&lt;span class="cm"&gt;    4. windows with current time constantly updating and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        (will the processor be overloaded while waiting?  need semaphores?)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;



&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/*  &lt;/span&gt;
&lt;span class="cm"&gt;    stdio.h is for displaying output to command line&lt;/span&gt;
&lt;span class="cm"&gt;    time.h is for time()&lt;/span&gt;
&lt;span class="cm"&gt;    string.h is to help format any strings created&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cm"&gt;/* returns a string with the current time */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="cm"&gt;/* show that the string has garbage that is cleaned out */&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;DISPLAY current time variable (initial garbage)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;        Loop depending on the user to continue updating&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;EMPTY current time variable.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;DISPLAY current time variable:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;UPDATE current time variable.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="cm"&gt;/* DEBUGGING&lt;/span&gt;
&lt;span class="cm"&gt;            printf(&amp;quot;%s\n&amp;quot;, current_time);&lt;/span&gt;
&lt;span class="cm"&gt;            */&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;DISPLAY current time variable:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;


            &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="cm"&gt;/* ensure that the user must force a continuance */&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;PRESS y to update the current time variable again:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end main */&lt;/span&gt;

&lt;span class="cm"&gt;/* begin function definitions */&lt;/span&gt;

&lt;span class="cm"&gt;/* Get the current time from the system and update the time string */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
        &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="cm"&gt;/* DEBUGGING&lt;/span&gt;
&lt;span class="cm"&gt;        printf(&amp;quot;%s\n&amp;quot;, asctime(localtime(&amp;amp;tempTime)));&lt;/span&gt;
&lt;span class="cm"&gt;        */&lt;/span&gt;
        &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;

        &lt;span class="cm"&gt;/* DEBUGGING&lt;/span&gt;
&lt;span class="cm"&gt;        printf(&amp;quot;%s\n&amp;quot;, current_time);&lt;/span&gt;
&lt;span class="cm"&gt;        */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* output the current time string ... to the command line */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CURRENT TIME: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To Be Continued...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 01 Feb 2010 14:15:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-02-01:c-programming-command-line-clock-continued-winclockv2-365-programming-project-day-thirty-one/</guid><category>c</category><category>time</category><category>clock</category></item><item><title>C programming display the current time: 365 programming project day thirty</title><link>https://blog.john-pfeiffer.com/c-programming-display-the-current-time-365-programming-project-day-thirty/</link><description>&lt;p&gt;I am trying to follow best practice as I've learned from the Mythical Man Month (Fred Brooks), the Cathedral and the Bazaar's (Eric Raymond)...&lt;/p&gt;
&lt;p&gt;C programming seems natural to me but I always want to stretch myself a little bit so here's a "C Clock" program that will eventually evolve into a "Windows Clock" program.&lt;/p&gt;
&lt;p&gt;So here is a modular design, released early with plenty of comments, debugging ability, and grown locally and organically:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt;2010-01-31 john pfeiffer, MS windows clock&lt;/span&gt;

&lt;span class="cm"&gt;PROGRAM DESIGN&lt;/span&gt;
&lt;span class="cm"&gt;    MS window with X, quit button, and current system time displayed&lt;/span&gt;
&lt;span class="cm"&gt;    Hour:minute:second  (hh:mm:ss)&lt;/span&gt;

&lt;span class="cm"&gt;HIGH LEVEL FUNCTIONS&lt;/span&gt;
&lt;span class="cm"&gt;    get current time&lt;/span&gt;
&lt;span class="cm"&gt;    display current time on window&lt;/span&gt;
&lt;span class="cm"&gt;    update current time&lt;/span&gt;
&lt;span class="cm"&gt;    see if user clicked button&lt;/span&gt;
&lt;span class="cm"&gt;        quit if button clicked&lt;/span&gt;


&lt;span class="cm"&gt;ORGANIC ITERATIVE BUILDS&lt;/span&gt;
&lt;span class="cm"&gt;    1.  build a program to show current time (in c/dos) then exits immediately&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: should show correct system time &lt;/span&gt;
&lt;span class="cm"&gt;        each time user presses enter show new current time (ctrl+c to exit)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: should show correct system time on each click&lt;/span&gt;

&lt;span class="cm"&gt;    2. build a windows &amp;quot;quit button app&amp;quot; (can reuse previous work)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should quit cleanly&lt;/span&gt;

&lt;span class="cm"&gt;    3. windows with current time (once) and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should show correct system time and when button clicked quit&lt;/span&gt;

&lt;span class="cm"&gt;    4. windows with current time constantly updating and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        (will the processor be overloaded while waiting?  need semaphores?)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;



&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/*  &lt;/span&gt;
&lt;span class="cm"&gt;    stdio.h is for displaying output to command line&lt;/span&gt;
&lt;span class="cm"&gt;    time.h is for time()&lt;/span&gt;
&lt;span class="cm"&gt;    string.h is to help format any strings created&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cm"&gt;/* returns a string with the current time */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="cm"&gt;/* show that the string has garbage that is cleaned out */&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Current Time variable garbage:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Current Time variable is EMPTY:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Current Time variable is FULL:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end main */&lt;/span&gt;

&lt;span class="cm"&gt;/* begin function definitions */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
        &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CURRENT TIME: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course this isn't a finished product - but its a solid foundation that outlines what the next few posts will be about...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 31 Jan 2010 21:39:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-31:c-programming-display-the-current-time-365-programming-project-day-thirty/</guid><category>c</category><category>time</category><category>clock</category></item><item><title>WinCE Custom Include to Modularize Functions: 365 programming project day twenty nine</title><link>https://blog.john-pfeiffer.com/wince-custom-include-to-modularize-functions-365-programming-project-day-twenty-nine/</link><description>&lt;p&gt;I've again used some "empty" time in the London Tube to stretch my brain a little bit by doing some more WinCE Windows Programming.&lt;/p&gt;
&lt;p&gt;While it may not seem like much of an accomplishment, using my fingernail on the screen keyboard to eke out code on a moving underground train requires a certain zen attitude... wait... wait... hit the key... oh... the wrong thing showed up (because obviously I pressed the right key)...&lt;/p&gt;
&lt;p&gt;ok, backspace and do it again... oh, that wasn't backspace, that was ]... and sometimes it looks like ]]]]].&lt;/p&gt;
&lt;p&gt;I'm trying to not only read/learn best practice, but practice best practice.&lt;/p&gt;
&lt;p&gt;Once again I am relying on PGCC (pocket GCC) though it does apparently have the limitation of only doing WinMain (not c's usual main); I suppose a "big goal" I might have for WinCE programming would be to one day use it to compile GCC on my IPAQ (overnight?). &lt;/p&gt;
&lt;p&gt;The ever mysterious "c.bat" (yes, the filename is very short for onscreen typing challenged fingernails)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;\pgcc\cc1plus \pgcc\cwm.txt -o \pgcc\cwms.s -I \pgcc\include 
 -include \pgcc\fixincl.h -fms-extensions \pgcc\as \pgcc\cwms.s 
 -o \pgcc\cwmo.o \pgcc\ld \pgcc\cwmo.o -o \pgcc\cwme.exe -L \pgcc\lib 
 -l cpplib -l corelibc -l coredll -l aygshell -l runtime -l portlib CWM.TXT
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="cwmtxt"&gt;CWM.TXT&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;  &lt;span class="cpf"&gt;#include &amp;quot;func.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/*  MODULAR BY INCLUDE    Function definitions hidden in includesabove I&amp;#39;ve told the compiler to use the func.h file as well as windows.h */&lt;/span&gt;
&lt;span class="cm"&gt;/* declare the function before main */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;outputText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pre function &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/* this is the big moment, calling a function defined in another file! */&lt;/span&gt;
    &lt;span class="n"&gt;outputText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post function &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/* So that if I run it in the Windows Explorer I can still see the output */&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Press return  to quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="funch"&gt;func.h&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* function definitions go here */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;outputText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;function include &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 30 Jan 2010 13:57:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-30:wince-custom-include-to-modularize-functions-365-programming-project-day-twenty-nine/</guid><category>win ce</category><category>win32</category><category>gcc</category><category>best practice</category></item><item><title>Pancakes from Scratch Recipe v2</title><link>https://blog.john-pfeiffer.com/pancakes-from-scratch-recipe-v2/</link><description>&lt;p&gt;You're hungry, you want something "home cooked", and you have the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 egg  &lt;/li&gt;
&lt;li&gt;1.5 cups of flour  &lt;/li&gt;
&lt;li&gt;.5 cup of sugar  &lt;/li&gt;
&lt;li&gt;1 pinch of baking soda  &lt;/li&gt;
&lt;li&gt;1 tsp of salt  &lt;/li&gt;
&lt;li&gt;3 tsp of melted butter  &lt;/li&gt;
&lt;li&gt;At least 2 cups of Milk (or water)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stir and then pour in enough milk, while beating vigorously, until the mixture is smooth enough to pour.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Try not to leave any flour unmixed in the batter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hot frying pan (with oil in the bottom) for about 5 mins a side (hopefully you'll have a hotter frying pan/cooker and it will take less time).&lt;/p&gt;
&lt;p&gt;Usually you flip when the bottom is golden brown (you'll notice bubbles start appearing in the cooking batter.&lt;/p&gt;
&lt;p&gt;Shapes of hearts, letters, and animals are recommended.&lt;/p&gt;
&lt;p&gt;Possible spreads (separate or altogether): Jam, chocolate, honey, cheese with honey, philadelphia cream cheese, feta cheese, fruits, peanut butter, ?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 30 Jan 2010 09:47:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-30:pancakes-from-scratch-recipe-v2/</guid><category>cooking</category></item><item><title>Maintaining an old ASP website with Javascript downloads: 365 programming project day twenty eight</title><link>https://blog.john-pfeiffer.com/maintaining-an-old-asp-website-with-javascript-downloads-365-programming-project-day-twenty-eight/</link><description>&lt;p&gt;Our company has an outdated website which was a semi-custom "product catalog" from 2003 (or earlier) that uses SQL and ASP to create dynamic pages and a "webadmin" area to update the catalog (advertised as user friendly because no source code needed).&lt;/p&gt;
&lt;p&gt;Modern Content Management Systems (Drupal anyone?) have made this obsolete but like many corporations, "If it's only broken a little and employees bend over backwards to make it work then don't fix or replace it until there's a disaster."&lt;/p&gt;
&lt;p&gt;I have had the masochistic pleasure of learning the system: everything in one folder of .asp files calling lots of other ASP files (and a couple of .js files) and calls to the SQL database with obscure 4 digit codes.&lt;/p&gt;
&lt;p&gt;Here's an example of me using my programming skills during the day for what might seem a simple request, "Please add another PDF to a page on the Website"...&lt;/p&gt;
&lt;p&gt;The first step was to upload the PDF into the database (so that it would be magically assigned a 4 digit number in the SQL).&lt;/p&gt;
&lt;p&gt;The webadmin was typically user unfriendly: &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Login -&amp;gt; Menu with a blank page -&amp;gt; click Catalog tab and finally see the left navigation bar:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catalog Main&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catalog Structure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catalog Products&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table Headers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;hmmm...  &lt;/p&gt;
&lt;p&gt;I got lucky and on my second attempt found Catalog Structure -&amp;gt; Displays -&amp;gt; Intelligent Display Platform&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Up Arrow, Down Arrow, Edit, Delete&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Given the options I picked the obvious (no, not delete!)&lt;/p&gt;
&lt;p&gt;Stuffed in about twenty hot linked words and options I then found "Product Family Files"&lt;/p&gt;
&lt;p&gt;Counter-intuitively clicking on a "..." button to access a popup window to upload a new file...&lt;/p&gt;
&lt;p&gt;A byzantine system: scrolling through what appears to be every PDF file in the system to verify that my 5.7" file isn't already there... &lt;/p&gt;
&lt;p&gt;Then using a Browse button (on the bottom of the screen) to see the PDF on my desktop, then seperately clicking the Upload button. Finally clicking on a "SELECT" button (at the top of the screen) to finally add it to the database (without any friendly message, just a refresh, so I scrolled through all 300+ items to make sure it was listed).&lt;/p&gt;
&lt;p&gt;Bored yet?&lt;/p&gt;
&lt;p&gt;Oh, at this point you've got the PDF selected but you still have to click ADD to actually put it in a table for that Product Family.&lt;/p&gt;
&lt;p&gt;So... where's the Javascript?&lt;/p&gt;
&lt;p&gt;Well this particular page that needs to be updated is actually a custom job that appears instead of the default... and it may even be that I did the work!&lt;/p&gt;
&lt;p&gt;So each Product Family is reached by clicking on a link on the homepage, but those links are the inscrutable type:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://protect-the-guilty/displays_products.asp?prodFamID=4148"&gt;http://protect-the-guilty/displays_products.asp?prodFamID=4148&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I "hacked" the scripts.js file (which contains all of the Javascript functions, so maybe they got one thing right)...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* MODIFIED FUNCTION TO GO TO SPECIFIC PAGE INSTEAD OF PULLING FROM DATABASE FOR CERTAIN PRODUCTS*/&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GoToProductLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prodLineID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;partOfFilePath&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prodLineID&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;4136&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prodLineID&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;4536&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;partOfFilePath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_families.asp?prodLineID=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;prodLineID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;umr.asp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So to locate the "actual" magic 4 digit ID of the PDF I had to go to the original (non redirected) webpage...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://protect-the-guilty/displays_products.asp?prodFamID=4148"&gt;http://protect-the-guilty/displays_products.asp?prodFamID=4148&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;View the Source  &lt;/p&gt;
&lt;p&gt;Find the following bit of text:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:void(0)&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;regular&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DownloadFile(1245);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Example_Datasheet_Rev_1.0&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whew, almost there!&lt;/p&gt;
&lt;p&gt;Next, download the "customized.asp" file and save a backup copy (ALWAYS SAVE A BACKUP!).&lt;/p&gt;
&lt;p&gt;Then update the "customized.asp" file by adding your special code to the right place...  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:void(0)&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;regular&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DownloadFile(1245);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Example_Datasheet_Rev_1.0&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you've uploaded and tested it you can look at the clock and happily say, "Uploading 1 pdf took me 2 frickin hours!"&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 28 Jan 2010 15:59:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-28:maintaining-an-old-asp-website-with-javascript-downloads-365-programming-project-day-twenty-eight/</guid><category>windows</category><category>asp</category><category>javascript</category></item><item><title>DOS batch file using a for loop to test a vpn with ping: 365 programming project day twenty seven</title><link>https://blog.john-pfeiffer.com/dos-batch-file-using-a-for-loop-to-test-a-vpn-with-ping-365-programming-project-day-twenty-seven/</link><description>&lt;p&gt;Once again my work demands creative programming solutions. I have a new ISP with a brand new modem and I want to know if a VPN will stay connected overnight... BUT it's not a good test without some traffic...&lt;/p&gt;
&lt;p&gt;Enter the DOS/Windows Batch file... like a linux script or VBS, a .bat file is a series of commands which allow a creative programmer to do quite a bit.&lt;/p&gt;
&lt;p&gt;Using a text editor create your first .bat file: ping-test-vpn.bat  &lt;/p&gt;
&lt;p&gt;(Yes, I realize we skipped the steps using echo "hello world", that a % sign means a variable, defining that a mapped network drive to a folder on another computer... oh well, break this one into little pieces if it's too much to swallow at once.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REM batch program to test and log the stability/uptime of a remote
REM computer using ping and copying a file
REM is a &amp;quot;remark&amp;quot; or a comment that the computer will ignore

REM create a time stamp and append it to the end of the file
echo %date% %time% &amp;gt;&amp;gt; ping-log.txt

REM see if we can reach the remote computer and append to the log file
ping -n 1 192.168.1.30 &amp;gt;&amp;gt; ping-log.txt

REM Map network drive where we will copy files back and forth
net use z: \192.168.1.30\groups\shared

REM copy a 1.8 MB file to the remote computer (DOS overwrites by default)
copy install_flash_player.exe z:\

REM list the files in the remote directory (including timestamp) and log it
dir z:\install* &amp;gt;&amp;gt; ping-log.txt

REM remove our mapped network drive
net use z: /delete

echo &amp;quot;-------------------------------------------------------------&amp;quot; &amp;gt;&amp;gt; ping-log.txt

REM ping 6 times takes about 5 seconds - like a (324/6) *5 = 4.5 mins &amp;quot;pause&amp;quot;
REM redirect to NUL sends the output nowhere to not fill the screen
ping -n 324 127.0.0.1 &amp;gt;NUL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you've saved your .bat file, rather than just double click it (which works), I prefer to use Start -&amp;gt; Run -&amp;gt; cmd.exe to open up a DOS command line prompt. From there I cd to c:\directory\ and find the .bat file... then I type in:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping-test-vpn.bat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Watching the output can be fascinating - programming (and debugging) is certainly the most engaging when it's interactive.&lt;/p&gt;
&lt;p&gt;With the above file using the bandwidth of the VPN to copy a file and pause we then need to repeat this all night long.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REM forloop counting variable IN (start,step,end) DO command  
FOR /L %%i IN (1,1,2) DO ping-test-vpn.bat
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;for-loop-counter.bat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;High level network testing is fundamentally the same, though they obviously want to introduce variables like large packets, lost packets,random intervals, and contention issues.&lt;/p&gt;
&lt;p&gt;Wow, another day and another program (useful even!)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 27 Jan 2010 20:58:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-27:dos-batch-file-using-a-for-loop-to-test-a-vpn-with-ping-365-programming-project-day-twenty-seven/</guid><category>DOS</category><category>bat</category><category>for loop</category><category>map network drive</category><category>windows</category></item><item><title>Javascript validation of an html form: 365 programming project day twenty six</title><link>https://blog.john-pfeiffer.com/javascript-validation-of-an-html-form-365-programming-project-day-twenty-six/</link><description>&lt;p&gt;On the 26th I missed my 365 entry because I was being Mr. Corporate IT Hero at our annual Company Meeting but I actually have a number of things from the past that I can comment on and insert...&lt;/p&gt;
&lt;p&gt;Everybody who has an HTML form would like some software "intelligence" to guide the User to fill in the "required" fields, or help direct the User if they've not entered a valid email address, etc...&lt;/p&gt;
&lt;p&gt;I'm not a fan of Javascript if only because it runs on the client and can be a big security hole. If it's merely written poorly it can crash the browser or confuse the heck out of the user (rendering your HTML Form useless).&lt;/p&gt;
&lt;p&gt;But here's the source code on how to do the most basic user input validation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;javascript form validation&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- onSubmit tells the browser that there is a javascript function to run when the user hits the submit button --&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;FORM&lt;/span&gt; &lt;span class="na"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript-form-validation.htm&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;testform&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;return validateMyForm()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Starting X Point: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;startx&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    Starting Y Point: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;starty&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    Email Address: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;maxlength&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;  
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validateMyForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Please enter a Starting X value (integer)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Please enter a Starting Y value (integer)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;testform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Please enter your email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//if we&amp;#39;ve passed all of the above checks&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is a ton more that you can do with Javascript (including for loops on checkboxes minimum 2 out of 5, regular expressions on email addresses, etc.) so hopefully I'll get to it this year!&lt;/p&gt;
&lt;p&gt;P.S. You must have Javascript enabled on your browser to see the example and some browsers will pop up "ActiveX Warnings" - if you're paranoid only run Javascript that you've coded yourself!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 27 Jan 2010 20:44:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-27:javascript-validation-of-an-html-form-365-programming-project-day-twenty-six/</guid><category>javascript</category><category>html</category><category>form validation</category></item><item><title>PHP User Input HTML Sanitization and Math: 365 programming project day twenty five</title><link>https://blog.john-pfeiffer.com/php-user-input-html-sanitization-and-math-365-programming-project-day-twenty-five/</link><description>&lt;p&gt;HTML forms are quick way to get user data but PHP requires a PHP server. &lt;/p&gt;
&lt;p&gt;Luckily I have one and together it's quite easy to create a page that gets some info from a user and then does some calculations (in this case nothing fancy).&lt;/p&gt;
&lt;p&gt;I've done a little more User Input Sanitization than usual - basically the rule is: "If you'll display it, clean up the HTML output, if you'll send it to a linux script, strip the slashes, and if you send it to a database, clean up any MySQL stuff"...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;form action=&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PHP_SELF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Starting X Point&amp;lt;input name=&amp;quot;startx&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Starting Y Point&amp;lt;input name=&amp;quot;starty&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;End X Point&amp;lt;input name=&amp;quot;endx&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;End Y Point&amp;lt;input name=&amp;quot;endy&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$startx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$starty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$endx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$endy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$startx&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$starty&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;  &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$endx&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$endy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;width: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$endx&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$startx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;height: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$endy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$starty&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;acos(startx): &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$startx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;//end of if-else user filled in textarea&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Further reference about how easy it is to manipulate user numbers: &lt;a href="http://php.net/manual/en/book.math.php"&gt;http://php.net/manual/en/book.math.php&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 25 Jan 2010 22:08:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-25:php-user-input-html-sanitization-and-math-365-programming-project-day-twenty-five/</guid><category>php</category><category>security</category><category>htmlentities</category><category>input sanitization</category></item><item><title>Javascript on MS CRM Forms: 365 programming project day twenty-four</title><link>https://blog.john-pfeiffer.com/javascript-on-ms-crm-forms-365-programming-project-day-twenty-four/</link><description>&lt;p&gt;Programming isn't always fun and games. Here's an example from me putting in extra time on a weekend...&lt;/p&gt;
&lt;p&gt;At my work We use Microsoft Dynamics CRM 4.0 which is a customizable CRM web interface on top of MS SQL Server. While the built in functionality is pretty good a business always needs some more customization to get things "just right"...&lt;/p&gt;
&lt;p&gt;MS CRM has "onload" and "onsave" functionality for each entity that allows a developer to stick in some custom javascript.&lt;/p&gt;
&lt;p&gt;Below is the JS that controls the calculations on the Products section of a Quote for Customer Form. This improves the end user experience as user changes update the different fields instantly and automatically (though they still have to press SAVE to keep those changes).&lt;/p&gt;
&lt;p&gt;Note: Javascript isn't related to Java, it's a "client side" (runs on your computer, not the server) piece of code frequently used to modify how things look on your screen.&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// if the Tax field is null (ie a new quote is being created) we fill in a default tax&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;17.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//when Loading the Quote Form and on certain fields I have the following:&lt;/span&gt;

&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FireOnChange&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;//tells the system to pretend that the Quantity field has just changed&lt;/span&gt;
&lt;span class="c1"&gt;//(and run it&amp;#39;s jscripts)&lt;/span&gt;
&lt;span class="c1"&gt;//this allows for one central place to control all of the calculations&lt;/span&gt;

&lt;span class="o"&gt;--------------------------------------------------------------------------------&lt;/span&gt;

&lt;span class="c1"&gt;//this forces even &amp;quot;disabled&amp;quot; fields to update values&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ForceSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the BASE amount - MS CRM multicurrency required for money&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the baseamount.&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;//Only calculate the discount if the user has actually filled in the discount field&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_manualdiscountpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Calculate the manual BASE discount amount.&lt;/span&gt;
        &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; 
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_manualdiscountpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//Calculate the manual discount amount.&lt;/span&gt;
        &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_manualdiscountpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Tricky piece of math with lots of ( and * and / ...&lt;/span&gt;
&lt;span class="c1"&gt;//Calculate the new BASE Tax Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
     &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the new Tax Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the new Extended BASE Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendedamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the new Extended Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendedamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 24 Jan 2010 19:19:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-24:javascript-on-ms-crm-forms-365-programming-project-day-twenty-four/</guid><category>javascript</category><category>CRM</category></item><item><title>VBScript Windows Shell Script (Programming) For Loop: 365 programming project day twenty three</title><link>https://blog.john-pfeiffer.com/vbscript-windows-shell-script-programming-for-loop-365-programming-project-day-twenty-three/</link><description>&lt;p&gt;Programming obviously requires logic and discipline. 
Less well known but just as important, it also requires creativity and elasticity.&lt;/p&gt;
&lt;p&gt;Windows Script programming has a significantly different syntax (rules of how the code must be written to be valid) than the previous Linux Script, C Programming, HTML, or CSS. How many people do you know who
speak multiple languages, much less create functional artificial
constructs with them?&lt;/p&gt;
&lt;!--break--&gt;

&lt;p&gt;You can copy and paste the text below into an empty notepad and save it as test.vbs&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A .vbs file can be dangerous as it is executing commands on your
computer but in this case there are no surprises as you can see all of
the commands explained in the comments.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REM John Pfeiffer&amp;#39;s windows vbscript 2010-01-22
REM In Visual Basic Script a REM stands for &amp;quot;remark&amp;quot;, which is a comment 
REM (something ignored by the computer)
REM we must declare what variables we want but without saying what type
REM in this case we&amp;#39;ve used the good practice of naming the variables
REM as they&amp;#39;re intended to be used: i = programming standard for counting,
REM astring is a string of characters (though in a real program it would be 
REM better named &amp;quot;username&amp;quot; or &amp;quot;address_street&amp;quot;) and array is a list of items.dim i, astring, array
REM assigning a literal piece of text to a string variable is really easyastring = &amp;quot;this,should,be,interesting,csv,&amp;quot;
REM built in functions do most of the hard work - like splitting up a string
REM into an array of strings based on a &amp;quot;splitting character&amp;quot;array = split(astring, &amp;quot;,&amp;quot;)
REM wscript.echo displays message boxes, 
REM the &amp;amp; symbol concatenates strings and variables to display together

wscript.echo astring &amp;amp; &amp;quot; BECOMES =&amp;gt; &amp;quot; &amp;amp; array(4) &amp;amp; array(3) &amp;amp; array(2) &amp;amp; array(1) &amp;amp; array(0)

REM The for loop counts from the first (lbound) element to the uppermost this 
REM &amp;quot;object oriented&amp;quot; technique of a method/function to access the attributes 
REM (in this case size/bounds) of a variable, rather than predefined symbol or number,
REM prevents a careless programmer error or an unforseen change from crashing
REM the program by accessing (or writing!) outside of the defined variable space
REM Lines between the &amp;quot;for&amp;quot; and &amp;quot;next&amp;quot; are executed as many times as the for loop
REM iteratesfor i = lbound(array) to ubound(array)   wscript.echo array(i)nextREM the &amp;quot;for each&amp;quot; is a special case of a for loop which will do something for REM every item in the array - better than the above for this specific exampleREM as it is easier to read and understand what it is doing (with even lessREM chance of an error)  for each i in array    wscript.echo inextREM REMEMBER, 50-80% of your time will be spent debugging, recompiling, REM fixing, updating!  More important than getting it right the first timeREM is making it easy to figure out where/why it went wrong

wscript.echo &amp;quot;the end&amp;quot;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 22 Jan 2010 21:56:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-22:vbscript-windows-shell-script-programming-for-loop-365-programming-project-day-twenty-three/</guid></item><item><title>Script Programming, Linux expect script passwd: 365 programming project day twenty two</title><link>https://blog.john-pfeiffer.com/script-programming-linux-expect-script-passwd-365-programming-project-day-twenty-two/</link><description>
&lt;h2 id="what-the-heck-is-a-script"&gt;What the heck is a Script?&lt;/h2&gt;
&lt;p&gt;Is writing a Script still programming? &lt;/p&gt;
&lt;p&gt;A script is a written set of instructions for a platform (usually an Operating System) that makes the computer (or hardware) do something.&lt;/p&gt;
&lt;p&gt;Sounds a lot like a Program!&lt;/p&gt;
&lt;p&gt;Well... A computer software program is usually source code (written by a human) that is then "compiled" into "machine code" which a machine can
understand - except that there's also a linker and loader to figure out exactly what places in memory (and for what piece of hardware) the
Program will run - finally turning it into Object code and then an Executable (usually called binary because it's in 1's and 0's directly
in the language of the hardware).&lt;/p&gt;
&lt;p&gt;A script gives hardware a set of commands indirectly through another piece of software (it's environment/platform, e.g. DOS, Python, Windows
OS, GNU Linux OS, etc.). &lt;/p&gt;
&lt;p&gt;The software then executes those commands (which often then tell an Operating System which then tells Hardware to
to do something - like clearing the screen or adding some numbers).&lt;/p&gt;
&lt;p&gt;So maybe html is even less Programming like than a script! Since it only tells a browser (a specific application) how to format/display data!?!?!&lt;/p&gt;
&lt;p&gt;Ah, enough semanticarating!&lt;/p&gt;
&lt;h2 id="what-happens-if-youre-running-a-script-and-somewhere-it-requires-user-input"&gt;What happens if you're running a script and somewhere it requires user input?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;"Expect"&lt;/strong&gt; is a piece of software that "waits" for input from the linux operating system command line...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install expect&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;to install it on linux (ubuntu)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;yum install expect&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;to install it on linux centos/redhat&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;touch test-script.sh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;create the file  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;chmod +x test-script.sh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;make the file an executable in linux  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;nano test-script.sh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;edit the file to enter our script commands, alternatively use vim test-script.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#!/usr/bin/expect
set timeout 1
send "passwd USER\n"
expect "Password: "
send "password\n"
sleep 1
interact
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;First we tell the operating system what program (environment platform) will actually be able to read and execute the instructions (normally linux uses BASH /bin/bash but in this case it's EXPECT).&lt;/li&gt;
&lt;li&gt;Setting the timeout means that we will wait at least and at most 1 second before a non responding command is skipped to execute the next command.&lt;/li&gt;
&lt;li&gt;Send tells the operating system something (e.g. we want to run the change USER's password program)&lt;/li&gt;
&lt;li&gt;The expect command tells the script to wait for the operating system to prompt the user to type in a password.&lt;/li&gt;
&lt;li&gt;Once the operating system responds (with exactly what we "expected") the script continues by sending (just as if a user typed it in) some predetermined password picked by the script writer.&lt;/li&gt;
&lt;li&gt;Finally we tell our script to sleep for one second after all of it's hard work.&lt;/li&gt;
&lt;li&gt;Oh, and it's very important to &lt;strong&gt;"interact"&lt;/strong&gt;, which returns the command prompt back to the user/operating system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whew... that's just the tip of the iceberg of how "expect" greatly extends the functionality of Linux scripts!&lt;/p&gt;
&lt;p&gt;Later I hope to demonstrate some VBScript (for windows) and maybe even a script on how to run a "non interactive FTP session" (as most FTP programs require "interaction" aka human at the keyboard)...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 21 Jan 2010 22:11:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-21:script-programming-linux-expect-script-passwd-365-programming-project-day-twenty-two/</guid></item><item><title>Windows programming in WinCE on an HP IPAQ: 365 programming project day twenty one</title><link>https://blog.john-pfeiffer.com/windows-programming-in-wince-on-an-hp-ipaq-365-programming-project-day-twenty-one/</link><description>&lt;p&gt;As the number of portable computers (we might call them mobile phones or smart phones or pda's etc.) explodes they need software. &lt;/p&gt;
&lt;p&gt;One thing Microsoft got right is that Windows CE, the stripped down version of Windows for Mobile Devices, uses most of the same basic programming platform/language as "normal" desktop windows programming. &lt;/p&gt;
&lt;p&gt;The following is a very interesting learning experience I've had (and a useful way to pass otherwise idle waiting time in the "Tube") programming Windows Applications in WinCE.&lt;/p&gt;
&lt;h3 id="a-compiler-for-wince-pocketgcc"&gt;A Compiler for WinCE: pocketgcc&lt;/h3&gt;
&lt;p&gt;The first thing you need is a WinCE compiler - my choice was pocketgcc (even though it hasn't been updated since 2003), because a port of GCC to WinCE means a stable tool that I already know (sorta) how to use. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://pocketgcc.sourceforge.net/"&gt;http://pocketgcc.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The next hurdle after downloading and copying them onto my device (HP Ipaq) and double tapping (clicking) to install them was to use the CMD to cd \pgcc&lt;/p&gt;
&lt;p&gt;Then I used a text editor (either Word or pocketnotepad) to create a batch file (yes, technically I suppose a batch file is a program too!) with the following cryptic lines... &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;\pgcc\cc1plus \pgcc\source-code.txt -o \pgcc\cwms.s -I \pgcc\include 
 -include \pgcc\fixincl.h -fms-extensions \pgcc\as \pgcc\cwms.s 
 -o \pgcc\cwmo.o \pgcc\ld \pgcc\cwmo.o -o \pgcc\cwme.exe -L \pgcc\lib 
 -l cpplib -l corelibc -l coredll -l aygshell -l runtime -l portlib
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The cc1plus.exe (compiler?) outputs the assembly code file but also includes the "fixincl.h" file and uses the -fms-extensions option (no, I haven't actually yet learned exactly why). &lt;/li&gt;
&lt;li&gt;The as.exe program turns the assembly into object code. &lt;/li&gt;
&lt;li&gt;Finally the loader turns the object code into an executable with the appropriate libraries. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following source code should look very familiar to my earlier Windows Programming examples.&lt;/p&gt;
&lt;p&gt;I've added comments here that are not in my "production" IPAQ environment source code because the screen is too small with lots of scrolling already...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windowsx.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;commctrl.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;aygshell.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_ExitButton 40099&lt;/span&gt;
&lt;span class="cm"&gt;/* the IDC object requires a number, I just give them high unused ones */&lt;/span&gt;

&lt;span class="cm"&gt;/* the above includes are a bit of a mystery to me but the program&lt;/span&gt;
&lt;span class="cm"&gt;doesn&amp;#39;t work without them and I figure they must be specific to WinCE */&lt;/span&gt;

&lt;span class="cm"&gt;/* instead of function stubs, main, then function declarations I do them&lt;/span&gt;
&lt;span class="cm"&gt;all before main() ... but of course I have to remember to always declare&lt;/span&gt;
&lt;span class="cm"&gt;before using... so do as I say: always declare functions (and then remember&lt;/span&gt;
&lt;span class="cm"&gt;to update them and the stub), not as I do... */&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;HandlePaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to device context */&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* rectangle structure */&lt;/span&gt;
    &lt;span class="n"&gt;TCHAR&lt;/span&gt; &lt;span class="n"&gt;tszOut&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;GetClientRect&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPRECT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* the cryptic stuff below outputs a text string in a rectangle */&lt;/span&gt;
    &lt;span class="n"&gt;DrawText&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;tszOut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;_tcslen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tszOut&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPRECT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* below is the most important function after main() where the &amp;quot;large windows &lt;/span&gt;
&lt;span class="cm"&gt;switch&amp;quot; figures out what the user has done and responds */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="cm"&gt;/* w &amp;amp; l param&amp;#39;s are extra data like x,y */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              
    &lt;span class="p"&gt;{&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="cm"&gt;/* there&amp;#39;s a command from the user */&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;      &lt;span class="cm"&gt;/* to find out what command */&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="cm"&gt;/* the user pressed the button */&lt;/span&gt;   
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
            &lt;span class="p"&gt;}&lt;/span&gt;     
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* closes the program */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;HandlePaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="cm"&gt;/* calls a &amp;quot;modular&amp;quot; drawing function */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ExitButton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;/* a handle to our button &amp;quot;window&amp;quot; */&lt;/span&gt;
    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;HMENU&lt;/span&gt; &lt;span class="n"&gt;hMenu&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CS_HREDRAW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CS_VREDRAW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WNDPROC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WHITE_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="cm"&gt;/* WinCE seems to require strings cast as LONG? */&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;errors &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IMPORTANT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MB_OK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* the size and placement of our program window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2nd prog hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* the size and placement of our button child of hwnd &amp;quot;window&amp;quot; */&lt;/span&gt;
    &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BUTTON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;L&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 
        &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end WinMain */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 21 Jan 2010 13:26:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-21:windows-programming-in-wince-on-an-hp-ipaq-365-programming-project-day-twenty-one/</guid><category>win ce</category><category>win32</category><category>gcc</category><category>pocketgcc</category></item><item><title>A Simple Windows Button: 365-programming project day six</title><link>https://blog.john-pfeiffer.com/a-simple-windows-button-365-programming-project-day-six/</link><description>&lt;p&gt;Windows programming is a bit ugly - you have to selectively ignore the stuff "you know". On the positive side I've figured out how to insert code as preformatted (Drupal Input Filter -&amp;gt; extending the "safe HTML") so this should be easier to copy paste.&lt;/p&gt;
&lt;p&gt;Also, Notepad2 has a handy "turn tabs into spaces" that I shall start using more often...&lt;/p&gt;
&lt;p&gt;I've built on the previous Windows Program that put some text on the screen so most of it should look familiar.&lt;/p&gt;
&lt;p&gt;Remember, this was compiled with a gcc port (see earlier post for the link to the binary)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OK, here's the code for an exit button, some of the old comments (which you've "learned" have been removed)...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* john pfeiffer basic MS windows program with button 2009-01-20 */&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_MyExitButton 40001 &lt;/span&gt;&lt;span class="cm"&gt;/* case sensitive! random high number to keep windows happy */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;
&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="cm"&gt;/* Handle of window that received the msg */&lt;/span&gt;
    &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="cm"&gt;/* The message */&lt;/span&gt;
    &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* Extra parameter (e.g. mouse x)&lt;/span&gt; &lt;span class="err"&gt;*/&lt;/span&gt;
    &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="cm"&gt;/* Extra parameter (e.g. mouse y) */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* a structure to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to a DC (buffer) for the screen */&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="cm"&gt;/* find out what&amp;#39;s been clicked */&lt;/span&gt;
           &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
               &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

               &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                  &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;GetClientRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;
                &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;
                &lt;span class="n"&gt;DrawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Press button to quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;        &lt;span class="cm"&gt;/* send a WM_QUIT */&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                   &lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;



&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;WINAPI&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="cm"&gt;/* Handle to the current instance */&lt;/span&gt;
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="cm"&gt;/* Handle to the previous instance */&lt;/span&gt;
    &lt;span class="n"&gt;LPSTR&lt;/span&gt; &lt;span class="n"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="cm"&gt;/* pointer to command line arguments */&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               &lt;span class="cm"&gt;/* show state of the window */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                        &lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                        &lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                          &lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoadCursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_ARROW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LTGRAY_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;


    &lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindowEx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Windows Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* create button and store the handle */&lt;/span&gt;

    &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                       &lt;span class="cm"&gt;/* class name */&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Push Button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* button caption */&lt;/span&gt;
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* the styles */&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                            &lt;span class="cm"&gt;/* the left and top coordinates */&lt;/span&gt;
        &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                         &lt;span class="cm"&gt;/* width and height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="cm"&gt;/* parent window handle */&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="cm"&gt;/* the ID of your button */&lt;/span&gt;
        &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* the instance of your application */&lt;/span&gt;
        &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;                         &lt;span class="cm"&gt;/* unnecessary extra */&lt;/span&gt;


    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;
        &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;

    &lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;           
    &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* Translate virtual-key messages into character messages */&lt;/span&gt;
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="cm"&gt;/* Send messages to WindowProcedure */&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 20 Jan 2010 15:01:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-20:a-simple-windows-button-365-programming-project-day-six/</guid><category>win32</category><category>gcc</category></item><item><title>PHP and CSS on a radio button board: 365 programming project day five</title><link>https://blog.john-pfeiffer.com/php-and-css-on-a-radio-button-board-365-programming-project-day-five/</link><description>
&lt;h3 id="overview"&gt;Overview&lt;/h3&gt;
&lt;p&gt;I'm a little sick so this one took longer than it should have. Futher exploration of the theme of PHP + CSS + HTML as a very simple way to get user input and then do something fun with it.&lt;/p&gt;
&lt;p&gt;The beginnings of trying to "modularize" code into functions earlier in the process (in later, more complex programs it is a necessity).&lt;/p&gt;
&lt;p&gt;You may be asking, "How is this useful?" but I think it's a popular misconception that Programs should be useful...&lt;/p&gt;
&lt;p&gt;I will try to break the code into chunks (that you will have to re-assemble) but with better piece by piece explanation:&lt;/p&gt;
&lt;h3 id="defining-css-style-in-the-head"&gt;Defining CSS Style in the Head&lt;/h3&gt;
&lt;p&gt;Best practice is to have many php or html pages linked to a single CSS
definition file so that a single update is more efficient. Efficiency in this case means all of the code in one easily visible file.&lt;/p&gt;
&lt;p&gt;The CSS here removes the anchor (hyperlink) underline and makes it black BUT if hovered the text will turn red.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;removing&lt;/span&gt; &lt;span class="nt"&gt;text&lt;/span&gt; &lt;span class="nt"&gt;decoration&lt;/span&gt; &lt;span class="nt"&gt;removes&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;underlines&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;chosen&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;chosen&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="body-of-php-functions"&gt;Body of PHP functions&lt;/h3&gt;
&lt;p&gt;If you have an HTML head then you should have a body. The majority of the body is the definition of a custom function called "display_board".&lt;/p&gt;
&lt;p&gt;Again I'm using the trick that if the user has entered data (and therefore something's in the $_POST) then we get to show the user that we've done something fun with what they gave us.&lt;/p&gt;
&lt;p&gt;PHP functions are easy to define and have the usual parameters and return value responsibilities (though parameters don't need any typing which allows the programmer to focus on the concepts, not the implementation - hopefully not confusing the variables up in the process).&lt;/p&gt;
&lt;p&gt;Much like a CSS you can have a file with the definitions of your php functions and include it somewhere with &lt;strong&gt;include("footer.php");&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On one hand you remove the implementation details which can make prototyping and modularization faster and easier, on the other hand you have to search through/open a number of different files (or even include definitions to functions you don't use) and of course, it's great to ignore the implentation details right until something goes wrong.&lt;/p&gt;
&lt;h3 id="function-display_board"&gt;function display_board&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;body&amp;gt;Click on one square, then submit, then hover your choice!&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;display_board&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$chosen_square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;form action="'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'PHP_SELF'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'" method="post"&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//newline character in the HTML code for readability&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div id="chosen" align="center"\&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I don't think the indentations show up well in the blog but the nested loops and formula are just a fancy way of counting from 1 to 64 with 8 items per line.  &lt;/p&gt;
&lt;p&gt;The magic "redefined css anchor" is buried in there if the user has chosen a square.  &lt;/p&gt;
&lt;h3 id="nested-for-loops"&gt;nested for loops&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;for($x=0; $x&amp;lt;8; $x++)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;    for($y=0; $y&amp;lt;8; $y++)  &lt;/span&gt;
&lt;span class="x"&gt;    {  &lt;/span&gt;
&lt;span class="x"&gt;        if( ((8*$x) + $y+1) == $chosen_square )&lt;/span&gt;
&lt;span class="x"&gt;        {  &lt;/span&gt;
&lt;span class="x"&gt;            print '&amp;lt;input type="radio" name="board_square" value="';&lt;/span&gt;
&lt;span class="x"&gt;            print ((8*$x) + $y+1) . '"&amp;gt;';&lt;/span&gt;
&lt;span class="x"&gt;            print '&amp;lt;a href="#"&amp;gt; ';&lt;/span&gt;
&lt;span class="x"&gt;            print ((8*$x) + $y+1);&lt;/span&gt;
&lt;span class="x"&gt;            print "&amp;lt;/a&amp;gt;\n";&lt;/span&gt;
&lt;span class="x"&gt;            //the nested for loops formula creates 64 consecutive values  &lt;/span&gt;
&lt;span class="x"&gt;        } else {&lt;/span&gt;
&lt;span class="x"&gt;            print '&amp;lt;input type="radio" name="board_square" value="';&lt;/span&gt;
&lt;span class="x"&gt;            print ((8*$x) + $y+1) . '"&amp;gt; ' . ((8*$x) + $y+1) . "\n";&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    print "&amp;lt;br \&amp;gt;\n";&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;print '&amp;lt;/div&amp;gt;&amp;lt;input type="submit" value="Press Me" /&amp;gt;&amp;lt;/form&amp;gt;';&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="user-input"&gt;user input&lt;/h3&gt;
&lt;p&gt;stripslashes is best practice when dealing with user data though I'm not sure how a $_POST of a radio button value could end up as a root command; better safe than sorry.&lt;/p&gt;
&lt;p&gt;The ever present "if the $_POST variable is set AND the $chosen_square variable is NOT EMPTY" allows to only print something that exists (instead of foolishly printing non-existent stuff).&lt;/p&gt;
&lt;p&gt;Finally we call our function (with a parameter). So if the CSS and PHP function definition were other files this "program" would be very compact and very easy to read (but then again you wouldn't know what the program did unless you had those other files).  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$chosen_square = stripslashes( $_POST['board_square'] );&lt;/span&gt;
&lt;span class="x"&gt;if( !empty( $chosen_square ) &amp;amp;&amp;amp; isset( $chosen_square ) )&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;    print $chosen_square;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;display_board( $chosen_square );  &lt;/span&gt;
&lt;span class="x"&gt;?&amp;gt;&lt;/span&gt;

&lt;span class="x"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Tue, 19 Jan 2010 22:28:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-19:php-and-css-on-a-radio-button-board-365-programming-project-day-five/</guid><category>php</category><category>css</category><category>code structure</category></item><item><title>First real Windows program: 365 programming project day four</title><link>https://blog.john-pfeiffer.com/first-real-windows-program-365-programming-project-day-four/</link><description>&lt;p&gt;Windows Programming has a steep curve in the beginning as there are many things to memorize (oops I mean learn and understand) as theoretically they've created the data structures and functions to get stuff on the screen.&lt;/p&gt;
&lt;p&gt;Again I've used gcc 2.95 windows port with the special command on my wndclass-hello.c source code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The code is extra commented as this is the foundation (of understanding) for future programs.&lt;/p&gt;
&lt;p&gt;Basically the windows program loops waiting for some input (e.g. clicking an OK button or the X to close the window)... in the mean time I've written a simple text in the middle.&lt;/p&gt;
&lt;p&gt;Most of the code is actually just trying to setup the data structure of a window (there are many options and variations that we might use later to extend our window's functionality).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* john pfeiffer basic MS windows program with comments 2009-01-18 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;include&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/* this includes the whole Windows API */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* Declare the Windows procedure */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
LRESULT&lt;span class="w"&gt; &lt;/span&gt;CALLBACK&lt;span class="w"&gt; &lt;/span&gt;WindowProcedure&lt;span class="o"&gt;(&lt;/span&gt;HWND&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;UINT&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;WPARAM&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LPARAM&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

int&lt;span class="w"&gt; &lt;/span&gt;WINAPI&lt;span class="w"&gt; &lt;/span&gt;WinMain&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;HINSTANCE&lt;span class="w"&gt; &lt;/span&gt;hThisInstance&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* Handle to the current instance */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;HINSTANCE&lt;span class="w"&gt; &lt;/span&gt;hPrevInstance&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* Handle to the previous instance */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;LPSTR&lt;span class="w"&gt; &lt;/span&gt;lpszArgument&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/* pointer to command line arguments */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;int&lt;span class="w"&gt; &lt;/span&gt;ncmdshow&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="cm"&gt;/* show state of the window */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;HWND&lt;span class="w"&gt; &lt;/span&gt;hwnd&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;MSG&lt;span class="w"&gt; &lt;/span&gt;messages&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;WNDCLASS&lt;span class="w"&gt; &lt;/span&gt;wc&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;style&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;lpfnWndProc&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;WindowProcedure&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;cbClsExtra&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;cbWndExtra&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;hInstance&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;hThisInstance&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;hIcon&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;NULL&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;hCursor&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LoadCursor&lt;span class="o"&gt;(&lt;/span&gt;NULL&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;IDC_ARROW&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;hbrBackground&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;HBRUSH&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;GetStockObject&lt;span class="o"&gt;(&lt;/span&gt;LTGRAY_BRUSH&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="cm"&gt;/* the window background color */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;lpszMenuName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;NULL&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="cm"&gt;/* No menu */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;wc&lt;span class="o"&gt;.&lt;/span&gt;lpszClassName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;



&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;RegisterClass&lt;span class="o"&gt;(&amp;amp;&lt;/span&gt;wc&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;hwnd&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;CreateWindowEx&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="cm"&gt;/* Extended possibilites for variation */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/* Classname */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Windows App&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* Application Title Text */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;WS_OVERLAPPEDWINDOW&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* default window */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;CW_USEDEFAULT&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* default x position on the screen */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;CW_USEDEFAULT&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* default y position on the screen */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;CW_USEDEFAULT&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* initial window width */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;CW_USEDEFAULT&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* initial window height */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;NULL&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="cm"&gt;/* no Parent window */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;NULL&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="cm"&gt;/* No menu */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;hThisInstance&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* Program Instance handler */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;NULL&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="cm"&gt;/* No pointer for passing parameters */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;ShowWindow&lt;span class="o"&gt;(&lt;/span&gt;hwnd&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ncmdshow&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;UpdateWindow&lt;span class="o"&gt;(&lt;/span&gt;hwnd&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;GetMessage&lt;span class="o"&gt;(&amp;amp;&lt;/span&gt;messages&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;NULL&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;TranslateMessage&lt;span class="o"&gt;(&amp;amp;&lt;/span&gt;messages&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* Translate virtual-key messages into character messages */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;DispatchMessage&lt;span class="o"&gt;(&amp;amp;&lt;/span&gt;messages&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/* Send messages to WindowProcedure */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;messages&lt;span class="o"&gt;.&lt;/span&gt;wParam&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
LRESULT&lt;span class="w"&gt; &lt;/span&gt;CALLBACK&lt;span class="w"&gt; &lt;/span&gt;WindowProcedure&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;HWND&lt;span class="w"&gt; &lt;/span&gt;hwnd&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="cm"&gt;/* Handle of window that received the msg */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;UINT&lt;span class="w"&gt; &lt;/span&gt;message&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="cm"&gt;/* The message */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;WPARAM&lt;span class="w"&gt; &lt;/span&gt;wParam&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/* Extra parameter (e.g. mouse x) */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;LPARAM&lt;span class="w"&gt; &lt;/span&gt;lParam&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/* Extra parameter (e.g. mouse y) */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;PAINTSTRUCT&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;RECT&lt;span class="w"&gt; &lt;/span&gt;rect&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="cm"&gt;/* a structure to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;HDC&lt;span class="w"&gt; &lt;/span&gt;hdc&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="cm"&gt;/*handle to a DC (buffer) for the screen */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;switch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;message&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;case&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;GetClientRect&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;hwnd&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;rect&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;hdc&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;BeginPaint&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;hwnd&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;DrawText&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;hdc&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;TEXT&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;rect&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;DT_CENTER&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;DT_VCENTER&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;DT_SINGLELINE&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/* the above actually draws the text, h &amp;amp; v centered on a single line, to the buffer */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;EndPaint&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;hwnd&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;ps&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;case&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;PostQuitMessage&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/* send a WM_QUIT to the message queue */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;break&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;DefWindowProc&lt;span class="o"&gt;(&lt;/span&gt;hwnd&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;message&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wParam&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;lParam&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt;typedef struct tagPAINTSTRUCT {&lt;/span&gt;
&lt;span class="cm"&gt;  HDC  hdc;     // A handle to the display DC to be used for painting. &lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fErase;          //Indicates whether the background must be erased.&lt;/span&gt;
&lt;span class="cm"&gt;  RECT rcPaint;         //specifies upperleft and lowerright corners where to be painted&lt;/span&gt;
&lt;span class="cm"&gt;                        //in device units relative to the upper-left corner of the client area.  &lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fRestore;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fIncUpdate;&lt;/span&gt;
&lt;span class="cm"&gt;  BYTE rgbReserved[32];&lt;/span&gt;
&lt;span class="cm"&gt;}PAINTSTRUCT, *PPAINTSTRUCT;&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whew, another day done.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Mon, 18 Jan 2010 15:05:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-18:first-real-windows-program-365-programming-project-day-four/</guid><category>win32</category><category>gcc</category></item><item><title>PHP is mad cool with CSS: 365 programming project day three</title><link>https://blog.john-pfeiffer.com/php-is-mad-cool-with-css-365-programming-project-day-three/</link><description>&lt;p&gt;PHP is similar to C which makes it easy for me to do interesting things.&lt;/p&gt;
&lt;p&gt;The php manual webpage (&lt;a href="http://php.net/manual/en"&gt;http://php.net/manual/en&lt;/a&gt;) is brilliant! Don't you wish everybody had a full public API, easy menus, working examples, searchable and with the best user comments that really flesh out the bugs?&lt;/p&gt;
&lt;p&gt;CSS is so much better than HTML tables - it really revolutionizes the simplicity, maintainability, and power of displaying things on the web.&lt;/p&gt;
&lt;p&gt;Put them together and you have miracles like Drupal.&lt;/p&gt;
&lt;p&gt;The following project took a little more time than usual and it might even be useful one day, but what I really like about it is that it's FUN...&lt;/p&gt;
&lt;p&gt;I apologize about the poor formatting of the source code, I'll see if I can find a nicer way to enter into the Blog or break it up into "this is how you do" sections...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Many thanks to my debugger Bobby!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;php-list-to-diagram.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    This page takes a list of objects, one object per page, and displays them in a list using css.&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;br /&amp;gt;&amp;amp;nbsp;&amp;lt;br /&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    Please fill in the box below:&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;br /&amp;gt;&amp;amp;nbsp;&amp;lt;br /&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
    &lt;span class="c1"&gt;//The POST variable is an array with each form item as an item in the index&lt;/span&gt;
    &lt;span class="c1"&gt;//if the object list variable is not filled out then we ask the user to fill it in&lt;/span&gt;

    &lt;span class="cm"&gt;/* Clicking the submit button does the form action: the same page again with the POST data    the &amp;#39; quotations will ignore the &amp;quot; quotations which is useful when outputing HTML but sometimes very hard to read (or debug, along with spaces between HTML options) the &amp;quot; quotations allow the \n newline to be output to the HTML code spacing&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;       
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;form action=&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PHP_SELF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;//making extra spacing obvious improves readability and debugging&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;textarea name=&amp;quot;objectlist&amp;quot; cols=&amp;quot;40&amp;quot; rows=&amp;quot;20&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;                
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;/textarea&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* The else allows the user to see what they typed in last time BUT for security no slashes! */&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;   
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;stripslashes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/textarea&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;$object_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;        &lt;span class="c1"&gt;//one string for all of the user entered items&lt;/span&gt;
        &lt;span class="nv"&gt;$object_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$object_list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//break the string into lines&lt;/span&gt;

        &lt;span class="nb"&gt;print_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$object_lines&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                 &lt;span class="c1"&gt;//dump the array for debugging&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br /&amp;gt;&amp;amp;nbsp;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* the for loop takes each item in the array and copies it into the $value variable and it assigns the index to the $key variable.  rtrim() removes the newline the user entered in the form.&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
        &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$object_lines&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;div style=&amp;quot;position: absolute; left: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%; top: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;em;&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;//end of if-else user filled in textarea&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;


&lt;span class="x"&gt;&amp;lt;/body&amp;gt;   &lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 17 Jan 2010 22:02:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-17:php-is-mad-cool-with-css-365-programming-project-day-three/</guid><category>php</category><category>css</category></item><item><title>Windows MessageBox: 365 programming project day two</title><link>https://blog.john-pfeiffer.com/windows-messagebox-365-programming-project-day-two/</link><description>
&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;Programming in Windows is like building with legos. 
It can be easy and fun but at the same time very few of us have houses or cars made of legos. 
Of course, if you're writing an application for 90% of the computer users it will probably have to run on Windows.&lt;/p&gt;
&lt;p&gt;I've programmed with Borland, Mingw, Visual Studio and my favorite, GCC.&lt;/p&gt;
&lt;p&gt;The story of the GNU C Compiler (and Richard Stallman) is fascinating and reading "Free as in Freedom" really opened my eyes to the details of the shoulders of the giants that I'm standing upon.&lt;/p&gt;
&lt;p&gt;This tiny program opens up a message box that you can immediately close.
While not very useful it very often inspires new programmers with the power that they can quickly wield to get their ideas into a working program.&lt;/p&gt;
&lt;p&gt;Anyways, here's the win32 source code...  &lt;/p&gt;
&lt;h2 id="windows-text-editor"&gt;Windows Text Editor&lt;/h2&gt;
&lt;p&gt;Open up your favorite text editor (I very much like &lt;a href="http://www.flos-freeware.ch/notepad2.html"&gt;Notepad2&lt;/a&gt; or Bluefish)...&lt;/p&gt;
&lt;h2 id="windows-messagebox"&gt;Windows MessageBox&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* include all of the prebuilt Windows librarys to the fun stuff like GUI */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;include&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* the "main" will return a 1 or 0 depending on how the application terminates&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

int&lt;span class="w"&gt; &lt;/span&gt;WINAPI&lt;span class="w"&gt; &lt;/span&gt;WinMain&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
HINSTANCE&lt;span class="w"&gt; &lt;/span&gt;hThisInstance&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* Handle to the current instance */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
HINSTANCE&lt;span class="w"&gt; &lt;/span&gt;hPrevInstance&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* Handle to the previous instance */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
LPSTR&lt;span class="w"&gt; &lt;/span&gt;lpszArgument&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* pointer to command line arguments */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
int&lt;span class="w"&gt; &lt;/span&gt;ncmdshow&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* show state of the window */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/* call the messagebox function, no "parent", text to include, title bar text, and ? */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
MessageBox&lt;span class="o"&gt;(&lt;/span&gt;NULL&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Yet another program by John Pfeiffer"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Close by clicking X or OK"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;NULL&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* the "main" function now returns a good result, 0 */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, lots of nice comments.  &lt;/p&gt;
&lt;p&gt;I compiled the above with a windows port of GCC that I like because I can zip and move it around and it still always works.&lt;/p&gt;
&lt;h2 id="gcc-compile-windows-app"&gt;gcc compile windows app&lt;/h2&gt;
&lt;p&gt;I DID have to come up with the funny batch file to actually make the GCC compile it on windows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 16 Jan 2010 13:07:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-16:windows-messagebox-365-programming-project-day-two/</guid><category>Win32</category><category>gcc</category></item><item><title>Translate This!</title><link>https://blog.john-pfeiffer.com/translate-this/</link><description>&lt;p&gt;As I can speak bulgarian, french, and english (and almost speak italian and spanish) I realized that having my site entirely in english is limiting it's popularity.&lt;/p&gt;
&lt;p&gt;Therefore I recommend the following options to ensure that you can understand life, the universe, and the meaning of happiness:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://translate.google.com"&gt;http://translate.google.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.babelfish.com"&gt;http://www.babelfish.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;p.s. the above links will not only allow you to translate a website but you can write emails to people in foreign languages full of computer generated errors, WOW much more efficient!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 16 Jan 2010 12:32:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-16:translate-this/</guid></item><item><title>First Time Baking Bread, version .116</title><link>https://blog.john-pfeiffer.com/first-time-baking-bread-version-116/</link><description>&lt;p&gt;I can cook pancakes, cookies, and cake even... from the pre-made mixes.&lt;/p&gt;
&lt;p&gt;Just add water, eggs,stir, heat in oven, eat...&lt;/p&gt;
&lt;p&gt;I've tried making pancakes from scratch (next time I'll post the recipe) with ok results.&lt;/p&gt;
&lt;p&gt;My first "bread" attempt didn't actually make dough that you can roll so I'm not sure if it was bread...&lt;/p&gt;
&lt;p&gt;Mix the following in a bowl:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 glasses of flour (plain, none of that fancy already mixed stuff for
me!)  &lt;/li&gt;
&lt;li&gt;1 glass of sugar (granular cane sugar is all I had)  &lt;/li&gt;
&lt;li&gt;3 tsp of baking soda  &lt;/li&gt;
&lt;li&gt;4 tsp of salt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beat the following into a different bowl:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 eggs  &lt;/li&gt;
&lt;li&gt;1 cup of milk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then stir the two bowls together until mostly smooth.  &lt;/p&gt;
&lt;p&gt;Smear cooking oil in the bottom of a pan (mine was 1/2" by 7" by 9") to prevent sticking.  &lt;/p&gt;
&lt;p&gt;Pour the mixture into the pan (not really dough, eh?)&lt;/p&gt;
&lt;p&gt;Then I melted enough butter to put a tiny layer on top of everything in the pan (note there was lots of leftover "dough" for a second time on the pan).&lt;/p&gt;
&lt;p&gt;Baked at 200 degrees celsius for about 15 minutes then set to cool for another 10 minutes.&lt;/p&gt;
&lt;p&gt;VERDICT:  &lt;/p&gt;
&lt;p&gt;Light and ok for fluffiness. Good crust. &lt;/p&gt;
&lt;p&gt;Definitely too much baking soda but with apricot jam spread tastes fine. Serves 2-3 (or me over one day).  &lt;/p&gt;
&lt;p&gt;Good things: oil on the pan, butter on top, sugar is IMPORTANT.&lt;/p&gt;
&lt;p&gt;NEXT TIME I will try halving all of the ingredients, reducing the soda by yet another half tsp, and maybe some more sugar or vanilla/cinnamon.&lt;/p&gt;
&lt;p&gt;*LEGEND  &lt;/p&gt;
&lt;p&gt;1 small glass = about 200 ml ... is that a cup? (not quite 236ml...)&lt;/p&gt;
&lt;p&gt;ml = milliliter, tsp= teaspoon&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 16 Jan 2010 12:03:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-16:first-time-baking-bread-version-116/</guid><category>cooking</category></item><item><title>CSS Hover: 365 programming project day one</title><link>https://blog.john-pfeiffer.com/css-hover-365-programming-project-day-one/</link><description>
&lt;h2 id="365-days-of-programming"&gt;365 days of programming&lt;/h2&gt;
&lt;p&gt;I have been inspired by my wife's 365 day project
(&lt;a href="https://www.flickr.com/groups/love_life_art/pool/"&gt;https://www.flickr.com/groups/love_life_art/pool/&lt;/a&gt; to do a photograph a day for 2010.&lt;/p&gt;
&lt;p&gt;I spend my working days and much of my free time installing, repairing, updating, maintaining, and administering computers, servers, routers, business software, etc.&lt;/p&gt;
&lt;p&gt;Yet I have long wanted to focus more on Programming, and rather than spending my spare time reinstalling Linux (ok Stallman, GNU/Linux) and I thought that a little structure and motivation would help me channel my energies.&lt;/p&gt;
&lt;p&gt;So every day I will write a program, "A set of coded instructions that enables a machine, especially a computer, to perform a desired sequence of operations."&lt;/p&gt;
&lt;p&gt;To keep it a S.M.A.R.T. goal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Specific = 1 program,&lt;/li&gt;
&lt;li&gt;Measurable = per day,&lt;/li&gt;
&lt;li&gt;Achievable = I hope so,&lt;/li&gt;
&lt;li&gt;Relevant*,&lt;/li&gt;
&lt;li&gt;Tangible = all source code posted)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will try to utilize some fundamental good rules of programming:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;high level plan&lt;/li&gt;
&lt;li&gt;modular&lt;/li&gt;
&lt;li&gt;devise a test and desired outcome before you start coding&lt;/li&gt;
&lt;li&gt;clean, descriptive variable and function names with a minimum of parameters&lt;/li&gt;
&lt;li&gt;comments built into the code&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;*Relevant = my own rules for this are that it must be code writing that
makes something happen: e.g. coding html is ok, changing the color/theme
on a website by clicking a menu is not. Writing a script to install
something is ok, installing something by choosing menu options is not.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It can be on any platform or hardware Windows, Linux, WinCE, Android, laptop, desktop, server, virtual machine, phone, etc.&lt;/p&gt;
&lt;p&gt;Building up little pieces into a larger one is ok, in fact it's not only Programming best practice but one of the goals of the whole project &lt;/p&gt;
&lt;p&gt;(shhh... to be revealed at the end!)&lt;/p&gt;
&lt;p&gt;Building little applications: first a program to display hard coded data, then a program to take hard coded data and do something to it (e.g. add up a bunch of numbers), then a program to get input from a user, then a program to integrate all of the above!&lt;/p&gt;
&lt;p&gt;Learning by copying others is ok for just learning but my code has to be modified enough to represent my work and understanding.&lt;/p&gt;
&lt;p&gt;Enough talking, let's see some code!&lt;/p&gt;
&lt;h2 id="pseudo-code-aka-high-level-plan"&gt;Pseudo Code (aka high level plan)&lt;/h2&gt;
&lt;p&gt;I want a web page that when a user hovers their mouse over an image it changes.&lt;/p&gt;
&lt;p&gt;I will use html and css&lt;/p&gt;
&lt;p&gt;First I need to create the original image and the "hovered" image.&lt;/p&gt;
&lt;p&gt;My first "test" is that after I upload them I can actually see them (e.g. debugging that they're at the right location)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- this is embeddeding my cascading style sheet commands directly into the HTML --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- a block displays down, inline would display it to the right &lt;/span&gt;
&lt;span class="c"&gt;The width and the height of the image are important (otherwise it won't all show)&lt;/span&gt;
&lt;span class="c"&gt;We remove "text decoration" to prevent any funny "anchor link" borders  &lt;/span&gt;
&lt;span class="c"&gt;--&amp;gt;&lt;/span&gt;

#rollover {
display: block;
width: 190px;
height: 80px;
text-decoration: none;
background: url("http://kittyandbear.net/images/blog/usa-image.png") no-repeat 0 0;
}

#rollover:hover
{
width: 190px;
height: 80px;
text-decoration: none;
background:
url("http://kittyandbear.net/images/blog/usa-image-hover.png") no-repeat 0 0;
}

&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
I require 2 images, the original and a "hovered over" image:
&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"rollover"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Notice there was a delay sometimes, 
a recommended solution would be to 
use a single image and a tricky 
"only show the half that you want to see", 
e.g. normal top half, "hover" = lower half.

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Voila!  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://kittyandbear.net/john/web-tutorials/css-image-mouseover.htm"&gt;http://kittyandbear.net/john/web-tutorials/css-image-mouseover.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One down, many more to go!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Fri, 15 Jan 2010 17:38:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-15:css-hover-365-programming-project-day-one/</guid><category>css</category><category>html</category><category>365</category></item><item><title>Install Virtualbox 3 on Debian 5 gui</title><link>https://blog.john-pfeiffer.com/install-virtualbox-3-on-debian-5-gui/</link><description>
&lt;p&gt;NOTE: this is a command line installation of VirtualBox 3 proprietary driver edition...&lt;/p&gt;
&lt;p&gt;The "open source edition" does not include RDP into VM's nor USB drivers for VM's to access host USB's&lt;/p&gt;
&lt;h3 id="preparation-steps"&gt;Preparation Steps&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;uname -r //find your kernel version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-cache search linux-headers //in the long list see if your version is there&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install linux-headers-$(uname -r) //failed because I have "squeeze" 2.6.32-rc8-686&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;unfortunately the rc8 headers were missing from debian website&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;apt-get install linux-headers-2.6.32-trunk-686 //manual way (instead of the fancy function returns a result)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -ahl /usr/src //ensure the folders are there, sometimes no kernel folder&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export KERN_DIR=/usr/src/kernels/2.6.32-trunk-686 //sometimes instead /usr/src/2.6.32-trunk-686&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="actual-installation"&gt;Actual Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.virtualbox.org/wiki/Linux_Downloads"&gt;http://www.virtualbox.org/wiki/Linux_Downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano /etc/apt/sources.list //add line&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://download.virtualbox.org/virtualbox/debian&lt;/span&gt; &lt;span class="kp"&gt;lenny&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;apt-get update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-cache search virtualbox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install virtualbox-3.0 //install without verification...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo addusers username vboxusers&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OR &lt;code&gt;usermod -a -G vboxusers USERNAME&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="gui-management"&gt;GUI Management&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Setting up virtualbox-3.0 (3.0.12-54655_Debian_lenny) ...
addgroup: The group \`vboxusers' already exists as a system group.
Exiting.

Messages emitted during module compilation will be logged to /var/log/vbox-install.log.
Success!

Starting VirtualBox kernel module:done..

Setting up libsdl-ttf2.0-0 (2.0.9-1) ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;type &lt;code&gt;VBoxManage -v&lt;/code&gt; to see if everything is working (shows your VirtualBox version)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VirtualBox&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this command starts the GUI interface where you can easily create/manage&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;you can test it - from the command line create and start a VM, you'll see it appear in the GUI!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBoxManage createvm --name VM1 --register&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBoxManage startvm VM1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;VirtualBox GUI is pretty straightforward but I highly recommend that you
skim the manual and especially that you learn to play with the command line VBoxManage&lt;/p&gt;
&lt;h3 id="troubleshooting"&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/etc/init.d/vbox_drv setup&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The above command often fails, and when it fails, check the install log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;nano /var/log/vbox-install.log&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;no kernel headers installed/downloaded or export (so the OS knows where!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the user running VirtualBox needs to be in the /etc/group/vboxusers&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;if you have not installed the right headers (e.g. Virtualbox is compiling a driver specific to your kernel)&lt;/p&gt;
&lt;p&gt;So you need gcc, make... also you need the kernel-headers source&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uname -a&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;will show you exactly what kernel you have installed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ls -ahl /usr/src&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;will show you exactly what directories are there... &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;see some varations:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export KERN_DIR=/usr/src/2.6.32-trunk-686
export KERN_DIR=/usr/src/kernels/2.6.32-trunk-686
export KERN_DIR=/usr/src/kernels/2.6.18-128.4.1.el5-x86_64/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get remove virtualbox-3.0&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the easiest method to uninstall&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;do all of the fixes (e.g. in my case I had to downgrade my kernel from 2.6.32-rc8 to 2.6.32-trunk)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install linux-image-686
sudo apt-get install linux-headers-$(uname -r)
export KERN_DIR=/usr/src/2.6.32-trunk-686
sudo apt-get install virtualbox-3.0
usermod -a -G vboxusers USERNAME
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;after the reinstall hopefully you'll see:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Setting up libcurl3 (7.19.7-1) ...
Setting up virtualbox-3.0 (3.0.12-54655\_Debian\_lenny) ...
addgroup: The group \`vboxusers' already exists as a system group.
Exiting.

Messages emitted during module compilation will be logged to /var/log/vbox-install.log.
Success!

Starting VirtualBox kernel module:done..

Setting up libsdl-ttf2.0-0 (2.0.9-1) ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;type &lt;code&gt;VBoxManage -v&lt;/code&gt; to see if everything is working (shows your VirtualBox version)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sat, 09 Jan 2010 07:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-09:install-virtualbox-3-on-debian-5-gui/</guid><category>virtualbox</category><category>debian</category></item><item><title>How to use Drupal Blocks and a custom php hit counter block</title><link>https://blog.john-pfeiffer.com/how-to-use-drupal-blocks-and-a-custom-php-hit-counter-block/</link><description>&lt;p&gt;Blocks control the layout of the pages, i.e. a "footer" block appears at the bottom of each page.&lt;/p&gt;
&lt;p&gt;Each theme might have a different layout (and blocks available), and of course you can add your own custom blocks.&lt;/p&gt;
&lt;p&gt;Using the WebUI you can modify the look of the site's layout pretty quickly:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Administer -&amp;gt; Blocks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Drag and drop the "Powered by Drupal" option from &lt;strong&gt;FOOTER&lt;/strong&gt; into &lt;strong&gt;DISABLED&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ADVANCED&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;a custom php block (maybe dangerous)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;admin/build/block&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;create a new block&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;in the body (plain text!) insert (copy paste?) your code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Input Format = PHP code 
(Core Module -&amp;gt; Optional -&amp;gt; PHP Filter must be enabled)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;Home -&amp;gt; Administer -&amp;gt; Site Configuration -&amp;gt; Input Format&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;admin/settings/filters&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PHP code -&amp;gt; configure&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(the super user System Administrator ALREADY has this filter, the above only allows you to add other users which is dangerous!)&lt;/p&gt;
&lt;p&gt;IF HITFILE EXISTS:     read current count&lt;/p&gt;
&lt;p&gt;IF NOT, return error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hit-counter.txt&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//r+ = read + write, start at beginning&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_writable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test123&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;test456&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;test789&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;



&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;
&lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hit-counter.txt&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//r = read, starts at beginning  &lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;error accessing file&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;fseek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$filecontents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$filecontents&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;//the file only contains an integer&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$filecontents&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//r = read, starts at beginning  &lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;error accessing file&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_writable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;fseek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    
      &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$filecontents&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 06 Jan 2010 14:15:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-06:how-to-use-drupal-blocks-and-a-custom-php-hit-counter-block/</guid><category>drupal</category></item><item><title>Drupal Site Offline - how to login</title><link>https://blog.john-pfeiffer.com/drupal-site-offline-how-to-login/</link><description>&lt;h2 id="drupal-site-is-offline-for-maintenance-message"&gt;Drupal: "Site is offline for maintenance" message&lt;/h2&gt;
&lt;p&gt;I turned my website offline for maintenance and then logged out (or wanted to work on it from another computer).&lt;/p&gt;
&lt;p&gt;All I got was the &lt;strong&gt;"Site is offline for maintenance message".&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="the-solution"&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Type the following address into your browser:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://your-drupal-website.com/user"&gt;http://your-drupal-website.com/user&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;a href="http://your-drupal-website.com/?=user"&gt;http://your-drupal-website.com/?=user&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This will take you to the user login prompt - if you are the Administrator user you can then turn the site back online.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 06 Jan 2010 13:53:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2010-01-06:drupal-site-offline-how-to-login/</guid><category>drupal</category></item><item><title>How To Install Virtualbox 3 on CentOS 5 Minimal</title><link>https://blog.john-pfeiffer.com/how-to-install-virtualbox-3-on-centos-5-minimal/</link><description>&lt;p&gt;From the install DVD:&lt;/p&gt;
&lt;p&gt;choose no packages and customize all to deselect all packages&lt;/p&gt;
&lt;p&gt;BEWARE: this is a very empty configuration so you will have to install A LOT from yum...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install wget elinks sudo which&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IF you need to do anything with "compiling"  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;yum install make gcc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install kernel&lt;/code&gt;  ? maybe necessary?  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install kernel-devel-$(uname -r)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install kernel-headers-$(uname -r)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export KERN_DIR=/usr/src/kernels/$(uname -r)-x86_64&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="to-add-a-repository-eg-virtualbox"&gt;to add a repository, e.g. VirtualBox&lt;/h2&gt;
&lt;p&gt;So create the following file (in the directory) /etc/yum.repos.d/virtualbox.repo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[virtualbox]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;RHEL/CentOS-$releasever / $basearch - VirtualBox  &lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://download.virtualbox.org/virtualbox/rpm/rhel/$releasever/$basearch  &lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1  &lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1  &lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then try&lt;/p&gt;
&lt;p&gt;yum install virtualbox&lt;/p&gt;
&lt;h2 id="download-locations"&gt;download locations&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.centos.org"&gt;http://www.centos.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://download.virtualbox.org/virtualbox/rpm/rhel/"&gt;http://download.virtualbox.org/virtualbox/rpm/rhel/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc"&gt;http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 15 Nov 2009 20:59:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2009-11-15:how-to-install-virtualbox-3-on-centos-5-minimal/</guid><category>virtualbox</category><category>centos</category></item><item><title>Systeminfo hardware diagnostic listing ram processor ubuntu version ps top iotop lshw dmidecode</title><link>https://blog.john-pfeiffer.com/systeminfo-hardware-diagnostic-listing-ram-processor-ubuntu-version-ps-top-iotop-lshw-dmidecode/</link><description>
&lt;p&gt;It is often critical to know exactly what is going on with your system.&lt;br/&gt;
Linux is the defacto winner of the server world in large part because there are so many good tools.
Especially since open source often needs to detect and reverse engineer drivers and compatibility for manufacturer hardware.&lt;/p&gt;
&lt;h2 id="higher-level-utilities-for-process"&gt;higher level utilities for process&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;processes with their virtual memory size&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;top
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;processes and cpu usage, type q to quit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   q = quit
   s = change interval of refresh (default is 3 seconds)
   u = type a User and only show processes from that User
   &amp;gt; = choose to sort by the next column
   &amp;lt; = choose to sort by the previous

ps -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;tree of all processes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -ef
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;full output of all processes including start time, uptime, cmd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -eo pid,ppid,rss,vsize,pcpu,pmem,cmd -ww --sort=pid

ps -eo pid,ppid,rss,vsize,pcpu,pmem,cmd -ww --sort=rss

rss = ram usage
vsize = virtual memory include swap as well


ps -eo rss,vsz,pid,cmd,cputime | sort -n | tail -20
    (this will show you possible memory leaks)


ps guxca
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;so the free command is funny  ( http://kbase.redhat.com/faq/docs/DOC-1139 )&lt;/p&gt;
&lt;p&gt;the amount +/- buffers/cache is the "real" amount available to the system 
(if the "lazy" kernel decided to free up something that's been buffered previously in order for a new app which needs the memory)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;Physically Used Memory&amp;gt; = &amp;lt;Actual used memory&amp;gt; + &amp;lt;buffers&amp;gt; + &amp;lt;cache&amp;gt;

&amp;lt;Physically Free Memory&amp;gt; = &amp;lt;Total Physical Memory&amp;gt; - &amp;lt;Actual used memory&amp;gt; - &amp;lt;buffers&amp;gt; - &amp;lt;cache&amp;gt;

&amp;lt;Memory free for Applications&amp;gt; = &amp;lt;Total Physical Memory&amp;gt; - &amp;lt;Actual used memory&amp;gt;

&amp;lt;Memory used  by Applications&amp;gt; = &amp;lt;Actual used memory&amp;gt; - &amp;lt;buffers&amp;gt; - &amp;lt;cache&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="os-version"&gt;OS Version&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/issue
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;just the version number of the OS, e.g. ubuntu shows 16.04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/debian_version
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only on debian/ubuntu... and shows squeeze/sid for natty 11.04, wheezy/sid for 11.10, jessie/sid
- &lt;a href="https://www.debian.org/releases/"&gt;https://www.debian.org/releases/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/lsb-release
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;full ubuntu version&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsb_release -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a command to shows all of the ubuntu version information, e.g. cat /etc/lsb-release&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsb_release -c
Codename:   natty
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a command to just show the codename&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="proc-is-realtime-info-about-the-system"&gt;/proc is realtime info about the system&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /proc/version
cat /proc/cpuinfo
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;note: if there's "lm" (aka long mode) in the flags: fpu vme etc. area then you have 64bit capability...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /proc/meminfo
head -1 /proc/meminfo

ls -ld /proc/somepid
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;get some info about a specific process running via its pid number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="kernel-information"&gt;kernel information&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uname -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;kernel version, x64 or 32 bit, machine name , multi-processor SMP, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;getconf -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;another way to get info about your kernel&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="memory-and-disk-space"&gt;Memory and disk space&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;free -m
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;free memory in megabytes including swap/buffer usage)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vmstat
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;/virtual memory stats&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;df -h
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;free disk space in human readable numbers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;du
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;disk usage for a directory and subdirectories - needs parameters , like &lt;code&gt;du -sh&lt;/code&gt; (summary with human readable sizes)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;du -a . | sort -nr | head -n 10
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;disk usage for all files in the current directory and subdirectories reverse sorted for largest 10 items&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://linux.die.net/man/1/du"&gt;https://linux.die.net/man/1/du&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;stat -f / -c "%a * %s / 1024" | bc&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get the specific amount of free space available from the root file system, stat --help
bc is a handy "built in calculator"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="hardware-listing"&gt;hardware listing&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fdisk -l
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;shows all of the hard disk devices available - what os, bootable, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lshw
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;exhaustive info about the hardware (tree by CLASS)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lshw -class network
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;hardware listing focused identification of Physical Network Adapter to logical name like eth0/wlan0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lshw -c video
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;show the video hardware&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lspci
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lists devices connected to the PCI bus requires pciutils.deb depends on libpci3 , all the pci hardware including usb bridges,agp cards
common usages are "lspci | grep vga" or "lspci | grep eth"    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsusb
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;will show all the usb devices like mice, etc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dmidecode
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;listing of system hardware according to the BIOS (so not always reliable)
&lt;a href="http://www.nongnu.org/dmidecode/"&gt;http://www.nongnu.org/dmidecode/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsmod
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;installed driver modules&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xdpyinfo
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;/xserver info&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l /lib/libc-*.so /lib/libc.so*
ldd --version
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;version of linux glibc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dmesg
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;kernel messages = all the devices the kernel has found like hard disks,cdroms,etc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dmesg | grep CPU
dmesg | grep mem
dmesg | tail
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;shows the last 10 lines of the hardware boot up&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/modprobe.conf (kernel 2.6)
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;fedora/redhat
    /etc/modules.conf (kernel 2.4)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/conf.modules (or for older systems)
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="disk-io"&gt;disk IO&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iotop
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;like top but focused on I/O , &lt;a href="http://linux.die.net/man/1/iotop"&gt;http://linux.die.net/man/1/iotop&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="network"&gt;network&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;shows all of the ethernet devices available&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l /sys/class/net/eth0

apt-get install bcm43xx-fwcutter
mkdir -p /lib/hotplug/firmware; cp /lib/firmware/*.fw /lib/hotplug/firmware
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="software-inventory-and-listing"&gt;software inventory and listing&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg --list
dpkg -l | grep foo
dpkg --get-selections
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;debian/ubuntu listing of installed software packages &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip freeze
pip freeze | grep foo
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;python packaging manager listing of packages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpm -qa
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;red hat installed software&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tail -f /var/log/secure         //login logs
tail -f /var/log/maillog            //mail logs

last
last -f btmp
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;last logins and then the last bad logins&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /proc/meminfo
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;MemTotal = Total amount of physical RAM, in kilobytes.
 MemFree  The amount of physical RAM, in kilobytes, left unused by the system. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;note that MemTotal - MemFree should match what free and top show you...

Slab The total amount of memory, in kilobytes, used by the kernel to cache data structures for its own use.

Mapped The total amount of memory, in kilobytes, which have been used to map devices, files, or libraries using the mmap command.

So all of your processes from TOP + Slab + Mapped

free
             total       used       free     shared    buffers     cached
Mem:        262364      78424     183940          0       2412      37756
-/+ buffers/cache:      38256     224108
Swap:       524280          0     524280

used + buffer + cached = 118,592
143,772


top - 20:39:34 up  2:19,  1 user,  load average: 0.00, 0.00, 0.00
Tasks:  55 total,   1 running,  54 sleeping,   0 stopped,   0 zombie
Cpu(s):  0.0%us,  0.0%sy,  0.0%ni, 99.2%id,  0.0%wa,  0.0%hi,  0.0%si,  0.8%st
Mem:    262364k total,    78408k used,   183956k free,     2428k buffers
Swap:   524280k total,        0k used,   524280k free,    37756k cached


 3899 root      20   0 68112 2984 2316 S    0  1.1   0:00.42 sshd
 3575 klog      20   0  5492 2260  420 S    0  0.9   0:00.06 klogd
 3903 root      20   0 17544 1796 1328 S    0  0.7   0:00.16 bash
 4490 root      20   0 18860 1200  932 R    0  0.5   0:00.04 top
 3596 root      20   0 50916 1164  680 S    0  0.4   0:00.00 sshd
 3856 Debian-e  20   0 43432 1000  616 S    0  0.4   0:00.00 exim4
    1 root      20   0  4020  944  656 S    0  0.4   0:00.36 init
 2300 root      16  -4 16832  932  372 S    0  0.4   0:00.46 udevd
 3874 root      20   0 18616  860  668 S    0  0.3   0:00.04 cron
 3550 syslog    20   0 12296  752  564 S    0  0.3   0:00.10 syslogd
 3510 root      20   0  3864  588  492 S    0  0.2   0:00.00 getty
 3513 root      20   0  3864  588  492 S    0  0.2   0:00.00 getty
 3516 root      20   0  3864  588  492 S    0  0.2   0:00.00 getty
 3572 root      20   0  8132  588  476 S    0  0.2   0:00.04 dd
 3509 root      20   0  3864  584  492 S    0  0.2   0:00.00 getty
 3512 root      20   0  3864  584  492 S    0  0.2   0:00.00 getty
 3898 root      20   0  3864  584  492 S    0  0.2   0:00.00 getty

                            17,996 + 15,832 + 3,552 = 37,380... so still short of 78,424
TOP + Slab + Mapped
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/"&gt;http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://backtrack.offensive-security.com/index.php/HCL:Wireless#Linksys_WPC54G_v3"&gt;http://backtrack.offensive-security.com/index.php/HCL:Wireless#Linksys_WPC54G_v3&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; Linksys WPC54G v3

    * Driver : bcm43xx/b43
    * Chipset : Broadcom Corporation BCM4318 [AirForce One 54g] 802.11g Wireless LAN Controller (rev 02)
    * Subsystem: Linksys WPC54G-EU version 3 [Wireless-G Notebook Adapter]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Monitor mode currently supported but injection may or may not work with bcm43xx. Apparently a new driver is coming out dubbed as b43 and is only available in either kernel &amp;gt;=2.6.24 and/or wireless-2.6 git. Injection will work after patching b43 via mac80211 stack. bcm43xx driver will soon be deprecated and for this chipset it will not indicate PWR levels with airodump-ng. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://linuxwireless.org/en/users/Drivers/b43
lspci -vnn | grep 14e4

0001:01:01.0 Network controller [0280]: Broadcom Corporation BCM4318 [AirForce One 54g] 802.11g Wireless LAN Controller [14e4:4318] (rev 02)
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /proc/interrupts
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;a file listing of all the interrupt IRQs used by your system&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;e.g.

          CPU0
   0:  2707402473          XT-PIC  timer
   1:          67          XT-PIC  i8042
   2:           0          XT-PIC  cascade
   5:      411342          XT-PIC  eth1
   8:           1          XT-PIC  rtc
  10:     1898752          XT-PIC  eth0
  11:           0          XT-PIC  uhci_hcd
  12:          58          XT-PIC  i8042
  14:     5075806          XT-PIC  ide0
  15:         506          XT-PIC  ide1
NMI:           0
ERR:          43
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if two devices try to use the same interrupts or memory access address they will be in conflict (won't work)&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="dmidecode-in-depth-example"&gt;dmidecode in depth example&lt;/h2&gt;
&lt;p&gt;DMI DECODE  for how much physical ram you COULD have...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dmidecode &amp;gt; hw.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;dump the whole thing to a text file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;less hw.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;lots of info!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;System Information
        Manufacturer: HP
        Product Name: ProLiant ML310 G5
        Version: Not Specified
        Serial Number: 
        UUID: 
        Wake-up Type: Power Switch
        SKU Number: 
        Family: ProLiant

Processor Information
        Socket Designation: Proc 1
        Type: Central Processor
        Family: Xeon
        Manufacturer: Intel
        ID: 77 06 01 00 FF FB EB BF
        Signature: Type 0, Family 6, Model 23, Stepping 7


        External Clock: 1333 MHz
        Max Speed: 4800 MHz
        Current Speed: 2500 MHz
        Status: Populated, Enabled
        Upgrade: ZIF Socket
        L1 Cache Handle: 0x0710
        L2 Cache Handle: 0x0720
        L3 Cache Handle: 0x0730
        Serial Number: Not Specified
        Asset Tag: Not Specified
        Part Number: Not Specified
        Core Count: 4
        Core Enabled: 4
        Thread Count: 4
        Characteristics:
                64-bit capable
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;BECAUSE THERE IS SO MUCH INFORMATION PEOPLE USE TRICKS TO GET ONLY A CERTAIN PART&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;dmidecode&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;perl&lt;/span&gt; &lt;span class="nt"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;'$memory += $1 if /^\t+Size: (\d+)/ ; END { print "$memory\n" }'&lt;/span&gt;

&lt;span class="nt"&gt;dmidecode&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nt"&gt;perl&lt;/span&gt; &lt;span class="nt"&gt;-ne&lt;/span&gt; &lt;span class="s1"&gt;'$num_procs += 1 if /^\t+Type: Central Processor/ ; END { print "$num_procs\n"}'&lt;/span&gt;

&lt;span class="nt"&gt;decode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;biosdecode&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;vpddecode&lt;/span&gt;       &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;alternates&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;dmidecode&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;DMI SHORT CODES MAKE IT EASIER TO GET A SPECIFIC CHUNK&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dmidecode --type 0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;get info on the bios&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dmidecode --type 16

# dmidecode 2.9
SMBIOS 2.4 present.

Handle 0x1000, DMI type 16, 15 bytes
Physical Memory Array
        Location: System Board Or Motherboard
        Use: System Memory
        Error Correction Type: Single-bit ECC
        Maximum Capacity: 8 GB
        Error Information Handle: Not Provided
        Number Of Devices: 4


# Type  Short Description
0   BIOS 
1   System 
2   Base Board 
3   Chassis 
4   Processor 
5   Memory Controller 
6   Memory Module 
7   Cache 
8   Port Connector 
9   System Slots 
10  On Board Devices 
11  OEM Strings 
12  System Configuration Options 
13  BIOS Language 
14  Group Associations 
15  System Event Log 
16  Physical Memory Array 
17  Memory Device 
18  32-bit Memory Error 
19  Memory Array Mapped Address 
20  Memory Device Mapped Address 
21  Built-in Pointing Device 
22  Portable Battery 
23  System Reset 
24  Hardware Security 
25  System Power Controls 
26  Voltage Probe 
27  Cooling Device 
28  Temperature Probe 
29  Electrical Current Probe 
30  Out-of-band Remote Access 
31  Boot Integrity Services 
32  System Boot 
33  64-bit Memory Error 
34  Management Device 
35  Management Device Component 
36  Management Device Threshold Data 
37  Memory Channel 
38  IPMI Device 
39  Power Supply
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Wed, 11 Nov 2009 21:42:50 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2009-11-11:systeminfo-hardware-diagnostic-listing-ram-processor-ubuntu-version-ps-top-iotop-lshw-dmidecode/</guid><category>linux</category><category>systeminfo</category><category>hardware</category><category>diagnostic</category><category>listing</category><category>ram</category><category>processor</category><category>ubuntu</category><category>version</category><category>top</category><category>iotop</category><category>lshw dmidecode</category></item><item><title>wget curl get ip timeout backup download site including images</title><link>https://blog.john-pfeiffer.com/wget-curl-get-ip-timeout-backup-download-site-including-images/</link><description>
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --quiet http://example.com/folder/file --output-document output_filename

wget --timestamping http://example.com/file.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only download if the remote file is newer by timestamp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="curl"&gt;curl&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -O https://example.com/folder/file
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;download the file using the original file name like wget&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -s checkip.amazonaws.com

curl -s ipinfo.io/ip
curl -s www.trackip.net/ip
curl -s whatsmyip.me
curl -s whatismyip.akamai.com
curl -s icanhazip.com

curl --silent --output output_filename http://example.com/filename.html
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;download the file with a new local filename&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -I --max-time 2 https://172.24.33.133
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;HEAD response only and wait at most 2 seconds&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --silent --max-time 1 -o /dev/null --insecure -I -w "%{http_code}" --insecure https://172.24.33.133 | grep 200
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only show response status code 200 or nothing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --silent --location --insecure https://example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;no transfer output, follow (HTTP) redirects, do not verify the SSL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --header "X-Custom-Header: foobar" http://example.com:8080
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://curl.haxx.se/docs/manpage.html#-H"&gt;http://curl.haxx.se/docs/manpage.html#-H&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --data-urlencode "name=My Name" http://www.example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;does the percent encoding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --request POST http://example.com/resource.cgi
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://superuser.com/questions/149329/what-is-the-curl-command-line-syntax-to-do-a-post-request"&gt;http://superuser.com/questions/149329/what-is-the-curl-command-line-syntax-to-do-a-post-request&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl --header "content-type: application/json" --header "Authorization: TOKEN" -X POST \
-d '{"name":"Room of Requirement","owner":{"id":1234}}' https://example.com/room/55


curl -A "Googlebot/2.1 (+http://www.google.com/bot.html)" -O https://support.google.com/webmasters/answer/1061943?hl=en
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;spoof googlebot to scrape a page that has nagging javascript&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --user-agent="Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)" https://example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;wget way to spoof googlebot to scrape a page that has nagging javascript&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="using-browsers-to-modify-post-requests-or-forms"&gt;using browsers to modify post requests or forms&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Chrome developer tools (control + shift + i)&lt;/li&gt;
&lt;li&gt;choose Network (panel after Elements)&lt;/li&gt;
&lt;li&gt;Right click on a request (e.g. GET and choose Copy as cURL)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OR&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Firefox (maybe requires Firebug extension installed) and (control + shift + k)&lt;/li&gt;
&lt;li&gt;Network panel (Headers)&lt;/li&gt;
&lt;li&gt;Edit and Resend&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="wget-examples-to-download-a-blog-and-images"&gt;wget examples to download a blog and images&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -r -H -D bpfeiffer.blogspot.com,1.bp.blogspot.com,2.bp.blogspot.com,3.bp.blogspot.com,4.bp.blogspot.com,www.blogger.blogspot.com,lh6.googleusercontent.com,lh5.googleusercontent.com,lh4.googleusercontent.com,lh3.googleusercontent.com, lh2.googleusercontent.com,lh1.googleusercontent.com -k -p -E -nH -erobots=off -U Mozilla http://bpfeiffer.blogspot.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;annoyingly have to find each google image server until figured out wildcards with the example list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -r -H -D johnnypfeiffer.blogspot.com,1.bp.blogspot.com,2.bp.blogspot.com,3.bp.blogspot.com,4.bp.blogspot.com,www.blogger.blogspot.com -k -p -E -nH -erobots=off -U Mozilla http://johnnypfeiffer.blogspot.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;we cannot use the -nd flag because some images have the same name but different servers 1.bp.blogspot.com/NAME.jpg 2.bp.blogspot.com/NAME.jpg*&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-r = recursive (infinite by default)
-l 2 = number of levels deep to recurse
-H = span to other sites (examples, i.e. images.blogspot.com and 2.bp.blogspot.com)
-D example1.com,example2.com = only span to these specific examples
--exclude-examples  bad.com = do not crawl if the link is from example bad.com
-k = convert-links (to be accessible entirely locally without internet - it does this at the END after downloading everything)
-p = download the "page requisities" (i.e. css and images)
-E = if it doesn't originally end in .html it will once downloaded
-erobots=off
-nH = do not prefix  index.html in the johnnypfeiffer.blogspot.com

-nd = don't bother to create directories for everything
-P = --directory-prefix=/usr/local/src    (prepends all filenames downloaded with a string, e.g. a local path), by default this is .
-U = user agent (i.e. Mozilla)

-O file = puts all of the content into one file, not a good idea for a large site (and invalidates many flag options)
-O - = outputs to standard out (so you can use a pipe, like wget -O http://kittyandbear.net | grep linux
-N = uses timestamps to only download newer remote files (which will be stamped with the remote timestamp), depends on server providing Last-Modified header

--no-use-server-timestamps = files will be stamped with download time (default behavior is to stamp the download with the remote file)
--spider = only checks that pages are there, no downloads (checks if the url / files are correct/exist)

-b  (backgrounds the job, you can check it via "tail -f wget-log"
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="more-wget-parameters"&gt;More wget parameters&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -r -H -l1 -k -p -E -nd -erobots=off http://bpfeiffer.blogspot.com
wget -r -H --exclude-examples azlyrics.com -l1 -k -p -E -nd -erobots=off http://bpfeiffer.blogspot.com
wget --http-user=user --http-password=pass -r -E -p --convert-links http://website/trac/umr5series/ -b      # backgrounded
wget -p -k http://www.gnu.org/ -o logfile           # get css etc. and convert links to local links and outputs a log of actions to logfile
wget -c = will continue a download of a large file if interrupted
wget -r -A.pdf http://url-to-webpage-with-pdfs/

--user-agent="Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.3) Gecko/2008092416 Firefox/3.0.3"

wget --http-user=johnpfeiffer --http-password=* -r -l1 -A "*.pdf" http://wss/test/Forms/AllItems.aspx

-r = recursive
-l1 = one level of recursive depth only
-A "*.pdf" = pdf files only
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --reject=gif WEBSITE-TO-BE-DOWNLOADED
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;do not download gifs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; wget -S http://website/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;preserve the original timestamps&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -N http://website/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;only get the newer files by timestamp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget "ftp://ftp.website/*"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the double quotes prevent the shell from trying to interpret the *&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -m http://website.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;mirror option&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-m or --mirror
Turn on options suitable for mirroring [a web site]. This option turns on recursion and time-stamping, 
sets infinite recursion depth and keeps FTP directory listings. 
It is currently equivalent to -r -N -l inf --no-remove-listing.


wget -m --user=user --pasword=pass ftp://ftp.web.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ftp site mirror with user &amp;amp; pass&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --timestamping -r ftp://ftp.website/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Run regularly to mirror a website (recursively)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --wait=20 --limit-rate=20K -r -p -U Mozilla http://www.stupidsite.com/
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;TO BE POLITE... use the wait and limit rate so as not to crash someone's site (be invisible!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --no-parent http://site/subdir
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;allows you to just get the subdir&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --limit-rate=20k -i file.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;runs wget from the list of urls in the file at 20KB/s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="wget-with-self-signed-ssl-certificates"&gt;wget with self signed ssl certificates&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://example.com --no-check-certificate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;HTTPS (SSL/TLS) options:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;--secure-protocol=PR     choose secure protocol, one of auto, SSLv2,
                            SSLv3, and TLSv1.
   --no-check-certificate   don't validate the server's certificate.
   --certificate=FILE       client certificate file.
   --certificate-type=TYPE  client certificate type, PEM or DER.
   --private-key=FILE       private key file.
   --private-key-type=TYPE  private key type, PEM or DER.
   --ca-certificate=FILE    file with the bundle of CA's.
   --ca-directory=DIR       directory where hash list of CA's is stored.
   --random-file=FILE       file with random data for seeding the SSL PRNG.
   --egd-file=FILE          file naming the EGD socket with random data.&lt;/p&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --random-wait ftp://user:pass@userver.com/dir
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;random pauses to simulate a real user downloading&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;--user=user --password=pass&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -c ftp://ftp.website/file
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;continue downloading a previous wget that was interrupted
note does not handle a changed file very well...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;--ignore-length         //if some http servers send bogus info out...
--referer=url           //if website only allows access from a browser that was previously on their site...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that time-stamping will only work for files for which the server gives a timestamp. &lt;/p&gt;
&lt;p&gt;http depends on a Last-Modified header.  ftp depends on a directory listing with dates in a wget parseable format&lt;/p&gt;
&lt;h3 id="wgetrc-for-permanent-configuration-changes"&gt;.wgetrc for permanent configuration changes&lt;/h3&gt;
&lt;p&gt;wget could have these changes permanent using the wget startup file .wgetrc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/usr/local/etc/wgetrc    or per user settings       $HOME/.wgetrc

#passive_ftp = off
waitretry = 10
#timestamping = off

#recursive = off
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="example-wget-to-scrape-java-posse-podcast-mp3s"&gt;example wget to scrape java posse podcast mp3s&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -U Mozilla -e robots=off --random-wait -r -l1 -H -D "javaposse.com,traffic.libsyn.com" -A "Java*.mp3" http://javaposse.com/2008/05

-H = --span-hosts = recursive will get from other examples too
-D = --examples = what examples to download from
 --exclude-examples = what examples to NOT download
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Sun, 06 Sep 2009 21:07:02 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2009-09-06:wget-curl-get-ip-timeout-backup-download-site-including-images/</guid><category>linux</category><category>wget</category><category>curl</category><category>get</category><category>ip</category><category>timeout</category><category>download</category><category>site</category><category>images</category><category>http</category><category>password</category><category>backup</category></item><item><title>Network ifconfig ifcfg static and dhcp eth0 route wifi wpa</title><link>https://blog.john-pfeiffer.com/network-ifconfig-ifcfg-static-and-dhcp-eth0-route-wifi-wpa/</link><description>
&lt;p&gt;Networking usually has 3 critical configuration components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;IP address config&lt;/li&gt;
&lt;li&gt;Default route (to the gateway)&lt;/li&gt;
&lt;li&gt;DNS (Domain Name System)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;I am skipping installing physical network cards and network drivers because we're "all in the cloud" now (or at the very least virtualized)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="quick-awesome-tips"&gt;Quick Awesome Tips&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig | grep Bc
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;get the ip addresses of all cards&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip route get 8.8.8.8 | awk 'NR==1 {print $NF}'
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;badass internet tip on how to get the ip address of the outbound network card&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/sbin/ifconfig | grep 'inet' | tr -s ' ' | cut -d ' ' -f3 | cut -d ':' -f2
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;one liner to get just the ip addresses&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="hardware"&gt;Hardware&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lspci | grep -i ethernet
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;displays ethernet hardware&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dmesg | grep eth
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;displays ethernet devices registered during bootup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="diagnostics"&gt;Diagnostics&lt;/h2&gt;
&lt;h3 id="view-current-configuration-and-loopback"&gt;View current configuration and Loopback&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;simples way to see the current interfaces and configurations&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig lo

lo Link encap:Local Loopback
inet addr:127.0.0.1 Mask:255.0.0.0
UP LOOPBACK RUNNING MTU:16436 Metric:1
RX packets:787 errors:0 dropped:0 overruns:0 frame:0
TX packets:787 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:0
RX bytes: TX bytes:
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;see a specific interface, the loopback interface is the simple test of your tcp/ip stack     &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;you will most likely see eth0 for wired interfaces and wlan0 for wireless
and the will include the following line with the interrupt IRQ and memory access address&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Interrupt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="n"&gt;Base&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;0x1820&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You may also see any network bridges&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="current-network-connections-with-netstat"&gt;Current Network Connections with netstat&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;netstat -i
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;displays active interfaces&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;netstat -an --inet
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;numeric and internet protocols only&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="configuring-the-network"&gt;Configuring the Network&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/networking restart
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;after making config file changes you should restart the network service (this will reset any manual configuration)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dhcpcd eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;runs the DHCP client on eth0 to attain an IP address in the 192.168.1.x range&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="permanent-persistent-configuration"&gt;Permanent persistent configuration&lt;/h3&gt;
&lt;h4 id="etcnetworkinterfaces"&gt;/etc/network/interfaces&lt;/h4&gt;
&lt;p&gt;the "old" tried and true way of configuring interfaces &lt;a href="https://wiki.debian.org/NetworkConfiguration"&gt;https://wiki.debian.org/NetworkConfiguration&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sets eth0 to be a dhcp client at boot or "ifup eth0"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/network/interfaces
    auto eth0
    iface eth0 inet static
        address 172.24.32.123
        netmask 255.255.254.0
        network 172.24.32.0
        broadcast 172.24.32.255
        gateway 172.24.32.1

        # dns-* options are implemented by the resolvconf package, if installed
        dns-nameservers 172.24.32.10 172.24.32.11
        dns-search example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;permanently configure to a static ip address which survives reboot or sudo /etc/init.d/networking restart&lt;/p&gt;
&lt;p&gt;network and broadcast are often optional (e.g. for /24 networks)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="ieee-8021x-wpa-supplicant"&gt;IEEE 802.1x WPA Supplicant&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/WPA_supplicant"&gt;https://wiki.archlinux.org/index.php/WPA_supplicant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://help.ubuntu.com/community/Network802.1xAuthentication"&gt;https://help.ubuntu.com/community/Network802.1xAuthentication&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sudo apt-get install wpasupplicant&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;install the wpa supplicant binary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example wpa_suplicant configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/wpa_supplicant/wpa_wired.conf
    network={
    key_mgmt=IEEE8021X
    eap=PEAP
    phase2="auth=MSCHAPV2"
    identity="MYUSERNAME"
    password="MYPASSWORD"
  }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To manually run wpa_supplicant for a wired connection: &lt;code&gt;wpa_supplicant -D wired -i enp0s25 -c /etc/wpa_supplicant/wpa_wired.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To incorporate this into your /etc/network/interfaces file...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback

auto enp0s25
iface enp0s25 inet dhcp
    wpa-driver wired
    wpa-conf /etc/wpa_supplicant/wpa_wired.conf
    dns-nameservers 172.28.4.120 172.24.0.180
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;as of 16.04 ubuntu uses a different method of determining the ethernet interface names (so not eth0, instead enp0s25)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you wish to obfuscate with a hash (instead of plaintext in the conf file)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo -n MYPASSWORD | iconv -t utf16le | openssl md4
    (stdin)= db3236251234123412341234
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the wpa supplicant config update the password line to be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;password=hash:db3236251234123412341234
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="configure-your-ip-address-manually"&gt;Configure your IP Address Manually&lt;/h3&gt;
&lt;p&gt;Manual, ad-hoc network configuration - not stored permanently (lost at reboot/power off/network service restart)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/sbin/ifconfig eth0 192.168.1.11
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;auto configures network to 192.168.1.0 and netmask 255.255.255.0, 10.0.0.1 is different!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig eth0 10.0.0.1 
ifconfig eth0 netmask 255.255.255.0 
ifconfig eth0 broadcast 10.0.0.255
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ALTERNATIVELY you can specify each parameter&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig -a
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;shows the results, run inbetween will show the incremental changes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifconfig eth0 10.0.0.1 netmask 255.255.255.0 broadcast 10.0.0.255 up
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;or configure all of the parameters at once&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;route add default gw 192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ensures communication with our gateway/router/modem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;route add add -net 10.0.0.0 netmask 255.0.0.0 gw 10.10.10.1 dev eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;add another route send 10.x.x.x traffic to a different network gateway (10.10.10.1 via device/interface eth0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;up route add -net 192.168.0.0 netmask 255.255.0.0 gw 10.10.10.1
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;define a permanent, persistent static route&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifdown eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;manually disables the eth0 device&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ifup eth0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;manually enables the eth0 device&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="alternatively-the-more-modern-commands-with-ip"&gt;ALTERNATIVELY the more "modern" commands with ip&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/bin/ip addr 192.168.1.11 dev eth0
ip link show

1: lo: &amp;lt;LOOPBACK,UP&amp;gt; ...
2: eth0: &amp;lt;BROADCAST,MULTICAST&amp;gt; ...
        link/ether 00:00:00:00:00:00


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="wireless"&gt;Wireless&lt;/h2&gt;
&lt;p&gt;Can be configured manually substituting wlan0 instead of eth0&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iwlist scan

iwconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;sets up your wireless settings (e.g. wpa/wep and passwords/keys)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://linux.die.net/man/8/iwconfig"&gt;http://linux.die.net/man/8/iwconfig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dns-name-resolution"&gt;DNS &amp;amp; NAME RESOLUTION&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/resolv.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;the linux file for name resolution, can be filled automatically if using DHCP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;search name-of-domain.com  - Name of your domain or ISP's domain if using their name server
nameserver XXX.XXX.XXX.XXX - IP address of primary name server
nameserver XXX.XXX.XXX.XXX - IP address of secondary name server

/etc/hosts
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;old system for putting a name to an ip address on the local machine &lt;a href="https://en.wikipedia.org/wiki/Hosts_(file)"&gt;https://en.wikipedia.org/wiki/Hosts_(file)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;can fill in and supersede info on machines not covered by your DNS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;127.0.0.1         your-node-name.your-domain.com  localhost.localdomain  localhost 
XXX.XXX.XXX.XXX   node-name
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IF USING STATIC RESOLUTION (MANUAL UPDATING OF THE /etc/resolv.conf)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get remove resolvconf   (this utility will automatically overwrite your changes above!)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HOSTNAME is how your computer is recognized on the (local) network&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hostname newhostname
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;manually changes the hostname (not permanent)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hostnamectl set-hostname NEWHOSTNAME
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;convenient way to set the hostname dynamically AND persistently&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sysctl -w kernel.hostname="newhostname"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;low level alternative  &lt;a href="http://linux.die.net/man/8/sysctl"&gt;http://linux.die.net/man/8/sysctl&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="red-hat-and-centos-5"&gt;RED HAT AND CENTOS 5&lt;/h2&gt;
&lt;p&gt;You must modify the config files (but the changes will survive reboot =)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/sysconfig/network-scripts/ifcfg-eth0

DEVICE=eth0
BOOTPROTO=                          //could be dhcp?
IPADDR=192.168.1.59
NETMASK=255.255.255.0
BROADCAST=255.255.255.255
NETWORK=192.168.1.0
DNS1=192.168.1.30
DNS2=192.168.1.3

HWADDR=08:00:27:B4:79:93
ONBOOT=yes
DHCP_HOSTNAME=madics-vm
GATEWAY=192.168.1.3
TYPE=Ethernet

/etc/init.d/network restart
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
AUTOMATIC CONFIGURATION OF YOUR IP ADDRESS

// modify the file /etc/network/interfaces and then you can run ifup/ifdown
// the default linux config file for setting up networking (at bootup)
// EXAMPLE of the config file from ubuntu server (could be debian too)

auto lo
iface lo inet loopback

#sets eth0 to be a dhcp client at boot or "ifup eth0"
auto eth0
iface eth0 inet dhcp

auto ath0           //atheros chip based networking
auto wlan0          //wireless chip based networking

/etc/init.d/networking restart  //required to apply changes to the above files

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

net-setup eth0      //system rescue cd

/etc/sysconfig/network      //redhat/fedora file to configure the network
NETWORKING=yes
HOSTNAME=my-hostname      - Hostname is defined here and by command hostname
FORWARD_IPV4=true         - True for NAT firewall gateways and linux routers. 
                            False for everyone else - desktops and servers.
GATEWAY="XXX.XXX.XXX.YYY" - Static IP configuration. Gateway not defined here for DHCP client.


ifcfg-eth0      //file on fedora /etc/sysconfig/network-scripts autoconfigure on boot or ifup
DEVICE=eth0
BOOTPROTO=static            //could be set to =dhcp
IPADDR=192.168.1.100            //unnecessary for dhcp 
NETMASK=255.255.255.0           //unnecessary for dhcp
ONBOOT=yes
BROADCAST=192.168.1.255         //optional setting, unnecessary for dhcp
NETWORK=192.168.1.0         //optional setting, unnecessary for dhcp


    * TYPE=Ethernet         //RHEL4/FC3 addition
    * HWADDR=XX:XX:XX:XX:XX:XX      //RHEL4/FC3 addition
    * GATEWAY=XXX.XXX.XXX.XXX       //RHEL4/FC3 addition


/sbin/netconfig         //redhat console tool for configuring network

/etc/rc.d/rc.local  //redhat place for custom boot up scripts - network config can be done here as well

/etc/sysconfig/network
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;//change the hostname config file - hostname at boot
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MULTIPLE IP ADDRESSES ON A SINGLE NIC (VIRTUAL SUBINTERFACE or ALIAS)

NOTE: it's not necessarily a good idea to have two network interfaces in the same network space

IP Alias is standard in kernels 2.0.x and 2.2.x
(if required to load into the kernel.../sbin/insmod /lib/modules/`uname -r`/ipv4/ip_alias.o)

ifconfig wlan0 192.168.1.11 netmask 255.255.255.0 up
ifconfig wlan0:0 192.168.1.111 netmask 255.255.255.0 up
ifconfig wlan0:1 192.168.1.211

/etc/sysconfig/network-scripts/ifcfg-wlan0:0    //file on fedora to manage virtual subint on boot
DEVICE=wlan0:0
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.1.99
NETMASK=255.255.255.0

//using the above file can allow the easy enable/disable of device via
ifup wlan0:0
ifdown wlan0:0

//Note that if the parent device is disabled (ifdown wlan0) all "aliases" or subint's are disabled
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="routing-and-default-gateway"&gt;ROUTING and DEFAULT GATEWAY&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;netstat -rn
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;shows the current routing table (numeric only so not trying to resolve each ip address to a hostname)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/sbin/route add default gw 192.168.1.1 wlan0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;all unknown traffic will go through wlan0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;route add -net 10.0.0.0 netmask 255.255.255.0 gw 10.0.0.1 wlan0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;traffic for 10.0.0.0 network will be sent to ip address 10.0.0.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;route add -net 127.0.0.0
route add -net 192.168.1.0 dev eth0
route add -host 192.168.1.11 dev eth0
route add -host 192.168.1.111 dev eth0:0
route add -host 192.168.1.211 dev eth0:1
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="removing-a-route"&gt;Removing a route&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/sbin/route del -net 192.168.2.0 netmask 255.255.255.0
route del -net 10.0.0.0 netmask 255.255.255.0 gw 10.0.0.254
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;remove a route&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;for some reason other variations don't work&lt;/p&gt;
&lt;p&gt;THEN
    /sbin/route del -net default gw 192.168.2.1&lt;/p&gt;
&lt;p&gt;THEN 
    route add default gw 192.168.1.3&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;route -n
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="example-complicated-static-route-system"&gt;EXAMPLE COMPLICATED STATIC ROUTE SYSTEM&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; auto eth0 
 iface inet static
 address 10.10.64.190
 netmask 255.255.254.0

 gateway 10.10.64.1

 auto eth1
 iface inet static
 address 10.10.66.190
 netmask 255.255.254.0

 up route add -net 0.0.0.0 netmask 0.0.0.0 gw 10.10.64.1 eth0
 up route add -net 10.0.0.0 netmask 255.0.0.0 gw 10.10.66.1 eth1
 up route add -net 172.16.0.0 netmask 255.240.0.0 gw 10.10.66.1 eth1
 up route add -net 192.168.0.0 netmask 255.255.0.0 gw 10.10.66.1 eth1
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="pppoe-configuration"&gt;PPPoE CONFIGURATION&lt;/h2&gt;
&lt;p&gt;The PPPOE configuration will create a software-based virtual interface named ppp0 that will use the physical Internet interface eth0    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rp-pppoe-3.5-8.i386.rpm
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 06 Aug 2009 19:22:07 -0700</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2009-08-06:network-ifconfig-ifcfg-static-and-dhcp-eth0-route-wifi-wpa/</guid><category>linux</category><category>network</category><category>ifconfig</category><category>ifcfg</category><category>eth0</category><category>route</category><category>wifi</category><category>wpa</category><category>dhcp</category></item><item><title>firewall iptables ufw ssh https nat forwarding redirect</title><link>https://blog.john-pfeiffer.com/firewall-iptables-ufw-ssh-https-nat-forwarding-redirect/</link><description>
&lt;p&gt;iptables is the tool to create a firewall in linux (manipulate the tables provided by the kernel firewall aka the netfilter)
&lt;a href="https://en.wikipedia.org/wiki/Netfilter"&gt;https://en.wikipedia.org/wiki/Netfilter&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;which iptables
sudo /sbin/iptables --version
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="most-common-commands"&gt;Most common commands&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -nvL
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;output the rules in the default "FILTER" table (INPUT, OUTPUT) in numeric , verbose, List all rules&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://ipset.netfilter.org/iptables.man.html"&gt;http://ipset.netfilter.org/iptables.man.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -nvL --line-numbers
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;numeric so no hostname lookups, verbose, List the rules in the chain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="interactive-commands"&gt;Interactive commands&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -D INPUT 5
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;delete the 5th line&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;don't forget chmod +x firewall-script-filename.sh and /sbin/service iptables save&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="iptables-allow-ping-with-a-ratelimit"&gt;iptables allow ping with a ratelimit&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -p icmp -m limit --limit 10/second -j ACCEPT
iptables -A OUPUT -p icmp -j ACCEPT
&amp;gt; allow 10 inbound icmp packets (not tcp nor udp) per second and allow all icmp traffic outbound

iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
&amp;gt; echo-request = 8 in numeric

iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT
&amp;gt; Allow outgoing ping replies, echo reply = 0 in numeric
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="clean-out-the-old-iptables-very-insecure-settings"&gt;Clean out the old iptables - very insecure settings&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -F
iptables --delete-chain
iptables -t nat -F
iptables -t mangle -F

iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Flush out all of the iptables and delete all of the chains (including the nat and mangle tables)
Set the default policies to accept all packets&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="allow-ssh-ping-and-established-but-block-all-by-default"&gt;Allow SSH, ping, and Established but block all by default&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
iptables -I INPUT &lt;span class="m"&gt;1&lt;/span&gt; -i lo -j ACCEPT
iptables -I OUTPUT &lt;span class="m"&gt;1&lt;/span&gt; -o lo -j ACCEPT
&amp;gt; Always allow the loopback device

iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p tcp --sport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT
&amp;gt; allow SSH server to accept connections

iptables -A INPUT -i eth1 -p tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -o eth1 -p tcp --sport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT
&amp;gt; ssh server on eth1 on port &lt;span class="m"&gt;22&lt;/span&gt;

iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP
&amp;gt; default to block all traffic

iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
&amp;gt; Accept packets belonging to established and related connections

iptables -A INPUT -i eth1 -p icmp --icmp-type echo-request -j ACCEPT
&amp;gt; Allow incoming ping requests from eth1 , echo-request &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; in numeric

iptables -A OUTPUT -o eth1 -p icmp --icmp-type echo-reply -j ACCEPT
&amp;gt; Allow outgoing ping replies to eth1 , &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; in numeric
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /proc/sys/net/ipv4/ip_forward
echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;enable packet forwarding by the kernel, required to enable routing (especially with dual nics)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="bash-script-to-set-iptables-during-initd"&gt;bash script to set iptables during init.d&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# script to set the initial firewall state as very restrictive&lt;/span&gt;
&lt;span class="c1"&gt;# chmod +x SCRIPTNAME.sh&lt;/span&gt;
&lt;span class="c1"&gt;# cd /etc/init.d&lt;/span&gt;
&lt;span class="c1"&gt;# sudo update-rc.d SCRIPTNAME.sh defaults&lt;/span&gt;
&lt;span class="c1"&gt;# sudo update-rc.d -f SCRIPTNAME.sh remove&lt;/span&gt;
&lt;span class="c1"&gt;# or add it to /etc/rc.d/rc.local (which runs once after all other scripts)&lt;/span&gt;

&lt;span class="c1"&gt;# clear any existing firewall&lt;/span&gt;
iptables -F
iptables -X
iptables -F -t mangle
iptables -F -t nat
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

&lt;span class="c1"&gt;# Protect against SYN flood attacks (see http://cr.yp.to/syncookies.html).&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &amp;gt; /proc/sys/net/ipv4/tcp_syncookies

&lt;span class="c1"&gt;# Allow loopback&lt;/span&gt;
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

&lt;span class="c1"&gt;# Allow DNS queries&lt;/span&gt;
iptables -A OUTPUT -p udp --dport &lt;span class="m"&gt;53&lt;/span&gt; -m state --state NEW -j ACCEPT
iptables -A INPUT -p udp --sport &lt;span class="m"&gt;53&lt;/span&gt; --dport &lt;span class="m"&gt;1024&lt;/span&gt;:65535  -m state --state ESTABLISHED -j ACCEPT

&lt;span class="c1"&gt;# Allow NTP (query time server)&lt;/span&gt;
iptables -A INPUT -p udp --dport &lt;span class="m"&gt;123&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p udp --sport &lt;span class="m"&gt;123&lt;/span&gt; -j ACCEPT

&lt;span class="c1"&gt;# Allow SSH on port 22&lt;/span&gt;
iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp --sport &lt;span class="m"&gt;22&lt;/span&gt; -m state --state NEW,ESTABLISHED -j ACCEPT

&lt;span class="c1"&gt;# Allow incoming HTTPS&lt;/span&gt;
iptables -A INPUT -p tcp -s &lt;span class="m"&gt;0&lt;/span&gt;/0 --sport &lt;span class="m"&gt;1024&lt;/span&gt;:65535 --dport &lt;span class="m"&gt;443&lt;/span&gt; -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -s &lt;span class="m"&gt;0&lt;/span&gt;/0 --sport &lt;span class="m"&gt;443&lt;/span&gt; --dport &lt;span class="m"&gt;1024&lt;/span&gt;:65535 -m state --state ESTABLISHED -j ACCEPT

&lt;span class="c1"&gt;# Allow outgoing HTTPS (note state for INPUT is only ESTABLISHED)&lt;/span&gt;
iptables -A OUTPUT -p tcp --dport &lt;span class="m"&gt;443&lt;/span&gt; -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT -p tcp -s &lt;span class="m"&gt;0&lt;/span&gt;/0 --sport &lt;span class="m"&gt;443&lt;/span&gt; --dport &lt;span class="m"&gt;1024&lt;/span&gt;:65535 -m state --state ESTABLISHED -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="web-server"&gt;Web Server&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
iptables -F
iptables --delete-chain
iptables -t nat -F
iptables -t mangle -F

iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT

&lt;span class="c1"&gt;# LOOPBACK 127.0.0.1&lt;/span&gt;
iptables -I INPUT &lt;span class="m"&gt;1&lt;/span&gt; -i lo -j ACCEPT
iptables -I OUTPUT &lt;span class="m"&gt;1&lt;/span&gt; -o lo -j ACCEPT

&lt;span class="c1"&gt;# SSH&lt;/span&gt;
iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p tcp --sport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT

&lt;span class="c1"&gt;# NTP&lt;/span&gt;
iptables -A INPUT -p udp --dport &lt;span class="m"&gt;123&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p udp --sport &lt;span class="m"&gt;123&lt;/span&gt; -j ACCEPT

&lt;span class="c1"&gt;# DNS&lt;/span&gt;
iptables -A OUTPUT -p udp --dport &lt;span class="m"&gt;53&lt;/span&gt; -m state --state NEW -j ACCEPT
iptables -A INPUT -p udp --sport &lt;span class="m"&gt;53&lt;/span&gt; --dport &lt;span class="m"&gt;1024&lt;/span&gt;:65535  -m state --state ESTABLISHED -j ACCEPT

&lt;span class="c1"&gt;# HTTP&lt;/span&gt;
iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p tcp --sport &lt;span class="m"&gt;80&lt;/span&gt; -j ACCEPT


&lt;span class="c1"&gt;# DROP ALL UNDEFINED PACKETS&lt;/span&gt;
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

&lt;span class="c1"&gt;# PING&lt;/span&gt;
&lt;span class="c1"&gt;# iptables -A INPUT -p icmp -m limit --limit 6/second -j ACCEPT&lt;/span&gt;
&lt;span class="c1"&gt;# iptables -A OUPUT -p icmp -j ACCEPT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="web-and-xmpp-server"&gt;Web and XMPP Server&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vi /etc/iptables.rules.xmpp&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*filter
:INPUT DROP &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;:572&lt;span class="o"&gt;]&lt;/span&gt;
:FORWARD DROP &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:0&lt;span class="o"&gt;]&lt;/span&gt;
:OUTPUT ACCEPT &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;:1744&lt;span class="o"&gt;]&lt;/span&gt;
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j DROP
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -m state --state NEW -j ACCEPT
-A INPUT -p tcp -m tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -m state --state NEW -j ACCEPT
-A INPUT -p udp -m udp --dport &lt;span class="m"&gt;161&lt;/span&gt; -m state --state NEW -j ACCEPT
-A INPUT -p tcp -m tcp --dport &lt;span class="m"&gt;443&lt;/span&gt; -m state --state NEW -j ACCEPT
-A INPUT -p tcp -m tcp --dport &lt;span class="m"&gt;5222&lt;/span&gt; -m state --state NEW -j ACCEPT
-A INPUT -p tcp -m tcp --dport &lt;span class="m"&gt;5223&lt;/span&gt; -m state --state NEW -j ACCEPT
-A INPUT -p udp -m udp --dport &lt;span class="m"&gt;137&lt;/span&gt; -j ACCEPT
-A INPUT -p udp -m udp --dport &lt;span class="m"&gt;138&lt;/span&gt; -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type &lt;span class="m"&gt;8&lt;/span&gt; -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type &lt;span class="m"&gt;11&lt;/span&gt; -j ACCEPT
-A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -o lo -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -m state --state NEW -j ACCEPT
-A OUTPUT -p udp -m udp --dport &lt;span class="m"&gt;53&lt;/span&gt; -m state --state NEW -j ACCEPT
-A OUTPUT -p udp -m udp --sport &lt;span class="m"&gt;161&lt;/span&gt; -m state --state NEW -j ACCEPT
-A OUTPUT -m state --state NEW -j LOG
COMMIT
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;iptables-restore &amp;lt; /etc/iptables.rules.xmpp&lt;/code&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="ntp"&gt;NTP&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Getting the time and date synchronized through a restricted firewall&lt;/em&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# ntpdate port 123&lt;/span&gt;
iptables -A INPUT -p udp --dport &lt;span class="m"&gt;123&lt;/span&gt; -j ACCEPT
iptables -A OUTPUT -p udp --sport &lt;span class="m"&gt;123&lt;/span&gt; -j ACCEPT

&lt;span class="c1"&gt;# variation where rules are inserted as first items in the Tables&lt;/span&gt;
&lt;span class="c1"&gt;# iptables -I INPUT 1 -p udp --dport 123 -j ACCEPT&lt;/span&gt;
&lt;span class="c1"&gt;# iptables -I OUTPUT 1 -p udp --sport 123 -j ACCEPT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Installing NTP...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ntp
nano /etc/ntp.conf
server ntp.ubuntu.com
server pool.ntp.org

/etc/init.d/ntp restart
ls -ahl /etc/cron.daily   &amp;gt; verify that ntp is +x executable
ntpq -p                   &amp;gt; verify the service is working

&amp;gt; MANUAL = ntpdate pool.ntp.org will now return socket 123 is in use
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="nat-forwarding"&gt;NAT forwarding&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT
iptables -A FORWARD -i eth0 -o eth1 -j ACCEPT
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;assuming that eth0 is your WAN and eth1 is your LAN&lt;/p&gt;
&lt;p&gt;accept all forwarding from eth1 to eth0 and back&lt;/p&gt;
&lt;p&gt;enable "nat" so that packets are addressed properly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="cifs"&gt;CIFS&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -p tcp -s 10.10.10.250 --sport 445 -d 0/0 -j ACCEPT
iptables -A OUTPUT -p tcp -s 0/0 --sport 1024:65535 -d 10.10.10.250 --dport 445 -m state --state NEW,ESTABLISHED -j ACCEPT
&amp;gt; CIFS has been simplified to just use 445 TCP first...

netbios-ns - 137/tcp # NETBIOS Name Service
netbios-dgm - 138/tcp # NETBIOS Datagram Service
netbios-ssn - 139/tcp # NETBIOS session service
microsoft-ds - 445/tcp # if you are using Active Directory
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="allow-ad-lookups-ldapldaps"&gt;Allow AD Lookups LDAP/LDAPS&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 --dport 389 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -s 0/0 --sport 389 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT

iptables -A OUTPUT -p tcp --dport 389 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT -p tcp -s 0/0 --sport 389 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT

iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 --dport 636 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -s 0/0 --sport 636 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT

iptables -A OUTPUT -p tcp --dport 636 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT -p tcp -s 0/0 --sport 636 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="dmz-setup-with-dual-nic"&gt;DMZ Setup with dual nic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ATMOS = 10.10.254.195&lt;/li&gt;
&lt;li&gt;LAN (router?) =  10.10.254.1&lt;/li&gt;
&lt;li&gt;eth0 = LAN  10.10.254.254&lt;/li&gt;
&lt;li&gt;eth1 = WAN 172.16.255.254&lt;/li&gt;
&lt;li&gt;eth2 = DMZ  192.168.50.1&lt;/li&gt;
&lt;li&gt;Router 172.16.255.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="forward-traffic-between-dmz-and-lan"&gt;forward traffic between DMZ and LAN&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -A FORWARD -i eth0 -o eth2 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -i eth2 -o eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;forward traffic between DMZ and WAN servers SMTP, Mail etc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iptables -A FORWARD -i eth2 -o eth1 -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -i eth1 -o eth2 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Route incoming SMTP (port 25 ) traffic to DMZ server 192.168.2.2
    iptables -t nat -A PREROUTING -p tcp -i eth1 -d 202.54.1.1 --dport 25 -j DNAT --to-destination 192.168.2.2&lt;/p&gt;
&lt;p&gt;Route incoming HTTP (port 80 ) traffic to DMZ server load balancer IP 192.168.2.3
    iptables -t nat -A PREROUTING -p tcp -i eth1 -d 202.54.1.1 --dport 80 -j DNAT --to-destination 192.168.2.3&lt;/p&gt;
&lt;p&gt;Route incoming HTTPS (port 443 ) traffic to DMZ server reverse load balancer IP 192.168.2.4
    iptables -t nat -A PREROUTING -p tcp -i eth1 -d 202.54.1.1 --dport 443 -j DNAT --to-destination 192.168.2.4&lt;/p&gt;
&lt;p&gt;End DMZ .. Add other rules&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="uncomplicated-firewall-ufw"&gt;Uncomplicated Firewall UFW&lt;/h2&gt;
&lt;p&gt;The uncomplicated firewall is a much simpler way to configure some basic rules and enable the firewall&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo su
ufw status verbose
ufw allow 22
ufw allow 443
ufw default deny incoming
ufw default deny outgoing
ufw enable
ufw status verbose
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Allowing 22 (SSH) and 443 (HTTPS) and denying all other incoming and outgoing traffic&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ufw delete allow 443
ufw show raw
ufw disable
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;removing a rule is as simple as prefixing the allow or deny command with delete
disabling the firewall allows all traffic&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most unfortunately there are some basic gaps that make it not very production ready (i.e. if you know what you are doing just keep using iptables)
1. ping, also known as icmp, packets (even just outbound) have to be handled in a very complex way, really not much better than iptables
1. established connection traffic is not just easily allowed
1. attempting to do something more complex very quickly requires very complex commands including just using iptables (lolwut)
1. iptables -nvL becomes almost unreadable with the extra layer&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.ubuntu.com/UncomplicatedFirewall"&gt;https://wiki.ubuntu.com/UncomplicatedFirewall&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">john pfeiffer</dc:creator><pubDate>Thu, 01 Jan 2009 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.john-pfeiffer.com,2009-01-01:firewall-iptables-ufw-ssh-https-nat-forwarding-redirect/</guid><category>linux</category><category>iptables</category><category>firewall</category><category>NAT</category><category>ufw</category></item></channel></rss>