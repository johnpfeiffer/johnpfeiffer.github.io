<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>johnpfeiffer</title><link href="http://blog.john-pfeiffer.com/" rel="alternate"></link><link href="http://blog.john-pfeiffer.com/feeds/john-pfeiffer.atom.xml" rel="self"></link><id>http://blog.john-pfeiffer.com/</id><updated>2015-05-21T20:00:00-07:00</updated><entry><title>HAProxy in Docker</title><link href="http://blog.john-pfeiffer.com/haproxy-in-docker" rel="alternate"></link><updated>2015-05-21T20:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2015-05-21:haproxy-in-docker</id><summary type="html">
&lt;p&gt;Not only are Containers fast, one of the biggest advantages of Containers is the ability to reduce complexity.&lt;/p&gt;
&lt;p&gt;Docker can turn an application/service, it's dependencies, and even the OS level requirements into a single blackbox package (that you can still inspect inside if you really want to).&lt;/p&gt;
&lt;p&gt;Here's a trivial example of how I can leverage the haproxy Docker image/container to load balance two web servers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are new problems that go along with the benefits of any new technology, see&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;sudo docker pull haproxy:1.5&lt;/p&gt;
&lt;h4 id="some-backend-web-servers"&gt;Some backend web servers&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir -p /tmp/BackendA
echo "foo" &amp;gt; /tmp/BackendA/foo.txt
cd /tmp/BackendA
python -m SimpleHTTPServer 8000 &amp;amp;

mkdir -p /tmp/BackendB
echo "bar" &amp;gt; /tmp/BackendB/bar.txt
cd /tmp/BackendB
python -m SimpleHTTPServer 8001 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Clearly a trivial example (more likely two remote hosts in logical/geographic disparate areas if aiming for High Availability, or at least on different hosts to scale with more resources)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="vim-optmydatahaproxycfg"&gt;vim /opt/mydata/haproxy.cfg&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;global
        debug

defaults
        log global
        mode    http
        timeout connect 5000
        timeout client 5000
        timeout server 5000

listen http_proxy :8443
        mode tcp
        balance roundrobin
        server srv1 docker:8000 check
        server srv2 docker:8001 check
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="start-haproxysh"&gt;start haproxy.sh&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;HOSTIP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;ip addr show &lt;span class="p"&gt;|&lt;/span&gt; grep docker0 &lt;span class="p"&gt;|&lt;/span&gt; grep global &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;'{print $2}'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d / -f1&lt;span class="sb"&gt;`&lt;/span&gt;

sudo docker run -p 8443:8443 --add-host&lt;span class="o"&gt;=&lt;/span&gt;docker:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOSTIP&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; --rm -it -v /opt/mydata/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro --name myhaproxy haproxy:1.5
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that the docker container's /etc/hosts file has the Host IP Address injected (with the name "docker") the haproxy config file probably makes more sense&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;./start-haproxy.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl localhost:8443&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Directory listing for /&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Directory listing for /&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"bar.txt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;bar.txt&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;curl localhost:8443&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Directory listing for /&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Directory listing for /&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"foo.txt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;foo.txt&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://registry.hub.docker.com/_/haproxy/"&gt;https://registry.hub.docker.com/_/haproxy/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cbonte.github.io/haproxy-dconv/configuration-1.5.html"&gt;https://cbonte.github.io/haproxy-dconv/configuration-1.5.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.docker.com/reference/commandline/cli/#adding-entries-to-a-container-hosts-file"&gt;http://docs.docker.com/reference/commandline/cli/#adding-entries-to-a-container-hosts-file&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;</summary><category term="docker"></category><category term="haproxy"></category></entry><entry><title>Subunit and Subunit2JunitXML to get JUnitXML test result output from UnitTest</title><link href="http://blog.john-pfeiffer.com/subunit-and-subunit2junitxml-to-get-junitxml-test-result-output-from-unittest" rel="alternate"></link><updated>2014-11-01T00:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-11-01:subunit-and-subunit2junitxml-to-get-junitxml-test-result-output-from-unittest</id><summary type="html">
&lt;p&gt;Test results from differing systems or multiple test runs need a common format.&lt;/p&gt;
&lt;p&gt;JUnit XML is almost a de facto standard for test results given almost all major Continuous Integration products support it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/display/BAMBOO/JUnit+parsing+in+Bamboo"&gt;https://confluence.atlassian.com/display/BAMBOO/JUnit+parsing+in+Bamboo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fossology.org/projects/fossology/wiki/Junit_xml_format"&gt;http://www.fossology.org/projects/fossology/wiki/Junit_xml_format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pytest.org/latest/usage.html"&gt;http://pytest.org/latest/usage.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="setup"&gt;Setup&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pip install python-subunit junitxml&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;assuming virtuelnv and myenv/bin/activate , junitxml is a hidden dependency :(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Do not use &lt;code&gt;apt-get install subunit&lt;/code&gt; as even with 14.04 Ubuntu it has an older version does not contain timings and subunit2junitxml creates "skip" instead of "skipped"&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="example-unittest-class"&gt;Example UnitTest Class&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;john&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nd"&gt;@unittest.skipIf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'always skip'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_skip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="example-usage"&gt;Example Usage&lt;/h2&gt;
&lt;h3 id="one-liner"&gt;One Liner&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;python -m subunit.run foo | subunit2junitxml --no-passthrough --output-to test-results&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;forward = non-subunit output will be encapsulated in subunit &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="intermediate-subunit-results-file"&gt;Intermediate Subunit Results File&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;python -m subunit.run test_some_filename_with_py_truncated &amp;gt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do not use python -m subunit.run test_some_filename_with_py_truncated to stdout as it expects to have binary delimiters which screw up the console command line&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;subunit-ls &amp;lt; test-results.subunit
subunit-stats &amp;lt; test-results.subunit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;python -m subunit.run foo &amp;gt;&amp;gt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;append some more test results
&lt;code&gt;subunit-stats &amp;lt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;subunit2junitxml --no-passthrough --output-to test-results.xml &amp;lt; test-results.subunit&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no passthrough does not pass/convert any extraneous non subunit data/lines to the junit xml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;testsuite&lt;/span&gt; &lt;span class="na"&gt;errors=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;failures=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;tests=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.001"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;testcase&lt;/span&gt; &lt;span class="na"&gt;classname=&lt;/span&gt;&lt;span class="s"&gt;"john.john"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"test_fail"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;failure&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"testtools.testresult.real._StringException"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;_StringException: Traceback (most recent call last):
  File "john.py", line 9, in test_fail
    self.assertTrue(False)
  File "/usr/lib/python2.7/unittest/case.py", line 424, in assertTrue
    raise self.failureException(msg)
AssertionError: False is not true

        &lt;span class="nt"&gt;&amp;lt;/failure&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/testcase&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;testcase&lt;/span&gt; &lt;span class="na"&gt;classname=&lt;/span&gt;&lt;span class="s"&gt;"john.john"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"test_skip"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;skipped&amp;gt;&lt;/span&gt;always skip&lt;span class="nt"&gt;&amp;lt;/skipped&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/testcase&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;testcase&lt;/span&gt; &lt;span class="na"&gt;classname=&lt;/span&gt;&lt;span class="s"&gt;"john.john"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"test_success"&lt;/span&gt; &lt;span class="na"&gt;time=&lt;/span&gt;&lt;span class="s"&gt;"0.000"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/testsuite&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="twisted-unittesting"&gt;Twisted UnitTesting&lt;/h3&gt;
&lt;p&gt;`trial --reporter=subunit foo | subunit2junitxml --forward --output-to=junitxml-result.xml&lt;/p&gt;
&lt;h2 id="troubleshooting"&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ImportError: No module named 'junitxml'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;You may not have installed the junitxml module which subunit apparently sometimes depends on: &lt;code&gt;pip install junitxml&lt;/code&gt; &lt;em&gt;use sudo only if not using virtualenv&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AttributeError: 'AutoTimingTestResultDecorator' object has no attribute 'errors'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;This occured becaused TestSomeClass(unittest.TestCase) definition had an errors property/attribute which resulted in a namespace collision =(&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empty results like this: &amp;lt;testsuite errors="0" failures="0" name="" tests="0" time="0.003"&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;if you view/cat your results.subunit you will notice:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;test: directory.path.foobar.FooBar.test_constructor&lt;/p&gt;
&lt;p&gt;successful: directory.path.foobar.FooBar.test_constructor&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;That is old subunit output (i.e. an old version of Twisted: trial --reporter=subunit), the new version 2 uses non printable characters instead of newlines (which sometimes ruins output to console)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resolution for old subunit version converted to new subunit version&lt;/strong&gt;:&lt;blockquote&gt;
&lt;p&gt;trial --reporter=subunit foo | subunit-1to2 &amp;gt;&amp;gt; /tmp/results.subunit ; subunit2junitxml --no-passthrough --output-to test-results.xml &amp;lt; /tmp/test-results.subunit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="more-info"&gt;More Info&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tech-foo.net/making-the-most-of-subunit.html"&gt;http://www.tech-foo.net/making-the-most-of-subunit.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/python-subunit"&gt;https://pypi.python.org/pypi/python-subunit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/junitxml"&gt;https://pypi.python.org/pypi/junitxml&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://launchpad.net/subunit"&gt;https://launchpad.net/subunit&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="python"></category><category term="subunit"></category><category term="subunit2junitxml"></category><category term="unittest"></category><category term="testing"></category></entry><entry><title>Virtualenv Python Interpreter from source</title><link href="http://blog.john-pfeiffer.com/virtualenv-python-interpreter-from-source" rel="alternate"></link><updated>2014-10-31T00:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-10-31:virtualenv-python-interpreter-from-source</id><summary type="html">
&lt;p&gt;When building an application (including an external facing webapp or an internal test suite) it is critical to manage your dependencies.&lt;/p&gt;
&lt;p&gt;Virtualenv is a tool that keeps all the dependencies in a file system based container (and overcomes permissions based issues as well).&lt;/p&gt;
&lt;p&gt;To really isolate your application from the environment not only do you need a specific version of libraries (i.e. you know your application works fine with requests 2.4.3 and selenium 2.44) but additionally a specific version of the Python Interpreter.&lt;/p&gt;
&lt;h2 id="build-python-from-source"&gt;Build python from source&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz
tar -xf Python-2.7.8.tar.gz
cd Python-2.7.8
./configure --prefix=/home/ubuntu/python --enable-unicode=ucs4
make &amp;amp;&amp;amp; make altinstall

/home/ubuntu/python/bin/python2.7 --version
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;altinstall ensures we do not try to override the existing /usr/bin/python binary which can be important if you want python 2.7.3 and python 2.7.8 to exist side by side&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Optionally: &lt;code&gt;echo 'alias py="/home/ubuntu/python/bin/python2.7"' &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="python3-from-source"&gt;python3 from source&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://www.python.org/ftp/python/3.4.2/Python-3.4.2.tgz
tar -xf Python-3.4.2.tar.gz
cd Python-3.4.2
./configure --prefix=/opt/python3.4.2 &amp;amp;&amp;amp; make -j$(nproc) &amp;amp;&amp;amp; make altinstall
ls -ahl /usr/local/bin | grep 3.4

/usr/local/bin/pip3.4 install --upgrade virtualenv
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="if-you-mess-up-your-os-level-python"&gt;If you mess up your OS level python&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;apt-get install python3&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python3 depends on dh-python; however:
Package dh-python is not configured yet.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Look at the stack trace, reinstalling may not have put all of the helper directory and .py files in place&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;File "/usr/lib/python3.4/site.py", line 586, in &amp;lt;module&amp;gt;
ImportError: No module named '_sysconfigdata_m'

mv /usr/lib/python3.4 /usr/lib/python3.4-OLD
wget http://mirrors.kernel.org/ubuntu/pool/main/d/dh-python/dh-python_1.20140128-1ubuntu8_all.deb
dpkg -i --force-depends dh-python_1.20140128-1ubuntu8_all.deb
apt-get install python3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in my case I needed to reinstall loads of python3 stuff: &lt;code&gt;apt-get install xubuntu-destkop&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="installing-virtualenv"&gt;Installing virtualenv&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sudo pip install --upgrade virtualenv&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;getting the latest version of virtualenv as any OS packages are likely to be outdated
alternatively you can go all out and just use virtualenv locally from source&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="virtualenv-from-source"&gt;virtualenv from source&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://pypi.python.org/packages/source/v/virtualenv/virtualenv-X.X.tar.gz
tar -xf virtualenv-X.X.tar.gz
cd virtualenv-X.X
/home/ubuntu/python/bin/python2.7 virtualenv.py myvenv
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;does not require sudo and works around path or permissions requirements&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="example-usage"&gt;Example Usage&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;virtualenv myvenv&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;creates a local copy of required files like the python interpreter and its own version of pip&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;myvenv
| -- bin
     | -- activate
     | -- easy_install
     | -- pip
     | -- python
| -- include
| -- lib
     | -- python2.7
         | -- site-packages
              | -- pip
              | -- setuptools
| -- local
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;myenv/bin/pip install --upgrade requests&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no sudo was required to add locally myvenv/lib/python2.7/site-packages/requests&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;myenv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="using-virtualenv-with-a-specific-python-binary"&gt;Using virtualenv with a specific python binary&lt;/h3&gt;
&lt;p&gt;To ensure your application does not suffer when the OS has a python upgrade (or your libraries need a newer version of python than provided), you can use the python binary you created from source in your virtualenv.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virtualenv --python=/home/ubuntu/python/bin/python2.7 myenv
myenv/bin/python
&amp;gt; Python 2.7.8
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="activate-and-deactivate-to-update-your-environment-temporarily"&gt;activate and deactivate to update your environment temporarily&lt;/h3&gt;
&lt;p&gt;Rather than using the explicit paths (which is the most clear but cumbersome) you can override your shell Environment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/bin/python --version&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.7.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;source myenv/bin/activate&lt;/code&gt;
&lt;code&gt;python --version&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.7.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;pip install requests&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no sudo was required to add locally myvenv/lib/python2.7/site-packages/requests&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;deactivate&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="more-info"&gt;More Info&lt;/h2&gt;
&lt;p&gt;When using git make sure .gitignore contains the "myenv" directory as you do not want to store these binaries in version control.&lt;/p&gt;
&lt;p&gt;Typically Heroku or other PaaS allow you to specify a python interpreter version and library requirements in a configuration file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://virtualenv.readthedocs.org/en/latest/virtualenv.html"&gt;http://virtualenv.readthedocs.org/en/latest/virtualenv.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads"&gt;https://www.python.org/downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/common-python-tools-using-virtualenv-installing-with-pip-and-managing-packages"&gt;https://www.digitalocean.com/community/tutorials/common-python-tools-using-virtualenv-installing-with-pip-and-managing-packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="python"></category><category term="python3"></category><category term="pip"></category><category term="virtualenv"></category><category term="dependency management"></category></entry><entry><title>Xubuntu hotkey shortcuts and Zoom (also for xfce)</title><link href="http://blog.john-pfeiffer.com/xubuntu-hotkey-shortcuts-and-zoom-also-for-xfce" rel="alternate"></link><updated>2014-10-08T16:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-10-08:xubuntu-hotkey-shortcuts-and-zoom-also-for-xfce</id><summary type="html">
&lt;p&gt;Interacting with the computer is so much faster with keyboard hotkey shortcuts and other tricks, these are applicable as of Xubuntu 14.04&lt;/p&gt;
&lt;h3 id="xubuntu-zoom-magnifier"&gt;Xubuntu Zoom (magnifier)&lt;/h3&gt;
&lt;p&gt;Alt + scrollwheel up to Zoom in &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;or on a laptop with a touchpad two finger swipe up&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alt + scrollwheel down to Zoom out&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;or on a laptop with a touchpad two finger swipe down&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="hotkey-application-shortcuts"&gt;Hotkey Application Shortcuts&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Mouse (start button) -&amp;gt; Settings -&amp;gt; Settings Manager -&amp;gt; Keyboard -&amp;gt; Application Shortcuts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Add -&amp;gt; sh -c "sleep 1 &amp;amp;&amp;amp; xset dpms force off" -&amp;gt; OK (will open another popup)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;press control + alt + q on the keyboard (the popup will go away and the hotkeys will be saved)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Double click on the command in the Command column to edit the command&lt;/p&gt;
&lt;p&gt;Double click on the hotkeys in the Shortcut column to modify the hotkey combination&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sleep 1 &amp;amp;&amp;amp; xset dpms force off        control + alt + q&lt;/li&gt;
&lt;li&gt;exo-open --launch TerminalEmulator    control + alt + t&lt;/li&gt;
&lt;li&gt;gnome-calculator          control + alt + g           &lt;/li&gt;
&lt;li&gt;/usr/bin/galculator           control + alt + g&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/usr/bin/leafpad --tab-width=4        control + alt + f  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;vi /usr/share/applications/leafpad.desktop  Exec=leafpad --tab-width=4 %f&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/usr/bin/chromium-browser     control + alt + a&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/usr/bin/filezilla            control + alt + i&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;/opt/pycharm/bin/pycharm.sh       control + alt + p&lt;/li&gt;
&lt;li&gt;xfce4-screenshooter -r            printscreen&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;select region (-f fullscreen , -w active window)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;amixer set Master 5%- -q          Alt + Down&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;amixer set Master 5%+ -q          Alt + Up&lt;/li&gt;
&lt;li&gt;xflock4               control + alt + delete&lt;/li&gt;
&lt;li&gt;retext                    control + alt + r&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;/home/ubuntu/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/xdg/menus/xfce-applications.menu&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="xfce-keyboard-shortcuts"&gt;XFCE Keyboard Shortcuts&lt;/h3&gt;
&lt;p&gt;Settings Editor -&amp;gt; xfce4-keyboard-shortcuts&lt;/p&gt;
&lt;p&gt;commands -&amp;gt; custom... New&lt;/p&gt;
&lt;p&gt;/commands/custom/&lt;control&gt;&lt;alt&gt;f
leafpad&lt;/alt&gt;&lt;/control&gt;&lt;/p&gt;
&lt;p&gt;/xfwm4/custom/&lt;control&gt;&lt;alt&gt;d&lt;/alt&gt;&lt;/control&gt;&lt;/p&gt;
&lt;p&gt;show_desktop_key&lt;/p&gt;
&lt;p&gt;/commands/custom/&lt;super&gt;e&lt;/super&gt;&lt;/p&gt;
&lt;p&gt;mousepad&lt;/p&gt;
&lt;p&gt;exo-open --launch FileManager&lt;/p&gt;
&lt;h3 id="ubuntu-keyboard-shortcuts"&gt;Ubuntu Keyboard Shortcuts&lt;/h3&gt;
&lt;p&gt;ubuntu 12.04 keyboard shortcuts&lt;/p&gt;
&lt;p&gt;System Settings -&amp;gt; Keyboard (may not be visible so type it in the search box) -&amp;gt; Shortcuts &lt;/p&gt;
&lt;p&gt;Either modify an existing shortcut (i.e. disable one that is annoying)&lt;/p&gt;
&lt;p&gt;OR Custom Shortcuts -&amp;gt; + (add a new one)&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;chromium&lt;/span&gt;
&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/usr/bin/&lt;/span&gt;&lt;span class="n"&gt;chromium&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then highlight the row (clicking on the right area where it's "disabled") and type the key combination desired to trigger the shortcut (e.g. control + alt + a)&lt;/p&gt;
&lt;p&gt;HINTS: &lt;code&gt;sudo find / -iname "*chromium*"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo which chromium-browser&lt;/code&gt;&lt;/p&gt;</summary></entry><entry><title>Mobile edit cloud execution of python code</title><link href="http://blog.john-pfeiffer.com/mobile-edit-cloud-execution-of-python-code" rel="alternate"></link><updated>2014-09-07T21:37:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-09-07:mobile-edit-cloud-execution-of-python-code</id><summary type="html">&lt;p&gt;Haven't you just wanted to work through a coding kata &lt;a href="http://codekata.com"&gt;http://codekata.com&lt;/a&gt; or puzzle on your phone?&lt;/p&gt;
&lt;p&gt;Python is a great language for getting stuff done, and while there are some mobile apps often they are limited by the platform (eg ios sans file system).&lt;/p&gt;
&lt;p&gt;Using the link from a Dropbox text file and a linode server (could be openshift red hat cloud?)...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start running the script on the remote server that waits for new code to execute &lt;code&gt;python myflaskapp.py &amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I can edit using Nocs &lt;/li&gt;
&lt;li&gt;Nocs syncs from iOS to Dropbox&lt;/li&gt;
&lt;li&gt;hitting a URL in my browser &lt;ul&gt;
&lt;li&gt;the python script downloads the latest version of the code (using shell to curl as Dropbox use javascript to authorize and return a link to the latest version) &lt;/li&gt;
&lt;li&gt;executes using the remote python environment &lt;/li&gt;
&lt;li&gt;returns the output&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note! This may be dangerous as hackers could exploit to run arbitrary code, use at your own risk.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;*Also, clearly, downloading from Dropbox using curl is a hack with no guarantee of future support =]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PIPE&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/mysecreturl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_and_run&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;exercises.py&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/var/www/mystuff&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;urlpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://www.dropbox.com/s/ancdefgrandom/exercises.py?dl=0&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;curl --silent --location --insecure --output exercises.py https://www.dropbox.com/s/ancdefgrandom/exercises.py?dl=0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      
      &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use_reloader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="flask-application-on-openshift"&gt;Flask Application on OpenShift&lt;/h3&gt;
&lt;p&gt;git clone https://github.com/openshift/flask-example.git&lt;/p&gt;
&lt;p&gt;Use the OpenShift WebUI to create an application&lt;/p&gt;
&lt;p&gt;On the right of your application the WebUI has a note on how to clone the default repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone ssh://12345random@appname-domain.rhcloud.com/~/git/appname.git/
cd appname
git remote add upstream -m master git://github.com/openshift/flask-example.git
git pull -s recursive -X theirs upstream master
git push
cd wsgi/
virtualenv venv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;vi myflaskapp.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PIPE&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;


&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;


&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/mysecreturl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_and_run&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/var/lib/openshift/12345appid/app-root/data/exercises.py&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;urlpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://www.dropbox.com/s/12345random/exercises.py?dl=0&amp;#39;&lt;/span&gt;
      &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;curl --silent --location --insecure --output &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;urlpath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="c"&gt;# output = Popen([&amp;quot;touch&amp;quot;,path], stdout=PIPE).communicate()[0]&lt;/span&gt;
  &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="more-info"&gt;More Info&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.openshift.com/blogs/beginners-guide-to-writing-flask-apps-on-openshift"&gt;https://www.openshift.com/blogs/beginners-guide-to-writing-flask-apps-on-openshift&lt;/a&gt;&lt;/p&gt;</summary><category term="python"></category><category term="flask"></category><category term="openshift"></category></entry><entry><title>Fix Fn screen brightness Ubuntu 14.04 intel graphics</title><link href="http://blog.john-pfeiffer.com/fix-fn-screen-brightness-ubuntu-1404-intel-graphics" rel="alternate"></link><updated>2014-08-26T22:36:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-08-26:fix-fn-screen-brightness-ubuntu-1404-intel-graphics</id><summary type="html">&lt;p&gt;I discovered post upgrade that Ubuntu 14.04 has a glaring bug with the Intel graphics card (which was working fine in 12.04), the Fn key no longer controlled the brightness.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo su&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls /sys/class/backlight&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if it lists intel_backlight then this solution of adding the following should work for you too...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi /usr/share/X11/xorg.conf.d/20-intel.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Section &amp;quot;Device&amp;quot;
    Identifier  &amp;quot;card0&amp;quot;
    Driver      &amp;quot;intel&amp;quot;
    Option      &amp;quot;Backlight&amp;quot;  &amp;quot;intel_backlight&amp;quot;
    BusID       &amp;quot;PCI:0:2:0&amp;quot;
EndSection
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Log out and log back in, function keys should now control the brightness again (no more glaring bug!)&lt;/p&gt;</summary></entry><entry><title>Ubuntu Bootable USB and Best Packages to Install</title><link href="http://blog.john-pfeiffer.com/ubuntu-bootable-usb-and-best-packages-to-install" rel="alternate"></link><updated>2014-08-20T00:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-08-20:ubuntu-bootable-usb-and-best-packages-to-install</id><summary type="html">
&lt;p&gt;If you have a modern computer (BIOS) that can boot from USB it is well worth it since having the latest Ubuntu ISO on DVD tends to pile up.&lt;/p&gt;
&lt;h2 id="write-an-iso-to-usb"&gt;Write an ISO to usb&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fdisk -l
umount /dev/sdc1

sudo dd if=/home/ubuntu/Desktop/ubuntu-14.04.1-server-amd64.iso of=/dev/sdc

1171456+0 records in
1171456+0 records out
599785472 bytes (600 MB) copied, 260.364 s, 2.3 MB/s
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="ubuntu-recovery-mode"&gt;Ubuntu Recovery mode&lt;/h2&gt;
&lt;p&gt;(which is access to a single root user command line)&lt;/p&gt;
&lt;p&gt;boot in recovery mode by using the arrow keys during boot (down to select Recovery)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;mount networking &lt;/li&gt;
&lt;li&gt;root shell&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mount -o rw,remount /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;mount --all # might be needed too&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now you can fix grub or /etc/passwd or free up some hard drive space&lt;/p&gt;
&lt;h2 id="best-ubuntu-packages"&gt;Best Ubuntu Packages&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;as of Utopic 14.10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get update
sudo apt-get install -y byobu build-essential elinks unzip unrar nano vim wget curl \
ntp rcconf dialog openvpn git-core

wget -qO- https://bootstrap.pypa.io/get-pip.py | sudo python

NOT SURE IN UTOPIC: sudo apt-get install openjdk-7-jre openjdk-7-jdk icedtea-7-plugin

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
echo "deb https://get.docker.io/ubuntu docker main" &amp;gt; /etc/apt/sources.list.d/docker.list

sudo apt-get install lxc-docker
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;byobu = console terminal multi screen (survives network disconnects) &lt;a href="http://byobu.co"&gt;http://byobu.co&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;build-essential = tools for compiling and building debian packages &lt;a href="http://packages.ubuntu.com/lucid/build-essential"&gt;http://packages.ubuntu.com/lucid/build-essential&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;elinks = cli browser (just in case your GUI dies and you need to research) &lt;a href="http://kmandla.wordpress.com/2011/01/13/a-comparison-of-text-based-browsers"&gt;http://kmandla.wordpress.com/2011/01/13/a-comparison-of-text-based-browsers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unzip and unrar = utilities to decompress compressed things&lt;/li&gt;
&lt;li&gt;nano = a simple text editor (much easier than vi/vim for just writing new text)&lt;/li&gt;
&lt;li&gt;wget and curl = utilities to download files&lt;/li&gt;
&lt;li&gt;ntp = network time protocol client daemon to keep your clock in sync&lt;/li&gt;
&lt;li&gt;openvpn = opensource vpn client &lt;a href="https://openvpn.net"&gt;https://openvpn.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rcconf = easier way to manage what services start at boot &lt;a href="https://packages.debian.org/jessie/rcconf"&gt;https://packages.debian.org/jessie/rcconf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;docker = virtual machine/container platform based on a unionfs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;python-setuptools = Sometimes required to install pip (the "drug dealer" for python based software) &lt;a href="http://pythonhosted.org//setuptools"&gt;http://pythonhosted.org//setuptools&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;icedtea = open java (plugin = browser java)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;jdk = java development kit&lt;/p&gt;
&lt;h3 id="gui"&gt;GUI&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Xubuntu Desktop&lt;/strong&gt; is my preferred "lightweight" GUI for Ubuntu: &lt;a href="http://xubuntu.org"&gt;http://xubuntu.org&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install -y chromium-browser pepperflashplugin-nonfree geany arandr \
keepassx xdiskusage rdesktop vlc
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;geany = tabbed text notepad&lt;/li&gt;
&lt;li&gt;vlc = movies/music&lt;/li&gt;
&lt;li&gt;arandr = multi display gui config&lt;/li&gt;
&lt;li&gt;rdesktop = RDP client&lt;/li&gt;
&lt;li&gt;grdesktop = gnome UI for rdesktop&lt;/li&gt;
&lt;li&gt;ubuntu-restricted-extras&lt;/li&gt;
&lt;li&gt;dropbox = cloud file storage&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;filezilla = file transfer protocol client (that supports sftp = secure ssh ftp)&lt;/p&gt;
&lt;p&gt;deb http://linux.dropbox.com/ubuntu utopic main
sudo apt-key adv --keyserver pgp.mit.edu --recv-keys 5044912E&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://repository.spotify.com&lt;/span&gt; &lt;span class="kp"&gt;stable&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 94558F59&lt;/p&gt;
&lt;p&gt;sudo add-apt-repository ppa:pithos/ppa&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://downloads.hipchat.com/linux/apt&lt;/span&gt; &lt;span class="kp"&gt;stable&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;span class="err"&gt;wget&lt;/span&gt; &lt;span class="err"&gt;-O&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt; &lt;span class="err"&gt;https://www.hipchat.com/keys/hipchat-linux.key&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;apt-key&lt;/span&gt; &lt;span class="err"&gt;add&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;apt-get update; apt-get install dropbox spotify-client pithos hipchat&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="packages-you-will-probably-want-to-remove"&gt;Packages you will probably want to remove&lt;/h2&gt;
&lt;p&gt;apt-get remove brltty&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;unless you are using braille on your computerrcc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="other-useful-packages"&gt;Other Useful Packages&lt;/h2&gt;
&lt;h3 id="heroku-cli"&gt;Heroku CLI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;deb http://toolbelt.heroku.com/ubuntu ./&lt;/li&gt;
&lt;li&gt;wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add -&lt;/li&gt;
&lt;li&gt;apt-get install -y heroku-toolbelt&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ruby-and-openshift-cli"&gt;Ruby and OpenShift CLI&lt;/h3&gt;
&lt;p&gt;https://gorails.com/setup/ubuntu/14.04&lt;/p&gt;
&lt;p&gt;sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties
libgdbm-dev libncurses5-dev automake libtool bison libffi-dev&lt;/p&gt;
&lt;p&gt;source ~/.rvm/scripts/rvm
echo "source ~/.rvm/scripts/rvm" &amp;gt;&amp;gt; ~/.bashrc
rvm install 2.1.2
rvm use 2.1.2 --default
ruby -v
echo "gem: --no-ri --no-rdoc" &amp;gt; ~/.gemrc&lt;/p&gt;
&lt;p&gt;gem install rhc
red hat client for openshift&lt;/p&gt;
&lt;p&gt;sudo echo "autologin-user=ubuntu" &amp;gt;&amp;gt;  /etc/lightdm/lightdm.conf.d/10-xubuntu.conf &lt;/p&gt;</summary><category term="Linux"></category><category term="Ubuntu"></category><category term="USB Boot"></category><category term="Ubuntu Recovery"></category></entry><entry><title>ListJS: Sort, Filters, Search and more for HTML lists and tables in Javascript</title><link href="http://blog.john-pfeiffer.com/listjs-sort-filters-search-and-more-for-html-lists-and-tables-in-javascript" rel="alternate"></link><updated>2014-08-08T21:37:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-08-08:listjs-sort-filters-search-and-more-for-html-lists-and-tables-in-javascript</id><summary type="html">
&lt;p&gt;Self contained javascript library to make lists of information awesome!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://listjs.com/docs"&gt;http://listjs.com/docs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="listjshtml"&gt;listjs.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s-Atom"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;DOCTYPE&lt;/span&gt; &lt;span class="s-Atom"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;script&lt;/span&gt; &lt;span class="s-Atom"&gt;src=&lt;/span&gt;&lt;span class="s2"&gt;"http://listjs.com/no-cdn/list.js"&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;gt;&amp;lt;/script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;style&lt;/span&gt; &lt;span class="s-Atom"&gt;type=&lt;/span&gt;&lt;span class="s2"&gt;"text/css"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;list&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s-Atom"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s-Atom"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;inset&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;avatar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s-Atom"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="s-Atom"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s-Atom"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="c1"&gt;%;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="s-Atom"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="s-Atom"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="s-Atom"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="s-Atom"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;#ccc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nn"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s-Atom"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="s-Atom"&gt;a8e0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s-Atom"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s-Atom"&gt;b8aba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;asc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s-Atom"&gt;after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nn"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nn"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="s-Atom"&gt;px&lt;/span&gt; &lt;span class="s-Atom"&gt;solid&lt;/span&gt; &lt;span class="s-Atom"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;lt;/style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;



&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;meta&lt;/span&gt; &lt;span class="s-Atom"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s-Atom"&gt;utf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="s-Atom"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Existing&lt;/span&gt; &lt;span class="s-Atom"&gt;list&amp;lt;/title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;lt;/head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="s-Atom"&gt;id=&lt;/span&gt;&lt;span class="s2"&gt;"users"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;input&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"search"&lt;/span&gt; &lt;span class="s-Atom"&gt;placeholder=&lt;/span&gt;&lt;span class="s2"&gt;"Search"&lt;/span&gt; &lt;span class="s-Atom"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;button&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"sort"&lt;/span&gt; &lt;span class="s-Atom"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s-Atom"&gt;sort=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nv"&gt;Sort&lt;/span&gt; &lt;span class="s-Atom"&gt;by&lt;/span&gt; &lt;span class="s-Atom"&gt;name&lt;/span&gt;
  &lt;span class="s-Atom"&gt;&amp;lt;/button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;ul&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"list"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Jonny&lt;/span&gt; &lt;span class="nv"&gt;Stromberg&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;p&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1986&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Jonas&lt;/span&gt; &lt;span class="nv"&gt;Arnklint&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;p&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1985&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Martina&lt;/span&gt; &lt;span class="nv"&gt;Elm&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;p&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1986&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;h3&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;Gustaf&lt;/span&gt; &lt;span class="nv"&gt;Lindqvist&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;p&lt;/span&gt; &lt;span class="s-Atom"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;"born"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1983&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;lt;/p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s-Atom"&gt;&amp;lt;/li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="s-Atom"&gt;&amp;lt;/ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="s-Atom"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="o"&gt;div&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s-Atom"&gt;script&lt;/span&gt; &lt;span class="s-Atom"&gt;type=&lt;/span&gt;&lt;span class="s2"&gt;"text/javascript"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="s-Atom"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s-Atom"&gt;valueNames:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s-Atom"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;'born'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="s-Atom"&gt;var&lt;/span&gt; &lt;span class="s-Atom"&gt;userList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;'users'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;lt;/script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="s-Atom"&gt;&amp;lt;/body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;lt;/html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="listjs-with-pelican-and-jinja2"&gt;ListJS with Pelican and Jinja2&lt;/h3&gt;
&lt;p&gt;ListJS with the Pelican elegant theme to list all the articles sortable/searchable, default pagination for ListJS set to 1000 items&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% extends "base.html" %}

{% block title %}
All Categories · {{ super() }}
{% endblock title %}

{% block head_description %}
All categories of the {{ SITENAME|striptags }} blog. 
{% endblock head_description %}
{% block content %}


&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"http://listjs.com/no-cdn/list.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;font-weight&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;font-weight&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;#ccc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;7px&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;margin-bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;outline&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nc"&gt;.sort&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#28a8e0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nc"&gt;.sort&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#1b8aba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nc"&gt;.sort&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;outline&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nc"&gt;.sort&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="k"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="k"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="k"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;top&lt;/span&gt;&lt;span class="o"&gt;:-&lt;/span&gt;&lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;right&lt;/span&gt;&lt;span class="o"&gt;:-&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nc"&gt;.sort.asc&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="k"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="k"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;13px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;right&lt;/span&gt;&lt;span class="o"&gt;:-&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nc"&gt;.sort.desc&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="k"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="k"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"article-list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Sort by date&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sort"&lt;/span&gt; &lt;span class="na"&gt;data-sort=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Sort by title&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"margin-top: 10px; height: 16px;"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {% for category, articles in categories %}
        {% for article in articles %}
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-right: 10px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;time&lt;/span&gt; &lt;span class="na"&gt;pubdate=&lt;/span&gt;&lt;span class="s"&gt;"pubdate"&lt;/span&gt; &lt;span class="na"&gt;datetime=&lt;/span&gt;&lt;span class="s"&gt;"{{ article.date.isoformat() }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ article.locale_date }}&lt;span class="nt"&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"{{ SITEURL }}/{{ article.url }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ article.title }} {%if article.subtitle %}
                &lt;span class="nt"&gt;&amp;lt;small&amp;gt;&lt;/span&gt; {{ article.subtitle }} &lt;span class="nt"&gt;&amp;lt;/small&amp;gt;&lt;/span&gt; {% endif %}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        {% endfor %}
    {% endfor %}
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;


{% endblock content %}
{% block script %}
{{ super() }}
&lt;span class="nt"&gt;&amp;lt;script  &lt;/span&gt;&lt;span class="na"&gt;language=&lt;/span&gt;&lt;span class="s"&gt;"javascript"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;uncollapse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;collapse&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;language=&lt;/span&gt;&lt;span class="s"&gt;"JavaScript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;uncollapse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;valueNames&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hackerList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'article-list'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;hackerList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'date'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

{% endblock script %}
&lt;/pre&gt;&lt;/div&gt;</summary><category term="programming"></category><category term="javascript"></category></entry><entry><title>Publish a pelican blog using a Bitbucket POST Webhook</title><link href="http://blog.john-pfeiffer.com/publish-a-pelican-blog-using-a-bitbucket-post-webhook" rel="alternate"></link><updated>2014-08-08T06:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-08-08:publish-a-pelican-blog-using-a-bitbucket-post-webhook</id><summary type="html">
&lt;p&gt;Webhooks are an incredibly useful way to tie together disparate network parts, WHEN something happens in one place, it sends a POST HTTP request to another place.&lt;/p&gt;
&lt;h3 id="create-the-bitbucket-webhook-and-setup-a-server-to-receive-the-webhook"&gt;Create the Bitbucket Webhook and Setup a Server to Receive the Webhook&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the Bitbucket WebUI&lt;/li&gt;
&lt;li&gt;Choose the repository&lt;/li&gt;
&lt;li&gt;Choose to administer the repository (gear symbol) -&amp;gt; Hooks (left menu) , or simply &lt;a href="https://bitbucket.org/username/reponame/admin/hooks"&gt;https://bitbucket.org/username/reponame/admin/hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Select Hook Type (dropdown) , POST , Add Hook (Button)&lt;/li&gt;
&lt;li&gt;Enter your target URL, SAVE&lt;/li&gt;
&lt;li&gt;Setup a webserver (easiest might be Bamboo or Jenkins) somewhere&lt;/li&gt;
&lt;li&gt;Ensure there is a URL that accepts POST requests&lt;/li&gt;
&lt;li&gt;Ensure that when the POST is received it runs the pelican content generation commands to make the new output&lt;/li&gt;
&lt;li&gt;Ensure new output is visible&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;You may notice any existing POST webhooks, i.e. a HipChat notification add-on, listed: https://hipchat-bitbucket.herokuapp.com/commit?client_id=f955ddb5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="flask-and-bash-source-code-to-publish-a-pelican-static-web-site"&gt;Flask and Bash source code to publish a pelican static web site&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;This custom solution requires running that flask app manually, i.e. python mypublish.py
It also requires having two repositories, one for the pelican source content, 
the other repo (i.e. a bitbucket static web site) will only contain the output (.html files)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="vi-mypublishpy"&gt;vi mypublish.py&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PIPE&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/someuniquekeyhere'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mypublish&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"./mypublish.sh"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'0.0.0.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use_reloader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="vi-mypublishsh"&gt;vi mypublish.sh&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
git pull
&lt;span class="nv"&gt;GITMESSAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git log -n 1&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;OUTPUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"../outputreponame.bitbucket.org"&lt;/span&gt;
./clean-output.sh &lt;span class="s2"&gt;"../sourcereponame.bitbucket.org"&lt;/span&gt;  &lt;span class="c"&gt;# removes all of the old content&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$GITMESSAGE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
pelican content
cp -a ./output/* &lt;span class="nv"&gt;$OUTPUT&lt;/span&gt;

rm -rf ./output
rm -rf ./cache
rm -f *.pyc

&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$OUTPUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
git add --all ./content
git commit -m &lt;span class="s2"&gt;"source &lt;/span&gt;&lt;span class="nv"&gt;$GITMESSAGE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
git push
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="vi-clean-outputsh"&gt;vi clean-output.sh&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

rm -rf ./output
rm -rf ./cache
rm -f *.pyc

&lt;span class="k"&gt;for&lt;/span&gt; ITEM in &lt;span class="nv"&gt;$SOURCE&lt;/span&gt;/*
&lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -d &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ITEM&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    rm -rf &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ITEM&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    rm -f &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$ITEM&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://read-the-docs.readthedocs.org/en/latest/webhooks.html"&gt;http://read-the-docs.readthedocs.org/en/latest/webhooks.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/display/BITBUCKET/POST+hook+management"&gt;https://confluence.atlassian.com/display/BITBUCKET/POST+hook+management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="pelican"></category><category term="webhook"></category><category term="bitbucket"></category><category term="flash"></category></entry><entry><title>Using Vagrant to deploy instances on AWS</title><link href="http://blog.john-pfeiffer.com/using-vagrant-to-deploy-instances-on-aws" rel="alternate"></link><updated>2014-07-16T21:12:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-07-16:using-vagrant-to-deploy-instances-on-aws</id><summary type="html">
&lt;p&gt;Vagrant is an infrastructure tool that simplifies deployment, such as virtual machines or in this case Amazon EC2 instances.&lt;/p&gt;
&lt;h3 id="install-vagrant-and-the-vagrant-aws-plugin"&gt;Install Vagrant and the Vagrant AWS plugin&lt;/h3&gt;
&lt;p&gt;Download and install vagrant: &lt;strong&gt;&lt;a href="https://www.vagrantup.com/downloads"&gt;https://www.vagrantup.com/downloads&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget https://dl.bintray.com/mitchellh/vagrant/vagrant_1.6.3_x86_64.deb ; dpkg -i vagrant_1.6.3_x86_64.deb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant box list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi Vagrantfile&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Vagrant.configure("2") do |config|
    config.vm.box = "dummy"
    config.vm.provider :aws do |aws, override|
        aws.access_key_id = "YOURACCESSKEY"
        aws.secret_access_key = "YOURSECRETKEY"
        aws.keypair_name = "YOURKEYPAIRNAME"
        aws.ami = "ami-7747d01e"
        aws.instance_ready_timeout = 300
        aws.instance_type = "m3.large"
        aws.tags = {
            "Name" =&amp;gt; "MyCloudInstance",
        }
        override.vm.box = "dummy"
        override.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
        override.ssh.username = "ubuntu"
        override.ssh.private_key_path = "./YOURKEYPAIRNAME.pem"
    end
end
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ubuntu/images/ubuntu-precise-12.04-amd64-server-20130204 - ami-7747d01e , no ebs storage - just instance storage&lt;/p&gt;
&lt;p&gt;vagrant will by default upload all folders and files in your "project" folder where the Vagrantfile is located&lt;/p&gt;
&lt;p&gt;vagrant will start with the current working directory and look for a Vagrantfile, then go up one directory until it finds one: &lt;a href="https://docs.vagrantup.com/v2/vagrantfile/"&gt;https://docs.vagrantup.com/v2/vagrantfile/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vagrant plugin install vagrant-aws&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant up --provider=aws --debug&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Bringing machine 'default' up with 'aws' provider...
==&amp;gt; default: HandleBoxUrl middleware is deprecated. Use HandleBox instead.
==&amp;gt; default: This is a bug with the provider. Please contact the creator
==&amp;gt; default: of the provider you use to fix this.
==&amp;gt; default: Warning! The AWS provider doesn't support any of the Vagrant
==&amp;gt; default: high-level network configurations (`config.vm.network`). They
==&amp;gt; default: will be silently ignored.
==&amp;gt; default: Launching an instance with the following settings...
==&amp;gt; default:  -- Type: m3.large
==&amp;gt; default:  -- AMI: ami-7747d01e
==&amp;gt; default:  -- Region: us-east-1
==&amp;gt; default:  -- Keypair: YOURKEYPAIRHERE
==&amp;gt; default:  -- Block Device Mapping: []
==&amp;gt; default:  -- Terminate On Shutdown: false
==&amp;gt; default:  -- Monitoring: false
==&amp;gt; default:  -- EBS optimized: false
==&amp;gt; default:  -- Assigning a public IP address in a VPC: false
==&amp;gt; default: Waiting for instance to become "ready"...
==&amp;gt; default: Waiting for SSH to become available...
==&amp;gt; default: Machine is booted and ready for use!
==&amp;gt; default: Rsyncing folder: /home/ubuntu/myproject/ =&amp;gt; /vagrant
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vagrant ssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;alternative interactive ssh session: Use the AWS EC2 WebUI or &lt;a href="http://aws.amazon.com/cli"&gt;http://aws.amazon.com/cli&lt;/a&gt; to discover the IP address&lt;/p&gt;
&lt;p&gt;ssh -i YOURKEYPAIRHERE.pem ubuntu@1.2.3.4 ls -ahl /vagrant&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant ssh -c "ls -ahl"&lt;/code&gt; for a non interactive listing of the home directory&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;vagrant ssh -c "pidof ntpd | xargs sudo kill -9"&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vagrant up&lt;/code&gt; , &lt;code&gt;vagrant reload&lt;/code&gt; , and &lt;code&gt;vagrant provision&lt;/code&gt; will have the AWS provider use rsync to push data to /vagrant&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.vagrantup.com/v2/synced-folders/rsync.html"&gt;https://docs.vagrantup.com/v2/synced-folders/rsync.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant stop&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UnsupportedOperation =&amp;gt; The instance 'i-1295bf39' does not have an 'ebs' root device type and cannot be stopped. (Fog::Compute::AWS::Error)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vagrant destroy&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; default: Are you sure you want to destroy the 'default' VM? [y/N] Y
&amp;gt;
&amp;gt; ==&amp;gt; default: Terminating the instance...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;vagrant destroy -f&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;non interactively destroy the instance and avoid the misleading error message: Vagrant is attempting to interface with the UI in a way that requires a TTY&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="vagrant-provisioning"&gt;Vagrant provisioning&lt;/h3&gt;
&lt;p&gt;Allows for automated installation of software bundled into the &lt;code&gt;vagrant up&lt;/code&gt; command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vagrant up --provider=aws --no-provision&lt;/code&gt; to prevent any provisioning&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config.vm.provision "shell", inline: "echo Hello, World"

config.vm.provision "shell", path: "script.sh"

config.vm.provision "shell", path: "https://example.com/script.sh"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://docs.vagrantup.com/v2/provisioning"&gt;http://docs.vagrantup.com/v2/provisioning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.vagrantup.com/v2/provisioning/shell.html"&gt;http://docs.vagrantup.com/v2/provisioning/shell.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="advanced-vagrantfile-example"&gt;Advanced Vagrantfile example&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span class="c1"&gt;# vi: set ft=ruby :&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'UPDATEFQDN'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;updatedfqdn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'UPDATEFQDN'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="vg"&gt;$fqdnscript&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;FQDNSCRIPT&lt;/span&gt;
&lt;span class="sh"&gt;echo "I am updating fqdn to #{updatedfqdn}..."&lt;/span&gt;
&lt;span class="sh"&gt;cat /etc/hosts | grep "#{updatedfqdn}" || sudo sed 's/127.0.0.1/127.0.0.1 #{updatedfqdn}/' -i /etc/hosts&lt;/span&gt;
&lt;span class="sh"&gt;hostname | grep "#{updatedfqdn}" || sudo hostname #{updatedfqdn}&lt;/span&gt;
&lt;span class="no"&gt;FQDNSCRIPT&lt;/span&gt;

&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:aws&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_key_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURACCESSKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secret_access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURSECRETKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keypair_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURKEYPAIRNAME"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ami&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ami-7747d01e"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_ready_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"m3.large"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"Name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"MyCloudInstance"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'bamboo_aws_use_iops'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
          &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;block_device_mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'DeviceName'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'/dev/sda1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeSize'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeType'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'io1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.Iops'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;block_device_mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'DeviceName'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'/dev/sda1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeSize'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Ebs.VolumeType'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'gp2'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ubuntu"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;private_key_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"./YOURKEYPAIRNAME.pem"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synced_folder&lt;/span&gt; &lt;span class="s2"&gt;"./chef-repo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/tmp/chef-repo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"rsync"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;create&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;rsync__exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;".git/"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="ss"&gt;:shell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:inline&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"echo `hostname -f` &amp;gt;&amp;gt; /home/ubuntu/currenthostname.txt"&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="ss"&gt;:shell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:inline&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="vg"&gt;$fqdnscript&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Bringing&lt;/span&gt; &lt;span class="n"&gt;machine&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="s1"&gt;'aws'&lt;/span&gt; &lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Running&lt;/span&gt; &lt;span class="ss"&gt;provisioner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;Running&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt;
&lt;span class="ss"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;ttty&lt;/span&gt;
&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;am&lt;/span&gt; &lt;span class="n"&gt;provisioning&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;synced_folder is to sync other folders in your filesystem besides the folder with the Vagrantfile&lt;/p&gt;
&lt;p&gt;config.vm.hostname does not appear to work on AWS EC2 so the workaround above (|| statements to prevent extra reconfiguration)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchellh/vagrant-aws"&gt;https://github.com/mitchellh/vagrant-aws&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html"&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="vagrant-and-ec2-vpc-ami-that-does-not-haveallow-sudo"&gt;Vagrant and EC2 VPC (AMI that does not have/allow sudo)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span class="c1"&gt;# vi: set ft=ruby :&lt;/span&gt;

&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;

    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synced_folder&lt;/span&gt; &lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/vagrant"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

    &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:aws&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;

        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_key_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURACCESSKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secret_access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURSECRETKEY"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keypair_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"YOURKEYPAIRNAME"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ami&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ami-7747d01e"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_ready_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"m3.large"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;"Name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"MyCloudInstance"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;security_groups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"my_aws_security_group_id"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subnet_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"my_aws_subnet_id"&lt;/span&gt;
        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;associate_public_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

        &lt;span class="n"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"#cloud-boothook&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;#!/bin/bash&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;touch /opt/.license/.eula&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dummy"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"&lt;/span&gt;

        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ubuntu"&lt;/span&gt;
        &lt;span class="n"&gt;override&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;private_key_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/home/ubuntu/my_aws.pem"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;vagrant up --provider=aws --no-provision --debug&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;INFO vagrant: `vagrant` invoked: ["up", "--provider=aws", "--no-provision", "--debug"]

Bringing machine 'default' up with 'aws' provider...
==&amp;gt; default: Launching an instance with the following settings...
INFO interface: info:  -- Type: m3.large
INFO interface: info: ==&amp;gt; default:  -- User Data: #cloud-boothook
INFO interface: info: ==&amp;gt; default:  -- Assigning a public IP address in a VPC: true
==&amp;gt; default: Waiting for instance to become "ready"...
==&amp;gt; default: Waiting for SSH to become available...

DEBUG ssh: == Net-SSH connection debug-level log END ==
INFO ssh: SSH is ready!
DEBUG ssh: Re-using SSH connection.
INFO ssh: Execute:  (sudo=false)
DEBUG ssh: pty obtained for connection
DEBUG ssh: stdout: export TERM=vt100

**JOHN: cloud-boothook script should have run by now in here**

DEBUG ssh: stdout: logout
DEBUG ssh: Exit status: 0
INFO run_instance: Time for SSH ready: 48.444087982177734
INFO interface: info: Machine is booted and ready for use!

which rsync    
DEBUG ssh: stdout: /usr/bin/rsync

INFO interface: info: Machine not provisioning because `--no-provision` is specified.
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;After all of that it is safe to either have &lt;code&gt;vagrant provision&lt;/code&gt; or &lt;code&gt;vagrant ssh -c "ls -ahl"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Using a pseudo tty&lt;/strong&gt; is a required workaround if using an AMI that does not support tty / sudo (i.e. Amazon's default Linux AMI)&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.vagrantup.com/v2/vagrantfile/ssh_settings.html"&gt;https://docs.vagrantup.com/v2/vagrantfile/ssh_settings.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchellh/vagrant/issues/1482"&gt;https://github.com/mitchellh/vagrant/issues/1482&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disabling the /vagrant synced project folder&lt;/strong&gt; is nice if you don't automatically want the Vagrantfile and everything in there rsynced to your EC2 instance (and avoids the ugly &lt;code&gt;mkdir -p /vagrant&lt;/code&gt; which requires sudo)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AWS User Data&lt;/strong&gt; can be pushed in via Vagrant which allows for custom scripts / commands / package installation during the EC2 instance boot&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/CloudInit"&gt;https://help.ubuntu.com/community/CloudInit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloudinit.readthedocs.org/en/latest/topics/format.html#cloud-boothook"&gt;https://cloudinit.readthedocs.org/en/latest/topics/format.html#cloud-boothook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17413598/vagrant-rsync-error-before-provisioning"&gt;http://stackoverflow.com/questions/17413598/vagrant-rsync-error-before-provisioning&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;One of the use cases for an aws.user_data #cloud-boothook script has been to add to /etc/sudoers.d/ (thus avoiding later sudo issues with rsync)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ps aux | grep vagrant&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nothing to see here but there is still state for machines started...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vagrant global-status
vagrant global-status --prune
rm -rf .vagrant
rm -rf /home/ubuntu/.vagrant.d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;If you use vagrant 1.7 don not be surprised if you see errors related to SSL, 1.6.3 FTW&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mitchellh/vagrant-aws"&gt;https://github.com/mitchellh/vagrant-aws&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="troubleshooting"&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vagrant up --provider=aws --debug&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ERROR: The provider 'aws' could not be found, but was requested to back the machine 'default'. Please use a provider that exists.&lt;/p&gt;
&lt;p&gt;RESOLUTION: try re-installing the vagrant-aws plugin again and immediately running the vagrant up command afterwards&lt;/p&gt;
&lt;p&gt;ERROR: Timeout when waiting for SSH , SSH not up: ... The private key to connect to the machine via SSH must be owned&lt;/p&gt;
&lt;p&gt;RESOLUTION: chown root:root  and chmod 400&lt;/p&gt;
&lt;p&gt;ERROR: INFO ssh: SSH not up: #&amp;lt;Vagrant::Errors::SSHAuthenticationFailed: SSH authentication failed! This is typically caused by the public/private keypair for the SSH user not being properly set on the guest VM&lt;/p&gt;
&lt;p&gt;RESOLUTION: ensure the correct user, i.e. ec2-user or ubuntu etc. is used in the override.ssh.username to match what the AMI expects&lt;/p&gt;
&lt;p&gt;ERROR: sudo: no tty present and no askpass program specified&lt;/p&gt;
&lt;p&gt;RESOLUTION: your VM (or more likely, AMI) does not have tty or allow sudo so try using the config.ssh.pty = true (and make sure no provisioning commands require sudo)&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>Docker Intro install run and port forward</title><link href="http://blog.john-pfeiffer.com/docker-intro-install-run-and-port-forward" rel="alternate"></link><updated>2014-07-10T17:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-07-10:docker-intro-install-run-and-port-forward</id><summary type="html">&lt;p&gt;Docker is a union file system based layer system leveraging linux lxc containers for ultra lightweight virtualization/compartmentalization.&lt;/p&gt;
&lt;p&gt;Much like AWS cloud servers (api based dynamic deployment that should be tolerant of node failure) and automated deployment/configuration infrastructure (chef or puppet such that cloud servers are created idempotent, remotely and automatically managed at scale), Docker requires a change of mindset.&lt;/p&gt;
&lt;p&gt;Docker encourages design of modular, deterministic and defined, single purpose components that are easy to compose into larger services.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Images&lt;/strong&gt; are the initial templates, each image has a unique ID&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt; are the running virtual machines, each container has a unique ID  &lt;a href="http://docs.docker.com/terms/container"&gt;http://docs.docker.com/terms/container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;From now on it is assumed you use &lt;strong&gt;sudo&lt;/strong&gt; before any docker command!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="install-docker"&gt;Install Docker&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://docs.docker.com/installation/ubuntulinux/#ubuntu-trusty-1404-lts-64-bit"&gt;Docker on Ubuntu 14.04&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sh -c "echo deb https://get.docker.io/ubuntu docker main &amp;gt; /etc/apt/sources.list.d/docker.list"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install lxc-docker&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="quick-start-summary"&gt;Quick Start Summary&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -i -t -e MYVAR=123 busybox env&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"run" will pull the image from Docker Hub by default, e injects an environment variable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="download-a-docker-image"&gt;Download a docker image&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sudo docker pull ubuntu:trusty&lt;/code&gt; (&lt;strong&gt;grabs the latest, i.e. 14.04.1&lt;/strong&gt;) or &lt;code&gt;sudo docker pull ubuntu:12.04.3&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;critical! use the colon and a specific version! downloading all of the ubuntu images by accident sucks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sudo docker pull redis:latest&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;choose the latest or a specific version to avoid downloading a lot of old crap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="remove-a-docker-image"&gt;Remove a docker image&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker rmi trustyssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker rmi -f $(docker images --all --quiet | grep -v 5506de2b643b)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remove ALL images except one by taking the output (quiet means only image ids), excluding a specific one, and then force removing the images (by id)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker images --quiet --filter "dangling=true" | xargs docker rmi&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remove all images that do not have a tag and are not a parent of a tagged image&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker rmi -f $(docker images --all --quiet)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remove ALL images&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;du -sh /var/lib/docker/aufs&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;72K    /var/lib/docker/aufs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sometimes a docker image is &lt;strong&gt;still connected to a container&lt;/strong&gt; (already exited or forgotten)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker ps -a
docker rm name_or_id
docker rm a1b2  **it will smart match the first characters of the container ID**
docker rmi image_id
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="docker-info"&gt;Docker info&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get a helpful list of all the commands&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker --version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker info&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Containers: 1
Images: 23
Storage Driver: aufs
 Root Dir: /var/lib/docker/aufs
 Dirs: 25
Execution Driver: native-0.2
Kernel Version: 3.13.0-35-generic
Operating System: Ubuntu 14.04.1 LTS
WARNING: No swap limit support
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;du -sh /var/lib/docker/aufs&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;469M    /var/lib/docker/aufs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker ps --all&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no containers are running yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker ps --help&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker images --tree&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;view the hashes and sizes of all of the parent images&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="controlling-containers"&gt;Controlling Containers&lt;/h2&gt;
&lt;h3 id="starting-a-container-from-an-image"&gt;Starting a container (from an image)&lt;/h3&gt;
&lt;h4 id="create-a-container"&gt;Create a container&lt;/h4&gt;
&lt;p&gt;First you must create a container from an image:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get a helpful list of how to run a container&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -i -t ubuntu:14.04 /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;creates a container
--rm: automatically remove the container when it exits
-i: keep stdin open even if not attached
-t: allocate a tty, attach stdin and stdout
use the ubuntu 14.04 minimal image
Docker automatically gives the container a random name
Runs an interactive bash shell
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will continue to exist in a stopped state once exited (see "docker ps -a")&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;root@f5878ed6016e:/# cat /etc/issue
root@f5878ed6016e:/# uname -a
root@f5878ed6016e:/# df -h
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Control-p then Control-q to detach the tty without exiting the shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --detach -p 127.0.0.1:5000:5000 training/webapp python app.py&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;detached with port 5000 available and executing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="start-a-container"&gt;Start a container&lt;/h4&gt;
&lt;p&gt;After a container has already been created (which starts it so ironically this is actually a "restart")&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker start --interactive --attach container_id_or_name&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="stopping-a-container"&gt;Stopping a container&lt;/h3&gt;
&lt;p&gt;Part of the efficiency in docker is that containers can &lt;strong&gt;run in the background automatically&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker run --detach --name myredis redis
docker ps
docker stop myredis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another efficiency is that a docker container will only &lt;strong&gt;run as long as it takes to execute&lt;/strong&gt; a command (and any &lt;strong&gt;changes are not forgotten&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run ubuntu:trusty uname -a&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this runs the container only as long as it takes to execute the command&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker attach f5878ed6016e&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Control + C&lt;/code&gt; &lt;em&gt;(now we have exited the container and it will clean itself up)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;spun up another container but only long enough to run the command
CONTAINER ID IMAGE        COMMAND      CREATED      STATUS    PORTS         NAMES
e4b436320442 ubuntu:14.04 -uname -a  3 minutes ago              elegant_engelbart
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="deleting-aka-removing-a-container"&gt;Deleting aka removing a container&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker rm e4b436320442&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alternatively: &lt;code&gt;docker rm --force elegant_engelbart&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker rm -f $(docker ps -a -q)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Deletes forcibly all containers (be careful!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="dockerfile-to-automate-building-an-image"&gt;Dockerfile to automate building an image&lt;/h2&gt;
&lt;p&gt;Dockerfiles allow automating the creation docker images.&lt;/p&gt;
&lt;p&gt;One advantage to Dockerfile is that each command creates a separate layer so if a specific layer fails all of the previous intermediate images can be re-used.&lt;/p&gt;
&lt;p&gt;Also the version style of imagename:tag allows for chaining of upgrades of child images&lt;/p&gt;
&lt;p&gt;Containers as fast, reliable, and deterministic prod/qa/dev environments can also be extended to be just an improved experimentation sandbox (for those used to SSH and using Linux as a common base OS).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir -p dockerfiles/trustyssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi dockerfiles/trustyssh/Dockerfile&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FROM ubuntu:trusty
MAINTAINER John Pfeiffer "https://bitbucket.org/johnpfeiffer"

RUN apt-get update -y
RUN apt-get install -y openssh-server byobu
RUN mkdir /var/run/sshd
RUN echo 'root:root' | chpasswd
RUN echo 'ubuntu:ubuntu' | chpasswd
RUN sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
EXPOSE 22
CMD    ["/usr/sbin/sshd", "-D"]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;docker build --tag=newimagename --rm ./dockerfiles/ubuntu-trusty-ssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Each RUN command creates an intermediate container, so make sure you use the -rm option&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Sending build context to Docker daemon  2.56 kB
Sending build context to Docker daemon
Step 0 : FROM ubuntu:trusty
 ---&amp;gt; 5506de2b643b
...
Removing intermediate container 135b686d82a6
Step 2 : RUN apt-get update -y
 ---&amp;gt; Running in 7fe06a9ef41b
Ign http://archive.ubuntu.com trusty InRelease
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since each run command creates a new layer it is best practice to consolidate commands for a single logical action when possible:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;RUN echo "#!/bin/bash" &amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "cd /opt/mydata/pelican-project" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "pelican content -r &amp;amp;" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "cd /opt/mydata/pelican-project/output" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  echo "python -m SimpleHTTPServer" &amp;gt;&amp;gt; /root/build-and-run.sh &amp;amp;&amp;amp; \
  chmod +x /root/build-and-run.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;docker history ubuntu-utopic-pelican:latest&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;view the history of hashes (which can be run by themselves) and timestamps and sizes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;IMAGE               CREATED             CREATED BY                                      SIZE
39ac388d3c0d        37 seconds ago      /bin/sh -c #(nop) CMD [/bin/bash /root/build-   0 B
218edf407f18        37 seconds ago      /bin/sh -c echo "#!/bin/bash" &amp;gt; /root/build-a   129 B
d9d774d344bd        2 weeks ago         /bin/sh -c #(nop) EXPOSE 8000/tcp               0 B
ae1733e0e1b9        2 weeks ago         /bin/sh -c pip install pelican Markdown beaut   20.64 MB
24561ed8052f        2 weeks ago         /bin/sh -c curl https://bootstrap.pypa.io/get   9.826 MB
1878a9a052eb        2 weeks ago         /bin/sh -c apt-get update &amp;amp;&amp;amp; apt-get install    60.85 MB
5e5e0e9171da        2 weeks ago         /bin/sh -c #(nop) MAINTAINER John Pfeiffer "h   0 B
78949b1e1cfd        7 weeks ago         /bin/sh -c #(nop) CMD [/bin/bash]               0 B
21abcc4ef877        7 weeks ago         /bin/sh -c sed -i 's/^#\s*\(deb.*universe\)$/   1.895 kB
f552c527d701        7 weeks ago         /bin/sh -c echo '#!/bin/sh' &amp;gt; /usr/sbin/polic   215 kB
c4c77a6165f9        7 weeks ago         /bin/sh -c #(nop) ADD file:24ed1895f2e500dcec   194.2 MB
511136ea3c5a        22 months ago                                                       0 B
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;experimental:
docker save 49b5a7a88d5 | sudo docker-squash -t ubuntu-utopic-pelican:squash | docker load&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="add-a-port-to-a-container"&gt;Add a port to a container&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker run --detach --publish 127.0.0.1:2222:22 --name johnssh trustyssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;run a detached container based on the trustyssh image that binds the private container port 22 to the host port 2222 (in this case the trustyssh image from above is running sshd on port 22)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker port johnssh 22&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;127.0.0.1:2222&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;netstat -antp | grep 2222&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tcp        0      0 127.0.0.1:2222          0.0.0.0:*               LISTEN      24393/docker-proxy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ssh -o StrictHostKeychecking=no -p 2222 root@127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;root@19ad0614b237:~#&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;command&lt;/th&gt;
&lt;th align="center"&gt;output&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker run --detach --publish 0.0.0.0:6379:6379 --name redis redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;feeb79581810a8c182202c73d4e1c6b905960bcfc860e04285f1ae03c6a47f18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;6379/tcp -&amp;gt; 0.0.0.0:6379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis 6379&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;0.0.0.0:6379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;redis-cli -h docker.example.com ping&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;PONG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker run --detach --publish-all --name redis redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;ff2f6d2e04d565f11d71664bf6cf23638656d9b633e4d3c94444c81b18b807bb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;6379/tcp -&amp;gt; 0.0.0.0:49153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;docker port redis 6379&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;0.0.0.0:49153&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="logs-from-the-containers"&gt;Logs from the containers&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker logs container_name&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;view the latest logs of a specific container in stdout&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker logs -f container_name&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tail the logs for&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="host-data-with-a-docker-container"&gt;Host data with a Docker Container&lt;/h2&gt;
&lt;p&gt;Volumes are where Docker Containers can access storage (either from the Host or other Containers)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/userguide/dockervolumes"&gt;https://docs.docker.com/userguide/dockervolumes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --interactive --tty --name mydata --volume /tmp/mydata:/opt/mydata trustyssh /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;create an interactive container named "mydata" that maps /tmp/mydata from the host onto /opt/mydata (warning: overriding any existing!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="saving-a-docker-container-as-a-new-image"&gt;Saving a docker container as a new image&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker commit --help&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="docker-commit-for-a-container-ubuntutrusty-with-git"&gt;docker commit for a container: ubuntu:trusty with git&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker run -i -t ubuntu:trusty /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Control + p then Control + q&lt;/code&gt; &lt;em&gt;(to detach the tty without exiting the shell)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a&lt;/code&gt; &lt;em&gt;(make a note of the ID or NAME)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker attach ID_OR_NAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get update; apt-get install git -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd /root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git --version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://johnpfeiffer@bitbucket.org/johnpfeiffer/myrepo.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;now the Container will have git installed, a repo cloned, and will be stopped&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;docker commit container_name_here johnpfeiffer_git_repo&lt;blockquote&gt;
&lt;p&gt;4a74440186d976caeccc52f5ed2bd44269beb84d472391a7ce26ee3db8ffc1e9&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;docker images&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;output&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;REPOSITORY               TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
johnpfeiffer_git_repo    latest              4a74440186d9        54 seconds ago      402 MB
ubuntu                   14.04               e54ca5efa2e9        3 weeks ago         276.5 MB
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;h3 id="python-and-pelican-static-site-generator-on-docker-ubuntu1404"&gt;Python and Pelican static site generator on docker ubuntu:14.04&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;apt-get update; apt-get install python python-setuptools openssl wget -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget -qO- https://raw.github.com/pypa/pip/master/contrib/get-pip.py | sudo python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install pelican Markdown beautifulsoup4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -i -t -p 127.0.0.1:8000:8000 --name john johnpfeiffer_git_repo:latest /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control+p then control+q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker attach john&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd /root/myrepo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican content  (assuming pelicanconf.py is here)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control+p then control+q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://127.0.0.1:8000&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="advanced-docker-pre-built-images"&gt;Advanced Docker pre built images&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker search stackbrew/ubuntu&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FYI stackbrew/ubuntu is the same as ubuntu , &lt;a href="https://registry.hub.docker.com/u/stackbrew/ubuntu"&gt;stackbrew is the curated Docker registry&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://registry.hub.docker.com"&gt;https://registry.hub.docker.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="redis"&gt;Redis&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://registry.hub.docker.com/_/redis/"&gt;https://registry.hub.docker.com/_/redis/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --detach --publish 127.0.0.1:6379:6379 --name redis redis&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;detached container based on the redis latest bound to the host on port 6379
the image already includes by default the expose port command: EXPOSE 6379...
&lt;code&gt;apt-get install redis-tools; redis-cli&lt;/code&gt;
connect from the host to the redis container to the redis interactive cli&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker run -i -t --link redis:db  johnssh /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;root@d95a758eaa6b:/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;apt-get install redis-tools&lt;/span&gt;
&lt;span class="x"&gt;env&lt;/span&gt;
&lt;span class="x"&gt;redis-cli -h &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;DB_PORT_6379_TCP_ADDR&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;ping&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;PONG&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;get mykey&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"somevalue"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker stop johnssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker start --interactive --attach johnssh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;root@d95a758eaa6b:/#
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Environment variables are tricky&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo docker run --detach --publish 127.0.0.1:2222:22 --name johnssh trustyssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if you SSH into your container or use byobu "env" will not show you the info&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;From the host: &lt;/strong&gt; &lt;code&gt;sudo docker inspect --format '{{ .NetworkSettings.IPAddress }}' redis&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;172.17.0.72&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -p 2222 root@localhost
apt-get install redis-tools
redis-cli -h 172.17.0.72 keys *
1) mykey
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt; Add a route to the Host From inside a Container/Guest &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.docker.com/reference/commandline/cli/#adding-entries-to-a-container-hosts-file"&gt;http://docs.docker.com/reference/commandline/cli/#adding-entries-to-a-container-hosts-file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HOST: 
1. ip addr show
1. ip addr show | grep docker0
1. ip addr show | grep docker0 | grep global | awk '{print $2}' | cut -d / -f1
1. HOSTIP=&lt;code&gt;ip addr show | grep docker0 | grep global | awk '{print $2}' | cut -d / -f1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo docker run -i -t --rm --add-host=docker:${HOSTIP} python:2 /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="nl"&gt;bbe25092f19&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hosts&lt;/span&gt;

&lt;span class="mf"&gt;172.17.0.7&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;bbe25092f19&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;       &lt;span class="n"&gt;localhost&lt;/span&gt;
 &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;loopback&lt;/span&gt;
&lt;span class="n"&gt;fe00&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;localnet&lt;/span&gt;
&lt;span class="n"&gt;ff00&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mcastprefix&lt;/span&gt;
&lt;span class="n"&gt;ff02&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;allnodes&lt;/span&gt;
&lt;span class="n"&gt;ff02&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;ip6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;allrouters&lt;/span&gt;

&lt;span class="mf"&gt;172.17.42.1&lt;/span&gt;     &lt;span class="n"&gt;docker&lt;/span&gt;

&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="mi"&gt;@1&lt;/span&gt;&lt;span class="nl"&gt;bbe25092f19&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;ping&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;

&lt;span class="n"&gt;PING&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;172.17.42.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="mf"&gt;172.17.42.1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.158&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="troubleshooting"&gt;Troubleshooting&lt;/h2&gt;
&lt;h3 id="building-images-with-dockerfile"&gt;Building images with Dockerfile&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Building images often depends on the network and DNS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you are using Wifi be careful as intermittent network connectivity may cause frustrating issues.&lt;/p&gt;
&lt;p&gt;For DNS with docker installed onto ubuntu via apt-get, try changing to Google DNS by uncommenting in:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi /etc/default/docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo service docker restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Building images often depends on dependencies&lt;/strong&gt;
look closely at error messages, i.e. make: not found and ensure that an early RUN statement has apt-get update &amp;amp;&amp;amp; apt-get install -y build-essential&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="more-info"&gt;More Info&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/reference/commandline/cli/#run"&gt;https://docs.docker.com/reference/commandline/cli/#run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Real World example of using Docker for behind the firewall delivery: &lt;a href="https://bitbucket.org/atlassianlabs/ac-koa-hipchat-sassy/pull-request/6/readmemd-contains-instructions-on-how-to/diff"&gt;https://bitbucket.org/atlassianlabs/ac-koa-hipchat-sassy/pull-request/6/readmemd-contains-instructions-on-how-to/diff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/articles/basics"&gt;https://docs.docker.com/articles/basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/wsargent/docker-cheat-sheet"&gt;https://github.com/wsargent/docker-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.oddbit.com/2014/08/11/four-ways-to-connect-a-docker"&gt;http://blog.oddbit.com/2014/08/11/four-ways-to-connect-a-docker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jpetazzo.github.io/2014/06/23/docker-ssh-considered-evil"&gt;http://jpetazzo.github.io/2014/06/23/docker-ssh-considered-evil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="private-docker-registry"&gt;Private Docker Registry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.docker.com/reference/api/registry_api"&gt;http://docs.docker.com/reference/api/registry_api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-14-04"&gt;https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-14-04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="docker"></category><category term="containers"></category></entry><entry><title>Markdown syntax cheatsheet</title><link href="http://blog.john-pfeiffer.com/markdown-syntax-cheatsheet" rel="alternate"></link><updated>2014-07-02T20:21:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-07-02:markdown-syntax-cheatsheet</id><summary type="html">
&lt;h3 id="markdown-syntax"&gt;Markdown Syntax&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;html &amp;lt;em&amp;gt; is markdown &lt;code&gt;*emphasis* or _italics_&lt;/code&gt; = &lt;em&gt;emphasis&lt;/em&gt; or &lt;em&gt;italics&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;html &amp;lt;strong&amp;gt; is markdown &lt;code&gt;**strong* or __bold__&lt;/code&gt; = &lt;strong&gt;strong&lt;/strong&gt; or &lt;strong&gt;bold&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;html strikethrough is not supported but can just be &lt;code&gt;&amp;lt;del&amp;gt;strikethrough&amp;lt;/del&amp;gt;&lt;/code&gt; = &lt;del&gt;strikethrough&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;blockquote&amp;gt; is markdown &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;at the start of each line&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;html unordered list &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; = &lt;code&gt;- item&lt;/code&gt; or alternatives: &lt;code&gt;+ item&lt;/code&gt; , &lt;code&gt;* item&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;hr /&amp;gt; is markdown &lt;code&gt;- - -&lt;/code&gt; or alternatives: &lt;code&gt;* * *&lt;/code&gt; , &lt;code&gt;***&lt;/code&gt; , &lt;code&gt;*****&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;a href= for hyper links is:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;http://blog.john-pfeiffer.com&amp;gt;&lt;/code&gt; converts into a link that is automatically turned clickable:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href="http://johnpfeiffer.bitbucket.org"&amp;gt;http://johnpfeiffer.bitbucket.org&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[an example](http://example.com/ "ExampleTitle")&lt;/code&gt; &lt;a href="/about-john-pfeiffer" title="ExampleTitle"&gt;an example&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;both absolute and relative links are supported, as well as reference links that are defined elsewhere:
&lt;code&gt;This is [an example][someid]&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;[someid]: http://example.com/  "Optional Title Here"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li&gt;numbered list &lt;code&gt;1&lt;/code&gt; at the beginning of each line&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;any digit will do, the numbering is rendered in order&lt;/li&gt;
&lt;li&gt;ensure the numbered list is surrounded by empty lines&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Inline code&lt;/strong&gt; is markdown `backtick around the text` = &lt;code&gt;backtick around the text&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A code block&lt;/strong&gt; is markdown &lt;code&gt;indent 4 spaces or 1 tab&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;a blank line in the code block still needs to be indented&lt;/li&gt;
&lt;li&gt;ensure the code block is surrounded by empty lines&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;:::text or :::bash at the top of a code block will control the syntax highlighting, see &lt;a href="http://pygments.org/docs/lexers"&gt;http://pygments.org/docs/lexers&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="h1"&gt;H1&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;# H1&lt;/code&gt;&lt;/p&gt;
&lt;h6 id="h6"&gt;H6&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;###### H6&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="tables-are-sometimes-not-supported-but"&gt;Tables are (sometimes) not supported but...&lt;/h3&gt;
&lt;h4 id="table-with-left-justified-github-flavored-markdown"&gt;Table with left justified (GitHub Flavored Markdown)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;|in|out|other|
|---|---|---|
|yes|no|maybe|
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;in&lt;/th&gt;
&lt;th&gt;out&lt;/th&gt;
&lt;th&gt;other&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;maybe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*emphasis*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;emphasis&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;
&lt;h4 id="table-with-text-center-aligned"&gt;Table with text center aligned&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;|short|long centered|
|:-:|:-:|
|y|n|
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;short&lt;/th&gt;
&lt;th align="center"&gt;long centered&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;y&lt;/td&gt;
&lt;td align="center"&gt;n&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;
&lt;h4 id="html-table"&gt;HTML Table&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;table&amp;gt;&amp;lt;th&amp;gt;&lt;/span&gt;header&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;first column in row 1&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;2nd column&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;http://daringfireball.net/projects/markdown/syntax&lt;/a&gt;&lt;/p&gt;</summary><category term="markdown"></category><category term="html"></category></entry><entry><title>Creating a static web site with Bitbucket</title><link href="http://blog.john-pfeiffer.com/creating-a-static-web-site-with-bitbucket" rel="alternate"></link><updated>2014-06-30T20:20:00-07:00</updated><author><name>John Pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-06-30:creating-a-static-web-site-with-bitbucket</id><summary type="html">&lt;ol&gt;
&lt;li&gt;create a bitbucket account with username&lt;/li&gt;
&lt;li&gt;create a repo named username.bitbucket.org&lt;/li&gt;
&lt;li&gt;mkdir username.bitbucket.org&lt;/li&gt;
&lt;li&gt;cd username.bitbucket.org&lt;/li&gt;
&lt;li&gt;echo "hi" &amp;gt; index.html&lt;/li&gt;
&lt;li&gt;git init .&lt;/li&gt;
&lt;li&gt;git add&lt;/li&gt;
&lt;li&gt;git commit -m "first site index"&lt;/li&gt;
&lt;li&gt;git remote add origin git@bitbucket.org:username/username.bitbucket.org.git&lt;/li&gt;
&lt;li&gt;git push origin master&lt;/li&gt;
&lt;li&gt;git branch --set-upstream master origin/master&lt;/li&gt;
&lt;li&gt;git pull&lt;/li&gt;
&lt;li&gt;https://username.bitbucket.org&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+Bitbucket"&gt;https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+Bitbucket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scroll down to the comments:
&lt;em&gt;You can setup a CNAME for your account .  You cannot set up a CNAME for a static website hosted on Bitbucket.  The account you setup a CNAME for may have a repository that represents a static website.&lt;/em&gt;&lt;/p&gt;</summary><category term="programming"></category></entry><entry><title>How to set up a Pelican static blog site</title><link href="http://blog.john-pfeiffer.com/how-to-set-up-a-pelican-static-blog-site" rel="alternate"></link><updated>2014-06-21T20:21:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2014-06-21:how-to-set-up-a-pelican-static-blog-site</id><summary type="html">
&lt;p&gt;Pelican is an open source project that converts static text files into an html site.&lt;/p&gt;
&lt;p&gt;Why use a static site generator (pelican) instead of a hosted blog platform or a CMS (Content Management System)?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Because less is more and you should use the right tool for the right job&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A static site made of html pages is very easy to maintain&lt;/li&gt;
&lt;li&gt;It is also more secure and performance is good too =)&lt;/li&gt;
&lt;li&gt;Can use version control (git)&lt;/li&gt;
&lt;li&gt;Developers prefer to be able to customize and add functionality (python and javascript)&lt;/li&gt;
&lt;li&gt;Using widely adopted open source software reduces risk (python, pelican, javascript, elagant theme and tipue search)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="install-pelican"&gt;Install Pelican&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo pip install pelican Markdown beautifulsoup4&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;installing both the pelican and the Markdown packages&lt;/li&gt;
&lt;li&gt;beautifulsoup4 is a dependency for the later step of the elegant theme TOC and search plugins&lt;/li&gt;
&lt;li&gt;optionally use virtualenv venv; source venv/bin/activate&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pelican-quickstart&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Welcome to pelican-quickstart v3.3.0.
This script will help you create a new Pelican-based website.
Please answer the following questions so this script can generate the files needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.]
&amp;gt; What will be the title of this web site? johnpfeiffer.bitbucket.org
&amp;gt; Who will be the author of this web site? john pfeiffer
&amp;gt; What will be the default language of this web site? [en]
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)
&amp;gt; What is your URL prefix? (see above example; no trailing slash) https://johnpfeiffer.bitbucket.org
&amp;gt; Do you want to enable article pagination? (Y/n)
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n)
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n)
&amp;gt; Do you want to upload your website using FTP? (y/N)
&amp;gt; Do you want to upload your website using SSH? (y/N)
&amp;gt; Do you want to upload your website using Dropbox? (y/N)
&amp;gt; Do you want to upload your website using S3? (y/N)
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)
Done. Your new project is available at /home/ubuntu/BLOG
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;tree&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
├── content
├── develop_server.sh
├── fabfile.py
├── Makefile
├── output
├── pelicanconf.py
└── publishconf.py

2 directories, 5 files
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="create-content"&gt;Create Content&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vi content/hello_world.md&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: My first blog post
Date: 2014-06-21 20:20
Tags: python
Slug: my-first-blog-post
Author: John Pfeiffer
Summary: Short version for index and feeds

This is the content of my first blog post.
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;optional UI markdown editor: 
&lt;code&gt;sudo apt-get install retext&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="run-a-dev-server-to-see-the-results-locally"&gt;Run a dev server to see the results locally&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;make devserver&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;...Starting up Pelican and pelican.server...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;./develop_server.sh stop&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;stop the dev server (required if reloading the .conf file)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;This only works with the basic first setup, after that it is better to manually use multiple screens:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make clean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make regenerate&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;auto detects any content changes and reloads itself&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cd output; python -m SimpleHTTPServer&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Serving HTTP on 0.0.0.0 port 8000 ... (Control + C to quit)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;http://localhost:8000&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir -p content/pages&lt;/code&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="publish"&gt;Publish&lt;/h3&gt;
&lt;p&gt;I just use the pelicanconf output rather than publishconf, and I use git with a bitbucket static html site.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="example-pelican-configuration-file"&gt;Example pelican configuration file&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Contains the elegant theme and tipue search plugin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*- #
from __future__ import unicode_literals

AUTHOR = u'john pfeiffer'
SITENAME = u'johnpfeiffer'
SITEURL = ''
OUTPUT_PATH = 'output/'
DEFAULT_DATE_FORMAT = '%Y-%m-%d'
# Feed generation is usually not desired when developing
FEED_ALL_ATOM = None
CATEGORY_FEED_ATOM = None
TRANSLATION_FEED_ATOM = None

# clean urls for pages
PAGE_URL = '{slug}'
PAGE_SAVE_AS = '{slug}/index.html'
# clean urls for articles
ARTICLE_SAVE_AS = '{slug}/index.html'
ARTICLE_URL = '{slug}'

DEFAULT_PAGINATION = 10

THEME = 'themes/pelican-elegant'
PLUGIN_PATHS = ['plugins']
PLUGINS = ['sitemap', 'extract_toc', 'tipue_search']
MD_EXTENSIONS = ['codehilite(css_class=highlight)', 'extra', 'headerid', 'toc']
DIRECT_TEMPLATES = (('index', 'tags', 'categories','archives', 'search', '404'))
STATIC_PATHS = ['theme/images', 'images']

SITEMAP = {
    'format': 'xml',
    'priorities': {
        'articles': 0.5,
        'indexes': 0.5,
        'pages': 0.5
     },
    'changefreqs': {
        'articles': 'monthly',
        'indexes': 'daily',
        'pages': 'monthly'
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="importing-from-drupal"&gt;Importing from drupal&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Hack the Drupal files to allow a lot more than 10 items per feed&lt;/strong&gt;
&lt;code&gt;grep -r 'items per feed' .&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;learned from drupal-7.28/modules/system/system.module&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi modules/system/system.admin.inc&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$form['feed_default_items']&lt;/p&gt;
&lt;p&gt;Add to the dropdown choices of 10, 15, 30 etc. the option of 999&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install pandoc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pip install feedparser&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican-import -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican-import --feed http://blog.example.com/rss.xml -o output/ -m markdown&lt;/code&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="pelican-themes"&gt;Pelican Themes&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pelican.readthedocs.org/en/latest/pelican-themes.html"&gt;http://pelican.readthedocs.org/en/latest/pelican-themes.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir themes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;`cp -a pelican-themes/elegant themes/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For the elegant with tipuesearch you need to install the tipuesearch plugin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://moparx.com/2014/04/adding-search-capabilities-within-your-pelican-powered-site-using-tipue-search/"&gt;http://moparx.com/2014/04/adding-search-capabilities-within-your-pelican-powered-site-using-tipue-search/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h3 id="pelican-plugins"&gt;Pelican Plugins&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;https://github.com/getpelican/pelican-plugins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/getpelican/pelican-plugins&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir plugins&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp -a pelican-plugins/sitemap plugins/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="advanced-skipping-the-makefile"&gt;Advanced: skipping the Makefile&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pelican --help&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican ./content -o ./output -s ./publishconf.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd output ; python -m SimpleHTTPServer&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pelican.readthedocs.org/en/latest/settings.html"&gt;http://pelican.readthedocs.org/en/latest/settings.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tweaking default syntax highlighting:&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pygments.org/docs/lexers"&gt;http://pygments.org/docs/lexers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pygments.org/demo"&gt;http://pygments.org/demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/docker/src"&gt;https://bitbucket.org/johnpfeiffer/docker/src&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="python"></category><category term="pelican"></category><category term="blog"></category><category term="static site"></category></entry><entry><title>Cumulus compatible S3, nginx, and HMAC signed requests</title><link href="http://blog.john-pfeiffer.com/cumulus-compatible-s3-nginx-and-hmac-signed-requests" rel="alternate"></link><updated>2013-11-26T17:10:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-11-26:cumulus-compatible-s3-nginx-and-hmac-signed-requests</id><summary type="html">&lt;p&gt;With the exceptionally fast, reliable and popular web server &lt;strong&gt;&lt;a href="http://nginx.org/"&gt;nginx&lt;/a&gt;&lt;/strong&gt; as a front end customers can use a browser to access their uploaded files via a simple URL, the same as the SaaS Amazon S3 implementation, without knowing about the &lt;strong&gt;&lt;a href="http://www.nimbusproject.org/doc/nimbus/faq/#what-is-cumulus"&gt;Cumulus backend&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately there were edge cases around the encodings of spaces, pluses, slashes, etc. where nginx + Cumulus was returning "Access Denied" when trying to GET a file.&lt;/p&gt;
&lt;p&gt;Examining the relevant RFC's (&lt;a href="http://tools.ietf.org/html/rfc3986#section-2.1"&gt;http://tools.ietf.org/html/rfc3986#section-2.1&lt;/a&gt;), PHP﻿
(&lt;a href="http://php.net/manual/en/function.rawurlencode.php"&gt;http://php.net/manual/en/function.rawurlencode.php&lt;/a&gt;) and Python  ﻿(&lt;a href="http://docs.python.org/2/library/urllib.html"&gt;http://docs.python.org/2/library/urllib.html&lt;/a&gt;) references, and examining the logs, I could see the files were PUT correctly, &lt;a href="http://s3tools.org/s3cmd"&gt;s3cmd&lt;/a&gt; could retrieve the  binary objects (files) from Cumulus fine... but the logs were showing a change in the URL's.&lt;/p&gt;
&lt;p&gt;Increasing the &lt;a href="http://nginx.org/en/docs/debugging_log.html"&gt;debugging in nginx&lt;/a&gt;, digging into the &lt;a href="https://github.com/nimbusproject/nimbus/tree/master/cumulus"&gt;Cumulus source
code&lt;/a&gt; and &lt;a href="https://github.com/anomalizer/ngx_aws_auth"&gt;nginx AWS Authentication Module&lt;/a&gt; (and adding more logging statements in  Python and C respectively), I realized there was a mismatch in the REST URL signature process.&lt;/p&gt;
&lt;p&gt;Since Cumulus was using the open source &lt;a href="http://docs.pythonboto.org/en/latest/"&gt;Python Boto library&lt;/a&gt; which is actually &lt;a href="https://github.com/boto/boto/graphs/contributors"&gt;supported&lt;/a&gt; by &lt;a href="http://aws.amazon.com/sdkforpython"&gt;Amazon&lt;/a&gt; (the de facto rulers of the S3 "standard"), I decided that their &lt;a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html"&gt;signing process&lt;/a&gt; was authoritative.&lt;/p&gt;
&lt;p&gt;A lot of digging into nginx configs and source, along with learning a bit about nginx module development and hacking the source of the ngx_aws_auth module, I finally came up with a matching signature process, (success!)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ngx_aws_auth/ngx_http_aws_auth.c&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* uses the source and length to copy the uri, does not escape characters&lt;/span&gt;
&lt;span class="cm"&gt;(the argument signature is compatible wit ngx_escape_uri)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="kt"&gt;uintptr_t&lt;/span&gt; &lt;span class="nf"&gt;ngx_uri_extractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;ngx_uint_t&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uintptr_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* customized to calculate the signature using the non escaped URI, compatible with cumulus boto&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;ngx_int_t&lt;/span&gt;
&lt;span class="nf"&gt;ngx_http_aws_auth_variable_s3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;ngx_http_request_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;ngx_http_variable_value_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="kt"&gt;uintptr_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;ngx_http_aws_auth_conf_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;aws_conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;md_len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;EVP_MAX_MD_SIZE&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;aws_conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ngx_http_get_module_loc_conf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ngx_http_aws_auth_module&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;    * This Block of code added to deal with paths that are not on the root -&lt;/span&gt;
&lt;span class="cm"&gt;    * that is, via proxy_pass that are being redirected and the base part of&lt;/span&gt;
&lt;span class="cm"&gt;    * the proxy url needs to be taken off the beginning of the URI in order&lt;/span&gt;
&lt;span class="cm"&gt;    * to sign it correctly.&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
    &lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ngx_palloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// allow room for escaping&lt;/span&gt;
    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;    u_char *uri_end = (u_char*) ngx_escape_uri(uri,r-&amp;gt;uri.data, r-&amp;gt;uri.len, NGX_ESCAPE_URI);&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
    &lt;span class="n"&gt;u_char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;uri_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ngx_uri_extractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;unparsed_uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;unparsed_uri&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NGX_ESCAPE_URI&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;uri_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// null terminate&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="c"></category><category term="nginx"></category></entry><entry><title>Selenium headless browser automated testing with PhantomJS and Python</title><link href="http://blog.john-pfeiffer.com/selenium-headless-browser-automated-testing-with-phantomjs-and-python" rel="alternate"></link><updated>2013-09-17T21:04:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-09-17:selenium-headless-browser-automated-testing-with-phantomjs-and-python</id><summary type="html">
&lt;h3 id="overview"&gt;Overview&lt;/h3&gt;
&lt;p&gt;selenium: an automation framework for interactions with websites (like a programmatic browser) &lt;a href="http://docs.seleniumhq.org/docs/02_selenium_ide.jsp#introduction"&gt;http://docs.seleniumhq.org/docs/02_selenium_ide.jsp#introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;phantomjs: headless browser &lt;a href="http://phantomjs.org"&gt;http://phantomjs.org&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="install"&gt;Install&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo pip install selenium&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;wget &lt;a href="https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2"&gt;https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -xjvf phantomjs-1.9.8-linux-x86_64.tar.bz2&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="run"&gt;Run&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;phantomjs-1.9.8-linux-x86_64/bin/phantomjs --webdriver=9134&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ghostdriver included and running on port 9134&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="example-python-script"&gt;Example python script&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;mini script to just show usage&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;

&lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PhantomJS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;executable_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'/opt/phantomjs-1.9.8-linux-x86_64/bin/phantomjs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9134&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://127.0.0.1"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;
&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"done"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;phantomjs-1.9.8-linux-x86_64/bin/phantomjs --webdriver=9134 --ignore-ssl-errors=true&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="advanced-python-example"&gt;Advanced Python example&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;more complete example with python unittest framework (used the Firefox Selenium IDE plugin -&amp;gt; Export)&lt;/p&gt;
&lt;p&gt;logs in, asserts there is an Admin tab which when clicked shows Group Info&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;By&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.common.keys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Keys&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.support.ui&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Select&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.common.exceptions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;NoSuchElementException&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SeleniumAdminLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PhantomJS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;'/opt/phantomjs-1.9.2-linux-x86_64/bin/phantomjs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9134&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;implicitly_wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://myexample.org"&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verificationErrors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept_next_alert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_selenium_admin_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"admin@example.org"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"mypassword"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"signin"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://myexample.org/home"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_element_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LINK_TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Launch the web app"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertTrue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_element_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CSS_SELECTOR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a.admin &amp;gt; span"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_css_selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"a.admin &amp;gt; span"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Group Info"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_css_selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"h1"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_element_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;NoSuchElementException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_alert_present&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_to_alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;NoAlertPresentException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;close_alert_and_get_its_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;alert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_to_alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;alert_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept_next_alert&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;alert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;alert_text&lt;/span&gt;
            &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept_next_alert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;([],&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verificationErrors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="references"&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://phantomjs.org/release-1.8.html"&gt;http://phantomjs.org/release-1.8.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ariya/phantomjs/wiki/API-Reference"&gt;https://github.com/ariya/phantomjs/wiki/API-Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs"&gt;http://www.realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Attack of the Spiders, Bots, and Crawlers</title><link href="http://blog.john-pfeiffer.com/attack-of-the-spiders-bots-and-crawlers" rel="alternate"></link><updated>2013-07-20T23:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-07-20:attack-of-the-spiders-bots-and-crawlers</id><summary type="html">&lt;p&gt;It is well known that search engines need to index what the contents of webpages are in order to return accurate results to Users. It may not be well known how much traffic that generates.&lt;/p&gt;
&lt;p&gt;In this sampling from my logs (not representative of anything), 57% of the traffic in the log is from bots (I'm not turning them away, skip to the end on how to do that).&lt;/p&gt;
&lt;p&gt;Drupal (CMS) is remarkably good at making content for bots to read so it's not surprising they're all slurping, and of course if you want to be popular you need all of those indexes to know about you...&lt;/p&gt;
&lt;h3 id="how-many-hits-from-each-kind-of-bot"&gt;How many hits from each kind of bot&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | wc -l&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1108 hits&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat john-pfeiffer.access | grep -v &amp;quot;Baiduspider&amp;quot; | grep -v &amp;quot;bingbot&amp;quot; | grep -v &amp;quot;YandexBot&amp;quot; | grep -v &amp;quot;Sogou&amp;quot; | grep -v &amp;quot;Mail.RU\_Bot&amp;quot; | grep -v &amp;quot;Googlebot&amp;quot; | grep -v &amp;quot;SISTRIX Crawler&amp;quot; | grep -v &amp;quot;MJ12bot&amp;quot; | wc -l  
637
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Googlebot" | wc -l&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;105 hits from &lt;a href="https://en.wikipedia.org/wiki/Googlebot"&gt;https://en.wikipedia.org/wiki/Googlebot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "bingbot" | wc -l&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;96 hits from &lt;a href="http://en.wikipedia.org/wiki/Bingbot"&gt;http://en.wikipedia.org/wiki/Bingbot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Baiduspider" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;93 hits from &lt;a href="http://baidu.com/search/spider_english.html"&gt;http://baidu.com/search/spider_english.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "SISTRIX Crawler" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;76 hits from &lt;a href="http://crawler.sistrix.net"&gt;http://crawler.sistrix.net&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "YandexBot" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;64 hits from &lt;a href="http://www.botopedia.org/user-agent-list/search-bots/yandex-bot"&gt;http://www.botopedia.org/user-agent-list/search-bots/yandex-bot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Mail.RU\_Bot" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;23 hits from &lt;a href="http://www.webmasterworld.com/search_engine_spiders/4520951.htm"&gt;http://www.webmasterworld.com/search_engine_spiders/4520951.htm&lt;/a&gt; , &lt;a href="http://www.botopedia.org/user-agent-list/search-bots/mailru-bot"&gt;http://www.botopedia.org/user-agent-list/search-bots/mailru-bot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "MJ12bot" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;12 hits from &lt;a href="http://www.majestic12.co.uk/projects/dsearch/mj12bot.php"&gt;http://www.majestic12.co.uk/projects/dsearch/mj12bot.php&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat john-pfeiffer.access | grep "Sogou" | wc -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7 hits from &lt;a href="http://www.botopedia.org/user-agent-list/search-bots/sogou-spider"&gt;http://www.botopedia.org/user-agent-list/search-bots/sogou-spider&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="more-info-on-bots-and-crawlers"&gt;More Info on Bots and Crawlers&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.incapsula.com/the-incapsula-blog/item/393-know-your-top-10-bots"&gt;http://www.incapsula.com/the-incapsula-blog/item/393-know-your-top-10-bots&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://searchenginewatch.com/article/2067357/Bye-bye-Crawler-Blocking-the-Parasites"&gt;http://searchenginewatch.com/article/2067357/Bye-bye-Crawler-Blocking-the-Parasites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Besides robots.txt you are pretty much left with ban by User-Agent or IP Address Range.)&lt;/p&gt;</summary></entry><entry><title>Logic Puzzles</title><link href="http://blog.john-pfeiffer.com/logic-puzzles" rel="alternate"></link><updated>2013-05-13T05:31:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-05-13:logic-puzzles</id><summary type="html">
&lt;h4 id="how-to-have-two-1-hour-uneven-burning-fuses-burn-for-45-mins"&gt;How to have two 1 hour uneven burning fuses burn for 45 mins?&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;light only ONE end &lt;/li&gt;
&lt;li&gt;burn both ends = 30 mins&lt;/li&gt;
&lt;li&gt;when it finishes, light the other end&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="three-light-bulbs-are-all-off-in-one-room-three-light-switches-in-another"&gt;Three light bulbs are all off in one room, three light switches in another...&lt;/h4&gt;
&lt;p&gt;...If you can't see the bulbs from the switch room, how can you tell which connects to which if you can only enter the bulb room once?&lt;/p&gt;
&lt;p&gt;Flip the first switch for one bulb for many minutes, then turn it off.&lt;/p&gt;
&lt;p&gt;Flip the second switch on. Enter the bulb room, the bulb on connects to the second switch, the warmer of the two bulbs off is the first switch.  &lt;/p&gt;
&lt;h4 id="at-night-4-people-arrive-at-one-side-of-a-bridge"&gt;At night 4 people arrive at one side of a bridge...&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;...that can only support 2 people at a time and they have only one flashlight.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If each were alone here's how fast they could cross: the first in 15 minutes, the second in 10 minutes, the third in 2 minutes and the fourth in 1 minute. &lt;/p&gt;
&lt;p&gt;If the flashlight only has 17 minutes how do they cross?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The 1 minute and 2 minute cross together (takes 2 minutes). &lt;/li&gt;
&lt;li&gt;The 1 minute returns (total is now 3 minutes). &lt;/li&gt;
&lt;li&gt;The 10 and 5 minutes cross together (total is now 13 minutes). &lt;/li&gt;
&lt;li&gt;The 2 minute returns (the total is now 15 minutes). &lt;/li&gt;
&lt;li&gt;Finally the 1 minute and 2 minute cross again (17 minutes and complete).  &lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="3-bags-contain-all-oranges-all-apples-or-a-mix-of-oranges-and-apples"&gt;3 bags contain all oranges, all apples, or a mix of oranges and apples...&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;...BUT the label on each definitely is incorrect. How do you find out which bag has what and how many bags to you need to open?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Choose the one labeled "mixed" and if it contains apples, therefore the remaining bag which is labelled oranges must not contain all oranges and so must be the mixed one.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="there-are-3-red-hats-and-2-blue-hats-in-a-bag"&gt;There are 3 red hats and 2 blue hats in a bag....&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Andrew, Bob, and Carol each reach into the box and place one of the hats on their own head.
They cannot see what color hat they have chosen.
Then they sit down all facing in the same direction: Andrew &amp;lt;-- Bob &amp;lt;--Carol&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Such that Carol can see what color Bob and Andrew are wearing. &lt;/li&gt;
&lt;li&gt;Bob can see what color Andrew is wearing. &lt;/li&gt;
&lt;li&gt;Andrew can't see anyone's hats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The first person to say what color hat they are wearing wins.&lt;/strong&gt; 
The winner of the game gets a billion dollars... But if they guess wrong, they die... so nobody wants to try "just guessing"...&lt;/p&gt;
&lt;p&gt;SO... after they grab their hats and sit down, a long time passes...&lt;/p&gt;
&lt;p&gt;Eventually somebody says "I have the answer" and successfully states what color hat they have.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Since Carol can see Andrew and Bob, if they both were wearing blue hats she would immediately know that she was wearing red, so unlikely that a long time would pass before she answered (and take the money)...&lt;/li&gt;
&lt;li&gt;Therefore Andrew and Bob have one red hat and one blue hat. (And Carol knows there's a 33% chance she's got a blue hat and a 66% chance she's got a red hat).&lt;/li&gt;
&lt;li&gt;Since Bob knows that Carol delayed in answering "a long time passes" AND he can see the color of hat that Andrew is wearing, then&lt;/li&gt;
&lt;li&gt;Either Andrew is wearing a blue hat, and therefore Bob must be wearing a red hat.  &lt;/li&gt;
&lt;li&gt;Or Andrew is wearing a red hat, and therefore Bob must be wearing a blue hat.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bob successfully answers...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(unless Carol is more interested in sadistic plots and even though she knows both Bob and Andrew have blue hats she just waits to watch Bob get it wrong...)&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;NOTE: this variation from the NY Times is slightly incorrect as it is essentially asking why Andrew wins... 
The clue in order for "Andrew" to know (the delay) is the same as what Bob uses, but Bob will be able to deduce it much faster. 
(Again, Carol could be deliberately waiting to watch Andrew fail too...)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://tierneylab.blogs.nytimes.com/2009/03/16/the-puzzle-of-the-3-hats"&gt;http://tierneylab.blogs.nytimes.com/2009/03/16/the-puzzle-of-the-3-hats&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="one-ball-of-8-weighs-more-than-the-other-7-how-can-you-identify-it-with-two-measurings-of-a-balance-scale"&gt;One ball of 8 weighs more than the other 7, how can you identify it with two measurings of a balance scale?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&lt;br/&gt;
Weigh 3 vs 3, if they match then weigh one of the "good" ones against
one of the remaining ones, if they're unequal you have the heavier one,
if they're equal then the last is the heavy one.  &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If the 3 vs 3 do not match then take two of the heavy side and weigh
them against each other: if they're unequal you have the heavier one, if
they're equal then the last of the heavy side is the heavy one.&lt;br/&gt;
&lt;/p&gt;
&lt;h4 id="one-ball-of-12-weighs-more-or-less-than-the-other-11-how-can-you-identify-it-and-whether-its-heavier-or-lighter-with-three-measurings-of-a-balance-scale"&gt;One ball of 12 weighs more OR less than the other 11, how can you identify it and whether it's heavier or lighter with three measurings of a balance scale?&lt;/h4&gt;
&lt;p&gt;&lt;/p&gt;&lt;br/&gt;
&lt;em&gt;Weigh 4 vs 4, label them ABCD and EFGH. If they balance then weigh
"good" ABC against WXY. If the second weighing balances then weigh Z
against A to see if Z is light or heavy. If the second weighing has WXY
heavier or lighter (make a note of which as we have solved whether the
imbalance is heavy or light), then weigh W with X. If they balance then
Y is the imbalance from step 2 (heavier or lighter). If they do not
balance then whichever matches the imbalance from step 2 is the off
ball.&lt;/em&gt;

&lt;p&gt;IF at the first weighing ABCD was lighter than EFGH, in the second
weighing rotate such that ABCZ is weighed against D with "good" XYZ. If
...&lt;/p&gt;

&lt;p&gt;Note that this problem can also be solved by carefully measuring the
results as the left and right groups of 4 are rotated.&lt;/p&gt;

&lt;p&gt;12 becomes 4 v 4 v (4) - if the balance the last 4 are easy  &lt;/p&gt;
&lt;p&gt;if not balanced: 1,2,5 vs 3,6,12&lt;/p&gt;

&lt;h4 id="5-pots-of-10g-coins-but-one-contains-9g-coins-which-pot-is-off-by-measuring-the-weight-once"&gt;5 pots of 10g coins BUT one contains 9g coins, which pot is off by measuring the weight once?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&lt;br/&gt;
1 from pot 1, 2 from pot 2, 3 from pot 3, 4 from pot 4, and 5 from pot 5  &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Expected weight should be 150g: if it’s 149 then pot 1 , if it’s 148 then pot 2, etc.&lt;br/&gt;
&lt;/p&gt;
&lt;h4 id="how-can-you-use-a-weighted-coin-ie-head-more-than-tails-and-still-create-a-fair-system-of-flips"&gt;How can you use a weighted coin (i.e. head more than tails) and still create a fair system of flips?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Aggregate the outcomes: treat two flips as a single result such that heads then tails = Heads, and tails followed by heads = Tails.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="10-are-heads-of-n-coins-how-to-create-2-groups-that-have-the-same-number-of-heads-up"&gt;10 are heads of N coins, how to create 2 groups that have the same number of heads up?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Take any 10 from N and flip them (inverted will mirror the number of heads in the N - 10 group)&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="3-colors-of-socks-how-many-to-take-out-until-you-have-a-pair"&gt;3 colors of socks: how many to take out until you have a pair?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;4 (1 of each and the last 1 must match 1 of the first 3)&lt;/em&gt;&lt;/p&gt;
&lt;h4 id="100-closed-lockers-open-all-of-the-lockers-on-the-first-pass"&gt;100 closed lockers, open all of the lockers on the first pass...&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt; ...close every 2nd locker on the second pass, on the third pass and for every 3rd locker open it if it's closed, close it if it's open.&lt;/strong&gt;
&lt;strong&gt;After the hundreth pass, how many lockers are open?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;br/&gt;
i.e. after the hundreth the locker 12 was opened on pass 1, closed pass 2, opened pass 3, closed pass 4, opened pass 6, closed pass 12.  &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;locker 13 (prime) was opened on pass 1 and closed on pass 13.&lt;/p&gt;
&lt;p&gt;locker 16: opened on 1, closed on 2, opened on 4, closed on 8, opened on 16!&lt;/p&gt;

&lt;p&gt;There are 9 perfect squares under one hundred: 1, 4, 9, 16, 25, 36, 49, 64, 81  &lt;/p&gt;

&lt;h4 id="incomplete-puzzles"&gt;Incomplete Puzzles&lt;/h4&gt;

&lt;p&gt;Minutes Degrees from 12:00 = mins * 6  &lt;/p&gt;
&lt;p&gt;Hours Degrees From 12:00 = hours * 30 + mins * .5&lt;/p&gt;

&lt;p&gt;Find 1 duplicate in 100 numbers of 1 to 100 = add them up and subtract sum of 1 to 100  &lt;/p&gt;
&lt;p&gt;ALTERNATIVES: hashmap O(1), sort and then scan looking for a double entry (nLog(n) if mergesort? + n ), n\^2 if using brute force&lt;/p&gt;

&lt;p&gt;Sorted List rotated: find min = naive if curr &amp;lt; prev is O(n)  &lt;/p&gt;
&lt;p&gt;Binary Search compare first and mid, if ordered then reset is in partition &amp;gt; mid (RIGHT)  &lt;/p&gt;
&lt;p&gt;find any elem: if &amp;gt; first and Ordered then LEFT&lt;/p&gt;

&lt;p&gt;BAD: binary search against the "fixed" list using the min location as an offset with mod list size ?&lt;/p&gt;

&lt;p&gt;nxn matrix of numbers in ascending order in both dimensions how would you go about finding if the number y is in the matrix.&lt;/p&gt;

&lt;p&gt;5623 players in a tournament, how many matches must be played?&lt;/p&gt;
&lt;p&gt;5622 (everybody loses at least once except the winner)&lt;/p&gt;

&lt;h4 id="unsolved-puzzles"&gt;Unsolved Puzzles&lt;/h4&gt;

&lt;p&gt;N different flavored Cakes (each with a different Volume) for K people,
each person should get an equal volume of Cake (but only a single
flavor)  &lt;/p&gt;
&lt;p&gt;V’s 1, 2, 3, 4 for 5 people  &lt;/p&gt;
&lt;p&gt;add all volumes together / people = “theoretical best” (i.e. 10/5 = 2)  &lt;/p&gt;
&lt;p&gt;start with 2 cakes, 4 + 1, so V=1 for K, next 4 + 2 = doesn’t work, 4+3
doesn’t work  &lt;/p&gt;
&lt;p&gt;3 cakes: 4+3+2 = 9 BUT not divisible by 5  &lt;/p&gt;
&lt;p&gt;1 * 1, 2 * 1, 2 * 1 = waste 5 ( 10-5)  &lt;/p&gt;
&lt;p&gt;discard&lt;/p&gt;

&lt;h4 id="random-facts"&gt;Random Facts&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;World Population (estimated 2012) = 7 Billion  &lt;/li&gt;
&lt;li&gt;US Population (estimated 2012) = 316 Million  &lt;/li&gt;
&lt;li&gt;Earth circumference (equator) = 24,901.55 miles (40,075.16 kilometers)&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>A More Complete Education</title><link href="http://blog.john-pfeiffer.com/a-more-complete-education" rel="alternate"></link><updated>2013-05-09T16:52:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-05-09:a-more-complete-education</id><summary type="html">
&lt;h2 id="introduction-to-programming"&gt;Introduction to Programming&lt;/h2&gt;
&lt;h3 id="stanford-programming-methodology"&gt;Stanford "Programming Methodology"&lt;/h3&gt;
&lt;p&gt;by Mehran Sahami (very fun and Java is a good starting point)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://see.stanford.edu/see/lecturelist.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111"&gt;http://see.stanford.edu/see/lecturelist.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/programming-methodology/id384232896"&gt;https://itunes.apple.com/us/itunes-u/programming-methodology/id384232896&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="harvard"&gt;Harvard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.extension.harvard.edu/open-learning-initiative/intensive-introduction-computer-science"&gt;http://www.extension.harvard.edu/open-learning-initiative/intensive-introduction-computer-science&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="an-introduction-to-interactive-programming-in-python"&gt;An Introduction to Interactive Programming in Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/interactivepython"&gt;https://www.coursera.org/course/interactivepython&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="mit"&gt;MIT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/introduction-computer-science-python-mitx-6-00-1x"&gt;https://www.edx.org/course/introduction-computer-science-python-mitx-6-00-1x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="design-of-computer-programs"&gt;Design of Computer Programs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs101"&gt;https://www.udacity.com/course/cs101&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/ud036"&gt;https://www.udacity.com/course/ud036&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs212"&gt;https://www.udacity.com/course/cs212&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs253"&gt;https://www.udacity.com/course/cs253&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="networking"&gt;Networking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://online.stanford.edu/course/intro-computer-networking-winter-2014"&gt;http://online.stanford.edu/course/intro-computer-networking-winter-2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="algorithms"&gt;Algorithms&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Algorithms of course!&lt;/strong&gt; &lt;/p&gt;
&lt;h3 id="mit_1"&gt;MIT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011"&gt;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/introduction-to-algorithms/id341597754"&gt;https://itunes.apple.com/us/itunes-u/introduction-to-algorithms/id341597754&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures"&gt;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="stanford"&gt;Stanford&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://see.stanford.edu/see/lecturelist.aspx?coll=11f4f422-5670-4b4c-889c-008262e09e4e"&gt;http://see.stanford.edu/see/lecturelist.aspx?coll=11f4f422-5670-4b4c-889c-008262e09e4e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/programming-abstractions/id384232917"&gt;https://itunes.apple.com/us/itunes-u/programming-abstractions/id384232917&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/algo"&gt;https://www.coursera.org/course/algo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/algo2"&gt;https://www.coursera.org/course/algo2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="princeton"&gt;Princeton&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/algs4partI"&gt;https://www.coursera.org/course/algs4partI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/algs4partII"&gt;https://www.coursera.org/course/algs4partII&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="theoretical-computer-science"&gt;Theoretical Computer Science&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs313"&gt;https://www.udacity.com/course/cs313&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="information-and-models"&gt;Information and Models&lt;/h2&gt;
&lt;h3 id="mit_2"&gt;MIT&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-050j-information-and-entropy-spring-2008/"&gt;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-050j-information-and-entropy-spring-2008/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(also at &lt;a href="https://itunes.apple.com/us/itunes-u/information-and-entropy/id424082281"&gt;https://itunes.apple.com/us/itunes-u/information-and-entropy/id424082281&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="university-of-michigan"&gt;University of Michigan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://class.coursera.org/modelthinking-2012-002/class/index"&gt;https://class.coursera.org/modelthinking-2012-002/class/index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="harvard_1"&gt;Harvard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.extension.harvard.edu/open-learning-initiative/bits"&gt;http://www.extension.harvard.edu/open-learning-initiative/bits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="software-engineering"&gt;Software Engineering&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/security"&gt;https://www.coursera.org/course/security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/ud805"&gt;https://www.udacity.com/course/ud805&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/cs258"&gt;https://www.udacity.com/course/cs258&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="vanderbilt"&gt;Vanderbilt&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/posa"&gt;https://www.coursera.org/course/posa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="practice-practice-practice"&gt;PRACTICE, PRACTICE, PRACTICE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://codingbat.com/python"&gt;http://codingbat.com/python&lt;/a&gt; (beginner)  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://projecteuler.net"&gt;http://projecteuler.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://acm.timus.ru"&gt;http://acm.timus.ru&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spoj.com/problems/classical"&gt;http://www.spoj.com/problems/classical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://leetcode.com/onlinejudge"&gt;http://leetcode.com/onlinejudge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codeforces.com/problemset"&gt;http://codeforces.com/problemset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com"&gt;https://www.hackerrank.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="mooc"></category><category term="free education"></category><category term="distance learning"></category><category term="cs on iphone"></category><category term="programming videos"></category><category term="programming"></category></entry><entry><title>Jinja2, a web html template layout for everyone</title><link href="http://blog.john-pfeiffer.com/jinja2-a-web-html-template-layout-for-everyone" rel="alternate"></link><updated>2013-04-30T04:35:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-04-30:jinja2-a-web-html-template-layout-for-everyone</id><summary type="html">
&lt;p&gt;Web development used to be so hard (and static). (read &amp;amp;#60;bold&amp;amp;#62;)&lt;/p&gt;
&lt;p&gt;Now everyone realizes (along with version control and automated testing) that decoupling views and displays from dynamic code makes everyone's life easier! &lt;/p&gt;
&lt;p&gt;(Refresh your colors and layout without having to touch your backend logic! Re-engineer your persistence layer and business logic but leave your uber wow design intact! Allow front end and back end developers to work in parallel!)&lt;/p&gt;
&lt;p&gt;Jinja2 is an excellent framework for python developers (to go with your uwsgi + django or webapp2) to get html templates (do not repeat yourself!) that can show off all of your backend python data magic with some pizazz.&lt;/p&gt;
&lt;p&gt;It's fairly easy to do all sorts of powerful things (like accessing variables, loops, etc.)
&lt;a href="http://jinja.pocoo.org/docs"&gt;http://jinja.pocoo.org/docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When combined with css and jquery (i.e. tablesorter) you can quickly throw together a decent looking interactive experience.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jquery.com/download"&gt;http://jquery.com/download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tablesorter.com/docs"&gt;http://tablesorter.com/docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's my budding ode to sorting algorithms (yes, Google App Engine is free)
&lt;a href="http://john-pfeiffer.appspot.com/algorithms"&gt;http://john-pfeiffer.appspot.com/algorithms&lt;/a&gt;  #TODO: finish using jquery tablesorter&lt;/p&gt;
&lt;p&gt;A webapp2 project layout and source code example (please excuse the code formatting, you'll need to imagine the correct indents)...&lt;/p&gt;
&lt;h2 id="file-layout"&gt;File Layout&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;assets/css/style.css  
assets/css/tablesorter.css  
assets/images/css/asc.gif (bg.gif, desc.gif, etc.)  
assets/js/jquery-1.9.1.min.js  
assets/js/jquery.tablesorter.min.js

mainhandler.py  
templates/main.html  
app.yaml (only required if using AppEngine)  
main.py  
routes.py
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="appyaml"&gt;app.yaml&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jinja2&lt;/span&gt;  
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;  
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;  
&lt;span class="n"&gt;static_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;  
&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;  
&lt;span class="n"&gt;static_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;  
&lt;span class="n"&gt;static_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;  
&lt;span class="n"&gt;static_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/.*&lt;/span&gt;  
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;


&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;  
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;  
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latest&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="mainpy"&gt;main.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;routes&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;entry_points&lt;/span&gt;

&lt;span class="c"&gt;# must be named "application" for uwsgi webapp2, in AppEngine it should be "app"&lt;/span&gt;
&lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;entry_points&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="routespy"&gt;routes.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mainhandler&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;

&lt;span class="c"&gt;# Map url's to handlers in the handlers module , optionally choosing specific target method and request type&lt;/span&gt;
&lt;span class="n"&gt;entry_points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;'/main'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handler_method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'get'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="mainhandlerpy"&gt;mainhandler.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jinja2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="c"&gt;# weird hack to ensure we go up a directory level to correctly find the templates directory&lt;/span&gt;
&lt;span class="n"&gt;jinja_environment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileSystemLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;# a list of tuples&lt;/span&gt;
        &lt;span class="n"&gt;result_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'apples'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'bananas'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'cherries'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; 
        &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja_environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;'templates/main.html'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;template_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'fruits and colors'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'body_content'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'fruits and colors'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'result_list'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;result_list&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'text/html'&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;template_values&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="templatesmainhtml"&gt;templates/main.html&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/html"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"text/html; charset=utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/css/tablesorter.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/js/jquery-1.9.1.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/js/jquery.tablesorter.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;body_content&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"results"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"tablesorter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;thead&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Fruit&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Color&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;result_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#results"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;tablesorter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sortList&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;sort&lt;/span&gt; &lt;span class="nx"&gt;descending&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="non-google-app-engine-etcinitduwsgish-might-look-like"&gt;Non Google App Engine /etc/init.d/uwsgi.sh might look like:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# 2013-02-22 johnpfeiffer&lt;/span&gt;

start&lt;span class="o"&gt;(){&lt;/span&gt;
    /usr/local/bin/uwsgi --pidfile /var/www/pidfile-uwsgi.pid --touch-reload&lt;span class="o"&gt;=&lt;/span&gt;/var/www/pidfile-uwsgi.pid --logto2 /var/www/python-john/uwsgi.log --http :8080 --wsgi-file /var/www/main.py --pythonpath /var/www/ &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="nb"&gt;kill&lt;/span&gt; -INT &lt;span class="sb"&gt;`&lt;/span&gt;cat /var/www/pidfile-uwsgi.pid&lt;span class="sb"&gt;`&lt;/span&gt;
    sleep 1
&lt;span class="o"&gt;}&lt;/span&gt;

status&lt;span class="o"&gt;(){&lt;/span&gt;
    ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep uwsgi
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; in
status&lt;span class="o"&gt;)&lt;/span&gt;
    status
    &lt;span class="nb"&gt;exit &lt;/span&gt;0
    &lt;span class="p"&gt;;;&lt;/span&gt;
start&lt;span class="o"&gt;)&lt;/span&gt;
    start
    &lt;span class="nb"&gt;exit &lt;/span&gt;0
    &lt;span class="p"&gt;;;&lt;/span&gt;
stop&lt;span class="o"&gt;)&lt;/span&gt;
    stop
    &lt;span class="nb"&gt;exit &lt;/span&gt;0
    &lt;span class="p"&gt;;;&lt;/span&gt;
reload&lt;span class="p"&gt;|&lt;/span&gt;restart&lt;span class="p"&gt;|&lt;/span&gt;force-reload&lt;span class="o"&gt;)&lt;/span&gt;
    stop
    start
    &lt;span class="nb"&gt;exit &lt;/span&gt;0
    &lt;span class="p"&gt;;;&lt;/span&gt;
**&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|reload}"&lt;/span&gt; 1&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="alternate-flask-jinja2-example"&gt;Alternate Flask Jinja2 Example&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/johnpfeiffer/tddflask/src"&gt;https://bitbucket.org/johnpfeiffer/tddflask/src&lt;/a&gt;&lt;/p&gt;</summary><category term="programming"></category><category term="jinja2"></category><category term="python"></category><category term="webapp2"></category><category term="tablesorter.js"></category></entry><entry><title>Fix Byobu infinite scroll bug on Ubuntu 12.04 Precise Pangolin</title><link href="http://blog.john-pfeiffer.com/fix-byobu-infinite-scroll-bug-on-ubuntu-1204-precise-pangolin" rel="alternate"></link><updated>2013-02-15T17:36:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-02-15:fix-byobu-infinite-scroll-bug-on-ubuntu-1204-precise-pangolin</id><summary type="html">
&lt;p&gt;After installing Ubuntu Server 12.04 (Precise Pangolin) I was disappointed to see that one of my favorite utilities, byobu (an improvement on the classic screen = multi ssh screen with status and hotkeys), had an infinite scroll problem. &lt;/p&gt;
&lt;p&gt;(Quick, type exit before your screen disappears entirely!)&lt;/p&gt;
&lt;p&gt;Amazingly this bug shipped in the official Ubuntu Release even though byobu 5.17 lists it as a fixed.&lt;/p&gt;
&lt;h2 id="easy-workaround-is"&gt;Easy workaround is:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;byobu-config
Toggle status notifications
Use the arrow keys to scroll down and space bar to disable the logo  
Tab and Enter to Apply -&amp;gt; then Exit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can safely use "byobu" on the command line in Ubuntu 12.04!&lt;/p&gt;
&lt;p&gt;p.s. Control + a (screen mode) and then Control + a , then c ... 
now you've got multiple screens! &lt;/p&gt;
&lt;p&gt;(Control + a + 0 to go to screen 0, control + a + a to jump to the last used screen)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.ubuntu.com/community/Byobu"&gt;https://help.ubuntu.com/community/Byobu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A fix for Windows Putty users ... Window -&amp;gt; Translation -&amp;gt; UTF8 (the ISO-8859 + byobu UTF8 logo = ugh)&lt;/p&gt;
&lt;p&gt;(An untested alternate workaround: .byobu/status::tmux_left : "logo" -&amp;gt; "#logo" )&lt;/p&gt;
&lt;h2 id="update-for-12042"&gt;UPDATE for 12.04.2!&lt;/h2&gt;
&lt;p&gt;byobu in Ubuntu 12.04 uses tmux as the backend. You can change this by running byobu-select-backend and selecting screen&lt;/p&gt;
&lt;p&gt;Thanks for the tip Eric!&lt;/p&gt;</summary><category term="byobu"></category><category term="linux"></category><category term="ubuntu"></category></entry><entry><title>Google App Engine Python</title><link href="http://blog.john-pfeiffer.com/google-app-engine-python" rel="alternate"></link><updated>2013-01-26T15:01:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2013-01-26:google-app-engine-python</id><summary type="html">
&lt;p&gt;Sign up for Google App Engine (gmail + SMS verification)&lt;/p&gt;
&lt;p&gt;"Google App Engine (often referred to as GAE or simply App Engine, and also used by the acronym GAE/J) is a platform as a service (PaaS) cloud computing platform for developing and hosting web applications in Google-managed data centers."&lt;/p&gt;
&lt;p&gt;Login and create an Application (e.g. named john-pfeiffer reachable at &lt;a href="http://john-pfeiffer.appspot.com"&gt;http://john-pfeiffer.appspot.com&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Download and extract the SDK (e.g. gae-python.zip)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd google_appengine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp -a new_project_template helloworld&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="helloworldappyaml"&gt;helloworld/app.yaml&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pfeiffer&lt;/span&gt;  
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;  
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
&lt;span class="n"&gt;static_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/.*&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="helloworldmainpy"&gt;helloworld/main.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hi World!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="view-the-app-on-your-local-machine"&gt;View the app on your local machine&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;./dev_appserver.py helloworld&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;INFO 2012-12-27 04:20:20,399 dev_appserver_multiprocess.py:655]
Running application dev\~john-pfeiffer on port 8080:
http://localhost:8080&lt;/p&gt;
&lt;p&gt;INFO 2012-12-27 04:20:20,399 dev_appserver_multiprocess.py:657] Admin console is available at: http://localhost:8080/_ah/admin&lt;/p&gt;
&lt;h2 id="upload-the-app-to-google-app-engine"&gt;Upload the app to Google App Engine&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;./appcfg.py update helloworld/&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pfeiffer&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Starting&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pfeiffer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Getting&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;resource&lt;/span&gt; &lt;span class="n"&gt;limits&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Scanning&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Cloning&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Cloning&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Uploading&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;blobs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Uploaded&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;blobs&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Compilation&lt;/span&gt; &lt;span class="n"&gt;starting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Compilation&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Starting&lt;/span&gt; &lt;span class="n"&gt;deployment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Checking&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;deployment&lt;/span&gt; &lt;span class="n"&gt;succeeded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Will&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;again&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Checking&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;deployment&lt;/span&gt; &lt;span class="n"&gt;succeeded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Will&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;again&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Checking&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;deployment&lt;/span&gt; &lt;span class="n"&gt;succeeded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;Deployment&lt;/span&gt; &lt;span class="n"&gt;successful&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://john-pfeiffer.appspot.com"&gt;http://john-pfeiffer.appspot.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;appcfg.py download_app -A -V&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="appyaml"&gt;app.yaml&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pfeiffer&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python27&lt;/span&gt;
&lt;span class="n"&gt;api_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;threadsafe&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;

&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
&lt;span class="n"&gt;static_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;
&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ico&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/.*&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2.5.2"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="mainpy"&gt;main.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webapp2&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'hello John Pfeiffer!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PageOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"""&lt;/span&gt;
&lt;span class="s"&gt;            PageOne&lt;/span&gt;
&lt;span class="s"&gt;        """&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PageTwo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PageTwo'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;get_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;
        &lt;span class="n"&gt;post_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_values&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIApplication&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;  
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/page-one'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PageOne&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/page-two'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PageTwo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;  
    &lt;span class="n"&gt;run_wsgi_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="update-the-code-in-the-cloud"&gt;Update the code in the cloud&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;./appcfg.py update john-pfeiffer&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;update does not publish the new version yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;./appcfg.py set_default_version john-pfeiffer&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;or you can use the WebUI dashboard to change the default or delete a Version for an Application Instance&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://cloud.google.com/appengine/docs/python/config/appconfig"&gt;https://cloud.google.com/appengine/docs/python/config/appconfig&lt;/a&gt;&lt;/p&gt;</summary><category term="programming"></category><category term="google app engine"></category><category term="python"></category><category term="webapp2"></category></entry><entry><title>Server Operations: Cloud versus Build Your Own</title><link href="http://blog.john-pfeiffer.com/server-operations-cloud-versus-build-your-own" rel="alternate"></link><updated>2012-11-08T17:06:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-11-08:server-operations-cloud-versus-build-your-own</id><summary type="html">&lt;p&gt;Here's my response to Jeff Atwood's calculations and incorrect conclusion about Building Your Own Server: I'm not sure I know when an organization's Production deployment doesn't need reduced
complexity/costs (people!), flexibility for load, and redundancy...&lt;/p&gt;
&lt;p&gt;"Anyway, I want to make it clear that building and colocating your own servers isn't (always) crazy, it isn't scary, heck, it isn't even particularly hard. In some situations it can make sense to build and rack your own servers, provided ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you want absolute top of the line server performance without paying thousands of dollars per month for the privilege&lt;/li&gt;
&lt;li&gt;you are willing to invest the time in building, racking, and configuring your servers&lt;/li&gt;
&lt;li&gt;you have the capital to invest up front&lt;/li&gt;
&lt;li&gt;you desire total control over the hardware&lt;/li&gt;
&lt;li&gt;you aren't worried about the flexibility of quickly provisioning new servers to handle unanticipated load&lt;/li&gt;
&lt;li&gt;you don't need the redundancy, geographical backup, and flexibility that comes with cloud virtualization"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://www.codinghorror.com/blog/2012/10/building-servers-for-fun-and-prof-ok-maybe-just-for-fun.html"&gt;http://www.codinghorror.com/blog/2012/10/building-servers-for-fun-and-prof-ok-maybe-just-for-fun.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Jeff, long time fan, first time commenter... I love building servers too and I've managed a small group of servers, I personally use Linode, and my currently company uses AWS and some internal servers...&lt;/p&gt;
&lt;p&gt;You would agree that in coding you pick the right tool for the job (scientific computing would use a different technology stack than a standard ecommerce startup website)...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;AWS is elastic (you pay a premium for being to scale up or down - and there's value to the agility with which you can change or add new services)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS RDS is a huge improvement over managing MySQL replication, and they have Elastic Load Balancing and lots of other addons that take serious Ops chops to create and maintain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server operations cost is not the raw hardware:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The biggest cost in Ops is people (same as coding), so leveraging Amazon saves on how many people you need to pay to manage your server farm (yes, SysAdmins take holidays and change jobs so cost = N+1 )... you can outsource half way by colocating but setting up the redundancy, monitoring, auto scaling, etc. becomes a physical pain (you want West Coast and East Coast  servers, right?).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The infrastructure of cooling, UPS, network (bandwidth!), backups, etc. is also a big factor in Operations (does your server room have building security? a backup generator?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My point is that for a stealth mode startup or any internal lab testing buying servers is a no brainer - do it with ESXi or OpenStack and hack away!&lt;/p&gt;
&lt;p&gt;BUT for Production you'll need some Cloud strategy (AWS competitors: RedHat OpenShift, RackSpace Cloud, IBM, ATT Compute, Google AppEngine, etc. means lower prices and improved services)&lt;/p&gt;
&lt;p&gt;Unless, as you've already mentioned, "if you happen to have hanging around a pile of cash and tech expertise that's underutilized..."&lt;/p&gt;</summary><category term="cloud"></category><category term="startup planning"></category><category term="ops"></category></entry><entry><title>Tomcat deployment on Openshift for free</title><link href="http://blog.john-pfeiffer.com/tomcat-deployment-on-openshift-for-free" rel="alternate"></link><updated>2012-09-11T13:48:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-09-11:tomcat-deployment-on-openshift-for-free</id><summary type="html">
&lt;p&gt;openshift is the cloud PaaS offering from RedHat&lt;/p&gt;
&lt;h3 id="prerequisites-and-dependencies"&gt;Prerequisites and dependencies&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get update
sudo apt-get install ruby1.9.3 git-core
//yay for ubuntu 12.04

sudo gem install rhc
//red hat openshift client
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="openshift-client-tools-setup"&gt;OpenShift Client tools setup&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rhc setup&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Created local config file: /home/ubuntu/.openshift/express.conf
The express.conf file contains user configuration, and can be transferred to different computers.
No SSH keys were found. We will generate a pair of keys for you.

2: No such file or directory
Created: /home/ubuntu/.ssh/id_rsa.pub

Your public ssh key must be uploaded to the OpenShift server. Would you like us to upload it for you? (yes/no) yes
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="rhc-commands"&gt;rhc commands&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rhc -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc domain show&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;prompts for password&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;rhc app create -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Valid application types are (nodejs-0.6, ruby-1.9, jbossas-7, python-2.6, jenkins-1.4, ruby-1.8, jbosseap-6.0, diy-0.1, php-5.3, perl-5.10)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app create -a john -t diy-0.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app show -a john&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app cartridge list&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="your-local-git-repo"&gt;Your local git repo&lt;/h3&gt;
&lt;p&gt;ON YOUR LOCAL MACHINE BROWSE TO WHERE YOU WANT TO STORE YOUR GIT REPO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone ssh://a261d0fc2932413694456e3473fdc972@APPNAME-DOMAIN.rhcloud.com/~/git/...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="repo-layout-of-johnrepo"&gt;REPO LAYOUT of ~/john/repo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.openshift/action_hooks/start - Script that gets run to start your application  
.openshift/action_hooks/stop - Script that gets run to stop your application  
.openshift/action_hooks/pre_build - Script that gets run every git push before the build  
.openshift/action_hooks/build - Script that gets run every git push as part of the build process &lt;span class="o"&gt;(&lt;/span&gt;on the CI system &lt;span class="k"&gt;if&lt;/span&gt; available&lt;span class="o"&gt;)&lt;/span&gt;  
.openshift/action_hooks/deploy - Script that gets run every git push after build but before the app is restarted  
.openshift/action_hooks/post_deploy - Script that gets run every git push after the app is restarted

diy  
misc  
README  
static/ If it exists externally exposed static content goes here
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CHANGES ARE ONE DIRECTIONAL FROM THE GIT CLONE TO THE OPENSHIFT BOX&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv diy/testrubyserver.rb ../misc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv diy/index.html ../misc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -m "moved initial test stuff to /misc"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if the app is running then a git push automatically ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Counting objects: 6, done.
Delta compression using up to 4 threads.  
Compressing objects: 100% (4/4), done.  
Writing objects: 100% (4/4), 607 bytes, done.  
Total 4 (delta 1), reused 1 (delta 0)  
remote: Stopping application...  
remote: Done  
remote: ~/git/john.git ~/git/john.git  
remote: ~/git/john.git
remote: Running .openshift/action_hooks/pre_build  
remote: Running .openshift/action_hooks/build  
remote: Running .openshift/action_hooks/deploy  
remote: Starting application...  
remote: Done  
remote: Running .openshift/action_hooks/post_deploy
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ssh 33d90ea45fd91e42096651d937e@john-pfeiffer.rhcloud.com&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;//note that HOME is /var/lib/stickshift/12315longidentifier  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cd app-root/data&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget http://mirror.cc.columbia.edu/pub/software/apache/tomcat/tomcat-7/v7.0.29/bin/apache-tomcat-7.0.29.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;tar -xzvf apache-tomcat-7.0.29.tar.gz&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;expands to 13MB, note that JAVA is already installed by default&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;rm apache-tomcat-7.0.29.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="openshift-ports-and-proxy"&gt;Openshift ports and proxy&lt;/h3&gt;
&lt;p&gt;Since OpenShift has a proxy setup that passes port 80 to your local server on port 8080, BUT  &lt;/p&gt;
&lt;p&gt;OpenShift does not allow users to bind to any port below 15000 other than 8080, so...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh 33d90ea45fd91e42096651d937e@john-pfeiffer.rhcloud.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;shows you all of the environment variables in the openShift&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;multitenant config&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env | grep INTERNAL&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OPENSHIFT_INTERNAL_PORT=8080&lt;br/&gt;
OPENSHIFT_INTERNAL_IP=127.13.29.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi app-root/data/apache-tomcat-7.0.29/conf/server.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;escape key then :x (save and quit)&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;cd app-root/data/apache-tomcat-7.0.29/bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh startup.sh &amp;amp;&amp;amp; tail -f ../logs/*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(this is how you can start it manually from within ssh, you'll have to stop it manually too!)&lt;/p&gt;
&lt;p&gt;ADDING Tomcat to your default start and stop scripts (which are used during every git push)&lt;/p&gt;
&lt;p&gt;In your local git repo there is a hidden directory ".openshift"&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd APPNAME/.openshift/action_hooks&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="vi-openshiftaction_hooksstart"&gt;vi .openshift/action_hooks/start&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#nohup $OPENSHIFT_REPO_DIR/diy/testrubyserver.rb&lt;/span&gt;
&lt;span class="nv"&gt;$OPENSHIFT_INTERNAL_IP&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_REPO_DIR&lt;/span&gt;/diy &amp;gt; &lt;span class="nv"&gt;$OPENSHIFT_LOG_DIR&lt;/span&gt;/server.log 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT&lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;DATA&lt;span class="se"&gt;\_&lt;/span&gt;DIR/apache-tomcat-7.0.29/bin
nohup sh startup.sh
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"completed tomcat7 startup"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="vi-openshiftaction_hooksstop"&gt;vi .openshift/action_hooks/stop&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;/apache-tomcat-7.0.29/bin  
nohup sh shutdown.sh  
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"completed tomcat7 shutdown"&lt;/span&gt;  
&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;`git commit -m "removed testrubyserver.rb and added tomcat to start/stop scripts"  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://APPNAME-DOMAINNAME.rhcloud.com"&gt;http://APPNAME-DOMAINNAME.rhcloud.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="autodeploy-the-latest"&gt;Autodeploy the latest&lt;/h3&gt;
&lt;p&gt;MOVE YOUR WEBAPPS DIRECTORY TO THE GIT REPO SO THAT A GIT PUSH WILL AUTO DEPLOY THE NEWEST&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv $OPENSHIFT_DATA_DIR/apache-tomcat-7.0.29/webapps ~/john/repo/diy/webapps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ln -s ~/john/repo/diy/webapps webapps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Strongly advised to remove the manager and example apps (just deploy your .war's)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app stop -a APPNAME -p YOURPASSWORD&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;yes, it uses your RHCloud account username and password for app management&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ssh 33d90ea45fd91e42096651d937e@john-pfeiffer.rhcloud.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv ~/app-root/data/apache-tomcat-7.0.29/webapps/* app-root/repo/misc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mv app-root/repo/misc/ROOT ~/app-root/data/apache-tomcat-7.0.29/webapps&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rhc app start -a APPNAME -p YOURPASSWORD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="once-youve-sshd-in"&gt;ONCE YOU'VE SSH'D IN...&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;help&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ps|ls|
ctl_app start [stop|restart|status]
mysql | mongo | quota
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: sometimes it's easier to use a UI &lt;a href="https://openshift.redhat.com/app/console/applications"&gt;https://openshift.redhat.com/app/console/applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My Account -&amp;gt; Public Keys&lt;/p&gt;
&lt;p&gt;My Applications -&amp;gt; APPLICATION_NAME -&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rhc app add-alias -a myapp --alias myapp.net&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="future-thoughts"&gt;Future Thoughts&lt;/h2&gt;
&lt;p&gt;Eclipse + m2e (maven plugin) + jetty plugin for fast and easy dependency management -&amp;gt; mvn install + added custom script can put your .war into your local openshift repo for continuous deployment.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.openshift.com/"&gt;https://www.openshift.com/&lt;/a&gt;&lt;/p&gt;</summary><category term="cloud"></category><category term="paas"></category><category term="openshift"></category><category term="tomcat"></category></entry><entry><title>Creating Economies of Scale in Software Development</title><link href="http://blog.john-pfeiffer.com/creating-economies-of-scale-in-software-development" rel="alternate"></link><updated>2012-07-29T04:39:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-07-29:creating-economies-of-scale-in-software-development</id><summary type="html">
&lt;h3 id="planning-to-be-a-successful-software-company"&gt;Planning to be a successful software company&lt;/h3&gt;
&lt;p&gt;Economies of Scale in Software Development is about planning to be successful.&lt;/p&gt;
&lt;p&gt;Software development is rather cheap when compared to physical manufacturing but that doesn't mean it doesn't cost money to create a product or service.&lt;/p&gt;
&lt;p&gt;The classic myth of the lone wolf hacker who creates a viral product runs counter to the reality of billions of dollars generated by the software industry.&lt;/p&gt;
&lt;h3 id="elements-of-a-software-team"&gt;Elements of a Software Team&lt;/h3&gt;
&lt;p&gt;Consider the many elements required to create a software product:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Developers (hiring, location, communication, etc.)  &lt;/li&gt;
&lt;li&gt;Developer tools (IDE, compiler, debugger, etc.)  &lt;/li&gt;
&lt;li&gt;QA (you do run tests of some sort, don't you?!?!)  &lt;/li&gt;
&lt;li&gt;Distribution/Release (shrink wrapped or delivered by Internet continuously, it still costs something)  &lt;/li&gt;
&lt;li&gt;Support (assuming you've actually got users)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="making-software-better-faster-cheaper"&gt;Making Software Better, Faster, Cheaper&lt;/h3&gt;
&lt;p&gt;What can you do to make your software cheaper, faster, and most importantly, better?&lt;/p&gt;
&lt;h4 id="1-use-open-source"&gt;1. Use Open Source&lt;/h4&gt;
&lt;p&gt;(like facebook, twitter, google, netflix). Leverage the crowd and reduce your costs (e.g. not buying software licenses, not paying someone to audit your software licenses, etc.)&lt;/p&gt;
&lt;p&gt;Spending money on licenses becomes cost prohibitive for large successful organizations.&lt;/p&gt;
&lt;p&gt;More importantly, get the quality of years of development by lots of different perspectives. The homogeneous gets wiped out by a single cause, get diversified!&lt;/p&gt;
&lt;p&gt;Concerns about competitive advantage based on your supply chain (e.g. the myth "using Open Source tools doesn't give you an edge") are unfounded as:&lt;/p&gt;
&lt;p&gt;a. If your competitive advantage is a "secret supplier" then your business will go bust as soon as anyone else finds out your secret.&lt;/p&gt;
&lt;p&gt;b. If you're paranoid enough to worry your competitors are messing with your tools then you shouldn't trust a closed source vendor - keep it in the open where everyone's watching.&lt;/p&gt;
&lt;p&gt;Giving back to open source projects you depend on has a multiplier effect: a healthy community project is far cheaper than paying full time to support your critical requirements and has built in support and marketing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://readwrite.com/2013/10/17/is-facebook-the-worlds-largest-open-source-company"&gt;http://readwrite.com/2013/10/17/is-facebook-the-worlds-largest-open-source-company&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnet.com/news/worlds-biggest-open-source-company-google/"&gt;http://www.cnet.com/news/worlds-biggest-open-source-company-google/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/2010/12/why-we-use-and-contribute-to-open.html"&gt;http://techblog.netflix.com/2010/12/why-we-use-and-contribute-to-open.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="2-standardization"&gt;2. Standardization&lt;/h4&gt;
&lt;p&gt;Consider the trend of large clusters of commodity hardware. Using the same internal development tools means it's easier to focus on the real problems and not get lost in translation.&lt;/p&gt;
&lt;p&gt;This doesn't mean sticking to old versions or being afraid to innovate, but make success a formula and not an accident.&lt;/p&gt;
&lt;p&gt;Larger efficiencies can be generated by getting a decent level of determinism in the workflow.&lt;/p&gt;
&lt;p&gt;This means use the same IDE, the same dependency libraries, communication channels, etc. If you have rock stars that can't learn the common tool or won't teach others why their method is better then you run the risk of a dysfunctional "all-star" time bomb.&lt;/p&gt;
&lt;p&gt;This also applies to fairness: office perks, salaries, etc. Make it an organization about transparent achievable results, not a labyrinth of back room exceptions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/2011/08/building-with-legos.html"&gt;http://techblog.netflix.com/2011/08/building-with-legos.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.quora.com/Why-hasn-t-Facebook-migrated-away-from-PHP"&gt;http://www.quora.com/Why-hasn-t-Facebook-migrated-away-from-PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spectrum.ieee.org/telecom/internet/under-the-hood-at-google-and-facebook"&gt;http://spectrum.ieee.org/telecom/internet/under-the-hood-at-google-and-facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/presentations/Development-at-Google"&gt;http://www.infoq.com/presentations/Development-at-Google&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3-reduced-specialization-and-silos"&gt;3. Reduced specialization (and silos)&lt;/h4&gt;
&lt;p&gt;System Administrator's whose sole purpose is to watch machines is a dying breed. &lt;/p&gt;
&lt;p&gt;An army of QA who manually walk through the same test plan over and over is also legacy. &lt;/p&gt;
&lt;p&gt;Start with "DRY - Do Not Repeat Yourself".&lt;/p&gt;
&lt;p&gt;Develop automation early and make the process simple and obvious. &lt;/p&gt;
&lt;p&gt;(i.e. Amazon's internal conversion to APIs &lt;a href="http://apievangelist.com/2012/01/12/the-secret-to-amazons-success-internal-apis"&gt;http://apievangelist.com/2012/01/12/the-secret-to-amazons-success-internal-apis&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This also means avoiding purchasing hardware (and the associated inventory/maintenance/overhead).&lt;/p&gt;
&lt;p&gt;The more virtual servers you buy the larger volume discount you can negotiate. It's not entirely about cost: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;you're renting somebody else's implementation of best practice &lt;/li&gt;
&lt;li&gt;you need to make your product number one, distractions from that reduce velocity.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your feature set will continually grow. (Even with careful pruning). &lt;/p&gt;
&lt;p&gt;By looking at software as the solution to quality/delivery/maintenance/etc. you can reduce your running cost to a fraction of what it would be AND be able scale up quickly when you become wildly successful.&lt;/p&gt;
&lt;p&gt;Note: people are still irreplaceable but by having a lot more Developers (and less unique specialists) you can distribute the load more evenly.&lt;/p&gt;
&lt;p&gt;Getting more cross functional individuals means less silos and less communication gaps. &lt;/p&gt;
&lt;p&gt;The network mesh effect destroys productivity if everyone's a separate bottleneck.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.learningapi.com/blog/archives/000079.html"&gt;http://www.learningapi.com/blog/archives/000079.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/2012/06/netflix-operations-part-i-going.html"&gt;http://techblog.netflix.com/2012/06/netflix-operations-part-i-going.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/articles/sw-eating-silos"&gt;http://www.infoq.com/articles/sw-eating-silos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hbr.org/2011/12/quiet-but-unsubtle-innovation.html"&gt;https://hbr.org/2011/12/quiet-but-unsubtle-innovation.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="4-make-it-real"&gt;4. Make it real&lt;/h4&gt;
&lt;p&gt;Code that lives solves problems and is valuable. &lt;/p&gt;
&lt;p&gt;Uncommitted, unused, and otherwise un-useful code costs money to debug and deconstruct; much worse it costs time.&lt;/p&gt;
&lt;p&gt;Continuous integration gets your stable unit tested code some real world bruises. Continuous deployment gets your code crunching data and making users happy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://royal.pingdom.com/2010/06/18/the-software-behind-facebook/"&gt;http://royal.pingdom.com/2010/06/18/the-software-behind-facebook/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/presentations/cd-linkedin"&gt;http://www.infoq.com/presentations/cd-linkedin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="critical-leadership"&gt;Critical Leadership&lt;/h3&gt;
&lt;p&gt;There will be bugs. &lt;/p&gt;
&lt;p&gt;Far more important are to ensure the product fits the market and have the ability to quickly fix what's broken - sometimes amputation due to business needs is critical (i.e. how Flickr the photo sensation was born &lt;a href="http://en.m.wikipedia.org/wiki/Flickr"&gt;http://en.m.wikipedia.org/wiki/Flickr&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Your team must be able to execute. &lt;/p&gt;
&lt;p&gt;You lead them by example (both the late nights and the high fives) and these real people will deliver exponential success.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.fastcompany.com/3044952/hit-the-ground-running/how-bill-gates-andy-grove-and-steve-jobs-found-success-without-busine"&gt;http://www.fastcompany.com/3044952/hit-the-ground-running/how-bill-gates-andy-grove-and-steve-jobs-found-success-without-busine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hbr.org/2012/04/the-real-leadership-lessons-of-steve-jobs"&gt;https://hbr.org/2012/04/the-real-leadership-lessons-of-steve-jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kissmetrics.com/brian-chesky-alfred-lin-culture/"&gt;https://blog.kissmetrics.com/brian-chesky-alfred-lin-culture/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fastcompany.com/3007268/where-are-they-now/not-happy-accident-how-google-deliberately-designs-workplace-satisfaction"&gt;http://www.fastcompany.com/3007268/where-are-they-now/not-happy-accident-how-google-deliberately-designs-workplace-satisfaction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Software"></category><category term="Thoughts"></category></entry><entry><title>An Evolution of Questions and Answers</title><link href="http://blog.john-pfeiffer.com/an-evolution-of-questions-and-answers" rel="alternate"></link><updated>2012-06-21T17:46:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-06-21:an-evolution-of-questions-and-answers</id><summary type="html">&lt;p&gt;Socrates oral questions (and answers) were immortalized by Plato's writings.&lt;/p&gt;
&lt;p&gt;I love books, the distillation of the wisdom of the ages, and the libraries where they are enshrined and shared. &lt;/p&gt;
&lt;p&gt;Visiting a library is an exciting insight into the culture and values of a location.&lt;/p&gt;
&lt;p&gt;Encyclopedias, Dictionaries, and all manner of reference books were the compendium of answers; questions had to be researched (sometimes
involving extensive legwork, detective work, and persistence).&lt;/p&gt;
&lt;p&gt;Digitization of books (e.g. encyclopedia on cd-rom) enabled huge improvement in the access and distribution of information.&lt;/p&gt;
&lt;p&gt;Physical bulletin boards and community centers are also places of information exchange; digital communication (modems!) transformed the reach and capacity.&lt;/p&gt;
&lt;p&gt;Television and Video, despite many attempts, has long remained a one way medium. (Though too there's something inherently relaxing about passive entertainment).&lt;/p&gt;
&lt;p&gt;The Internet (and especially Google search) means specialist websites and esoteric questions are a couple links away; it has also enabled crowd sourcing answers.&lt;/p&gt;
&lt;p&gt;I'm amazed at the speed and accuracy of answers aggregated by Wikipedia, StackExchange, Quora, etc. (which admittedly still require filtering and research for correctness and comprehension).&lt;/p&gt;
&lt;p&gt;It's gotten so that now I receive answers to questions which I didn't realize I had! &lt;/p&gt;</summary><category term="Information"></category><category term="Thoughts"></category></entry><entry><title>Mid 2012 technology and business prediction for 2013 and beyond</title><link href="http://blog.john-pfeiffer.com/mid-2012-technology-and-business-prediction-for-2013-and-beyond" rel="alternate"></link><updated>2012-05-31T16:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-05-31:mid-2012-technology-and-business-prediction-for-2013-and-beyond</id><summary type="html">&lt;p&gt;The well known perceived future business model is constant (mobile) targeted (user profiling) advertising (everywhere) with instant purchase (online + mobile) and delivery (streaming)&lt;/p&gt;
&lt;p&gt;So Apple (Android) + Facebook + Google + Amazon + (Netflix?) , right?&lt;/p&gt;
&lt;p&gt;I think there's more to think about: the infrastructure is the gold; Hardware Manufacturers (CPU + RAM + SSD), Servers, Routers, ISP's, Content Producers, Transaction Processing, Data and User Platforms.&lt;/p&gt;
&lt;p&gt;The new ecosystem is inherently more distributed (more users globally, more devices) and fragmented (more OS, Apps, Content Producers, etc.) than the "Microsoft Era".&lt;/p&gt;
&lt;p&gt;Complexity increases with more data to aggregate/index/filter and many smaller transactions: consider previously purchasing a single desktop, monitor, (Windows bundled with it) and MS Word + one or two apps (Quickbooks or Photoshop).&lt;/p&gt;
&lt;p&gt;Now it's a laptop + phone + tablet (Windows + Android + iOS), each with many apps (including online services like Facebook) and the challenge of maintaining a consistent view of security, data, and even application state.&lt;/p&gt;
&lt;p&gt;Business purchases used to be larger, even grouped for volume (i.e. a company orders 1,000 desktops + monitors at $1,500 a piece); now it's bring your own device ($500) and many small app and content purchases for 99 cents to $10.&lt;/p&gt;
&lt;p&gt;Companies that solve the &lt;strong&gt;multi platform and scalability problems&lt;/strong&gt; (along with of course actually creating a product that fulfills a need or desire) &lt;strong&gt;will get bigger faster&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The opportunities are growing exponentially (network effect) for the talented, hard working teams that can execute.&lt;/p&gt;</summary><category term="prediction"></category><category term="business model"></category></entry><entry><title>Amazon S3 Bucket HTML Redirect</title><link href="http://blog.john-pfeiffer.com/amazon-s3-bucket-html-redirect" rel="alternate"></link><updated>2012-04-13T23:57:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-04-13:amazon-s3-bucket-html-redirect</id><summary type="html">
&lt;p&gt;Goal: More efficient and less error prone method to update a regularly changed downloadable file&lt;/p&gt;
&lt;p&gt;Web page redirects enable you to change the URL of a web page on your S3 hosted website (e.g., from www.example.com/oldpage to www.example.com/newpage) without breaking links pointing to the old URL. Users accessing the old URL will automatically be redirected to the new one.&lt;/p&gt;
&lt;h3 id="redirect-a-single-object"&gt;Redirect a single object&lt;/h3&gt;
&lt;p&gt;Amazon updated their functionality to allow per object meta data based redirects:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;WebUI&lt;/li&gt;
&lt;li&gt;Object properties&lt;/li&gt;
&lt;li&gt;Metadata&lt;/li&gt;
&lt;li&gt;Add Website Redirect Location&lt;/li&gt;
&lt;li&gt;either /newpage.html (internal redirect) or http://example2.com/page.html (external redirect)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Or PUT the object (or a zero byte file) with the x-amz-website-redirect-location header set (i.e. http://example2.com/page.html)&lt;/p&gt;
&lt;p&gt;Or use the universal static html redirect method:&lt;/p&gt;
&lt;p&gt;So upload the following download.html that includes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"refresh"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"0; url=http://example.com/file-v2.tar.gz"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Whenever you have a new version of your file you only have to upload a new "download.html" with an updated meta refresh header and any Users and links will always download the newest version of your file.&lt;/p&gt;
&lt;p&gt;Note, javascript may help you open the download and then return to the original page but have strange interactions for a .txt file...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"text/javascript"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://example.com/file-v2.tar.gz"&lt;/span&gt;
&lt;span class="c1"&gt;//--&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="redirect-a-domain"&gt;Redirect a domain&lt;/h3&gt;
&lt;p&gt;With two domains, example1.com and example2.com:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an s3 bucket for example1.com (static web hosting)&lt;/li&gt;
&lt;li&gt;Set bucket property in the "Static Web Hosting" section, select "Redirect all requests to another host name" to redirect to example2.com&lt;/li&gt;
&lt;li&gt;Configure Route53 (AWS DNS) for example1.com to have an A record that has an Alias Target as an S3 Website Endpoint (the bucket from step 1)&lt;/li&gt;
&lt;li&gt;Register example1.com to use the Amazon name servers (from Route53)&lt;/li&gt;
&lt;li&gt;Add any further subdomain redirects (e.g. www.example1.com) by repeating steps 1 and 2&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="more-info"&gt;more info&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html"&gt;http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html&lt;/a&gt;&lt;/p&gt;</summary><category term="Amazon"></category><category term="S3"></category><category term="html redirect"></category></entry><entry><title>Self configuration tests for scalability</title><link href="http://blog.john-pfeiffer.com/self-configuration-tests-for-scalability" rel="alternate"></link><updated>2012-03-12T02:42:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-03-12:self-configuration-tests-for-scalability</id><summary type="html">
&lt;p&gt;Goal: Customers (Users = system admins) able to self verify configuration.&lt;/p&gt;
&lt;p&gt;The more a user can self verify with software, the less support required per customer deployment.&lt;/p&gt;
&lt;p&gt;I used the Java API to quickly prototype a solution and exported a runnable .jar file...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.google.com/p/atmos-java/"&gt;https://code.google.com/p/atmos-java/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="java-source-code-for-a-configuration-validation"&gt;Java source code for a configuration validation&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.EsuApi&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.rest.EsuRestApi&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.EsuException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.ObjectId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.emc.esu.api.ObjectInfo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.Level&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.Logger&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.ConsoleAppender&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.log4j.PatternLayout&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AtmosConnect&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt; &lt;span class="n"&gt;rootLogger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRootLogger&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getAllAppenders&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;hasMoreElements&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setLevel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;Level&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addAppender&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ConsoleAppender&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PatternLayout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PatternLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TTCC_CONVERSION_PATTERN&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Entering application"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" does not equal the 4 required arguments."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"version 0.1: java -jar AtmosConnect.jar HOST PORT SUBTENANTID/UID SECRETKEY"&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

        &lt;span class="n"&gt;displayConnectionCredentials&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;        &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;EsuRestApi&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;EsuException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"EsuRestApi Constructor failed."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;createAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;displayAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;deleteAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;rootLogger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Application Successful"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// end main()&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;displayConnectionCredentials&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;SECRETKEY&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Connecting to Host: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Connecting on Port: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Full Token ID: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;FULLTOKENID&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Secret Key: **************"&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//System.out.println( "Secret Key: " + SECRETKEY );&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="nf"&gt;createAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"application/octet-stream"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Created object: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Create Object failed."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//e.printStackTrace();&lt;/span&gt;
            &lt;span class="c1"&gt;// JUnit Tests: Invalid Host, Port, SubtenantID, UID, Shared Secret, etc.&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;displayAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;ObjectInfo&lt;/span&gt; &lt;span class="n"&gt;myObjectInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;myObjectInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getObjectInfo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//System.out.println( "ObjectInfo: " + myObjectInfo.toString() );&lt;/span&gt;
        &lt;span class="c1"&gt;//System.out.println( "ObjectInfo as XML: " + myObjectInfo.getRawXml() );&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;deleteAtmosObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ObjectId&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EsuApi&lt;/span&gt; &lt;span class="n"&gt;myEsuAPI&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"Trying to delete Server Object: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;myEsuAPI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;deleteObject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Test Object deleted on Server: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Delete Object "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;myObjectId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" failed "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;//e.printStackTrace();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// end class&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="verify-the-bash-commands"&gt;Verify the bash commands&lt;/h3&gt;
&lt;p&gt;Verify bash commands that will help extract the configuration:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/bin/grep -i 'emcIpAddress=' /var/lib/tomcat6/webapps/storagegateway/WEB-INF/app.properties | cut -f 2 -d '='
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="modify-the-perl-console-menu-script"&gt;Modify the perl console menu script&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;start on stopped rc RUNLEVEL=[2345]  
stop on runlevel [!2345]

respawn

exec /sbin/getty -n -l /etc/init.d/CONSOLEMENU.pl 38400 tty1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sudo vi /etc/init.d/CONSOLEMENU.pl&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="nf"&gt;testatmosconnect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"clear"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$sourcefilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/var/lib/tomcat6/webapps/storagegateway/WEB-INF/app.properties"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$applicationfilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/var/lib/tomcat6/oxygen-storagegateway/atmosconnect.jar"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;$sourcefilename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;$applicationfilename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcipaddress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcIpAddress=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcipaddress&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcportnumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcPortNumber=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcportnumber&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcuid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcUid=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcuid&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$emcsharedsecret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /bin/grep -i 'emcSharedSecret=' $sourcefilename | cut -f 2 -d '=' )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$emcsharedsecret&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;@status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;qx( /usr/bin/java -jar $applicationfilename $emcipaddress $emcportnumber $emcuid $emcsharedsecret )&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"@status\n"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"$sourcefilename or $applicationfilename does not exist.\n"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# end atmosconnect()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="goal-achieved"&gt;Goal Achieved&lt;/h3&gt;
&lt;p&gt;A user can self test if they've misconfigured the VM or there's  missing conf files/app, etc. SUCCESS!&lt;/p&gt;
&lt;p&gt;Next steps: further unit and system tests, debug, refactor&lt;/p&gt;</summary><category term="java"></category><category term="perl"></category><category term="TDD"></category></entry><entry><title>Technology Careers (part 1)</title><link href="http://blog.john-pfeiffer.com/technology-careers-part-1" rel="alternate"></link><updated>2012-02-27T02:38:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2012-02-27:technology-careers-part-1</id><summary type="html">
&lt;h3 id="a-system-administrator-is-like-a-firefighter"&gt;A System Administrator is like a Firefighter&lt;/h3&gt;
&lt;p&gt;Always available to fix an emergency, but without the glamour; after putting out a fire a SysAdmin has to report (with vague implications of guilt): what happened, why it happened, and how it can be prevented in the future. (Who's fault is it?)&lt;/p&gt;
&lt;p&gt;Good System Administrators are well paid but usually work on the invisible and complex "back end" and are on "on call".&lt;/p&gt;
&lt;p&gt;(Yes, your dinner, sleep, and other private activities will be interrupted.)&lt;/p&gt;
&lt;p&gt;A stable, in demand, career since it's hard to fire a good System Administrator but there's often a belief that the position could/should be outsourced.&lt;/p&gt;
&lt;p&gt;(Ever hear the story of the SysAdmin who was so good at automating server tasks and desktop deployments that he put himself out of a job?)&lt;/p&gt;
&lt;p&gt;The overly general term "Operations" is often applied.  In non technology focused companies you might be managed by a Chief Operations Officer who is more concerned with facilities (buildings), logistics (trucks, ships, planes, etc.) or even janitorial services.&lt;/p&gt;
&lt;p&gt;If you're not careful, methodical, detailed, and cool headed then this may not be the right path for you. (Cynical is optional but it helps a lot).&lt;/p&gt;
&lt;h3 id="an-it-manager-is-like-an-accountant"&gt;An IT Manager is like an Accountant&lt;/h3&gt;
&lt;p&gt;Always asked to do more with less. In fairness an IT Manager gets to be more creative (legally) as innovation and change drive technological efficiency.&lt;/p&gt;
&lt;p&gt;Good IT Managers spend as little time as possible in meetings but can organize and automate the heck out of everything. Diagrams, Business Cases, Reporting, Schedules; not often a hands on role.&lt;/p&gt;
&lt;p&gt;Being in charge of IT resources is well paid and it's a stable career (you're in charge of the budget, right?) but when "downsizing" occurs you may be considered an acceptable loss (if your business cases prove you've saved/earned enough then it's usually a non issue).&lt;/p&gt;
&lt;p&gt;Gluing together services often means jugging time zones (remote contractors and services are the norm) and balancing/network internal departmental demands.&lt;/p&gt;
&lt;p&gt;If you're not good at understanding people or technology (yes you have to hire/fire people and purchase wisely) then this may not be the right path for you.&lt;/p&gt;
&lt;h2 id="a-developer-is-like-an-artist"&gt;A Developer is like an Artist&lt;/h2&gt;
&lt;p&gt;Eccentric, misunderstood, and something rare for the Arts, well paid.&lt;/p&gt;
&lt;p&gt;Good Developers understand it's Art with a purpose and apply rigorous engineering principles to their work (since software runs things like airplanes and hospitals this is a good thing).&lt;/p&gt;
&lt;p&gt;It's well paid but sometimes unpredictable work (software project done = goodbye expensive labor), luckily there's an endless demand for the foreseeable future. &lt;/p&gt;
&lt;p&gt;(Interestingly it often takes awhile to discover a "bad" developer and even then employers are reluctant to let them go).&lt;/p&gt;
&lt;p&gt;If you're not creative and logical; unable to unriddle paradoxes (yes it's a required dependency but no we don't want it), or just don't want to spend most of your waking hours in front of a screen (human contact optional), then this might not be the right path for you.&lt;/p&gt;</summary><category term="career"></category></entry><entry><title>Yes, Change your Password regularly</title><link href="http://blog.john-pfeiffer.com/yes-change-your-password-regularly" rel="alternate"></link><updated>2011-12-27T17:10:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2011-12-27:yes-change-your-password-regularly</id><summary type="html">
&lt;h3 id="security-is-risk-management"&gt;Security is risk management&lt;/h3&gt;
&lt;p&gt;The hundreds of articles about "changing passwords doesn't improve security" are just hype/noise without context.&lt;/p&gt;
&lt;p&gt;There is an absolute spectrum of password management that creates untenable risk (no password or simply the word "password") all the way to very low risk (100 random characters of every category changed every day) but at an unbearable overhead.&lt;/p&gt;
&lt;p&gt;While "changing the highly complex password every 90 days" is considered inefficient and draconian...&lt;/p&gt;
&lt;h3 id="what-about-at-least-changing-the-password-once-a-year"&gt;What about at least changing the password once a year?&lt;/h3&gt;
&lt;p&gt;While it's likely that an external attacker or disgruntled employee will use a compromised password immediately, it doesn't mean there isn't a good reason to choose a frequency of password change:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If a sticky note attached to a laptop sold at a garage sale is still valid for the company's online bank account then you're in trouble.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Reduce the risk, have a policy to manage that window of access to something you're comfortable with.&lt;/p&gt;
&lt;h3 id="dependency-visibility"&gt;Dependency Visibility&lt;/h3&gt;
&lt;p&gt;The opportunity to improve your infrastructure is well worth the cost of finding every hard coded place that a password is embedded in your organization:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The password was just changed&lt;/li&gt;
&lt;li&gt;You quickly find something is not working&lt;/li&gt;
&lt;li&gt;You either change the password back or refactor/reorganized and break the dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Far better than:&lt;/strong&gt;
- a random event like a forgotten password reset by one individual in the organization
- creates a mystery problem in mission critical systems for everyone else to track down&lt;/p&gt;
&lt;h3 id="but-i-use-a-password-management-tool"&gt;But I use a password management tool!&lt;/h3&gt;
&lt;p&gt;Password management tools have to store their passwords somewhere (hopefully encrypted).  &lt;/p&gt;
&lt;p&gt;Over time there is a chance that a "bad actor" will end up with your local password store.&lt;/p&gt;
&lt;p&gt;Man in the middle attacks (NSA anyone?) can snatch credentials from secure channels.&lt;/p&gt;
&lt;p&gt;There is an even higher likelihood that the remote services you are using will be compromised (database or password hashes leak).&lt;/p&gt;
&lt;p&gt;Given time hackers can use rainbow tables and GPU based brute force attacks they will crack your password.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Every time you change your password you reset the clock on every type of attack&lt;/strong&gt;&lt;/p&gt;</summary><category term="security"></category><category term="password"></category></entry><entry><title>Time for Programmers</title><link href="http://blog.john-pfeiffer.com/time-for-programmers" rel="alternate"></link><updated>2011-06-05T21:20:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2011-06-05:time-for-programmers</id><summary type="html">
&lt;p&gt;Computer (Unix / POSIX) time starts 1970-01-01 00:00:00 UTC &lt;a href="http://en.wikipedia.org/wiki/Unix_time"&gt;http://en.wikipedia.org/wiki/Unix_time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An excellent article about time, especially for java programmers, &lt;a href="http://www.odi.ch/prog/design/datetime.php"&gt;http://www.odi.ch/prog/design/datetime.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inside the "river of time" measurement is absurd, but Physicists have spacetime, &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"...cycles of radiation corresponding to the transition between the two electron spin energy levels of the ground state of the 133 Caesium atom".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;24 hours, UTC and NTP can synchronize the world (especially servers!), but days, calendars, time zones, weeks, etc. will drive you crazy, so think carefully and use the utility libraries!&lt;/p&gt;
&lt;h3 id="java-datetime-timezone-example"&gt;Java datetime timezone example&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Date&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Calendar&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.TimeZone&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.text.DateFormat&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.text.SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// not thread-safe&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt; &lt;span class="n"&gt;dfm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"yyyy-MM-dd"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;DateFormat&lt;/span&gt; &lt;span class="n"&gt;dfm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleDateFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"yyyy-MM-dd HH:mm:ss"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;dfm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setTimeZone&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TimeZone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getTimeZone&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Europe/Zurich"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dfm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2007-02-26 20:15:00"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="yesterday-in-python"&gt;Yesterday in python&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;span class="n"&gt;yesterday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromordinal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toordinal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="dateutil-and-helper-functions"&gt;dateutil and helper functions&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dateutil.parser&lt;/span&gt;      
&lt;span class="c"&gt;# http://labix.org/python-dateutil  (for google app engine put the source directory at the root project level)&lt;/span&gt;

&lt;span class="n"&gt;myd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Thu, 11 Jul 2013 05:01:21 -0700'&lt;/span&gt;
&lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dateutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;myd&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;seconds_to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;datetime_string_to_seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date_str&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dateutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# Thu, 11 Jul 2013 05:01:21 -0700&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Utility&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime_to_seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;datetime_to_seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;datetime_obj&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;datetime_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timetuple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="pytz-for-timezones"&gt;pytz for timezones&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt; &lt;span class="c"&gt;# sometimes requires complex installation, easy_install --upgrade pytz&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"UTC"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;utc&lt;/span&gt;

&lt;span class="n"&gt;date_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"UTC"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;date_utc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="time-and-datetime-tuples"&gt;time and datetime tuples&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="n"&gt;mytime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Mon Apr 07 13:05:55 PDT 2014"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%a %b &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S %Z %Y"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# time.struct_time(tm_year=2014, tm_mon=4, tm_mday=7, tm_hour=13, tm_min=5, tm_sec=55, tm_wday=0, tm_yday=97, tm_isdst=1)&lt;/span&gt;
&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mytime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# 1396901155.0&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mytime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# 2014-04-07 13:05:55&lt;/span&gt;

&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# 2008-11-10 17:53:59&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="n"&gt;date_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;date_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# 2008-11-10 17:53:59&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# repr prints with limits on sizes of objects&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;calendar&lt;/span&gt;
&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# time tuple in utc time to timestamp&lt;/span&gt;
&lt;span class="n"&gt;timestamp_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;calendar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timegm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;date_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"2008-11-10 17:53:59"&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# local time&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcfromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c"&gt;# conversions to time tuples&lt;/span&gt;

&lt;span class="n"&gt;datetime_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timetuple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;date_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"2008-11-10 17:53:59"&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date_str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1226527167.595983&lt;/span&gt;
&lt;span class="n"&gt;local_time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# local time&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;utc_time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# UTC&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;utc_time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c"&gt;# conversions to timestamps&lt;/span&gt;

&lt;span class="c"&gt;# time tuple in local time to timestamp&lt;/span&gt;
&lt;span class="n"&gt;time_tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# time tuple in utc time to timestamp&lt;/span&gt;
&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;317&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;timestamp_utc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;calendar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timegm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time_tuple_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timestamp_utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c"&gt;# results&lt;/span&gt;
&lt;span class="c"&gt;#-------------------------------------------------&lt;/span&gt;
&lt;span class="c"&gt;# 2008-11-10 17:53:59&lt;/span&gt;
&lt;span class="c"&gt;# 2008-11-12 13:51:18&lt;/span&gt;
&lt;span class="c"&gt;# datetime.datetime(2008, 11, 12, 13, 51, 18)&lt;/span&gt;
&lt;span class="c"&gt;# datetime.datetime(2008, 11, 10, 17, 53, 59)&lt;/span&gt;
&lt;span class="c"&gt;# datetime.datetime(2008, 11, 12, 13, 59, 27, 595983)&lt;/span&gt;
&lt;span class="c"&gt;# datetime.datetime(2008, 11, 12, 21, 59, 27, 595983)&lt;/span&gt;
&lt;span class="c"&gt;# (2008, 11, 10, 17, 53, 59, 0, 315, -1)&lt;/span&gt;
&lt;span class="c"&gt;# (2008, 11, 10, 17, 53, 59, 0, 315, -1)&lt;/span&gt;
&lt;span class="c"&gt;# (2008, 11, 12, 21, 59, 27, 2, 317, 0)&lt;/span&gt;
&lt;span class="c"&gt;# (2008, 11, 12, 13, 59, 27, 2, 317, 0)&lt;/span&gt;
&lt;span class="c"&gt;# 1226527167.0&lt;/span&gt;
&lt;span class="c"&gt;# 1226498367&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="time"></category><category term="epoch"></category><category term="java"></category><category term="python"></category></entry><entry><title>Amazon SES on EC2 free tier to search for a kitteh!</title><link href="http://blog.john-pfeiffer.com/amazon-ses-on-ec2-free-tier-to-search-for-a-kitteh" rel="alternate"></link><updated>2011-02-28T00:07:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2011-02-28:amazon-ses-on-ec2-free-tier-to-search-for-a-kitteh</id><summary type="html">
&lt;h3 id="mission-hourly-poll-of-a-website"&gt;Mission: hourly poll of a website&lt;/h3&gt;
&lt;p&gt;...to find out if the Kitteh is available for adoption and immediate email notification if Kitteh is found.&lt;/p&gt;
&lt;p&gt;Estimated time to complete: between 15 minutes and hours (depending on setting up your EC2 instance, SES service, etc.)&lt;/p&gt;
&lt;p&gt;Skills: Amazon EC2 setup, SSH, centos yum, bash, wget, cronjob&lt;/p&gt;
&lt;h3 id="amazon-free-services-tier"&gt;Amazon Free services tier&lt;/h3&gt;
&lt;p&gt;If you have an Amazon EC2 instance running (e.g. EC2 Linux Micro Instance in Free Tier = centos!)&lt;/p&gt;
&lt;p&gt;(And you're not running over the GET/POST upload/download free tier bandwidths)&lt;/p&gt;
&lt;p&gt;(If you don't know how to setup a quick Amazon Linux Micro Instance in the free tier search this blog for more info)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign up for SES (then receive a verification email for your Amazon AWS Account)&lt;/li&gt;
&lt;li&gt;Account Security Credentials (for AWS access identifiers)  &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use nano or vi to create a file "aws-credentials" (Amazon's sample below)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AWSAccessKeyId=022QF06E7MXBSH9DHM
AWSSecretKey=kWcrlUX5JEDGM/LtmEENI/aVmYvHNif5zB+d9+
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download the example perl scripts via: &lt;a href="http://aws.amazon.com/code/Amazon-SES"&gt;http://aws.amazon.com/code/Amazon-SES&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget http://aws-catalog-download-files.s3.amazonaws.com/AmazonSES-2011-02-02.zip
unzip AmazonSES-2011-02-02.zip
chmod +x /home/ec2-user/*.pl
/home/ec2-user/bin/ses-verify-email-address.pl -k aws-credentials -v youreemail@example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="amazon-ec2-missing-some-perl"&gt;Amazon EC2 Missing some perl&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;"Can't locate XML/LibXML.pm in @INC (@INC contains:

/usr/local/lib64/perl5
/usr/local/share/perl5       
/usr/local/share/perl5 
/usr/lib64/perl5   
/usr/share/perl5
/usr/share/perl5
/usr/lib64/perl5
/usr/share/perl5
/usr/local/lib64/perl5/site_perl/5.10.0/x86_64-linux-thread-multi

/usr/local/lib/perl5/site_perl/5.10.0
/usr/lib64/perl5/vendor_perl/5.10.0/x86_64-linux-thread-multi
/usr/lib/perl5/vendor_perl
/usr/lib/perl5/site_perl .) at ./ses-verify-email-address.pl line 26.

BEGIN failed--compilation aborted at ./ses-verify-email-address.pl line 26."
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;THANKS AMAZON! Using their preconfigured Instance means they don't have all of the Perl packages installed...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo yum install perl-XML-LibXML perl-digest-SHA&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo yum provides */SHA.pm&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;tells me what other packages I might have missed...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo yum search perl-Digest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo yum install perl-Digest-SHA&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;What a difference a D versus d makes!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;sudo yum perl-libxml-perl libxml2-devel perl-IO-Socket-SSL libxslt-devel ?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Debian: &lt;code&gt;sudo apt-get install libio-socket-ssl-perl libxml-libxml-perl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail /var/log/maillog&lt;/code&gt; for troubleshooting sendmail...&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="verify-an-ses-linked-email-address-by-running-the-perl-script"&gt;Verify an SES linked email address by running the perl script&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/home/ec2-user/bin/ses-verify-email-address.pl -k aws-credentials -v youreemail@example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the email account you gave above for verification and click on the link...  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have successfully verified an email address with Amazon Simple Email Service.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~/amazonses/bin/ses-send-email.pl -k ~/amazonses/bin/aws-credentials -s "Test AWS" -f youremail@example.com youremail@example.com,secondemail@example.com &amp;lt; ~/kittysearch/result.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="searchsh"&gt;Search.sh&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#/bin/bash&lt;/span&gt;
wget -O ~/kittysearch/page1.htm &lt;span class="s1"&gt;'http://adopt.hssv.org/search/searchResults.asp?task=search&amp;amp;searchid=&amp;amp;advanced=&amp;amp;s=adoption&amp;amp;animalType=2%2C15&amp;amp;statusID=3&amp;amp;state=&amp;amp;regionID=&amp;amp;submitbtn=Find+Animals'&lt;/span&gt;
wget -O ~/kittysearch/page2.htm &lt;span class="s1"&gt;'http://adopt.hssv.org/search/searchResults.asp?tpage=2&amp;amp;task=search&amp;amp;searchid=&amp;amp;advanced=&amp;amp;s=&amp;amp;animalType=2,15&amp;amp;statusID=3&amp;amp;state=&amp;amp;regionID=&amp;amp;submitbtn=Find+Animals'&lt;/span&gt;
wget -O ~/kittysearch/page3.htm &lt;span class="s1"&gt;'http://adopt.hssv.org/search/searchResults.asp?tpage=3&amp;amp;task=search&amp;amp;searchid=&amp;amp;advanced=&amp;amp;s=&amp;amp;animalType=2,15&amp;amp;statusID=3&amp;amp;state=&amp;amp;regionID=&amp;amp;submitbtn=Find+Animals'&lt;/span&gt;
grep -i &lt;span class="s2"&gt;"bandit"&lt;/span&gt; ~/kittysearch/page1.htm ~/kittysearch/page2.htm ~/kittysearch/page3.htm &amp;gt; ~/kittysearch/result.txt

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -s ~/kittysearch/result.txt &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="c"&gt;# must move to the directory to use the SES.pm&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; ~/amazonses/bin
    ./ses-send-email.pl -k ~/amazonses/bin/aws-credentials -s &lt;span class="s2"&gt;"Test AWS"&lt;/span&gt; -f myemail@domain.com myemail@domain.com,secondrecipient@domain.com &amp;lt; ~/kittysearch/result.txt
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="c"&gt;# http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/ for full details about email.pl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="trigger-the-search-with-cron"&gt;Trigger the search with cron&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;i key to enter input in vi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;55 * * * * /home/ec2-user/kittysearch/kittysearch.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;escape key gets : then x to save and quit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="troubleshooting-cannot-locate-sespm"&gt;Troubleshooting "Cannot locate SES.pm"&lt;/h3&gt;
&lt;p&gt;Running the script from a different directory or CRON gets the error: "Can't locate SES.pm in @INC"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cp /home/ec2-user/amazonses/bin/SES.pm /home/ec2-user/kittysearch
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;FIXED! must move to the directory in the script using cd first to have access to SES.pm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="ses-message-limit"&gt;SES Message Limit&lt;/h3&gt;
&lt;p&gt;Yyou can send 2,000 messages for free each day when you call Amazon SES from an Amazon EC2
instance directly or through AWS Elastic Beanstalk. (Note bandwidth charges may still apply)&lt;/p&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;p&gt;Apparently since 2011 there has come along infrastructure like page2rss and ifttt that makes these kind of custom solutions less helpful (unless you need customization!)&lt;/p&gt;</summary><category term="AWS"></category><category term="EC2"></category><category term="SES"></category><category term="cron"></category></entry><entry><title>Command Line DOS Networking</title><link href="http://blog.john-pfeiffer.com/command-line-dos-networking" rel="alternate"></link><updated>2010-11-29T16:37:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-11-29:command-line-dos-networking</id><summary type="html">
&lt;p&gt;Disk Operating System is still quite useful even in Windows XP/2003/Vista/7 if you know the commands (and parameters).&lt;/p&gt;
&lt;h3 id="diagnostic-and-networking-commands"&gt;Diagnostic and Networking Commands&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;systeminfo.exe&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uptime, OS, originall install, ram, domain, logonserver, nic's  &lt;/p&gt;
&lt;p&gt;(note that window98 had a gui, winipcfg from the Run prompt)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;systeminfo.exe /s computername /u domain\\username /p password
ipconfig /all
ipconfig /renew
ipconfig /flushdns
ping  
tracert  
pathping  
netstat

net view \\10.0.0.13  
net use x: \\10.0.0.13
net use /delete x:  
net use /delete \\10.0.0.13\share
net use * \\fileservername\share
net user username newpassword /domain

net localgroup /add administrators "domain users"

# prompts for new password  
net user username * /domain

# Note: If you type these commands on a member server or workstation and  
# you don't add the /domain switch, the command will be performed on the  
# local SAM and NOT on the DC SAM.

# Note: Non-administrators receive a "System error 5 has occurred. Access is denied"  
# error message when they attempt to change the password.

nbtstat -a 127.0.0.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nbtstat [-a RemoteName] [-A IPAddress] [-c] [-n] [-r] [-R] [-RR] [-s] [-S] [Interval]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-a RemoteName : Displays the NetBIOS name table of a remote computer, where RemoteName is the NetBIOS computer name of the remote computer.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The NetBIOS name table is the list of NetBIOS names that corresponds to NetBIOS applications running on that computer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-A IPAddress : Displays the NetBIOS name table of a remote computer, specified by the IP address (in dotted decimal notation) of the remote computer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-c : Displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-n : Displays the NetBIOS name table of the local computer. 
The status of Registered indicates that the name is registered either by broadcast or with a WINS server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-r : Displays NetBIOS name resolution statistics. 
On a Windows XP computer that is configured to use WINS, this parameter returns the number of names that have been resolved and registered using broadcast and WINS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-R : Purges the contents of the NetBIOS name cache and then reloads the #PRE-tagged entries from the Lmhosts file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-RR : Releases and then refreshes NetBIOS names for the local computer that is registered with WINS servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-s : Displays NetBIOS client and server sessions, attempting to convert the destination IP address to a name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-S : Displays NetBIOS client and server sessions, listing the remote computers by destination IP address only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interval : Redisplays selected statistics, pausing the number of seconds specified in Interval between each display. Press CTRL+C to stop redisplaying statistics. If this parameter is omitted, nbtstat prints the current configuration information only once.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/nbtstat.mspx"&gt;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/nbtstat.mspx&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-logon-ids"&gt;Windows Logon Ids&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2 interactive  &lt;/li&gt;
&lt;li&gt;3 network  &lt;/li&gt;
&lt;li&gt;4 batch  &lt;/li&gt;
&lt;li&gt;5 service  &lt;/li&gt;
&lt;li&gt;7 unlock  &lt;/li&gt;
&lt;li&gt;8 network cleartext  &lt;/li&gt;
&lt;li&gt;9 RunAs  &lt;/li&gt;
&lt;li&gt;10 RemoteInteractive  &lt;/li&gt;
&lt;li&gt;11 CachedInteractive&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="monitor-logon-script"&gt;Monitor Logon Script&lt;/h3&gt;
&lt;p&gt;Create your logon script and place it in the %SystemRoot%\System32 folder.  &lt;/p&gt;
&lt;p&gt;Run Regedt32.exe and go to the following value:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\WindowsNT\CurrentVersion
\Winlogon\Appsetup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After the last entry in the Appsetup value, place a comma and a space and then enter the name and extension of the logon script you placed in the %SystemRoot%\System32 folder. &lt;/p&gt;
&lt;p&gt;For example, if the value of Appsetup is:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Usrlogon.cmd, Rmvlinks.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After adding an entry for Termlogon.cmd, the value would look like:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Usrlogon.cmd, Rmvlinks.exe, Termlogon.cmd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo %computername% %username% %date% %time% &amp;gt;&amp;gt; %homedrive%\%homepath%\log\log.txt&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="net-use"&gt;Net Use&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;net use /help&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;NET USE [devicename | *] [\\computername\sharename[\volume] [password | *]]
[/USER:[domainname\]username]
[/USER:[dotted domain name\]username]
[/USER:[username@dotted domain name]
[/SMARTCARD]
[/SAVECRED]
[[/DELETE] | [/PERSISTENT:{YES | NO}]]

NET USE {devicename | *} [password | *] /HOME

NET USE [/PERSISTENT:{YES | NO}]

NET USE connects a computer to a shared resource or disconnects a
computer from a shared resource. When used without options, it lists
the computer's connections.

[devicename] Assigns a name to connect to the resource or specifies the 
device to be disconnected. There are two kinds of
devicenames: disk drives (D: through Z:) and printers
(LPT1: through LPT3:). Type an asterisk instead of a
specific devicename to assign the next available     devicename.

\\computername Is the name of the computer controlling the shared
resource. If the computername contains blank characters,
enclose the double backslash (\\) and the computername
in quotation marks (" "). The computername may be from 1 to 15 characters long.

\sharename Is the network name of the shared resource.

\volume Specifies a NetWare volume on the server. You must have
Client Services for Netware (Windows Workstations)
or Gateway Service for Netware (Windows Server)
installed and running to connect to NetWare servers.
password Is the password needed to access the shared resource.

* Produces a prompt for the password. The password is
not displayed when you type it at the password prompt.

/USER Specifies a different username with which the connection is made.
domainname Specifies another domain. If domain is omitted,
the current logged on domain is used.
username Specifies the username with which to logon.

/SMARTCARD Specifies that the connection is to use credentials on a smart card.

/SAVECRED Specifies that the username and password are to be saved.
This switch is ignored unless the command prompts for username
and password.

/HOME Connects a user to their home directory.

/DELETE Cancels a network connection and removes the connection
from the list of persistent connections.

/PERSISTENT Controls the use of persistent network connections.
The default is the setting used last.
YES Saves connections as they are made, and restores
them at next logon.
NO Does not save the connection being made or subsequent
connections; existing connections will be restored at
next logon. Use the /DELETE switch to remove persistent connections.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;NET HELP command | MORE&lt;/code&gt; displays Help one screen at a time.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Net_use"&gt;http://en.wikipedia.org/wiki/Net_use&lt;/a&gt;
&lt;a href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/net_use.mspx"&gt;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/net_use.mspx&lt;/a&gt;&lt;/p&gt;</summary><category term="DOS"></category></entry><entry><title>Eclipse IDE C Wascana on Windows 7</title><link href="http://blog.john-pfeiffer.com/eclipse-ide-c-wascana-on-windows-7" rel="alternate"></link><updated>2010-11-05T02:21:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-11-05:eclipse-ide-c-wascana-on-windows-7</id><summary type="html">
&lt;blockquote&gt;
&lt;p&gt;The Wascana IDE project was discontinued: &lt;a href="http://speedydeletion.wikia.com/wiki/Wascana_Desktop_Developer"&gt;http://speedydeletion.wikia.com/wiki/Wascana_Desktop_Developer&lt;/a&gt; which is probably why links no longer work&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately I was trying to install the 64 bit version of everything below but could not find a reliable method of getting mingw 64 bit to work with Eclipse... &lt;/p&gt;
&lt;p&gt;See the very end for the workaround. &lt;/p&gt;
&lt;p&gt;(Note: having a 64 bit compiler should theoretically compile faster but with gcc 32 bit you can compile / target both 32 and 64 applications.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;install JRE (64 bit)&lt;/li&gt;
&lt;li&gt;install Eclipse CDT (64 bit)&lt;/li&gt;
&lt;li&gt;install Wascana (mingw for eclipse)&lt;/li&gt;
&lt;li&gt;configure the path variable&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="install-the-java-runtime-environment-jre"&gt;Install the Java Runtime Environment (JRE)&lt;/h3&gt;
&lt;p&gt;A pre-requisite is to download the JRE (Java Runtime Environment, 5.0 or higher, newer is often better).&lt;/p&gt;
&lt;p&gt;FIRST, check if you have a 64 bit or older 32 bit system.&lt;/p&gt;
&lt;p&gt;If you have a 64 bit system, use a "64 bit browser" to go to the java page because otherwise it will keep giving you the 32 bit version to download...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.java.com/en/download/faq/java_win64bit.xml"&gt;http://www.java.com/en/download/faq/java_win64bit.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The link and filename should be something like: "jre-6u22-windows-x64.exe"&lt;/p&gt;
&lt;p&gt;Otherwise in Eclipse you may get the Error exit code=13 or "failed to load the JNI shared library"...&lt;/p&gt;
&lt;p&gt;This will most likely install in C:\Program Files\Java (or some variant). (with the \bin\javaw.exe)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;on Windows 7 the C:\Program Files (x86)\ directory contains 32 bit installations/applications&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="install-eclipse-cdt-64-bit"&gt;Install Eclipse CDT (64 bit)&lt;/h3&gt;
&lt;p&gt;The base Eclipse CDT supports integration with the GNU toolchain but may not come with a compiler...&lt;/p&gt;
&lt;p&gt;All Linux distributions include the GNU toolchain (but might not be installed by default...)  &lt;/p&gt;
&lt;p&gt;MinGW provides the best integration support with the CDT due to it's direct support for the Windows environment.&lt;/p&gt;
&lt;p&gt;If you download the Eclipse IDE for C/C++ you'll get the "CDT" plugins along with the default Eclipse platform:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.eclipse.org/cdt/downloads.php"&gt;http://www.eclipse.org/cdt/downloads.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The eclipse.ini file allows you to configure your program (e.g. specify the JRE location)  &lt;/p&gt;
&lt;p&gt;(Notedpad2 or notepad++ handle the linux versus windows line breaks transparently...)  &lt;/p&gt;
&lt;p&gt;e.g. insert the line to specify where your java run time environment is, maybe you have two...&lt;/p&gt;
&lt;h4 id="eclipseini"&gt;eclipse.ini&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-vm
C:\Java\jre6\bin\javaw.exe
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Double clicking the eclipse.exe icon will start it with an empty Workbench (and use the default JRE)  &lt;/p&gt;
&lt;p&gt;The first time you will be given the opportunity to choose your "Workspace" (aka directory where all of your files will be stored).&lt;/p&gt;
&lt;p&gt;I prefer to have it in the Eclipse folder but obviously in a multi user setup the "My Docs" or Network Folder would also make sense... or Dropbox?   (DropBox -&amp;gt; Public might make Open Source Distribution even easier?)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;File -&amp;gt; New -&amp;gt; C Project&lt;/li&gt;
&lt;li&gt;Fill in the basics (you can choose the pre-made hello world app)&lt;/li&gt;
&lt;li&gt;Then click on the "Go To Workbench" so you can see the Project File Explorer, Code Editor, Console   &lt;blockquote&gt;
&lt;p&gt;Window -&amp;gt; Preferences allows you to customize Eclipse e.g. disable usage statistics)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Click on the hammer symbol (Build) to ensure that you create an object file (.o) before trying to test run an executable...&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="gcc-error"&gt;gcc error&lt;/h3&gt;
&lt;p&gt;Of course when you try to build you get an error...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Internal Builder: Cannot run program "gcc" (in directory "C:\My Dropbox\workspace\hello\Debug"): CreateProcess error=2, The system cannot find the file specified
Build error occurred, build is stopped
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Help -&amp;gt; Install New Software&lt;/strong&gt; (previously Software Installer)&lt;/p&gt;
&lt;p&gt;Work With gets pasted the URL of the Wascana C/C++ compiler for Eclipse, then click ADD&lt;br/&gt;
&lt;a href="http://svn.codespot.com/a/eclipselabs.org/wascana/repo"&gt;http://svn.codespot.com/a/eclipselabs.org/wascana/repo&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;seems to have moved to Google Code but does not allow access, maybe &lt;a href="http://sourceforge.net/projects/wascana/"&gt;http://sourceforge.net/projects/wascana/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Click on the Checkbox for "Wascana C/C++ Developer for Windows, then NEXT  &lt;/p&gt;
&lt;p&gt;(review items to be installed, e.g. wascana.core) NEXT, then Agree to the License Terms...&lt;/p&gt;
&lt;p&gt;After it downloads, installs, and restarts Eclipse you'll find the new mingw and msys directories in your Eclipse folder.&lt;/p&gt;
&lt;p&gt;Now you have to update the Path, in Windows it's usually under System Properties -&amp;gt; Advanced System Settings  &lt;/p&gt;
&lt;p&gt;Environment Variables -&amp;gt; System Variables scroll area, highlight "Path" (click on the edit button)&lt;/p&gt;
&lt;p&gt;It should already have something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Append a semi colon to continue the long list and add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;c:\eclipse\mingw\bin
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Apparently some people feel eclipse does not autodetect unless it's c:\mingw&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Theoretically you could also try installing MingW directly from their website, which I've done, but it again is not 64 bit).&lt;/p&gt;
&lt;h3 id="always-32-mingw-gcc-oops"&gt;Always 32 mingw gcc (oops)&lt;/h3&gt;
&lt;p&gt;Unfortunately fundamental flaw - even when using Eclipse 64 bit the
Install New Software gets the Wascana 32 bit mingw gcc.&lt;/p&gt;
&lt;p&gt;The Workaround is to use the Wascana Desktop as a single download/install (which includes 32 bit versions of: JRE 1.6.0 , Mingw 3.4.5 , Eclipse IDE)&lt;/p&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://code.google.com/a/eclipselabs.org/p/wascana/"&gt;http://code.google.com/a/eclipselabs.org/p/wascana/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apparently inaccessible due to strange Google Code permissions issues&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also try: &lt;a href="http://mclserver.eecs.ucf.edu/trac/courses/wiki/COP3402Spring2011/InstallEclipseCpp"&gt;http://mclserver.eecs.ucf.edu/trac/courses/wiki/COP3402Spring2011/InstallEclipseCpp&lt;/a&gt;&lt;/p&gt;</summary><category term="eclipse"></category><category term="IDE"></category><category term="c"></category><category term="win7"></category></entry><entry><title>Drupal Security Tip: disabling anonymous access to cron</title><link href="http://blog.john-pfeiffer.com/drupal-security-tip-disabling-anonymous-access-to-cron" rel="alternate"></link><updated>2010-08-30T17:33:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-08-30:drupal-security-tip-disabling-anonymous-access-to-cron</id><summary type="html">
&lt;p&gt;Drupal is a wonderful way of leveraging many open source advanced web features into one interface that conceivably can be handed off to a "non developer" to maintain.&lt;/p&gt;
&lt;p&gt;Along with all of the installation / implementation (often customized to fit the customers' needs) there are two further things that should be considered, Security and Useability.&lt;/p&gt;
&lt;p&gt;Here's some tips on security and maintenance.&lt;/p&gt;
&lt;p&gt;Drupal is a Content Management System that allows remote users to run scripts and access databases on your web server, this is a &lt;strong&gt;serious responsibility&lt;/strong&gt; as Shared Hosting means your runaway/hacked scripts affects others, and Hackers/Spammers are always looking for new Zombies...&lt;/p&gt;
&lt;h3 id="restrict-access-to-php-scripts"&gt;Restrict access to PHP Scripts&lt;/h3&gt;
&lt;p&gt;Restrict the PHP scripts access from ANONYMOUS USERS ON THE INTERNET!&lt;/p&gt;
&lt;p&gt;"index.php" should be allowed (it's your home page) but...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cron is the method in linux to run scheduled tasks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Drupal requires regular scheduled actions for maintenance (e.g. update content in search, cleaning up log files, checking for updates, etc.)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://drupal.org/cron.php"&gt;http://drupal.org/cron.php&lt;/a&gt; (should not be) accessible but &lt;a href="http://example.com/cron.php"&gt;http://example.com/cron.php&lt;/a&gt; may be accessible to ANYONE as that's the default install =( &lt;/p&gt;
&lt;p&gt;To secure the cron.php file in .htacess, you have to do lock it down manually after installation.&lt;/p&gt;
&lt;p&gt;To block remote access to cron.php, in the server's .htaccess file or vhost configuration file:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.htaccess&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Order Deny,Allow
Deny from all
Allow from localhost
Allow from 127.0.0.1
Allow from xx.xx.xx.xx &amp;lt;-- your remote IP address
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or protect update.php too in the .htaccess file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;order deny,allow
deny from all
allow from 127.0.0
# add allowed specific remote IP addresses
allow from a.b.c.d
allow from a.b.c.d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOW ANONYMOUS ACCESS TO CRON.PHP should return either "access denied" or "page not found"...&lt;/p&gt;
&lt;h3 id="running-drupal-cron-manually"&gt;Running Drupal cron manually&lt;/h3&gt;
&lt;p&gt;You can still run cron manually from either of the options below:  &lt;/p&gt;
&lt;p&gt;Administer -&amp;gt; Reports -&amp;gt; Status&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/reports/status/run-cron&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There's even a way to schedule it to run against localhost or 127.0.0.1 (which is trusted in the .htaccess file we created above)&lt;/p&gt;
&lt;h3 id="cron-explained"&gt;Cron explained&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Cpanel -&amp;gt; Advanced -&amp;gt; Cron Jobs&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* * * * * http://example.com/cron.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(e.g. for rochen or bluehost cpanelx command should be the 8 char directory)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;php -q /home/yoursite/public_html/cron.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OR if you have multiple subdomains running different drupal installs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;php -q /home/8chars/public_html/subdomain/cron.php
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check using your drupal admin to ensure that the cron job has run&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Administer -&amp;gt; Reports -&amp;gt; Status&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This will allow you to test if your cpanel really has the correct permissions as&lt;/p&gt;
&lt;p&gt;Administer -&amp;gt; Reports -&amp;gt; Status should now show the cron job status as updated frequently! =)&lt;/p&gt;
&lt;p&gt;Here is a diagram of the general crontab syntax, for illustration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# +---------------- minute (0 - 59)&lt;/span&gt;
&lt;span class="c1"&gt;# | +------------- hour (0 - 23)&lt;/span&gt;
&lt;span class="c1"&gt;# | | +---------- day of month (1 - 31)&lt;/span&gt;
&lt;span class="c1"&gt;# | | | +------- month (1 - 12)&lt;/span&gt;
&lt;span class="c1"&gt;# | | | | +---- day of week (0 - 7) (Sunday=0 or 7)&lt;/span&gt;
&lt;span class="c1"&gt;# | | | | |&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;executed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g. 59 23 31 12 * /bin/execute/this/script.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;the five stars (with a space in between each!) represent wildcards:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;when minute = 59&lt;/li&gt;
&lt;li&gt;when hour = 23&lt;/li&gt;
&lt;li&gt;when day = 31&lt;/li&gt;
&lt;li&gt;when month = 12&lt;/li&gt;
&lt;li&gt;every day (could be = 5 to limit it to only every friday)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="update-free-access-false"&gt;Update free access = FALSE&lt;/h3&gt;
&lt;p&gt;/sites/default/settings.php should definitely have:&lt;/p&gt;
&lt;p&gt;$update_free_access = FALSE;&lt;/p&gt;
&lt;h3 id="restricting-file-upload-extensions"&gt;Restricting file upload extensions&lt;/h3&gt;
&lt;p&gt;Administer -&amp;gt; Site configuration -&amp;gt; File uploads  &lt;/p&gt;
&lt;p&gt;"Default permitted file extensions field" for each role should be limited, because obviously you don't want ANONYMOUS users uploading .php files! &lt;/p&gt;
&lt;p&gt;(Or in INPUT FORMAT, .php code entered by an anonymous or hacked authenticated user!)&lt;/p&gt;</summary><category term="Drupal"></category><category term="security"></category></entry><entry><title>Drupal 6 wysiwyg module so users can insert images</title><link href="http://blog.john-pfeiffer.com/drupal-6-wysiwyg-module-so-users-can-insert-images" rel="alternate"></link><updated>2010-08-26T05:00:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-08-26:drupal-6-wysiwyg-module-so-users-can-insert-images</id><summary type="html">
&lt;p&gt;Content manager made easy = WYSIWYG (what you see is what you get) (for Drupal 6)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.drupal.org/project/wysiwyg"&gt;https://www.drupal.org/project/wysiwyg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="download-and-install-the-drupal-6-wysiwyg-module"&gt;Download and install the Drupal 6 WYSIWYG module&lt;/h3&gt;
&lt;p&gt;Download and install (aka get the .tgz and upload it to /sites/all/modules) and enable the module  (in the main Drupal Modules menu)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable it with: Administer -&amp;gt; Site building -&amp;gt; Modules&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; Wysiwyg&lt;/li&gt;
&lt;li&gt;lists which editor modules you can use (and a helpful download link)&lt;/li&gt;
&lt;li&gt;e.g. TinyMCE (Download) Not installed.&lt;/li&gt;
&lt;li&gt;Extract the archive and copy its contents into a new folder in the following location: &lt;strong&gt;sites/all/libraries/tinymce&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; Input formats&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure that the "Content Manager Role" (or authenticated user?) has access to Full HTML&lt;br/&gt;
Also you can set the default format to Full HTML
(alternatively you can create a more limited input type role that matches your paranoia)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Administer -&amp;gt; Site configuration -&amp;gt; Wysiwyg&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Input Format = Full HTML = TinyMCE 3.8.8&lt;/li&gt;
&lt;li&gt;Edit the profile of your WYSIWYG editor to decide which buttons/functions are displayed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Up until now (by default) you only get bold and inserting images that are already uploaded...&lt;/p&gt;
&lt;h3 id="setting-up-imce-image-manager"&gt;Setting up IMCE (Image Manager)&lt;/h3&gt;
&lt;p&gt;IMCE (image manager) (with the WYSIWYG bridge module)&lt;/p&gt;
&lt;p&gt;Download and install (aka get the .tgz and upload it to /sites/all/modules) and enable the module  (in the main Drupal Modules menu)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Administer -&amp;gt; Site building -&amp;gt; Modules&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; IMCE -&amp;gt; User-1  &lt;/li&gt;
&lt;li&gt;Configure any specific settings, then give a role (e.g. Content Manager) permission&lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; Site configuration -&amp;gt; IMCE&lt;/li&gt;
&lt;li&gt;Enable the Image button (as IMCE is accessed from the Image plugin).&lt;/li&gt;
&lt;li&gt;Enable the IMCE plugin in the plugins/buttons configuration of the wysiwyg profiles of your choice. (checkbox)&lt;/li&gt;
&lt;li&gt;Edit the profile of your WYSIWYG editor to decide which buttons/functions are displayed.  &lt;blockquote&gt;
&lt;p&gt;You MUST include the checkbox IMCE...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="permissions"&gt;Permissions&lt;/h3&gt;
&lt;p&gt;One of the common gotchas in Drupal is forgetting to set permissions (and having to dig through a ton of UI to find them)&lt;/p&gt;
&lt;p&gt;Ensure the future "content manager" role has create content permissions  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Administer -&amp;gt; User management -&amp;gt; Roles = Add Role  &lt;/li&gt;
&lt;li&gt;Administer -&amp;gt; User management -&amp;gt;Permissions&lt;/li&gt;
&lt;li&gt;Then assign that role to the user&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="verify-it-all-works"&gt;Verify it all works&lt;/h3&gt;
&lt;p&gt;Finally a user with the appropriate role (e.g. "content manager" above) can insert bold/underline/etc.  and insert images (and upload photos using IMCE).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log In&lt;/li&gt;
&lt;li&gt;Create a new article/post&lt;/li&gt;
&lt;li&gt;In the UI you should see the menu has a lot more buttons&lt;/li&gt;
&lt;/ol&gt;</summary><category term="drupal"></category><category term="wysiwyg"></category></entry><entry><title>CSS 3 column liquid layout example</title><link href="http://blog.john-pfeiffer.com/css-3-column-liquid-layout-example" rel="alternate"></link><updated>2010-08-15T14:14:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-08-15:css-3-column-liquid-layout-example</id><summary type="html">
&lt;p&gt;CSS is much better than HTML, but making a webpage look the way it ought to look can be very painful, frustrating, and time consuming.&lt;/p&gt;
&lt;p&gt;Not only do you have to create cross browser compatible code, but it has to look nice when you're done!&lt;/p&gt;
&lt;p&gt;This is just a basic example that you can experiment with and add to later, there are some comments but the code is mostly self explanatory:&lt;/p&gt;
&lt;h3 id="3-column-css-source-code"&gt;3 column css source code&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="na"&gt;xml:lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;


&lt;span class="c"&gt;/* required to kill off any extra "helpful" browser padding  */&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;99%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#container&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;min-height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#column1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;33%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c"&gt;/* full length column */&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#column2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c"&gt;/* wraps the div around the left of the prev object */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;34%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#column3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;33%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c"&gt;/* prevent the right column from being pushed down! */&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"column1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            left left left left left left left left left left left left
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"column2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                center center center
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"column3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            right right right right right right right right right
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- end div container --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="3-column-css-example"&gt;3 column css example&lt;/h3&gt;
&lt;div class="field field-name-body field-type-text-with-summary field-label-hidden"&gt;
&lt;html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;style type="text/css"&gt;/* required to kill off any extra "helpful" browser padding  */html, body {  margin: 0;   padding: 0;  height: 99%;} #container{    min-height: 100%;    height: 100%;    margin:0;     border: 1px solid green;}#column1 {    float: left;         width: 33%;  height: 100%;           /* full length column */ position: relative;   border: 1px solid red;}#column2 {  float: left;    /* wraps the div around the left of the prev object */   width: 34%;  height: 100%;    position: relative;   border: 1px solid yellow;}#column3 {   float: right;    width: 33%;  margin-left: -1%;   /* prevent the right column from being pushed down! */   height: 100%;    position: relative;   border: 1px solid blue;  overflow: hidden;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id="container"&gt; &lt;div id="column1"&gt;         left left left left left left left left left left left left      &lt;/div&gt; &lt;div id="column2"&gt;             center center center     &lt;/div&gt; &lt;div id="column3"&gt;         right right right right right right right right right        &lt;/div&gt;&lt;/div&gt;&lt;!-- end div container --&gt;&lt;/body&gt;&lt;/html&gt;
&lt;/div&gt;</summary><category term="css"></category></entry><entry><title>Tiny Core Linux with Linksys Wireless Card - no CD required installation</title><link href="http://blog.john-pfeiffer.com/tiny-core-linux-with-linksys-wireless-card-no-cd-required-installation" rel="alternate"></link><updated>2010-08-04T01:52:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-08-04:tiny-core-linux-with-linksys-wireless-card-no-cd-required-installation</id><summary type="html">
&lt;p&gt;Tiny Core Linux is fast and works great... but it does take some effort to get setup... &lt;/p&gt;
&lt;p&gt;Here's how I got my Linksys wpc54g (v3) pci wireless card working with WPA - and I didn't burn a tiny core cd!&lt;/p&gt;
&lt;p&gt;You can't repartition a hard drive while actually using it so you'll most likely need GParted (ie from SystemRescueCD bootable cd) so that you can repartition / (root) and resize to have a spare linux partition... AND use:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mke2fs -t ext3 /dev/hda3&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(or wherever it is...)
hda3 = third partition on the first hard drive, you may need to use &lt;code&gt;fdisk -l&lt;/code&gt;
or Start -&amp;gt; Control Panel -&amp;gt; Administrative Tools -&amp;gt; Computer Management -&amp;gt; Disk Management&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;grub bootloader installed (preferrably to the MBR)  &lt;/li&gt;
&lt;li&gt;tinycore.iso (cd image of tiny core installation/live cd)  &lt;/li&gt;
&lt;li&gt;uniextract or isobuster (to open files from iso's)  &lt;/li&gt;
&lt;li&gt;ext2fsd (winxp application that allows copying files in/out of an ext2/ext3 partition)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;tcz&lt;/em&gt; files from an FTP repository listed in the section "Install on a Hard Drive Without Being Connected to the Internet" from  &lt;a href="http://wiki.tinycorelinux.net/wiki:start#installing"&gt;http://wiki.tinycorelinux.net/wiki:start#installing&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wireless-2.6.29.1-tinycore.tcz  &lt;/li&gt;
&lt;li&gt;wireless_tools.tcz  &lt;/li&gt;
&lt;li&gt;wpa_supplicant.tcz  &lt;/li&gt;
&lt;li&gt;b43-fwcutter.tcz  &lt;/li&gt;
&lt;li&gt;open-ssl-0.9.8m.tcz&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="getting-the-pieces-ready"&gt;Getting the pieces ready&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Extract the files from the &lt;strong&gt;tinycore.iso&lt;/strong&gt; (using IsoBuster or UniExtract)...&lt;br/&gt;
OR if you have linux: &lt;code&gt;mount -o loop /path-to-iso/image-filename.iso /mnt/custom&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;We only need the &lt;strong&gt;bzImage&lt;/strong&gt; and &lt;strong&gt;tinycore.gz&lt;/strong&gt; files... &lt;blockquote&gt;
&lt;p&gt;CAPITAL I ON THE bzImage!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;USING Ext2 Volume Manager (ext2fsd) ... browse to your linux partition and create the following folder: &lt;strong&gt;/boot/tinycore&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Copy the "bzimage" and "tinycore.gz" files into the linux partition &lt;strong&gt;/boot/tinycore folder&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Also create the following text file: &lt;strong&gt;/tce/onboot.lst&lt;/strong&gt;&lt;div class="highlight"&gt;&lt;pre&gt;wireless-2.6.29.1-tinycore.tcz
wireless_tools.tcz
b43-fwcutter.tcz
openssl-0.9.8m.tcz
wpa_supplicant.tcz
nano.tcz
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;BE CAREFUL TO NOT HAVE ANY MISSPELLINGS OR EXTRA SPACES&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally, create the directory /tce/optional and copy the above .tcz files into it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TinyCore uses /tce/mydata.tgz to store your files in the /home and /opt directories. (Therefore you could sneak something in if you wanted to...?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ALSO, it uses .ashrc (e.g. not BASH command prompt) so any aliases are in /tce/mydata.tgz -&amp;gt; home/tc/.ashrc&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="modify-your-grub-legacy-menu"&gt;Modify your Grub (legacy) menu&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;menu.lst&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;title tinycore  
root (hd0,2)  
kernel /boot/tinycore/bzimage  
initrd /boot/tinycore/tinycore.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="oh-wait-wifi-drivers"&gt;Oh Wait, Wifi Drivers!&lt;/h3&gt;
&lt;p&gt;BUT my wifi depends on this Linksys wpc54g (v3) pci wireless card AND wpa encryption...&lt;/p&gt;
&lt;p&gt;So I've got &lt;strong&gt;wl_apsta.o&lt;/strong&gt; from my previous debian kernel 2.6.26 (with all of the linux-header and make and compiling commands to get that binary...)&lt;/p&gt;
&lt;p&gt;Without the correct fw5 (b43 firmware) &lt;code&gt;dmesg&lt;/code&gt; will contain:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;b43-phy0 ERROR: firmware file "b43/ucode5.fw"
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;kernel firmware unhappy with wrong linksys driver&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;COPY &lt;strong&gt;wl_apsta.o&lt;/strong&gt; into &lt;strong&gt;/mnt/hda3/tce&lt;/strong&gt; (with EXT2FSD or usb stick or whatever)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Rather than hack into my-data.tgz we'll wait until we've booted into Tiny Core...&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="booting-into-tiny-core-linux"&gt;Booting into Tiny Core Linux&lt;/h3&gt;
&lt;p&gt;BOOTING INTO TINY CORE IS VERY FAST... (fingers crossed about everything before)&lt;/p&gt;
&lt;p&gt;Right Click -&amp;gt; Control Panel or a funny icon in the middle with screwdriver = Control Panel&lt;/p&gt;
&lt;p&gt;First check that our "onboot.lst" hack worked: Apps Audit -&amp;gt; OnBoot -&amp;gt; Maintenance&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(could also use: nano /mnt/hda3/tce/onboot.lst)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHEN YOU CHOOSE TO SAVE/BACKUP&lt;/strong&gt; (or when prompted when closing to Save a Backup)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mydata.tgz&lt;/strong&gt; is created and it includes any modifications to &lt;strong&gt;/opt/bootlocal.sh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;since things put in the &lt;strong&gt;bootlocal.sh&lt;/strong&gt; script are run as root... my wifi hack works...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano bootlocal.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /lib/firmware  
b43-fwcutter -w /lib/firmware /mnt/hda3/tce/wl_apsta.o  
wpa_supplicant -B -iwlan0 -c/mnt/hda3/tce/wpa_supplicant.conf  
udhcpc -H hostname -b -i wlan0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the /lib/firmware directory is necessary for the kernel to get the new drivers  &lt;/p&gt;
&lt;p&gt;the b43-fwcutter firmware cutter gets the drivers to the directory  &lt;/p&gt;
&lt;p&gt;wpa_supplicant starts in the background using wlan0 and the config file wpa_supplicant.conf&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wpa_passphrase ssid-network-name &amp;gt; wpa_supplicant.conf&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;prompts for the wireless network password, after you type it in press enter&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;udhcpc is busybox's dhcp client using "hostname", in the background on wlan0&lt;/p&gt;
&lt;p&gt;An alternative configuration in bootlocal.sh for a static ip would be...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ifconfig wlan0 10.0.0.99 netmask 255.255.255.0 up  
route add default gw 10.0.0.138  
echo "nameserver 10.0.0.138" &amp;gt; /etc/resolv.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="verify-after-reboot"&gt;Verify after reboot&lt;/h3&gt;
&lt;p&gt;AFTER I REBOOTED ifconfig wlan0 //shows me my ip address  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping 10.0.0.138&lt;/code&gt; and &lt;code&gt;ping http://kittyandbear.net&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ALL OK!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="adding-a-browser-to-tiny-core-linux"&gt;Adding a browser to Tiny Core Linux&lt;/h3&gt;
&lt;p&gt;Of course, now I have to install a browser...&lt;/p&gt;
&lt;p&gt;Since tinycore works from the core image and with then added modifications to be as lean and fast as possible you really need to explicitly choose what you want on your hard drive AND what you want started at boot time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right Click -&amp;gt; AppsBrowser or funny icon on the bottom right (gears)&lt;/li&gt;
&lt;li&gt;File -&amp;gt; Install Local Extension (anything on your hard drive but not in onboot.lst)  &lt;/li&gt;
&lt;li&gt;By default it lists your TCE/optional directory, double click on the one you want...
(If it isn't onboot and it isn't "installed" by above then it's not on your tinycore yet!)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OR File -&amp;gt; AppsBrowser ... when you choose to install something from the "repository" be prepared to wait for about 5 minutes for it to load the hundreds of packages...&lt;/p&gt;
&lt;h3 id="miscellaneous-tiny-core-linux-notes"&gt;Miscellaneous Tiny Core Linux Notes&lt;/h3&gt;
&lt;p&gt;Right Click -&amp;gt; Shells -&amp;gt; Shell Dark or funny icon on the bottom left (terminal with prompt)&lt;/p&gt;
&lt;p&gt;Right Click -&amp;gt; Control Panel -&amp;gt; System Stats OR funny icon in the middle with screwdriver = Panel -&amp;gt; System Stats&lt;/p&gt;
&lt;p&gt;dmesg TAB shows you the b43 stuff  &lt;/p&gt;
&lt;p&gt;cpu is cpu type  &lt;/p&gt;
&lt;p&gt;mem is RAM free  &lt;/p&gt;
&lt;p&gt;net is network devices installed...&lt;/p&gt;
&lt;p&gt;loadkmap &amp;lt; /usr/share/kmap/uk.kmap&lt;/p&gt;</summary><category term="linux"></category><category term="tiny core linux"></category></entry><entry><title>Electric Car Rebate... Why not go European?</title><link href="http://blog.john-pfeiffer.com/electric-car-rebate-why-not-go-european" rel="alternate"></link><updated>2010-08-02T13:13:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-08-02:electric-car-rebate-why-not-go-european</id><summary type="html">&lt;p&gt;I don't expect anybody to read this as Slashdot articles grow exponentially in comments each hour but...&lt;/p&gt;
&lt;p&gt;The price of petrol in London is about 116 pence per liter &lt;a href="http://www.whatprice.co.uk/petrol-prices"&gt;http://www.whatprice.co.uk/petrol-prices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1 US gallon = 3.78 liter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;4.39 GBP (pounds) per gallon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1 pound = 1.5 dollars (exchange rates are always crazy)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;= 6.59 dollars per gallon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;miles driven / mpg ... -&amp;gt; total cost of gasoline?  &lt;/p&gt;
&lt;p&gt;195k / 49.5 = 3939.40 * $6.59 = $25,960 (hybrid)  &lt;/p&gt;
&lt;p&gt;195k / 30 = 6500 * $6.59 = $42,835 (fuel efficient car)  &lt;/p&gt;
&lt;p&gt;195k / 15 = 13000 * $6.59 = $85,670 (normal/big car)&lt;/p&gt;
&lt;p&gt;So, while many will argue that "Europeans" are "controlling their oil consumption" through taxes, I would argue that the world has been susidizing the oil industry. Additionally, many American vehicles get 20 mpg or even 15 mpg.&lt;/p&gt;
&lt;p&gt;PLEASE REMEMBER, money is fiction (pieces of paper), work is economic fiction, government is fiction, and the price of Gas/Fossil Fuels is fiction. We all agree to a system but the system can and should be changed towards improvement.&lt;/p&gt;
&lt;p&gt;IEA: To promote efficiency, cut fossil fuel subsidies&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cnet.com/news/iea-to-promote-efficiency-cut-fossil-fuel-subsidies/"&gt;http://www.cnet.com/news/iea-to-promote-efficiency-cut-fossil-fuel-subsidies/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iea.org/files/energy_subsidies.pdf"&gt;http://www.iea.org/files/energy_subsidies.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/publications/national_transportation_statistics/html/table_04_23.html"&gt;http://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/publications/national_transportation_statistics/html/table_04_23.html&lt;/a&gt;
&lt;em&gt;Table 4-23: Average Fuel Efficiency of U.S. Light Duty Vehicles&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So perhaps instead of silly electric car rebates we should reduce Fossil Fuel susbidies and increase the tax on gas (yes, there are both Federal and State taxes on gas already so I'm not proposing some radical communist ideology), thereby making the market pay the actual costs (not even counting externalities like environmental impact!).&lt;/p&gt;</summary><category term="electric cars"></category></entry><entry><title>Can't delete FTP folder in Drupal - Filezilla hidden files</title><link href="http://blog.john-pfeiffer.com/cant-delete-ftp-folder-in-drupal-filezilla-hidden-files" rel="alternate"></link><updated>2010-07-13T18:30:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-07-13:cant-delete-ftp-folder-in-drupal-filezilla-hidden-files</id><summary type="html">&lt;p&gt;I couldn't delete a folder in FTP (which can be pretty frustrating) until I realized that Filezilla (my FTP/SFTP application with UI of choice) has an option to "force showing hidden files"&lt;/p&gt;
&lt;p&gt;In Filezilla 3 = Server -&amp;gt; Force showing hidden files&lt;/p&gt;
&lt;p&gt;I could then see the .htaccess file and delete it.&lt;/p&gt;
&lt;p&gt;(Right click on a folder/file and File Attributes shows me the permissions e.g. Read / Write / Execute)...&lt;/p&gt;</summary><category term="drupal"></category><category term="filezilla"></category></entry><entry><title>How to install a Drupal tag cloud</title><link href="http://blog.john-pfeiffer.com/how-to-install-a-drupal-tag-cloud" rel="alternate"></link><updated>2010-07-06T12:04:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-07-06:how-to-install-a-drupal-tag-cloud</id><summary type="html">&lt;p&gt;How to install a Drupal Cloud Tag Block First, in case you've stumbled on this by mistake (you were looking for Blocks of Drupal "Cloud" cheese with price tags?)...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Drupal is a "content management system" - a fancy way of saying software that takes your text/photos and makes them pretty...     automatically!&lt;/li&gt;
&lt;li&gt;Tag is an associated "label" - kind of like you might call a sandwich a "cheese sandwich", or "lunch", or a "snack". It's a neat free form way to categorize your thoughts without much effort (oh the wonders of Computers).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tagadelic module for Drupal creates a weighted "cloud" of the tags you have on your content nodes. &lt;/p&gt;
&lt;p&gt;If you create a "block" on your pages it is MUCH easier for you and any readers (if you have them?) to navigate...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the module &lt;a href="http://drupal.org/project/tagadelic"&gt;http://drupal.org/project/tagadelic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract the tar.gz (izarc2go and 7zip) into a folder Upload the folder to /drupal-root/sites/all/modules (using FTP or preferrably SFTP)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Administer -&amp;gt; Site building -&amp;gt; Modules -&amp;gt; List (It appears under Taxonomy ... Tagadelic&lt;/strong&gt;, fill in the checkbox to Enable the module.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Administer -&amp;gt; Site building -&amp;gt; Blocks -&amp;gt; List Blocks&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Tagadelic has already created the following Block parts for you: &lt;strong&gt;Tags in Blog Tags&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Use the dropdown to put the tag in the "Right sidebar" &lt;/li&gt;
&lt;li&gt;Then drag and drop it to determine it's order (ie below the search box)&lt;/li&gt;
&lt;li&gt;Finally click on "configure" next to it to select: customize the "title" above the cloud tag (e.g. Tag Cloud) what pages the block will appear.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note: Tags for the current post is an easy way to show "related content"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;These tags also may help your SEO but be careful to not overdo it! I personally like adding the other Block, "Tags for this post" as well because&lt;/p&gt;
&lt;p&gt;As per my very smart's wife very smart suggestion - an image...&lt;/p&gt;
&lt;p&gt;[![example-of-a-drupal-tagadelic-tag-cloud.gif]]&lt;/p&gt;</summary><category term="drupal"></category></entry><entry><title>America's Great Recession and Wealth Without Borders</title><link href="http://blog.john-pfeiffer.com/americas-great-recession-and-wealth-without-borders" rel="alternate"></link><updated>2010-07-05T14:09:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-07-05:americas-great-recession-and-wealth-without-borders</id><summary type="html">&lt;p&gt;Why do countries like Germany and Japan have such a high quality of life AND high productivity? &lt;/p&gt;
&lt;p&gt;Remember that their unemployed have free medical care, education, and unemployment benefits...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oecdbetterlifeindex.org/countries/germany"&gt;http://www.oecdbetterlifeindex.org/countries/germany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.oecdbetterlifeindex.org/countries/japan"&gt;http://www.oecdbetterlifeindex.org/countries/japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.oecdbetterlifeindex.org/countries/united-states"&gt;http://www.oecdbetterlifeindex.org/countries/united-states&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are they just smarter than Americans?&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;While the US has the "highest average income" it comes at the price of the lower tiers not having the same opportunities for medical care and education, so maybe it's an active choice of American inequality?&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;"The economists Emmanuel Saez and Thomas Piketty examined tax returns from 1913 to 2008. They discovered an interesting pattern. In the late 1970s, the richest 1 percent of American families took in about 9 percent of the nation’s total income; by 2007, the top 1 percent took in 23.5 percent of total income."&lt;/p&gt;
&lt;p&gt;Lower income taxes encourages risk taking and short term "me first now" gains.&lt;/p&gt;
&lt;p&gt;Higher income taxes motivates creating methods of long term wealth accrual, e.g. businesses with continual steady profits.&lt;/p&gt;
&lt;p&gt;Corporations and Wealthy Individuals do not have geographic or political boundaries. &lt;/p&gt;
&lt;p&gt;It is the mainstream and poor of a society that cannot simply pack up and move some place sunnier with low taxes (Monaco). &lt;/p&gt;
&lt;p&gt;So don't worry about the "wealth moving away because of high taxes"... it's already done so (e.g. Microsoft Ireland and Offshore bank accounts etc.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.gpo.gov/fdsys/pkg/CHRG-110shrg45575/html/CHRG-110shrg45575.htm"&gt;http://www.gpo.gov/fdsys/pkg/CHRG-110shrg45575/html/CHRG-110shrg45575.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ctj.org/ctjreports/2014/05/dozens_of_companies_admit_using_tax_havens"&gt;http://ctj.org/ctjreports/2014/05/dozens_of_companies_admit_using_tax_havens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.bloomberg.com/news/articles/2010-05-13/american-companies-dodge-60-billion-in-taxes-even-tea-party-would-condemn"&gt;http://www.bloomberg.com/news/articles/2010-05-13/american-companies-dodge-60-billion-in-taxes-even-tea-party-would-condemn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What's left? Businesses and Organizations that bring people together and give them a common purpose. &lt;/p&gt;
&lt;p&gt;They receive money for their time and work which is then spent in the local economies.  I call it the &lt;strong&gt;Exponential Spending Effect&lt;/strong&gt; of capitalism (as opposed to the failed Trickle Down Economic
Policy).&lt;/p&gt;
&lt;p&gt;There's a lie that "businesses are made for profit" - If you own and work in a business (the quintessential small business) and you pay your employees, suppliers, contractors regularly and you receive a salary of $100,000 but your business doesn't show a profit... &lt;/p&gt;
&lt;p&gt;You can still have a wonderful life! and everyone in that interconnected ecology is healthy and stable. In fact, you're even contributing to the mythical GDP.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.economist.com/blogs/economist-explains/2014/03/economist-explains-26"&gt;http://www.economist.com/blogs/economist-explains/2014/03/economist-explains-26&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yet if policemen, firemen, nurses, teachers, etc. aren't able to work and spend then the quality of life for everyone will degrade into misery. &lt;/p&gt;
&lt;p&gt;The wealth gap will drive America's great experiment, a Democratic Capitalist Republic, into Depression and Oligarchy... &lt;a href="http://en.m.wikipedia.org/wiki/Income_inequality_in_the_United_States"&gt;http://en.m.wikipedia.org/wiki/Income_inequality_in_the_United_States&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enrich your mind: Your vote makes a difference!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.usa.gov/Citizen/Topics/Voting/Register.shtml"&gt;http://www.usa.gov/Citizen/Topics/Voting/Register.shtml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term=""></category></entry><entry><title>Outlook RPC over HTTP with a non standard port</title><link href="http://blog.john-pfeiffer.com/outlook-rpc-over-http-with-a-non-standard-port" rel="alternate"></link><updated>2010-06-14T13:03:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-06-14:outlook-rpc-over-http-with-a-non-standard-port</id><summary type="html">
&lt;p&gt;"The proxy server you have specified is invalid. Correct it and try again."&lt;/p&gt;
&lt;p&gt;Oh, the wonderful error messages from Microsoft...  &lt;/p&gt;
&lt;p&gt;So Outlook 2003 has HTTP and HTTPS hard coded to ports 80 and 443 (wonderfully modular thinking).&lt;/p&gt;
&lt;p&gt;Imagine you want to move your Outlook Web Access to a different port (security reasons? Or maybe just that another application is hard coded to port 443...)&lt;/p&gt;
&lt;p&gt;Now it's easy to tell people: &lt;strong&gt;https://mailserver.example.com:4430&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;BUT you might have to update any Blackberry using OWA to connect to Exchange users with the new port...&lt;/p&gt;
&lt;p&gt;and RPC over HTTP (s) is quite useful for the non VPN inclined ...&lt;/p&gt;
&lt;p&gt;The following unsupported workaround works, use at your own risk, registry editing is required...  &lt;/p&gt;
&lt;h3 id="the-ui-configuration"&gt;The UI Configuration&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;In Control Panel -&amp;gt; Mail -&amp;gt; Email Accounts -&amp;gt; View or Change -&amp;gt; Change (button) -&amp;gt; More Settings (button) -&amp;gt; Connection (tab)&lt;/li&gt;
&lt;li&gt;Checkbox: Connect to my Exchange mailbox using HTTP  &lt;/li&gt;
&lt;li&gt;Then the button: Exchange Proxy Settings &lt;strong&gt;https://mailserver.example.com:4430&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Connect using SSL only (for the paranoid)  &lt;/li&gt;
&lt;li&gt;Mutually authenticate...  &lt;/li&gt;
&lt;li&gt;Yes, we need the following: msstd:mailserver.example.com&lt;/li&gt;
&lt;li&gt;(note that you may have to download and install the certificate from your mail server for RPC over HTTP to work, the name we've entered doesn't have a port because it's the name that's on the SSL certificate)&lt;/li&gt;
&lt;li&gt;Authentication (NTLM = SSL, Basic means anything - i.e. not encrypted)&lt;/li&gt;
&lt;li&gt;Click ok a million times and we've finished the easy part...&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="hacking-the-windows-registry"&gt;Hacking the Windows Registry&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Start -&amp;gt; Run -&amp;gt; regedit (and hit the OK button)&lt;/li&gt;
&lt;li&gt;(HKCU = hkey_current_user)&lt;/li&gt;
&lt;li&gt;HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows Messaging Subsystem\Profiles\&lt;/li&gt;
&lt;li&gt;Browse down to the subkey: "13dbb0c8aa05101a9bb000aa002fc45a"   (don't ask me why these settings are exactly there)&lt;/li&gt;
&lt;li&gt;Locate in the name column: "001f6622" of type REG_BINARY and double click on it...&lt;/li&gt;
&lt;li&gt;The "Value Data" will be in hex code (with a preview of the ascii on the right)&lt;div class="highlight"&gt;&lt;pre&gt;0000 6D 00 61 00 69 00 6C 00 m.a.i.l.
0008 65 00 72 00 2E 00 65 00 ......d.
0010 78 00 61 00 6D 00 70 00 o.m.a.i.
0018 6C 00 65 00 2E 00 63 00 n......c.
0020 6F 00 6D 00 2D 00 34 00 o.m.-.4.
0028 34 00 33 00 30 00 30 00 4.3.0.0.
0030 00 00
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You'll see the 2D in the middle - that's the hex code for '-', we're going to change it to 3A (or the hex code for ':')
(yes, we click inside, use the delete key to remove those two and type
in 3A)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;0020 6F 00 6D 00 3A 00 34 00 o.m.:.4.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Click OK... Whew, hard part's over...  &lt;/p&gt;
&lt;h3 id="verify-the-changes"&gt;Verify the Changes&lt;/h3&gt;
&lt;p&gt;Now check that your change has taken by going to:&lt;/p&gt;
&lt;p&gt;Control Panel -&amp;gt; Mail -&amp;gt; Email Accounts -&amp;gt; View or Change -&amp;gt; Change (button) -&amp;gt; More Settings (button) -&amp;gt; Connection (tab)&lt;/p&gt;
&lt;p&gt;You should now see: &lt;strong&gt;https://mailserver.example.com:4430&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Note that you won't be able to click OK (because Outlook detects that unpermitted colon) but hit Cancel a bunch of times and open up Outlook to try connecting to your Exchange Server!&lt;/p&gt;
&lt;p&gt;PLEASE NOTE: first ensure that you can get RPC over HTTP working with the default port 443 (e.g. no colons needed) BEFORE trying a non standard port as it is a little tricky to remember the certificate, the firewall port forwarding (if you need to), etc.&lt;/p&gt;
&lt;p&gt;ALSO, remember that to do this you've already changed your Exchange Mail Server IIS SSL port to the non standard 4430 AND you've fixed any firewall forwarding for your server so that 4430 goes to your mail server...&lt;/p&gt;</summary><category term="Microsoft"></category><category term="Exchange Server"></category><category term="SSL"></category></entry><entry><title>The Magical Million 3 helicopters scratchcard scam</title><link href="http://blog.john-pfeiffer.com/the-magical-million-3-helicopters-scratchcard-scam" rel="alternate"></link><updated>2010-06-13T11:25:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-06-13:the-magical-million-3-helicopters-scratchcard-scam</id><summary type="html">&lt;p&gt;The Magical Million scratch card scam...&lt;/p&gt;
&lt;p&gt;Magazines and newspapers get money from advertisers, some of which run contests and promotions.&lt;/p&gt;
&lt;p&gt;I was not surprised to see that Rupert Murdoch's "Times" had scratch cards for the Magical Million from PurelyCreative.com&lt;/p&gt;
&lt;p&gt;Considering the fake news from Fox, it's no surprise there's a long standing fake contest advertised in Murdoch's paper.&lt;/p&gt;
&lt;p&gt;A scatch card says "3 identical symbols - you can claim a GUARANTEED CASH PAYOUT".&lt;/p&gt;
&lt;p&gt;So our three helicopters... &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;by calling the £1.50 per minute premium number (or premium text messages) you can find out how much you've won... &lt;/li&gt;
&lt;li&gt;which you then send by post (including a return stamp) and wait months. &lt;/li&gt;
&lt;li&gt;When you chase them up many times in many months you might receive your £10 award (in vouchers?!?!), or then again you might not&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Greed. Something for nothing. You're luckier than everyone else...&lt;/p&gt;
&lt;p&gt;If you are silly enough to insist on "playing" (because you already are a winner), then hopefully you'll recycle the scratch card and go buy a lottery ticket.&lt;/p&gt;
&lt;p&gt;Consider that £9 buys a lot of fun for a homeless person in your neighborhood, or supports your local charity (RSPCA, Red Cross, etc.)&lt;/p&gt;
&lt;p&gt;These companies are the lowest level of legal scam possible (eventually they graduate into selling derivatives, junk bonds, or insurance); if you are using a computer and the internet to read about this scam then you should be too smart to fall for it.&lt;/p&gt;
&lt;p&gt;Oh, do you want some "research", try &lt;a href="http://blogs.mirror.co.uk/investigations/2010/01/watchdog-takes-scratchcard-fir.html"&gt;http://blogs.mirror.co.uk/investigations/2010/01/watchdog-takes-scratchcard-fir.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Original link is too old for the Mirror to keep around so some updated ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.bbc.com/news/uk-19993931"&gt;http://www.bbc.com/news/uk-19993931&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mirror.co.uk/news/uk-news/king-scam-mail-conmen-adrian-3719698"&gt;http://www.mirror.co.uk/news/uk-news/king-scam-mail-conmen-adrian-3719698&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="scam"></category></entry><entry><title>CSS 3 column liquid layout with background image stretch</title><link href="http://blog.john-pfeiffer.com/css-3-column-liquid-layout-with-background-image-stretch" rel="alternate"></link><updated>2010-05-15T14:30:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-05-15:css-3-column-liquid-layout-with-background-image-stretch</id><summary type="html">
&lt;p&gt;CSS keeps improving but sometimes it takes some creativity to meet what might seem like obvious demands: a background image stretched in a column&lt;/p&gt;
&lt;p&gt;The following example gives two different methods of background image stretching, though I admit that the background image is just a color gradient and that this kind of stretching on a graphical image (in a liquid layout) could appear at best, "funny".&lt;/p&gt;
&lt;p&gt;I created a color gradient and then resized it to be 640x2 pixels, otherwise all of the code is below:&lt;/p&gt;
&lt;h3 id="3-column-liquid-layout-with-background-image-stretch-code"&gt;3 column liquid layout with background image stretch code&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xhtml"&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="na"&gt;xml:lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;/* required to kill off any extra "helpful" browser padding  */&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;99%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#container&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;min-height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#column1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c"&gt;/* full length column */&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* bg-body-left is a 640 wide by 2 pixel tall image color gradient */&lt;/span&gt;
    &lt;span class="k"&gt;background-image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url('bg-body-left.png')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;background-repeat&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;repeat-y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#column2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c"&gt;/* wraps the div around the left of the prev object */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#column3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c"&gt;/* prevent the right column from being pushed down! */&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* a class is defined below called stretch to force an image to stretch */&lt;/span&gt;
&lt;span class="nc"&gt;.stretch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;       
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"column1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            left left left left left left left left left left left left
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"column2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                center center center
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"column3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
right right right right right right right right right
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"bg-body-left.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"stretch"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- end div container --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please leave a comment if you've appreciated this or any other posts on my site! Thanks! -John&lt;/p&gt;
&lt;h3 id="3-column-liquid-layout-with-background-image-stretch-example"&gt;3 column liquid layout with background image stretch example&lt;/h3&gt;
&lt;div class="field field-name-body field-type-text-with-summary field-label-hidden"&gt;
&lt;html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;&lt;style type="text/css"&gt;

/* required to kill off any extra "helpful" browser padding  */
html, body {
    margin: 0;
    padding: 0;
    height: 99%;
}

#container
{
    min-height: 100%;   
    height: 100%;
    margin:0;   
    border: 1px solid green;
}
#column1 {
    float: left;        
    width: 20%; 
    height: 100%;           /* full length column */
    position: relative;

    border: 1px solid red;
    /* bg-body-left is a 640 wide by 2 pixel tall image color gradient */
    background-image: url('bg-body-left.png');
    background-repeat: repeat-y;
}
#column2 {
    float: left;    /* wraps the div around the left of the prev object */
    width: 60%; 
    height: 100%;
    position: relative;
    border: 1px solid yellow;
}
#column3 {
    float: right;
    width: 20%;
    margin-left: -1%;   /* prevent the right column from being pushed down! */
    height: 100%;
    position: relative; 
    border: 1px solid blue;
    overflow: hidden;
}
/* a class is defined below called stretch to force an image to stretch */
.stretch {       
    width:100%;
    height:100%;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="container"&gt;
&lt;div id="column1"&gt;
            left left left left left left left left left left left left
        &lt;/div&gt;
&lt;div id="column2"&gt;
                center center center
        &lt;/div&gt;
&lt;div id="column3"&gt;
right right right right right right right right right
        &lt;img alt="" class="stretch" src="bg-body-left.png"/&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- end div container --&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/div&gt;</summary><category term="css"></category><category term="html"></category></entry><entry><title>French Toast recipe aka Purjeni Filiki</title><link href="http://blog.john-pfeiffer.com/french-toast-recipe-aka-purjeni-filiki" rel="alternate"></link><updated>2010-05-15T10:50:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-05-15:french-toast-recipe-aka-purjeni-filiki</id><summary type="html">&lt;p&gt;First put oil in a pan and heat it (we use temperature setting 3 of 6 on our electric stove). &lt;/p&gt;
&lt;p&gt;Then beat/whip two or three eggs in a bowl, then take slices of bread and dip them in the whipped eggs (or you can soak them if you want them more egg full) and put them on the frying pan to fry.&lt;/p&gt;
&lt;p&gt;The medium heat should cook the egg slowly (too hot and the egg turns white/yellow like fried eggs on bread), after about 5-10 minutes? (peek underneath and check if they're golden brown) you flip them and cook the other side.&lt;/p&gt;
&lt;p&gt;I sometimes add my secret ingredient, a slice of butter on top to melt, after flipping them over.&lt;/p&gt;
&lt;p&gt;When done you can have them with one of the following yummy toppings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;soft cream cheese (Philadelphia cream cheese)&lt;/li&gt;
&lt;li&gt;kashkaval or mozarella and honey&lt;/li&gt;
&lt;li&gt;jam (raspberry/blueberry/strawberry you name it!)&lt;/li&gt;
&lt;li&gt;helva&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To quote Bobby "Filiki are divine!" or "Helva na filiki e strahotno".&lt;/p&gt;</summary><category term="cooking"></category></entry><entry><title>Blackberry Enterprise Server Express on same domain as BES (windows and exchange 2003)</title><link href="http://blog.john-pfeiffer.com/blackberry-enterprise-server-express-on-same-domain-as-bes-windows-and-exchange-2003" rel="alternate"></link><updated>2010-05-03T13:41:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-05-03:blackberry-enterprise-server-express-on-same-domain-as-bes-windows-and-exchange-2003</id><summary type="html">
&lt;p&gt;Goal: Blackberry Express Server install: Windows 2003 with Exchange Server 2003 with BES 5 already installed&lt;/p&gt;
&lt;h3 id="why-blackberry-express"&gt;Why Blackberry Express?&lt;/h3&gt;
&lt;p&gt;Well it's the core Blackberry experience (email + contacts + calendar) but only requires a data plan, not a special (expensive) Blackberry plan.&lt;/p&gt;
&lt;p&gt;The big item missing: Wireless activation is only available with BES dataplan.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://crackberry.com/blackberry-101-lecture-2-bes-and-bis-whats-difference"&gt;http://crackberry.com/blackberry-101-lecture-2-bes-and-bis-whats-difference&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="the-dilemma-if-you-already-have-a-bes-installation-can-you-setup-a-besx-too"&gt;The dilemma, if you already have a BES installation, can you setup a BESX too?&lt;/h3&gt;
&lt;p&gt;"the two BES servers cannot be in the same BES Domain, but can be in the same AD tree and access the same exchange server."&lt;/p&gt;
&lt;p&gt;"provided BlackBerry Enterprise Server Express is introduced as a new deployment with its own BlackBerry domain, as defined by the BlackBerry configuration database... the BlackBerry Enterprise Server and BlackBerry Enterprise Server Express can run independently in the same Microsoft Exchange environment in a Microsoft Windows Domain and would be managed from separate BlackBerry Administration Service consoles."&lt;/p&gt;
&lt;p&gt;Apparently there is a difference between a BES Domain and a windows domain... &lt;/p&gt;
&lt;p&gt;Basically a BES Domain SHOULD only be the BES installation and Database, therefore you should be
able to have multiple BES installations in the same Windows Domain (e.g. a large corporation with
many exchange servers all in the same Windows Domain?).&lt;/p&gt;
&lt;p&gt;I will try it with my own twist - Not only a separate BESX installation on a windows 2003 server BUT also creating a separate BESADMIN for the new BESX installation.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://supportforums.blackberry.com/t5/BlackBerry-Professional-Software/Installing-BESX-when-BES-5-exists/m-p/488112"&gt;http://supportforums.blackberry.com/t5/BlackBerry-Professional-Software/Installing-BESX-when-BES-5-exists/m-p/488112&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="windows-server-and-exchange-server-setup"&gt;Windows Server and Exchange Server Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Setup a Windows 2003 Server SP2 in the Domain (exchange sys mgmr must match version to exchange server!)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NEEDS at least 1GB RAM - but give it more if you suffer performance issues!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Exchange 2003 SP2 System Manager (Requires Exchange Install CD -&amp;gt; Deployment Tools)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exch2k3\setup\i386\setup.exe =&amp;gt; Action = Custom&lt;/li&gt;
&lt;li&gt;Action = Install (next to MS Exch System Management Tools) ... NEXT... 112MB required, NEXT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download and Install Exchange Service Pack 2 (E3SP2ENG.exe for an old Exchange 2k3 cd)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=535bef85-3096-45f8-aa43-60f1f58b3c40&amp;amp;displaylang=en"&gt;http://www.microsoft.com/downloads/details.aspx?FamilyID=535bef85-3096-45f8-aa43-60f1f58b3c40&amp;amp;displaylang=en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;E3SP2ENG\setup\i386\update.exe (goes from version 6.5 to ? requiring 2 &amp;amp; 13 MB space)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure TCP port 3101 (outgoing) is open on your firewall&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Ensure your anti-spam is not blocking "blackberry.net"&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="permissions-for-a-service-account-for-blackberry-enterprise-server-for-microsoft-exchange"&gt;Permissions for a service account for BlackBerry Enterprise Server for Microsoft Exchange&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.blackberry.com/btsc/viewContent.do?externalId=KB02276"&gt;http://www.blackberry.com/btsc/viewContent.do?externalId=KB02276&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;CREATE a user BESADMIN for the Domain (in Active Directory Users and Computers)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the exchange server with the Mailbox enabled user creation &lt;code&gt;dsa.msc&lt;/code&gt; -&amp;gt; right click = new user&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSION SEND AS: On the domain, &lt;code&gt;dsa.msc&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From the Active Directory "View" option choose Advanced Features&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Right click on the root of the domain for Properties -&amp;gt; Security -&amp;gt; Advanced  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add BESADMIN and Apply Onto = User Objects (dropdown) , Allow = Send As (checkbox)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maybe? more secure: only right click on each OU or user that will be using Blackberry and&lt;br/&gt;
give the BESADMIN "Send As" permission&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Exch 2k3 System Manager -&amp;gt; Administrative Groups right click the Group for your BES  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(e.g. First Administrative Group) -&amp;gt; Delegate Control -&amp;gt; Add  Browse -&amp;gt; Role = Exchange View Only Administrator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Exchange Server: Start -&amp;gt; Programs -&amp;gt; Microsoft Exchange -&amp;gt; System Manager  &lt;/p&gt;
&lt;p&gt;Administrative Groups -&amp;gt; First Administrative Group -&amp;gt; Servers -&amp;gt; right click SERVERNAME (properties) Security -&amp;gt; find the BESADMIN and enable checkboxes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Administer Information Store&lt;/li&gt;
&lt;li&gt;Send As&lt;/li&gt;
&lt;li&gt;Receive As&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Click on Advanced and ensure that "Allow inheritable permissions" is checked)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Local Admin: each server that will have Blackberry Enterprise Server Express components&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My Computer right click -&amp;gt; Manage -&amp;gt; Local Users and Groups -&amp;gt; Groups -&amp;gt; Administrators  &lt;/li&gt;
&lt;li&gt;Add = BESADMIN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My Computer right click -&amp;gt; Properties -&amp;gt; Remote -&amp;gt; Enable Remote Desktop -&amp;gt; Select RemoteDesktop Users =&amp;gt; Add = BESADMIN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERMISSIONS Log on Locally and Log on as a Service  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start -&amp;gt; Administrative Tools -&amp;gt; Local Security Settings =&amp;gt; Local Policies -&amp;gt; User Rights Assignment&lt;/li&gt;
&lt;li&gt;double click Log on Locally &amp;amp; Log on as a Service and add BESADMIN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="installing-blackberry-and-database"&gt;Installing Blackberry (and Database)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;BLACKBERRY warn that you need the Microsoft hotfixes 823343 and 894470 , &lt;a href="http://support.microsoft.com/kb/823343"&gt;http://support.microsoft.com/kb/823343&lt;/a&gt; , &lt;a href="http://support.microsoft.com/kb/894470"&gt;http://support.microsoft.com/kb/894470&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Verify by c:\exchsvr\bin\cdo.dll 708KB right click Version 6.5.7232 or later&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REBOOT the server (ok, just an old habit)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log in as the BESADMIN user  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;C:\Research In Motion\BlackBerry Enterprise Server 5.0.1\setup.exe&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Blackberry Configuration Database (aka BES Domain?)  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Blackberry Enterprise Server with all components  &lt;/li&gt;
&lt;li&gt;preinstallation checklist will show you everything is ready (or will be auto installed)  &lt;/li&gt;
&lt;li&gt;Install MS SQL Server 2005 Express SP3&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;note that the extracted setup folder is very similar to the target install folder  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C:\Research In Motion\BlackBerry Enterprise Server 5.0.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C:\Program Files\Research In Motion\BlackBerry Enterprise Server\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;enter BESADMIN password and the NAME of the Server where the SQL Express will be installed  &lt;/li&gt;
&lt;li&gt;(e.g. the name of the server you are installed Blackberry Express!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;read the summary, click INSTALL ... watch and wait.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You are prompted to restart the computer - do so and then log in again with the BESADMIN user.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation continues with the Database Information ... just click Next  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The database BESMgmt doesn't exist, would you like to create it ... YES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter Blackberry CAL Key e.g. besexp-123456-123456-123456-123456&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SRP Host name: gb.srp.blackberry.com and port number: 3101 were already provided  &lt;/li&gt;
&lt;li&gt;SRP identifier = (Serial Number from Blackberry download) S12345678&lt;/li&gt;
&lt;li&gt;SRP authentication key = (Licence Key from Blackberry download)&lt;/li&gt;
&lt;li&gt;1234-1234-1234-1234-1234-1234-1234-1234-1234-1234&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CLICK VERIFY BUTTON 1 AND BUTTON 2 (should be successful and valid! NEEDS dashes - inbetween!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Microsoft Exchange Server popup - type in the Exchange Server Name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Administration Settings (already filled in by default) CLICK NEXT&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(no, I don't want to use SSL between the Blackberry Admin and my LAN browser)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type in the BESADMIN password and click NEXT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advanced Administration = leave as windows default click NEXT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;click Start Services button&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BlackBerry Router has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Attachment Service has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Dispatcher has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry MDS Connection Service has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Alert has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Administration Service - NCC has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Administration Service - AS has successfully started.&lt;/li&gt;
&lt;li&gt;BlackBerry Controller has successfully started.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a note of the Web Admin address(es)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="test-your-blackberry-express-installation"&gt;Test your Blackberry Express Installation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Locally on the Server you can check services.msc (all BB services started) and eventvwr.msc (no Blackberry errors)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a browser (IE8?) &lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(don't worry about the Browser "Security Alert" as it will be a self signed SSL certificate, you can install the certificate and add it to Trusted Sites too...)&lt;/li&gt;
&lt;li&gt;Install the RimWebComponents.cab&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a user (you just need their email address - user should only be on one BES Domain so not on BES 5 and BES X at the same time!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Create User with an Activation Password (e.g. something simple that times out in 4 hours)&lt;/li&gt;
&lt;li&gt;Wait until it gives you the OK message that the user was created (and activation email sent)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="assign-a-device-to-a-user"&gt;Assign a device to a User&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://docs.blackberry.com/en/admin/deliverables/14334"&gt;http://docs.blackberry.com/en/admin/deliverables/14334&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using the Blackberry Administration Service (web)  &lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webconsole/login&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the left there's a DEVICES area -&amp;gt; Attached Devices (if it doesn't expand?)&lt;/li&gt;
&lt;li&gt;Connect the BlackBerry device to the computer.  &lt;/li&gt;
&lt;li&gt;Click Manage current device -&amp;gt; Click Assign current device -&amp;gt; Search for a user account&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users can activate their BlackBerry devices by connecting them to computers using a USB cable or Bluetooth connection and logging in (with a browser) to the BlackBerry Web Desktop Manager.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login"&gt;https://SERVERNAME.DOMAIN.CO.LOCAL:3443/webdesktop/login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;When users complete the activation process, the BESX synchronizes through the BlackBerry Router.  &lt;/li&gt;
&lt;li&gt;If a connection to the BlackBerry Router is interrupted, the data transfer continues over the  wireless network.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blackberry Desktop Manager installed on a computer (and connected to their Outlook Profile)  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attach/Connect to a Device&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not likely to be enabled but theoretically after sending the Activation Password the BlackBerry Enterprise Server sends an email message with an etp.dat&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the Device choose Options -&amp;gt; Advanced Options -&amp;gt; Enterprise Activation&lt;/li&gt;
&lt;li&gt;"Activation request failed. A service connection is unvailable"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="tips"&gt;Tips&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Setup a default Password requirement&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Policy -&amp;gt; Manage IT Policies -&amp;gt; Edit IT Policy (default) -&amp;gt; Device Only Tab&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increase the default synchronization of messages when activating&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Servers and components -&amp;gt; BlackBerry Solution topology -&amp;gt; BlackBerry Domain -&amp;gt; Component view -&amp;gt; Email&lt;/li&gt;
&lt;li&gt;Click on the "instance" (e.g. computername_EMAIL) -&amp;gt; click on Messaging tab  &lt;/li&gt;
&lt;li&gt;Scroll down and click on "Edit Instance"&lt;/li&gt;
&lt;li&gt;Change Message prepopulation settings to 14 days and 750 messages  &lt;/li&gt;
&lt;li&gt;scroll down and click SAVE ALL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="useless-steps-from-blackberry"&gt;Useless Steps from Blackberry&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Install SQL Express Service Pack 3 (already included in the Blackberry Express Install!)&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;- &amp;lt;http://www.microsoft.com/downloads/details.aspx?FamilyID=3181842a-4090-4431-acdd-9a1c832e65a6&amp;amp;displaylang=en&amp;gt;
- OTHERWISE theoretically you could re-use an existing SQL database (maybe with old Blackberry data?)
- Install CDO support (for Exch 2010) &amp;lt;http://support.microsoft.com/kb/917481&amp;gt;
- Microsoft Exchange Server MAPI Client and Collaboration Data Objects 1.2.1  
- &amp;lt;http://www.microsoft.com/downloads/details.aspx?FamilyID=4825F157-5816-4802-850D-67A0C5423770&amp;amp;displayLang=en&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;TEST your BESADMIN account access to User Accounts&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;- double click on the self extracting BESX_express_5.0.1.exe but DO NOT run setup.exe)
- `C:\Research In Motion\BlackBerry Enterprise Server 5.0.1\tools\IEMSTest.exe`
- The setup application configures the startup type for the BlackBerry Mail Store Service, BlackBerry Policy Service, and BlackBerry Synchronization Service to manual.
- You cannot activate a BlackBerry device that is associated with the BlackBerry Internet Service over  the wireless network or over wifi.
&lt;/pre&gt;&lt;/div&gt;</summary><category term="blackberry"></category><category term="bes"></category><category term="besx"></category><category term="windows server"></category><category term="exchange server 2003"></category></entry><entry><title>Is Programming Simple? Contrasting FizzBuzz Solutions: 365 programming project day forty two</title><link href="http://blog.john-pfeiffer.com/is-programming-simple-contrasting-fizzbuzz-solutions-365-programming-project-day-forty-two" rel="alternate"></link><updated>2010-03-29T20:37:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-03-29:is-programming-simple-contrasting-fizzbuzz-solutions-365-programming-project-day-forty-two</id><summary type="html">
&lt;h3 id="simple-programming-challenge-fizzbuzz"&gt;Simple Programming Challenge: FizzBuzz&lt;/h3&gt;
&lt;p&gt;The following is an example of a simple programming "challenge": &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Write a program that prints the numbers from 1 to 100. 
But for multiples of three print "Fizz" instead of the number and for the multiples of five print "Buzz". 
For numbers which are multiples of both three and five print "FizzBuzz".
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Below I've thrown together a solution in less than 5 minutes, BUT, I thought to myself, experimentally, what would the code look like if I needed something more "Best Practice"...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="quick-and-dirty-fizzbuzz-solution-in-c"&gt;Quick and Dirty FizzBuzz Solution in C&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 2010-03-29:1800 john pfeiffer  "simple programming" examples */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Fizz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Buzz"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"%d"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end main */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Imagine instead of a challenge it's a professional assignment, requiring scalability, portability, modular parts, future maintenance (by someone totally different who may not be very good at coding and/or not have a lot of time to understand the code)... &lt;/p&gt;
&lt;p&gt;Suddenly a simple answer transforms into the following:&lt;/p&gt;
&lt;h3 id="complex-enterprise-solution-to-fizzbuzz"&gt;Complex "Enterprise" solution to FizzBuzz&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 2010-03-29 john pfeiffer  "simple programming" examples */&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;stdio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;stdlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;

&lt;span class="cm"&gt;/* prototyping of functions */&lt;/span&gt;
&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nx"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;datasize&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="cm"&gt;/* ------------ MAIN ------------------------------------ */&lt;/span&gt;
&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="cp"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* clear the output buffer each time */&lt;/span&gt;
        &lt;span class="nx"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Fizz"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Fizz"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Buzz"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Buzz"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"%d"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"\n"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end for i=1 to 100 loop */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end main */&lt;/span&gt;


&lt;span class="cm"&gt;/* ------------- FUNCTION DEFINITIONS ----------------------&lt;/span&gt;
&lt;span class="cm"&gt;perhaps better to put all function definitions in an include file?&lt;/span&gt;

&lt;span class="cm"&gt;The modular abstraction of creating more functions allows us to swap out an existing&lt;/span&gt;
&lt;span class="cm"&gt;implementation, e.g. if there's a faster way of determining "multiple of three"&lt;/span&gt;

&lt;span class="cm"&gt;It also improves portability because most of the code would remain the same except &lt;/span&gt;
&lt;span class="cm"&gt;the output function writing to a win32 Device Context ... aka window&lt;/span&gt;

&lt;span class="cm"&gt;Or we could quickly add functionality by calling a new "write to log" function...&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;


&lt;span class="cm"&gt;/* display a string to the stdout */&lt;/span&gt;
&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* write data to the buffer */&lt;/span&gt;
&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nx"&gt;writeToBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;BUFFERMAX&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;datasize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;datasize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* determine if the parameter is a multiple of three using "modulo",&lt;/span&gt;
&lt;span class="cm"&gt;if true return 1, if false return 0 */&lt;/span&gt;
&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofThree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;intcounter&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* determine if the parameter is a multiple of five using "modulo",&lt;/span&gt;
&lt;span class="cm"&gt;if true return 1, if false return 0 */&lt;/span&gt;
&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;isMultipleofFive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;intcounter&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that long convoluted giant isn't even modular enough! &lt;/p&gt;
&lt;p&gt;Obviously the two "isMultiple" functions could both rely on a common modulo wrapper function...&lt;/p&gt;
&lt;p&gt;I guess at a certain point it will start looking like Java or C# ... &lt;/p&gt;
&lt;p&gt;Where if you want to do anything you have to look it up in the manual and change the parameters and hope the designer of the function didn't do anything buggy...&lt;/p&gt;</summary><category term="c"></category><category term="fizzbuzz"></category><category term="code style"></category></entry><entry><title>Windows CE Programming - writing text to the display: 365 programming project day forty one</title><link href="http://blog.john-pfeiffer.com/windows-ce-programming-writing-text-to-the-display-365-programming-project-day-forty-one" rel="alternate"></link><updated>2010-03-21T09:44:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-03-21:windows-ce-programming-writing-text-to-the-display-365-programming-project-day-forty-one</id><summary type="html">
&lt;h3 id="building-a-program-properly-requires-a-lot-of-discipline"&gt;Building a program properly requires a lot of discipline&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;define goals (what functionality will be achieved?) &lt;/li&gt;
&lt;li&gt;write up a high level flow/state chart &lt;/li&gt;
&lt;li&gt;create modular parts from the flow chart (e.g.functions) &lt;/li&gt;
&lt;li&gt;create tests - e.g. know what input goes in and what should come out &lt;/li&gt;
&lt;li&gt;fill in the functions with dummy information (e.g. always return constants) &lt;/li&gt;
&lt;li&gt;integrate and ensure that your "demo" version achieves your goal &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note that all of this ignores the tools to be used, estimating time and cost, scheduling, etc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;BUT you could just as easily use the above for your "Life Plan for Success"... &lt;/p&gt;
&lt;h3 id="real-life-example-of-programming-for-success"&gt;Real life example of "programming" for success&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Goal: I want to play professional soccer &lt;ul&gt;
&lt;li&gt;find the position I am best at&lt;/li&gt;
&lt;li&gt;go to at least 3 tryouts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flow: &lt;code&gt;fitness -&amp;gt; skills -&amp;gt; recognition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modular Parts:&lt;ul&gt;
&lt;li&gt;physical fitness&lt;/li&gt;
&lt;li&gt;skills&lt;/li&gt;
&lt;li&gt;networking and agent &lt;/li&gt;
&lt;li&gt;tryout special training camps + video of playing &lt;/li&gt;
&lt;li&gt;feedback from experts on my best position&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tests: &lt;ul&gt;
&lt;li&gt;Must run 5km in under 18 minutes.&lt;/li&gt;
&lt;li&gt;Must sprint 40 yards in 5 seconds.&lt;/li&gt;
&lt;li&gt;Must be able to shoot the ball from 30 yards out into top quarter of the goal 10 out of
10 times&lt;/li&gt;
&lt;li&gt;Agent must have history of signing players to contracts&lt;/li&gt;
&lt;li&gt;Tryouts must show a history of players being brought into the team&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sample Info:&lt;ul&gt;
&lt;li&gt;run 5km in 16 minutes&lt;/li&gt;
&lt;li&gt;sprint in 4.7 seconds&lt;/li&gt;
&lt;li&gt;10 for 10 on shooting&lt;/li&gt;
&lt;li&gt;signed a contract with an agency who manages 100's of professional players&lt;/li&gt;
&lt;li&gt;scheduled 3 tryouts where players have been signed onto the first team every year&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integration: &lt;/p&gt;
&lt;p&gt;If I attend a special training camp and give some professional coaches tapes of me playing in different positions I will receive suggestions on what is my best position (and possibly tips on
how to improve at that position).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Based on total "dummy" information + extra edge from sub goal (networking + expert advice)...&lt;/p&gt;
&lt;p&gt;YES, very high probability of success. &lt;/p&gt;
&lt;h3 id="plan-for-a-successful-win-ce-program"&gt;Plan for a Successful Win CE Program&lt;/h3&gt;
&lt;p&gt;Whew, let's get back to some programming! &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Goal: to put text on the screen &lt;/li&gt;
&lt;li&gt;Flow: &lt;code&gt;WinMain -&amp;gt; get the text -&amp;gt; draw the screen -&amp;gt; draw the text&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modular: &lt;ul&gt;
&lt;li&gt;drawtext function &lt;/li&gt;
&lt;li&gt;char to wchar function &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tested: &lt;ul&gt;
&lt;li&gt;program ran with just quit button&lt;/li&gt;
&lt;li&gt;drawing text to the screen direct from Main using a wchar L"string" constant string &lt;/li&gt;
&lt;li&gt;drawing text to the screen from Main using a wchar[] array populated by a wsprintf &lt;/li&gt;
&lt;li&gt;moving the above to a function and calling it from main &lt;/li&gt;
&lt;li&gt;passing a char string to the conversion function and printing the resulting wchar string &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;the "dummy" info was the use of constant wchar L"string" but I also printed the sizeof and strlen and wcstrlen numbers I defined some sub functions so that I could use the char string functions instead of constantly referring to the Windows functions... &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'd hoped it would be more portable but that's something I discuss at the end... Anyways, &lt;/p&gt;
&lt;h3 id="win-ce-code-for-writing-text-to-the-display"&gt;Win CE code for writing text to the display&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 2010-01 john pfeiffer writing text to the display */&lt;/span&gt;

&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;windowsx.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;commctrl.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;aygshell.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define IDC_ExitButton 40099&lt;/span&gt;

&lt;span class="cm"&gt;/* wchar[] must be cleared empty first! */&lt;/span&gt; 
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;stringToWchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kt"&gt;wchar_t&lt;/span&gt; &lt;span class="n"&gt;longstring&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;longstring&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WCHAR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* convert a char string to wchar and Display it on the screen */&lt;/span&gt;

&lt;span class="cm"&gt;/* here we take the handle to device context (aka logical buffer about the &lt;/span&gt;
&lt;span class="cm"&gt;screen and begin painting it - we then draw a single line of text (windows &lt;/span&gt;
&lt;span class="cm"&gt;wide character format but first converting the character string to wchar string)...&lt;/span&gt;
&lt;span class="cm"&gt;The end paint matches the begin paint and without them the text will flicker constantly */&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;drawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;wchar_t&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/* good practice to zero things before using them */&lt;/span&gt;
    &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;stringToWchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;ExtTextOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_tcslen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputtext&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;ReleaseDC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* our big message loop with all sorts of interrupt options */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_LBUTTONDOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_CHAR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_KEYDOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;drawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"press quit button to quit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_CREATE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end function MenuWndProc */&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ExitButton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CS_HREDRAW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CS_VREDRAW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WNDPROC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WHITE_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;L"App"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"errors "&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;L"IMPORTANT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MB_OK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* Make sure the window uses the Menu App Class name defined above! */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;L"App"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;L"menu demo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* -------- -------- -------- -------- */&lt;/span&gt;

    &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;L"BUTTON"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;L"quit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end WinMain */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="convert-to-a-desktop-application"&gt;Convert to a Desktop Application&lt;/h3&gt;
&lt;p&gt;As always I try to give as much info as possible, therefore to convert this to a Windows Desktop application you must change the following: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Line 32: _tcslen( outputtext ), NULL);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;changed to: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;wcslen( outputtext ), NULL);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;All of the explicit conversions to "Long" that are necessary for Win CE (16 bit) have to be removed... &lt;/p&gt;
&lt;p&gt;which just means getting rid of those pesky 'L' s &lt;/p&gt;
&lt;p&gt;&lt;code&gt;wc.lpszClassName = (LPTSTR) L"App";&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For this to really work in Windows Desktop you'd have to replace my custom char to wchar string conversion with Microsoft's MultiByteToWideChar OR...&lt;/p&gt;
&lt;p&gt;you would probably prefer using wsprintf() to write any text to a wchar_t string and then ExtTextOut is very happy...&lt;/p&gt;</summary><category term="windows"></category><category term="win ce"></category><category term="c"></category></entry><entry><title>Drupal in 2D - pictures of pixels</title><link href="http://blog.john-pfeiffer.com/drupal-in-2d-pictures-of-pixels" rel="alternate"></link><updated>2010-03-18T20:59:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-03-18:drupal-in-2d-pictures-of-pixels</id><summary type="html">&lt;p&gt;I've finally got a Drupal WYSIWYG editor (FCK Editor) working with Image Assist? Or just plain Upload?&lt;/p&gt;
&lt;p&gt;Anyways, here's a kitty for my Kitty!&lt;/p&gt;
&lt;p&gt;![cyber-kitty][]&lt;/p&gt;</summary><category term="drupal"></category></entry><entry><title>Windows CE programming: A win32 api button: 365 programming project day forty</title><link href="http://blog.john-pfeiffer.com/windows-ce-programming-a-win32-api-button-365-programming-project-day-forty" rel="alternate"></link><updated>2010-03-16T20:27:00-07:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-03-16:windows-ce-programming-a-win32-api-button-365-programming-project-day-forty</id><summary type="html">&lt;p&gt;Win CE uses a subset of the win32 API which is neat because technically anything written for it can be compiled for a "full" windows as well.   &lt;/p&gt;
&lt;p&gt;Even though the Win32 API is very outdated I prefer the concept of building blocks and getting your hands dirty with implementation - that's how you really learn how things work. &lt;/p&gt;
&lt;p&gt;C# and .Net, especially with a super GUI IDE, make it easy to quickly build something but also
obscure why performance might be slow, why different parts aren't integrating together, and really require you to build based on the vision of the platform designers - for better or for worse.  &lt;/p&gt;
&lt;p&gt;This is probably why many programs written in C that are speed critical have important parts hand written in assembly. So here's a Windows API button for Win CE...&lt;/p&gt;
&lt;p&gt;Don't forget the batch file for pocket gcc:&lt;/p&gt;
&lt;p&gt;\pgcc\cc1plus \pgcc\source-code.txt -o \pgcc\cwms.s -I \pgcc\include -include \pgcc\fixincl.h -fms-extensions \pgcc\as \pgcc\cwms.s -o \pgcc\cwmo.o \pgcc\ld \pgcc\cwmo.o -o \pgcc\cwme.exe -L \pgcc\lib -l cpplib -l corelibc -l coredll -l aygshell -l runtime -l portlib&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 2010-03-06 john pfeiffer wince quit button&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* these three are included for pocketgcc compatibility */&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;windowsx.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;commctrl.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;aygshell.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* not only do we have those complex included Windows headers&lt;/span&gt;
&lt;span class="cm"&gt;but we have to define a special numeric ID for our buttons */&lt;/span&gt;

&lt;span class="cp"&gt;#define  IDC_ExitButton      40099&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_clearScreen    40098&lt;/span&gt;

&lt;span class="cm"&gt;/* HDC = handle to device context - a logical buffer of the screen. &lt;/span&gt;
&lt;span class="cm"&gt;You &amp;quot;write&amp;quot; things to it and then it can write to the display in a chunk.&lt;/span&gt;
&lt;span class="cm"&gt;A paint structure contains the info about the area being painted.&lt;/span&gt;

&lt;span class="cm"&gt;Direct from MSDN...&lt;/span&gt;
&lt;span class="cm"&gt;typedef struct tagPAINTSTRUCT {&lt;/span&gt;
&lt;span class="cm"&gt;  HDC  hdc;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fErase;&lt;/span&gt;
&lt;span class="cm"&gt;  RECT rcPaint;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fRestore;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fIncUpdate;&lt;/span&gt;
&lt;span class="cm"&gt;  BYTE rgbReserved[32];&lt;/span&gt;
&lt;span class="cm"&gt;} PAINTSTRUCT, *PPAINTSTRUCT;&lt;/span&gt;

&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;HDC&lt;/span&gt;  &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="cm"&gt;/* prepares the window for painting */&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="cm"&gt;/* done painting */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* This is the prototype to the &amp;quot;do everything&amp;quot; window message&lt;/span&gt;
&lt;span class="cm"&gt;processing switch function */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* each button gets a window handle */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;clearScreenButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CS_HREDRAW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CS_VREDRAW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WNDPROC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WHITE_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;errors &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;IMPORTANT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MB_OK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* create our main window letting windows decide the placement &amp;amp; size */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;L&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;quit button app&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* ----------- ----------- ----------- ----------- */&lt;/span&gt;
    &lt;span class="cm"&gt;/* here we get the coordinate dimensions of the main window */&lt;/span&gt;
    &lt;span class="n"&gt;GetWindowRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


    &lt;span class="cm"&gt;/* this makes a quit button at the bottom of the screen */&lt;/span&gt;
    &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;L&amp;quot;BUTTON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;Quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 
        &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="cm"&gt;/* button top left corner x,y */&lt;/span&gt;
        &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* width &amp;amp; height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;clearScreenButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
            &lt;span class="s"&gt;L&amp;quot;BUTTON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;Clear&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 
            &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
            &lt;span class="cm"&gt;/* button top left corner x,y */&lt;/span&gt;
            &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)),&lt;/span&gt;
            &lt;span class="cm"&gt;/* width &amp;amp; height */&lt;/span&gt;
            &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;IDC_clearScreen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;   
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end WinMain */&lt;/span&gt;

&lt;span class="cm"&gt;/* ----------- ----------- ----------- ----------- */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* here we test for what events happened/the user might have done */&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_CREATE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="cm"&gt;/* draw the main window */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_LBUTTONDOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="cm"&gt;/* left button pressed / tap on screen */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_MOUSEMOVE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="cm"&gt;/* mouse pointer is moving */&lt;/span&gt;
            &lt;span class="cm"&gt;/*     if(wParam &amp;amp; MK_LBUTTON)*/&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="cm"&gt;/* quit button pressed */&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_clearScreen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="cm"&gt;/* clear button pressed */&lt;/span&gt;
                    &lt;span class="n"&gt;InvalidateRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;/* wipe the main window */&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end case command */&lt;/span&gt;      
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;initializeBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/*  end case message */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see a button is just a predefined "window" object... &lt;/p&gt;
&lt;p&gt;but hopefully I'll figure out how to design my own button infrastructure so that I better understand the challenges, have increased portability, and maybe even enhanced functionality! ...  &lt;/p&gt;
&lt;p&gt;Further research when compiling using GCC on Windows XP gave warnings about the "long" formatting of some text,&lt;/p&gt;
&lt;p&gt;e.g. the "L" &lt;strong&gt;MessageBox(NULL, TEXT("errors "), L"IMPORTANT", MB_OK);&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;If you don't remove the "L" designation then your buttons won't appear in your binary compiled for Windows XP...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;clearScreenButton = CreateWindow(L"BUTTON", L"Clear", WS_CHILD&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Should be: clearScreenButton = CreateWindow("BUTTON", "Clear", WS_CHILD  &lt;/p&gt;
&lt;p&gt;If you forget to remove the L from wc.lpszClassName = (LPTSTR) L"AppClass"; Then your program will have "undefined behavior" =)&lt;/p&gt;</summary><category term="windows"></category><category term="win ce"></category><category term="c"></category><category term="win32"></category></entry><entry><title>How to customize a Drupal Zen theme Primary Links into Horizontal: 365 programming project day thirty nine</title><link href="http://blog.john-pfeiffer.com/how-to-customize-a-drupal-zen-theme-primary-links-into-horizontal-365-programming-project-day-thirty-nine" rel="alternate"></link><updated>2010-02-23T20:52:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-23:how-to-customize-a-drupal-zen-theme-primary-links-into-horizontal-365-programming-project-day-thirty-nine</id><summary type="html">
&lt;p&gt;I'm squeezing my brain to get Drupal theme customization and CSS working as quickly as possible (while working a more than a full time job and doing something besides computers every once in a while)...&lt;/p&gt;
&lt;p&gt;"Creating" a Zen sub theme is relatively easy, mostly a lot of copying, replacing STARTERKIT, and uploading again to a different directory...&lt;/p&gt;
&lt;h3 id="web-admin-configs"&gt;Web Admin configs&lt;/h3&gt;
&lt;p&gt;But to make significant changes in the layout you have to modify &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before that! FIRST MODIFY THE SETTINGS THAT ARE GIVEN VIA THE WEB ADMIN e.g. Theme configuration&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/build/themes/settings/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here you can choose whether to display the "Theme" Primary Links (appears just below the header section)...  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;(I think it's best to uncheck it and use Blocks instead...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/build/block&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Block layouts is where you can put the Primary links up at the top and Secondary links at the bottom.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="firefox-firebug-plugin"&gt;Firefox Firebug Plugin&lt;/h3&gt;
&lt;p&gt;Allows you to "peek" at the html and css source and figure out exactly what code controls what...&lt;br/&gt;
&lt;a href="http://getfirebug.com"&gt;http://getfirebug.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools -&amp;gt; AddOns -&amp;gt; disable&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;when you're not working on a website CSS  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="modifying-layoutcss"&gt;Modifying layout.css&lt;/h3&gt;
&lt;p&gt;LOOK AT THE SOURCE CODE FROM YOUR UNMODIFIED SITE (with Firebug too...) e.g. line 37 of the home page&lt;/p&gt;
&lt;p&gt;WE FIND "menu-primary" in &lt;strong&gt;zen.css&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To "override" the default &lt;strong&gt;zen.css&lt;/strong&gt; all we have to do is create our own version in &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="c"&gt;/* "Primary links" block */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To take advantage of the "nested" control principle, so any links in div "block-menu-primary-links" will now be red, we add the following to &lt;strong&gt;layout.css&lt;/strong&gt; (with comments explaining it too, of course!)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TRY UPLOADING &lt;strong&gt;layout.css&lt;/strong&gt; and forcing your browser to refresh... neat!&lt;/p&gt;
&lt;h3 id="horizontal-menu-in-layoutcss"&gt;Horizontal menu in layout.css&lt;/h3&gt;
&lt;p&gt;SOME ADDITIONAL EXAMPLES (finally the horizontal menu!)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;/* "Primary links" block */&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* this means by default ordered and unordered lists and anchors have no underlines */&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* specifically "anchors" or links will appear as blocks */&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#008000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#CCBA22&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately haven't figured out why the drupal menu width, when set, makes them appear to go down instead of widening to the right... material for a future post I suppose...&lt;/p&gt;
&lt;p&gt;Scratch that, 30 frantic minutes later, a solution has arrived...&lt;/p&gt;
&lt;h3 id="horizontal-menu-in-layoutcss-with-the-width-workaround"&gt;Horizontal menu in layout.css with the width workaround&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;/* FORCING THEM TO BE HORIZONTAL? 2010-02-22 JOHNPFEIFFER   */&lt;/span&gt;

&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="c"&gt;/* overriding the zen.css "Primary links" block */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c"&gt;/* remove any previously defined margins or padding */&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* this means by default ordered and unordered lists and anchors have no underlines */&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c"&gt;/* no underlining links */&lt;/span&gt;
    &lt;span class="k"&gt;list-style-type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c"&gt;/* no bullet points */&lt;/span&gt;
    &lt;span class="k"&gt;list-style-image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* no custom bullet images */&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* I prefer my text to be neat and centered */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* specifically "anchors" or links will horizontal */&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/*inline;  /* blocks force a newline but inline just uses a little width */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c"&gt;/* wide enough for the longest element, unless you want words on two lines */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#008000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;   &lt;span class="c"&gt;/* light blue */&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;       &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#CCBA22&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;   &lt;span class="c"&gt;/* light brown */&lt;/span&gt;
&lt;span class="nf"&gt;#block-menu-primary-links&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="how-to-create-a-zen-subtheme-part-one"&gt;How to create a zen subtheme (part one)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Note - you should only create custom themes in a test environment, leave your production website alone until you've got everything working!&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the newest version: &lt;a href="http://drupal.org/project/zen"&gt;http://drupal.org/project/zen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract the files into a directory (e.g. &lt;code&gt;tar -xzvf zen-6.x-1.1.tar.gz&lt;/code&gt; or winzip and extract)&lt;/li&gt;
&lt;li&gt;Upload the files using FTP (or better yet, SFTP) into the &lt;strong&gt;/drupal-root/sites/all/themes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Upload the STARTERKIT directory that's inside your zen-6.x-1.1 folder from your pc into the &lt;strong&gt;/drupal-root/sites/all/themes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rename both the pc version and online STARTERKIT directory to your_subtheme_name (lowercase and underscores only)&lt;/li&gt;
&lt;li&gt;Inside both the pc version and the online STARTERKIT directory, rename the &lt;strong&gt;STARTERKIT.info.txt&lt;/strong&gt; to &lt;strong&gt;your_subtheme_name.info&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;On your pc, open the your_subtheme_name.info file and find and replace every "STARTERKIT" with "your_subtheme_name"&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;inside &lt;strong&gt;your_subtheme_name.info&lt;/strong&gt; find the following lines:&lt;/p&gt;
&lt;p&gt;; The name and description of the theme used on the admin/build/themes page.
name        = Zen Sub-theme Starter Kit&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Replace the "zen Sub-theme Starter Kit" with your_subtheme_name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repeat step 7 for the "template.php" file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Repeate step 7 for the "theme-settings.php" file&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upload all 3 modified files (overwrite) to your &lt;strong&gt;/drupal-root/sites/all/themes/your_subtheme_name&lt;/strong&gt; directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using your FTP download the following files from:       &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/drupal-root/sites/all/themes/zen-6.x-1.1/zen/zen&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;html-elements.css, layout-fixed.css, layout-liquid.css, print.css, zen.css&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upload all of the above files into your directory: &lt;strong&gt;/drupal-root/sites/all/themes/your_subtheme_name&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;12a. If you want a fixed (ie 1024px) css layout then rename &lt;strong&gt;layout-fixed.css&lt;/strong&gt; to &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;12b. If you want a resizable css layout then rename &lt;strong&gt;layout-liquid.css&lt;/strong&gt; to &lt;strong&gt;layout.css&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As the Drupal administrator login to your site and enable your new sub theme: &lt;strong&gt;Administer -&amp;gt; Site building -&amp;gt; Themes&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;http://example.com/admin/build/themes/select&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;you'll probably want to set it as default&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Apparently Drupal 6 is smart enough that when you click save:&lt;/p&gt;
&lt;p&gt;For easier theme development, the theme registry is being rebuilt on every page request. 
It is extremely important to turn off this feature on production websites.&lt;/p&gt;
&lt;h3 id="more-info"&gt;More info&lt;/h3&gt;
&lt;p&gt;You may have to:&lt;/p&gt;
&lt;p&gt;run cron manually (or you should be) so that the new options appear on the Drupal Menus.&lt;/p&gt;
&lt;p&gt;Reload after you save the new theme as enabled and default&lt;/p&gt;</summary><category term="drupal"></category><category term="drupal theme"></category><category term="zen theme"></category></entry><entry><title>A better CSS 3 column header footer layout: 365 programming project day thirty eight</title><link href="http://blog.john-pfeiffer.com/a-better-css-3-column-header-footer-layout-365-programming-project-day-thirty-eight" rel="alternate"></link><updated>2010-02-18T14:57:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-18:a-better-css-3-column-header-footer-layout-365-programming-project-day-thirty-eight</id><summary type="html">&lt;p&gt;It's messy as some of the code could be removed but it gets you most of the way there - a footer at the bottom (even if the content doesn't fill the page)... &lt;/p&gt;
&lt;p&gt;a header at the top that's full width, and 3 columns... with a little weird bug on the right column...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xml:lang=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;/* required to kill off any extra &amp;quot;helpful&amp;quot; browser padding */&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;99%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;z-index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nf"&gt;#container1&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;min-height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#container2&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#container3&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nf"&gt;#column1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nf"&gt;#column2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#column3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nf"&gt;#footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;z-index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;99%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        header
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;column1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                left left left left left left left left left left left left
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;column2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                standard 3 column layout with header and footer
                content and columns are ordered by SEO priority             
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;column3&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                right right right right right right right right right
                &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;image.png&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    footer
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;


&lt;span class="c"&gt;&amp;lt;!--div id=&amp;quot;container1&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;    &amp;lt;div id=&amp;quot;container2&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;        &amp;lt;div id=&amp;quot;c3&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;/div--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="css"></category><category term="html"></category></entry><entry><title>How to center with CSS: 365 programming project day thirty seven</title><link href="http://blog.john-pfeiffer.com/how-to-center-with-css-365-programming-project-day-thirty-seven" rel="alternate"></link><updated>2010-02-17T15:05:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-17:how-to-center-with-css-365-programming-project-day-thirty-seven</id><summary type="html">&lt;p&gt;This is a tiny post, but it covers a very important part of how a CSS layout might look: how do you center something?&lt;/p&gt;
&lt;p&gt;The "Centering CSS Blocks Trick" forces the text (or image too, hopefully, depending on a post 2006 browser)...&lt;/p&gt;
&lt;h3 id="css-center-horizontal"&gt;CSS center (horizontal)&lt;/h3&gt;
&lt;h4 id="css"&gt;CSS&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;#footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;margin-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;z-index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="html"&gt;HTML&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;footer text goes here&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the text-align instruction is perhaps redundant but it's better to be safe (and more universally compatible).&lt;/p&gt;
&lt;h3 id="css-centering-vertically"&gt;CSS centering vertically&lt;/h3&gt;
&lt;p&gt;To VERTICALLY CENTER things takes a bit of creativity,  basically you must pretend that an "inner div" is actually a table cell and use the "new" property of vertical-align (alot like html table cell valign)...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nf"&gt;#contentsContainer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;/* height must be a fixed number */&lt;/span&gt;
        &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;table-cell&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;vertical-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#contents&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="k"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c"&gt;/* height must be a fixed number */&lt;/span&gt;
        &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;contentsContainer&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        CONTENTS Lots of contents Vertically and horizontally centered CONTENTS
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;contents&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            test more content (this is horizontally centered too)
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="inline-css-centered"&gt;Inline CSS centered&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text-align: center; width: 100%; margin-left: auto; margin-right: auto;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Logo&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/img/icons/logo_256.png&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Welcome&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whew, back to work!&lt;/p&gt;</summary><category term="css"></category><category term="html"></category></entry><entry><title>C programming windows clock v4 (failure is only feedback): 365 programming project day thirty six</title><link href="http://blog.john-pfeiffer.com/c-programming-windows-clock-v4-failure-is-only-feedback-365-programming-project-day-thirty-six" rel="alternate"></link><updated>2010-02-12T14:47:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-12:c-programming-windows-clock-v4-failure-is-only-feedback-365-programming-project-day-thirty-six</id><summary type="html">&lt;p&gt;It seems I've bitten off more than I thought with regularly updating a Window every second...&lt;/p&gt;
&lt;p&gt;I need to go back and learn more about how &lt;strong&gt;WM_PAINT&lt;/strong&gt; works in windows because my current version is very funky... though it does work!&lt;/p&gt;
&lt;p&gt;A couple of obvious other things: &lt;strong&gt;WM_TIMER&lt;/strong&gt; and perhaps &lt;strong&gt;strcpy&lt;/strong&gt; instead of &lt;strong&gt;get_current_time&lt;/strong&gt; again...&lt;/p&gt;
&lt;p&gt;The reason I've chosen the awkward system of getting the system time over and over instead of the "convenient" windows timer is that I'm trying to learn and understand what I can do with programming, not how to copy and paste someone else's function.&lt;/p&gt;
&lt;p&gt;The "modular" aspect of &lt;strong&gt;get_current_time&lt;/strong&gt; returning a string becomes very interesting as theoretically I could modify it to get time from an atomic clock or the internet and the application wouldn't know the difference.&lt;/p&gt;
&lt;p&gt;Anyways, here's some source code that does compile (but I think it has a very slow memory leak so don't leave it running all night... LOL)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 2010-02-12  john pfeiffer, MS windows clock v4 (updating time)&lt;/span&gt;
&lt;span class="cm"&gt;todo: wm_paint, wm_timer, strcpy instead of get_current?&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_ExitButton 40001&lt;/span&gt;


&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;WINAPI&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPSTR&lt;/span&gt; &lt;span class="n"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                     &lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoadCursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_ARROW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LTGRAY_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;


    &lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindowEx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Windows Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* create button and store the handle */&lt;/span&gt;
    &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                       &lt;span class="cm"&gt;/* class name */&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Push to Quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                 &lt;span class="cm"&gt;/* button caption */&lt;/span&gt;
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* the styles */&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                            &lt;span class="cm"&gt;/* the left and top coordinates */&lt;/span&gt;
        &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                         &lt;span class="cm"&gt;/* width and height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="cm"&gt;/* parent window handle */&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="cm"&gt;/* the ID of your button */&lt;/span&gt;
        &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* the instance of your application */&lt;/span&gt;
        &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;                         &lt;span class="cm"&gt;/* unnecessary extra */&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;

    &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="cm"&gt;/* get the current time initially */&lt;/span&gt;

    &lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* nasty polling business, should be done with WM_TIMER */&lt;/span&gt;
        &lt;span class="cm"&gt;/* if strings aren&amp;#39;t the same then update the window */&lt;/span&gt;
        &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;strcmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;   
            &lt;span class="cm"&gt;/* debugging - am I getting the time comparison? */&lt;/span&gt;
            &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="cm"&gt;/* theoretically the rest of this forces the window to refresh */&lt;/span&gt;
            &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="cm"&gt;/* update the new &amp;quot;old time&amp;quot; */&lt;/span&gt;
            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;temp_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;               
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;
&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* a struct to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to a DC (buffer) for the screen */&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="cm"&gt;/* find out what&amp;#39;s been clicked */&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;GetClientRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;
            &lt;span class="n"&gt;InvalidateRect&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;

            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;DrawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                   &lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end of WinMain */&lt;/span&gt;


&lt;span class="cm"&gt;/* Get the current time from the system and update the time string */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
    &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="c"></category><category term="windows"></category><category term="time"></category><category term="clock"></category></entry><entry><title>Drupal Basic Site Configuration: the Search Block</title><link href="http://blog.john-pfeiffer.com/drupal-basic-site-configuration-the-search-block" rel="alternate"></link><updated>2010-02-11T21:35:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-11:drupal-basic-site-configuration-the-search-block</id><summary type="html">
&lt;p&gt;A basic Drupal theme has "regions" where you can put things...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;            header  
left side                  right side
            content

            footer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Blocks are the "extra parts" that can appear in addition to your "node" (stuff in the Content only)&lt;/p&gt;
&lt;p&gt;While it is easy to get advanced functionality with a few clicks, it can be a chore to remember the order and location of those clicks.&lt;/p&gt;
&lt;h3 id="enable-site-search"&gt;Enable Site Search&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; Site Building -&amp;gt; Modules -&amp;gt; List  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Click the checkbox next to &lt;strong&gt;SEARCH&lt;/strong&gt; to enable it.&lt;/p&gt;
&lt;p&gt;Hit the &lt;strong&gt;SAVE&lt;/strong&gt; button (&lt;em&gt;way down at the bottom&lt;/em&gt;).&lt;/p&gt;
&lt;h3 id="site-search-permissions"&gt;Site Search Permissions&lt;/h3&gt;
&lt;p&gt;Now you have to give Anonymous users (or just Authenticated Users, or maybe your custom category of LOLcatz?) permission to actually see/use the Search.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; User Management -&amp;gt; Permissions  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Click the check boxes next to Search Module for the Anonymous and Authenticated User columns (note you can also give access to Advanced Search... cool.)&lt;/p&gt;
&lt;p&gt;Hit the &lt;strong&gt;SAVE&lt;/strong&gt; button (&lt;em&gt;way down at the bottom&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE that the "administrator/root" user isn't a column (and therefore you can't remove your own permission to administer the site... not that anyone'd ever be so silly...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For Garland, specifically, when you add the Search it will make a "double" so you have to disable the one that's built into the theme...  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; Site Building -&amp;gt; Themes -&amp;gt; Configure -&amp;gt; Global Settings&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Whew! Almost there...&lt;/p&gt;
&lt;h3 id="adding-a-site-search-block"&gt;Adding a Site Search Block&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Administer -&amp;gt; Site Building -&amp;gt; Blocks -&amp;gt; List&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From here you can either drag and drop (or use the "dropdown" next to the Block name) to get the Search into the region of the page you want.&lt;/p&gt;
&lt;p&gt;Hit the &lt;strong&gt;SAVE&lt;/strong&gt; button (way down at the bottom) before doing anything else.&lt;/p&gt;
&lt;p&gt;(Very frequently I forget to press save and all of my changes don't get saved... must be a bug.)&lt;/p&gt;
&lt;p&gt;THEN click on &lt;strong&gt;"Configure"&lt;/strong&gt; next to the Search Block to specify some details. (e.g. Search only appears on the page, or the title above the Search Block will be FIND, or only show the Search Block to certain user roles...)&lt;/p&gt;
&lt;p&gt;OK, hit your &lt;strong&gt;SAVE&lt;/strong&gt; button one last time... not only can you, super root administrator see Search but hopefully Anonymous users can now find your secret buried treasure...&lt;/p&gt;
&lt;p&gt;Are you ready for URL's and page titles?&lt;/p&gt;</summary><category term="drupal"></category></entry><entry><title>C programming windows clock v3: 365 programming project day thirty five</title><link href="http://blog.john-pfeiffer.com/c-programming-windows-clock-v3-365-programming-project-day-thirty-five" rel="alternate"></link><updated>2010-02-11T13:42:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-11:c-programming-windows-clock-v3-365-programming-project-day-thirty-five</id><summary type="html">&lt;p&gt;My windows clock project is slowly progressing...&lt;/p&gt;
&lt;p&gt;Now I can create a window with a QUIT button and display the current system time (only once)...&lt;/p&gt;
&lt;p&gt;If you want to know more about the project from the beginning search the site for winclock (or click on the time tag).&lt;/p&gt;
&lt;p&gt;I've stripped out most of the project header stuff - perhaps in the future I'll just have it as an "include" so that it's in the project but since it doesn't change much I only have to look at it when I refer back to it (instead of at the top of the file ALL THE TIME!)&lt;/p&gt;
&lt;p&gt;Ok, enough planning and review, here's the code:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;notepad gcwin.bat&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;winclock-v3.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 2010-02-08  john pfeiffer, MS windows clock v3 (the windows)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_MyExitButton 40001 &lt;/span&gt;&lt;span class="cm"&gt;/* case sensitive! random high number to keep windows happy */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;


&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;WINAPI&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPSTR&lt;/span&gt; &lt;span class="n"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                     &lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoadCursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_ARROW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LTGRAY_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;


    &lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindowEx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Windows Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="cm"&gt;/* create button and store the handle */&lt;/span&gt;
    &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                       &lt;span class="cm"&gt;/* class name */&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Push to Quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                 &lt;span class="cm"&gt;/* button caption */&lt;/span&gt;
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* the styles */&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                            &lt;span class="cm"&gt;/* the left and top coordinates */&lt;/span&gt;
        &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                         &lt;span class="cm"&gt;/* width and height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="cm"&gt;/* parent window handle */&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="cm"&gt;/* the ID of your button */&lt;/span&gt;
        &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* the instance of your application */&lt;/span&gt;
        &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;                         &lt;span class="cm"&gt;/* unnecessary extra */&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;

    &lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;           
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;
&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="cm"&gt;/* a struct to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to a DC (buffer) for the screen */&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="cm"&gt;/* find out what&amp;#39;s been clicked */&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                                
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;GetClientRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;
            &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;
            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;DrawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* send a WM_QUIT */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                         &lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="cm"&gt;/* Get the current time from the system and update the time string */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
    &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="c"></category><category term="time"></category><category term="clock"></category><category term="windows"></category><category term="gcc"></category></entry><entry><title>Customize your linux bash console: bashrc, aliases, colors, hotkeys, history length</title><link href="http://blog.john-pfeiffer.com/customize-your-linux-bash-console-bashrc-aliases-colors-hotkeys-history-length" rel="alternate"></link><updated>2010-02-10T16:00:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-10:customize-your-linux-bash-console-bashrc-aliases-colors-hotkeys-history-length</id><summary type="html">
&lt;p&gt;The hidden file &lt;strong&gt;.bashrc&lt;/strong&gt; in each user's home directory (~ or or /home/username or /root) controls the configuration of how the console (and certain commands) behave.&lt;/p&gt;
&lt;p&gt;NOTE CENTOS/REDHAT also uses &lt;strong&gt;.bash_profile&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The shell is the program that interfaces between the user and the Linux kernel. There are different shells with different features.&lt;/p&gt;
&lt;p&gt;Ash is a reimplementation of the System V shell  May 6, 1989&lt;/p&gt;
&lt;p&gt;GNU Bourne Again Shell  Bash is an sh-compatible command language interpreter that
 executes commands read from the standard input or from a file. Bash also incorporates
  useful features from the Korn and C shells (ksh and csh)&lt;/p&gt;
&lt;p&gt;June 18, 1999
Zsh is a command interpreter which mostly resembles the Korn shell. Includes a
 command-line editor and many other enhancements over the other shells. &lt;/p&gt;
&lt;h3 id="favorite-aliases"&gt;Favorite Aliases&lt;/h3&gt;
&lt;p&gt;Here are my favorite aliases that are in my .bashrc:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias ls='ls --color=auto'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;color highlighting of a directory listing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias ll='ls -ahlF --color=auto'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;directory listing: all, hidden too, long format, show type with symbols: dir/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias la='ls -A'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;directory listing almost all so exclude . and ..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias l='ls -CF'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;list in columns with trailing type symbols: dir/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias free='free -m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;free RAM in megabytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias df='df -h'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;disk free in human sizes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias nano='nano -c -S -u'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;simple editor with cursor position, smooth scroll, and undo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gp='git pull'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;pull remote changes with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gt='git status'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;current git status with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gw='git whatchanged'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;git history with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias gd="GIT_PAGER='' git diff"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;git history with less typing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias rm='rm -i'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;extra prompt before deleting a file or directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias cp='cp -i'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;extra prompt before overwriting a file or directory with a copy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alias mv='mv -i'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;extra prompt before overwriting a file or directory with a move&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;export PATH=$PATH:~/bin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;your own local scripts are loaded in the console&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;set bell-style none&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no more annoying bash beeps!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xset -b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no more annoying bash beeps for x windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;alias ssh='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh will not check nor store remote server signatures: insecure!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;unalias free&lt;/code&gt; or &lt;code&gt;\free&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE to escape or override the alias&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To enable the new aliases immediately go to the directory type one of the following:
&lt;code&gt;. ./bashrc&lt;/code&gt; or &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nano /home/username/.bashrc or /root/.bashrc
export PATH=$PATH:~/bin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;p&gt;.bashrc or .profile are where your shell (BASH) gets it's initial settings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;root:~# ls -al
total 20
drwxr-xr-x  &lt;span class="m"&gt;2&lt;/span&gt; root root &lt;span class="m"&gt;4096&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; 21:56 .
drwxr-xr-x &lt;span class="m"&gt;21&lt;/span&gt; root root &lt;span class="m"&gt;4096&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; 22:26 ..
-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;183&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; 22:31 .bash_history
-rw-r--r--  &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;2225&lt;/span&gt; Mar &lt;span class="m"&gt;29&lt;/span&gt; 22:31 .bashrc
-rw-r--r--  &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;141&lt;/span&gt; May &lt;span class="m"&gt;15&lt;/span&gt;  &lt;span class="m"&gt;2007&lt;/span&gt; .profile
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;if a lot of commands start failing try a cat /etc/passwd and see if you are using &lt;strong&gt;/sbin/bash&lt;/strong&gt; or &lt;strong&gt;/bin/sh&lt;/strong&gt; - the older and less functional shell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;whoami&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;display what user is logged in or is being impersonated by su&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;echo $HOME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;display the current user's home directory (which should match what's in /etc/passwd)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;echo $PATH&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;list what binary executable directories are accessible by default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;normal centos user has&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;/usr/local/bin:/bin:/usr/bin:/home/username/bin&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;changing to root with: &lt;code&gt;su -&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;NOTE that if you simply use "su" you will only get the normal user path...&lt;/p&gt;
&lt;h3 id="increasing-bash-history-length"&gt;increasing bash history length&lt;/h3&gt;
&lt;p&gt;.bash_profile allows you to customize your command history size... (sometimes it's a section in .bashrc)&lt;/p&gt;
&lt;p&gt;if it doesn't exist (e.g. ubuntu can't find it ".bash_profile doesn't exist"), create it and make it executable and then add the following lines...  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;echo "#defaults are 500" &amp;gt;&amp;gt; .bash_profile
echo "HISTFILESIZE=10000" &amp;gt;&amp;gt; .bash_profile
echo "HISTSIZE=10000" &amp;gt;&amp;gt; .bash_profile    
chmod 700 ~/.bash_profile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HISTFILE is where the history saves to (/dev/null = no history file), the default is: ~/.bash_history.&lt;/p&gt;
&lt;p&gt;HISTFILESIZE how many commands to keep in HISTFILE (default 500)&lt;/p&gt;
&lt;p&gt;HISTSIZE how many commands to keep in the current session (default 500)&lt;/p&gt;
&lt;p&gt;HISTIGNORE Controls which commands to ignorea nd not save. The variable takes a list of colon separated patterns. Pattern &amp;amp; matches the previous history command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cut -f1 -d" " .bash_history | sort | uniq -c | sort -nr | head -n 30&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;what command you've typed the most&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cut -f1 -d" " /root/.bash_history | sort | uniq -c | sort -nr | head -n 30&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;what command root has typed the most&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cut -f1 /root/.bash_history | sort | uniq -c | sort -nr | head -n 30&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;what command + parameters root has typed the most&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="example-default-bash_profile"&gt;Example default .bash_profile&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Get&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;aliases&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;functions&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="na"&gt;-f&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;.bashrc&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;then&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;/.bashrc&lt;/span&gt;
&lt;span class="nx"&gt;fi&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="nx"&gt;specific&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;startup&lt;/span&gt; &lt;span class="nx"&gt;programs&lt;/span&gt;
&lt;span class="nx"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;$PATH&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;$HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;
&lt;span class="kr"&gt;export&lt;/span&gt; &lt;span class="nx"&gt;PATH&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;note&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="nx"&gt;command&lt;/span&gt; &lt;span class="nx"&gt;only&lt;/span&gt; &lt;span class="nx"&gt;exists&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bash_profile&lt;/span&gt;
&lt;span class="nx"&gt;unset&lt;/span&gt; &lt;span class="nx"&gt;USERNAME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;nano .bashrc&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uncomment (remove the leading # from the two lines with --color=auto)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# enable color support of ls and also add handy aliases
if [ "&lt;span class="nv"&gt;$TERM&lt;/span&gt;" != "dumb" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    #alias dir='ls --color=auto --format=vertical'
    #alias vdir='ls --color=auto --format=long'
fi

# ALSO, uncomment the following line to get a color prompt:

# Comment in the above and uncomment this below for a color prompt
#PS1='&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;debian_chroot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;debian_chroot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[$
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And comment out the two lines above it...&lt;/p&gt;
&lt;h3 id="hotkeys"&gt;hotkeys&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-r&lt;/td&gt;
&lt;td&gt;to search through your command history in reverse (newest to oldest)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-k&lt;/td&gt;
&lt;td&gt;to clear all the text after cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-u&lt;/td&gt;
&lt;td&gt;to clear all the text before cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-a&lt;/td&gt;
&lt;td&gt;move to beginning of the current&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-e&lt;/td&gt;
&lt;td&gt;move to end of the current&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-f&lt;/td&gt;
&lt;td&gt;move forward one char&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl-b&lt;/td&gt;
&lt;td&gt;move backward one word&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="example-recycle-bin-for-root"&gt;Example recycle bin for root&lt;/h3&gt;
&lt;p&gt;Now you can do fun things like have a "recycle bin" for root:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir /recycle-bin&lt;/code&gt;
&lt;code&gt;echo "mv $1 /recycle-bin" &amp;gt; del.sh&lt;/code&gt;
&lt;code&gt;chmod 700 del.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;AND THEN VERIFY WITH: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;touch test.txt&lt;/li&gt;
&lt;li&gt;./del.sh test.txt&lt;/li&gt;
&lt;li&gt;ls -al /recycle-bin&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h3 id="bashrc-xterm-ansi-escape-color-codes"&gt;bashrc - xterm - ANSI escape color codes&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;.bashrc&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;alias xterm1='xterm -fg black -bg white'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nano /home/username/.icewm/toolbar
prog xterm xterm1 x-terminal-emulator&lt;/p&gt;
&lt;p&gt;nano /home/username/.icewm/keys&lt;/p&gt;
&lt;p&gt;key "Ctrl+Alt+j" xterm -fg black -bg white&lt;/p&gt;
&lt;p&gt;FIRST print out what colors are available...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dircolors -p &amp;gt; dircolors.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;after reading through that and being thoroughly mystified...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;echo -e "\033[44;37;5m ME \033[0m COOL"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if you put the above into your bash shell you'll see that the ANSI 
control of colors is basically what controls BASH/TERMINALS...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Attribute codes:
00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed

Text color codes:
30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white

Background color codes:
40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white

Black       0;30     Dark Gray     1;30
Blue        0;34     Light Blue    1;34
Green       0;32     Light Green   1;32
Cyan        0;36     Light Cyan    1;36
Red         0;31     Light Red     1;31
Purple      0;35     Light Purple  1;35
Brown       0;33     Yellow        1;33
Light Gray  0;37     White         1;37

echo -e "\e[1;34mThis is a blue text.\e[0m"

so \e[attribute code; text color code0m

framed by the [ --- 0m 
note that the \033 in the first example has been replaced by \e

echo -e "\e[30;470mtest"

FOREGROUND WHITE (in case you accidentally set it to black on black)
echo -e "\033[37m\]"

BACKGROUND WHITE
echo -e "\033[47m\]"

FOREGROUND BLACK
echo -e "\033[1;30m\]"



changing the foreground and background color of your bash shell
(and font?)

TEMPORARY SOLUTION

xterm -fg *color* -bg *color*

PERMENANT SOLUTION


.Xdefaults file in your home directory
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="bash"></category><category term="bashrc"></category><category term="bash alias"></category><category term="bash history"></category></entry><entry><title>Drupal Themes customization intro: 365 programming project day thirty four</title><link href="http://blog.john-pfeiffer.com/drupal-themes-customization-intro-365-programming-project-day-thirty-four" rel="alternate"></link><updated>2010-02-10T15:02:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-10:drupal-themes-customization-intro-365-programming-project-day-thirty-four</id><summary type="html">&lt;p&gt;Drupal is meant to be a dynamic website platform (that runs quite well out of the box) yet customizable.&lt;/p&gt;
&lt;p&gt;Despite the good advice to create a "sub theme" by copying and pasting the current files into a new folder i went ahead and hacked at the core php and css...&lt;/p&gt;
&lt;p&gt;While Garland itself (I'm using the "configurable sub theme Minelli" which must be modified through Garland) is very hard to work with (I will probably end up using Zen to get my final customized effect)...&lt;/p&gt;
&lt;p&gt;FTP into your website hosting and ... /drupal-root/themes/garland&lt;/p&gt;
&lt;p&gt;Modifying page.tpl.php with my trusty notepad2...&lt;/p&gt;
&lt;p&gt;Line 66 has the very interesting terms:&lt;/p&gt;
&lt;p&gt;From there you have to also modify "style.css" to the related terms (that's the way css works, to abstract the content &amp;amp; functionality in html/php and the design in css)...&lt;/p&gt;
&lt;p&gt;FUNNILY ENOUGH, THINGS WORK BACKWARDS...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.sidebars&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* min-width: 980px; */&lt;/span&gt;
    &lt;span class="k"&gt;min-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;680px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So as you can see, I cleverly commented out the original and modified it to be smaller (right?)... but it actually made the sidebars bigger... so I'll try the reverse... but changes don't really appear...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Admin -&amp;gt; Flush All Caches is supposed to help make the theme changes appear!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After enough fiddling to understand it I've reset style.css to it's default in Garland...&lt;/p&gt;
&lt;p&gt;Apparently the "Minnelli" sub folder minnelli.css overrides the style.css so that's what I need to work on...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/drupal-root/themes/garland/minnelli/minnelli.css&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="nf"&gt;#wrapper&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 560px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;960px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.sidebars&lt;/span&gt; &lt;span class="nf"&gt;#wrapper&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 980px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;480px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.sidebar-left&lt;/span&gt; &lt;span class="nf"&gt;#wrapper&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.sidebar-right&lt;/span&gt; &lt;span class="nf"&gt;#wrapper&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 770px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;570px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Except that once again, the settings above have SHRUNK the body...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.sidebar-left&lt;/span&gt; &lt;span class="nf"&gt;#wrapper&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.sidebar-right&lt;/span&gt; &lt;span class="nf"&gt;#wrapper&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* width: 770px; */&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;870px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above is the only bit of code needed to widen the body slightly, all of the rest is the garland/minnelli default.&lt;/p&gt;
&lt;p&gt;Ironically the changes only appear so far in the Admin User logged on screen (not for anonymous users)...&lt;/p&gt;
&lt;p&gt;But that's enough for today's post!&lt;/p&gt;
&lt;p&gt;More info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.drupal.org/theme-guide/6-7"&gt;https://www.drupal.org/theme-guide/6-7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.drupal.org/node/225125"&gt;https://www.drupal.org/node/225125&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</summary><category term="drupal"></category><category term="drupal theme"></category><category term="css"></category></entry><entry><title>Javascript Form Validation, Lots of work: 365 programming project day thirty three</title><link href="http://blog.john-pfeiffer.com/javascript-form-validation-lots-of-work-365-programming-project-day-thirty-three" rel="alternate"></link><updated>2010-02-04T14:59:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-04:javascript-form-validation-lots-of-work-365-programming-project-day-thirty-three</id><summary type="html">&lt;p&gt;I'm working too much which is why these posts are more infrequent (though I will keep numbering them sequentially and hopefully one day I'll have enough time to backfill all 365 before the 1 year deadline)...&lt;/p&gt;
&lt;p&gt;Javascript is meant to easily add functionality to a webpage.&lt;/p&gt;
&lt;p&gt;Unfortunately some people don't really test it enough, case in point, an email newsletter went out with a link to an online competition page BUT the submit button "didn't work"...&lt;/p&gt;
&lt;p&gt;Here comes John to save the day!&lt;/p&gt;
&lt;p&gt;From the HTML everything appeared fine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;f&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;send_enquiry_displays.asp&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;nowrap&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;First Name:*  &lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pTextBox1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;txFirstName&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;

    More form stuff here...  Notice that the radio button only has one choice...

    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;radio&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;5.7 VGA TFT&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;nowrap&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Wireless LAN:  &lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ckWirelessLAN&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;valign=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;whereDidYouHear&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;WUNL0309#1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:checkSingupForm()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;this.blur()&amp;quot;&lt;/span&gt;

    &lt;span class="na"&gt;onmouseover=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;genericRollover(&amp;#39;elImgSubmit&amp;#39;,&amp;#39;images/buttons/submit_over.gif&amp;#39;);&lt;/span&gt;
&lt;span class="s"&gt;    window.status=&amp;#39;Submit Form&amp;#39;;return true;&amp;quot;&lt;/span&gt;

    &lt;span class="na"&gt;onmouseout=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;genericRollover(&amp;#39;elImgSubmit&amp;#39;,&amp;#39;images/buttons/submit.gif&amp;#39;);&lt;/span&gt;
&lt;span class="s"&gt;    window.status=&amp;#39;&amp;#39;;return true;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;images/buttons/submit.gif&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;elImgSubmit&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Submit Form&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;66&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;22&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;hspace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;border=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;language=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;JavaScript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkSingupForm&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//this array should contain every text field you require to be filled in&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txFirstName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;First Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txLastName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Last Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txCompany&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Company&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txTown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Town&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txEmail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;E-mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//for loop checks each value if it is blank &amp;quot;&amp;quot; ... then popup alert and changes focus&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please fill in &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//a regular expression check to ensure the email is in a valid email format&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;emailRE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9_\-])+\.)+([a-zA-Z0-9]{2,4})+$/&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;emailRE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txEmail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please fill in a valid e-mail address.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txEmail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//ensures that the display size have been filled out...&lt;/span&gt;

    &lt;span class="nx"&gt;rdDisplaySizeValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;   
            &lt;span class="nx"&gt;rdDisplaySizeValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;rdDisplaySizeValid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please choose a Display size.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdDisplaySize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//ensures that the embeddedconfiguration field has been checked at least once...&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdEmbeddedConfiguration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdEmbeddedConfiguration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please choose a Embedded Configuration.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rdEmbeddedConfiguration&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After downloading the ASP file and creating a backup copy...&lt;/p&gt;
&lt;p&gt;So what was the problem?&lt;/p&gt;
&lt;p&gt;The incorrect validation of radio button rdDisplaySize had to be commented out.&lt;/p&gt;
&lt;p&gt;I also added the nifty "default CHECKED" option as the form only gave one Radio Button option (but it was a Required field!)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input type="radio" name="rdDisplaySize" value="5.7 VGA TFT CHECKED"&amp;gt;&amp;lt;/td&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Whew, another crisis averted, customers now able to register for the competition and turn themselves into Leads for our company!&lt;/p&gt;</summary><category term="javascript"></category><category term="html form"></category></entry><entry><title>Replace Windows XP SP3 notepad with notepad2</title><link href="http://blog.john-pfeiffer.com/replace-windows-xp-sp3-notepad-with-notepad2" rel="alternate"></link><updated>2010-02-02T13:41:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-02:replace-windows-xp-sp3-notepad-with-notepad2</id><summary type="html">&lt;p&gt;Each XP service pack seems to make the process of replacing notepad.exe with notepad2.exe even more complex (somebody at Microsoft really likes the original notepad)...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updated steps for SP3:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download a replacement text editor: &lt;a href="http://www.flos-freeware.ch/notepad2.html"&gt;http://www.flos-freeware.ch/notepad2.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(If you have the \servicepackfiles\i386 folder...)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;rename C:\WINDOWS\ServicePackFiles\i386\notepad.exe C:\WINDOWS\ServicePackFiles\i386\notepad.exe.bak&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now rename notepad2.exe notepad.exe and copy it into:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\WINDOWS\ServicePackFiles\i386\
C:\WINDOWS\system32\dllcache
C:\WINDOWS\system32\notepad.exe
C:\WINDOWS
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check that your new notepad is in place (the filesize change from 68k to 243k)...&lt;/p&gt;
&lt;p&gt;(In service pack 2 it would complain with 2 popups and you would just hit cancel both times... as \system32 files were immediately replaced by the "original" from dllcache)&lt;/p&gt;
&lt;p&gt;ADDITIONALLY, the "file type" may get messed up so you might have to have notepad2.exe in the C:\ and when you double click a .txt from windows explorer you'll have to choose Open With other -&amp;gt; Browse -&amp;gt; c:\notepad2.exe&lt;/p&gt;</summary><category term="windows"></category><category term="notepad"></category><category term="notepad2"></category></entry><entry><title>Debugging and "Accidental Difficulties" with getchar and loops: 365 programming project day thirty two</title><link href="http://blog.john-pfeiffer.com/debugging-and-accidental-difficulties-with-getchar-and-loops-365-programming-project-day-thirty-two" rel="alternate"></link><updated>2010-02-01T21:46:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-01:debugging-and-accidental-difficulties-with-getchar-and-loops-365-programming-project-day-thirty-two</id><summary type="html">&lt;p&gt;So for fun I tried to "port" my code (of winclockv2.c) into Linux and compile it with gcc.  &lt;/p&gt;
&lt;p&gt;Remarkably easy since most Linux distributions come with GCC installed (in case you need to build a new application from source code... it sounds scary until you've done it once or twice and then it's easy). &lt;/p&gt;
&lt;p&gt;Just open up a text editor, paste it in, save it (getchar-loop.c). The only thing to change was my Windows "batch" file,  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch gc.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chmod +x gc.sh&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano gc.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash  &lt;/span&gt;
gcc -o &lt;span class="nv"&gt;$1&lt;/span&gt;.exe &lt;span class="nv"&gt;$1&lt;/span&gt; -Wall -ansi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;./gc.sh getchar-loop.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So today's entry is an offshoot program I wrote to investigate why my previous version loop control wasn't working correctly. A little googling showed me that this particular "getchar() buffer problem" is a classic...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* 2010-02-01 john pfeiffer  &lt;/span&gt;
&lt;span class="cm"&gt; getchar() only takes one character from the buffer, &lt;/span&gt;
&lt;span class="cm"&gt; but when a user presses &amp;quot;enter&amp;quot;... &lt;/span&gt;
&lt;span class="cm"&gt; that&amp;#39;s another character in the buffer...&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This program will take in one character you type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; and display it back to you.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GeekSpeak = Demo the extra &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;\n\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; in the&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; getchar() from user &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;loop dilemma&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Please enter one character and press enter...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;(y to quit)... Do not attempt to type in a word or else!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%c&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* we must clear the stdin buffer of extra char&amp;#39;s and the \n for the y!*/&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Ha ha, to quit press &amp;#39;y&amp;#39; again&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;((this corrected version will only display the first char entered).&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Press a key or enter a word, then press enter (use y to quit):&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%c&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end of main */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="c"></category><category term="getchar"></category><category term="gcc"></category></entry><entry><title>C programming command line clock continued (winclockv2): 365 programming project day thirty one</title><link href="http://blog.john-pfeiffer.com/c-programming-command-line-clock-continued-winclockv2-365-programming-project-day-thirty-one" rel="alternate"></link><updated>2010-02-01T14:15:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-02-01:c-programming-command-line-clock-continued-winclockv2-365-programming-project-day-thirty-one</id><summary type="html">&lt;p&gt;Slowly working towards the final product, indeed I do see that I have a working executable at every stage (even if the steps are small and the tests are numerous)...&lt;/p&gt;
&lt;p&gt;(The looping part does not quite work yet...)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt;2010-01-31 john pfeiffer, MS windows clock&lt;/span&gt;

&lt;span class="cm"&gt;PROGRAM DESIGN&lt;/span&gt;
&lt;span class="cm"&gt;    MS window with X, quit button, and current system time displayed&lt;/span&gt;
&lt;span class="cm"&gt;    Hour:minute:second  (hh:mm:ss)&lt;/span&gt;

&lt;span class="cm"&gt;HIGH LEVEL FUNCTIONS&lt;/span&gt;

&lt;span class="cm"&gt;    update current time&lt;/span&gt;
&lt;span class="cm"&gt;    see if user clicked button&lt;/span&gt;
&lt;span class="cm"&gt;        quit if button clicked&lt;/span&gt;

&lt;span class="cm"&gt;    display current time on window&lt;/span&gt;


&lt;span class="cm"&gt;ORGANIC ITERATIVE BUILDS&lt;/span&gt;
&lt;span class="cm"&gt;    1. build a program to show current time (in c/dos) then exits immediately&lt;/span&gt;
&lt;span class="cm"&gt;        *TEST: should show correct system time &lt;/span&gt;
&lt;span class="cm"&gt;        each time user presses enter show new current time (ctrl+c to exit)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: should show correct system time on each click&lt;/span&gt;

&lt;span class="cm"&gt;    2. build a windows &amp;quot;quit button app&amp;quot; (can reuse previous work)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should quit cleanly&lt;/span&gt;

&lt;span class="cm"&gt;    3. windows with current time (once) and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should show correct system time and when button clicked quit&lt;/span&gt;

&lt;span class="cm"&gt;    4. windows with current time constantly updating and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        (will the processor be overloaded while waiting?  need semaphores?)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;



&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/*  &lt;/span&gt;
&lt;span class="cm"&gt;    stdio.h is for displaying output to command line&lt;/span&gt;
&lt;span class="cm"&gt;    time.h is for time()&lt;/span&gt;
&lt;span class="cm"&gt;    string.h is to help format any strings created&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cm"&gt;/* returns a string with the current time */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="cm"&gt;/* show that the string has garbage that is cleaned out */&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;DISPLAY current time variable (initial garbage)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;        Loop depending on the user to continue updating&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;EMPTY current time variable.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;DISPLAY current time variable:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;UPDATE current time variable.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="cm"&gt;/* DEBUGGING&lt;/span&gt;
&lt;span class="cm"&gt;            printf(&amp;quot;%s\n&amp;quot;, current_time);&lt;/span&gt;
&lt;span class="cm"&gt;            */&lt;/span&gt;

            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;DISPLAY current time variable:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;


            &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="cm"&gt;/* ensure that the user must force a continuance */&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;PRESS y to update the current time variable again:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end main */&lt;/span&gt;

&lt;span class="cm"&gt;/* begin function definitions */&lt;/span&gt;

&lt;span class="cm"&gt;/* Get the current time from the system and update the time string */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
        &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="cm"&gt;/* DEBUGGING&lt;/span&gt;
&lt;span class="cm"&gt;        printf(&amp;quot;%s\n&amp;quot;, asctime(localtime(&amp;amp;tempTime)));&lt;/span&gt;
&lt;span class="cm"&gt;        */&lt;/span&gt;
        &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;

        &lt;span class="cm"&gt;/* DEBUGGING&lt;/span&gt;
&lt;span class="cm"&gt;        printf(&amp;quot;%s\n&amp;quot;, current_time);&lt;/span&gt;
&lt;span class="cm"&gt;        */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* output the current time string ... to the command line */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CURRENT TIME: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To Be Continued...&lt;/p&gt;</summary><category term="c"></category><category term="time"></category><category term="clock"></category></entry><entry><title>C programming display the current time: 365 programming project day thirty</title><link href="http://blog.john-pfeiffer.com/c-programming-display-the-current-time-365-programming-project-day-thirty" rel="alternate"></link><updated>2010-01-31T21:39:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-31:c-programming-display-the-current-time-365-programming-project-day-thirty</id><summary type="html">&lt;p&gt;I am trying to follow best practice as I've learned from the Mythical Man Month (Fred Brooks), the Cathedral and the Bazaar's (Eric Raymond)...&lt;/p&gt;
&lt;p&gt;C programming seems natural to me but I always want to stretch myself a little bit so here's a "C Clock" program that will eventually evolve into a "Windows Clock" program.&lt;/p&gt;
&lt;p&gt;So here is a modular design, released early with plenty of comments, debugging ability, and grown locally and organically:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt;2010-01-31 john pfeiffer, MS windows clock&lt;/span&gt;

&lt;span class="cm"&gt;PROGRAM DESIGN&lt;/span&gt;
&lt;span class="cm"&gt;    MS window with X, quit button, and current system time displayed&lt;/span&gt;
&lt;span class="cm"&gt;    Hour:minute:second  (hh:mm:ss)&lt;/span&gt;

&lt;span class="cm"&gt;HIGH LEVEL FUNCTIONS&lt;/span&gt;
&lt;span class="cm"&gt;    get current time&lt;/span&gt;
&lt;span class="cm"&gt;    display current time on window&lt;/span&gt;
&lt;span class="cm"&gt;    update current time&lt;/span&gt;
&lt;span class="cm"&gt;    see if user clicked button&lt;/span&gt;
&lt;span class="cm"&gt;        quit if button clicked&lt;/span&gt;


&lt;span class="cm"&gt;ORGANIC ITERATIVE BUILDS&lt;/span&gt;
&lt;span class="cm"&gt;    1.  build a program to show current time (in c/dos) then exits immediately&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: should show correct system time &lt;/span&gt;
&lt;span class="cm"&gt;        each time user presses enter show new current time (ctrl+c to exit)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: should show correct system time on each click&lt;/span&gt;

&lt;span class="cm"&gt;    2. build a windows &amp;quot;quit button app&amp;quot; (can reuse previous work)&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should quit cleanly&lt;/span&gt;

&lt;span class="cm"&gt;    3. windows with current time (once) and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        TEST: program should show correct system time and when button clicked quit&lt;/span&gt;

&lt;span class="cm"&gt;    4. windows with current time constantly updating and quit button&lt;/span&gt;
&lt;span class="cm"&gt;        (will the processor be overloaded while waiting?  need semaphores?)&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;



&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span class="cm"&gt;/*  &lt;/span&gt;
&lt;span class="cm"&gt;    stdio.h is for displaying output to command line&lt;/span&gt;
&lt;span class="cm"&gt;    time.h is for time()&lt;/span&gt;
&lt;span class="cm"&gt;    string.h is to help format any strings created&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="cm"&gt;/* returns a string with the current time */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="cm"&gt;/* show that the string has garbage that is cleaned out */&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Current Time variable garbage:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Current Time variable is EMPTY:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Current Time variable is FULL:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="cm"&gt;/* end main */&lt;/span&gt;

&lt;span class="cm"&gt;/* begin function definitions */&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;get_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;time_t&lt;/span&gt; &lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* initialize the variable, otherwise only returns 1970 date */&lt;/span&gt;
        &lt;span class="n"&gt;tempTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;tempTime&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;display_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CURRENT TIME: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;clear_current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course this isn't a finished product - but its a solid foundation that outlines what the next few posts will be about...&lt;/p&gt;</summary><category term="c"></category><category term="time"></category><category term="clock"></category></entry><entry><title>WinCE Custom Include to Modularize Functions: 365 programming project day twenty nine</title><link href="http://blog.john-pfeiffer.com/wince-custom-include-to-modularize-functions-365-programming-project-day-twenty-nine" rel="alternate"></link><updated>2010-01-30T13:57:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-30:wince-custom-include-to-modularize-functions-365-programming-project-day-twenty-nine</id><summary type="html">&lt;p&gt;I've again used some "empty" time in the London Tube to stretch my brain a little bit by doing some more WinCE Windows Programming.&lt;/p&gt;
&lt;p&gt;While it may not seem like much of an accomplishment, using my fingernail on the screen keyboard to eke out code on a moving underground train requires a certain zen attitude... wait... wait... hit the key... oh... the wrong thing showed up (because obviously I pressed the right key)...&lt;/p&gt;
&lt;p&gt;ok, backspace and do it again... oh, that wasn't backspace, that was ]... and sometimes it looks like ]]]]].&lt;/p&gt;
&lt;p&gt;I'm trying to not only read/learn best practice, but practice best practice.&lt;/p&gt;
&lt;p&gt;Once again I am relying on PGCC (pocket GCC) though it does apparently have the limitation of only doing WinMain (not c's usual main); I suppose a "big goal" I might have for WinCE programming would be to one day use it to compile GCC on my IPAQ (overnight?). &lt;/p&gt;
&lt;p&gt;The ever mysterious "c.bat" (yes, the filename is very short for onscreen typing challenged fingernails)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\pgcc\cc1plus \pgcc\cwm.txt -o \pgcc\cwms.s -I \pgcc\include 
 -include \pgcc\fixincl.h -fms-extensions \pgcc\as \pgcc\cwms.s 
 -o \pgcc\cwmo.o \pgcc\ld \pgcc\cwmo.o -o \pgcc\cwme.exe -L \pgcc\lib 
 -l cpplib -l corelibc -l coredll -l aygshell -l runtime -l portlib CWM.TXT
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="cwmtxt"&gt;CWM.TXT&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include  #include &amp;quot;func.h&amp;quot;&lt;/span&gt;
&lt;span class="cm"&gt;/*  MODULAR BY INCLUDE    Function definitions hidden in includesabove I&amp;#39;ve told the compiler to use the func.h file as well as windows.h */&lt;/span&gt;
&lt;span class="cm"&gt;/* declare the function before main */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;outputText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pre function &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/* this is the big moment, calling a function defined in another file! */&lt;/span&gt;
    &lt;span class="n"&gt;outputText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post function &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/* So that if I run it in the Windows Explorer I can still see the output */&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Press return  to quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;getchar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="funch"&gt;func.h&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* function definitions go here */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;outputText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;function include &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="win ce"></category><category term="win32"></category><category term="gcc"></category><category term="best practice"></category></entry><entry><title>Pancakes from Scratch Recipe v2</title><link href="http://blog.john-pfeiffer.com/pancakes-from-scratch-recipe-v2" rel="alternate"></link><updated>2010-01-30T09:47:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-30:pancakes-from-scratch-recipe-v2</id><summary type="html">&lt;p&gt;You're hungry, you want something "home cooked", and you have the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 egg  &lt;/li&gt;
&lt;li&gt;1.5 cups of flour  &lt;/li&gt;
&lt;li&gt;.5 cup of sugar  &lt;/li&gt;
&lt;li&gt;1 pinch of baking soda  &lt;/li&gt;
&lt;li&gt;1 tsp of salt  &lt;/li&gt;
&lt;li&gt;3 tsp of melted butter  &lt;/li&gt;
&lt;li&gt;At least 2 cups of Milk (or water)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stir and then pour in enough milk, while beating vigorously, until the mixture is smooth enough to pour.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Try not to leave any flour unmixed in the batter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hot frying pan (with oil in the bottom) for about 5 mins a side (hopefully you'll have a hotter frying pan/cooker and it will take less time).&lt;/p&gt;
&lt;p&gt;Usually you flip when the bottom is golden brown (you'll notice bubbles start appearing in the cooking batter.&lt;/p&gt;
&lt;p&gt;Shapes of hearts, letters, and animals are recommended.&lt;/p&gt;
&lt;p&gt;Possible spreads (separate or altogether): Jam, chocolate, honey, cheese with honey, philadelphia cream cheese, feta cheese, fruits, peanut butter, ?&lt;/p&gt;</summary><category term="cooking"></category></entry><entry><title>Maintaining an old ASP website with Javascript downloads: 365 programming project day twenty eight</title><link href="http://blog.john-pfeiffer.com/maintaining-an-old-asp-website-with-javascript-downloads-365-programming-project-day-twenty-eight" rel="alternate"></link><updated>2010-01-28T15:59:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-28:maintaining-an-old-asp-website-with-javascript-downloads-365-programming-project-day-twenty-eight</id><summary type="html">&lt;p&gt;Our company has an outdated website which was a semi-custom "product catalog" from 2003 (or earlier) that uses SQL and ASP to create dynamic pages and a "webadmin" area to update the catalog (advertised as user friendly because no source code needed).&lt;/p&gt;
&lt;p&gt;Modern Content Management Systems (Drupal anyone?) have made this obsolete but like many corporations, "If it's only broken a little and employees bend over backwards to make it work then don't fix or replace it until there's a disaster."&lt;/p&gt;
&lt;p&gt;I have had the masochistic pleasure of learning the system: everything in one folder of .asp files calling lots of other ASP files (and a couple of .js files) and calls to the SQL database with obscure 4 digit codes.&lt;/p&gt;
&lt;p&gt;Here's an example of me using my programming skills during the day for what might seem a simple request, "Please add another PDF to a page on the Website"...&lt;/p&gt;
&lt;p&gt;The first step was to upload the PDF into the database (so that it would be magically assigned a 4 digit number in the SQL).&lt;/p&gt;
&lt;p&gt;The webadmin was typically user unfriendly: &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Login -&amp;gt; Menu with a blank page -&amp;gt; click Catalog tab and finally see the left navigation bar:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catalog Main&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catalog Structure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catalog Products&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table Headers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;hmmm...  &lt;/p&gt;
&lt;p&gt;I got lucky and on my second attempt found Catalog Structure -&amp;gt; Displays -&amp;gt; Intelligent Display Platform&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Up Arrow, Down Arrow, Edit, Delete&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Given the options I picked the obvious (no, not delete!)&lt;/p&gt;
&lt;p&gt;Stuffed in about twenty hot linked words and options I then found "Product Family Files"&lt;/p&gt;
&lt;p&gt;Counter-intuitively clicking on a "..." button to access a popup window to upload a new file...&lt;/p&gt;
&lt;p&gt;A byzantine system: scrolling through what appears to be every PDF file in the system to verify that my 5.7" file isn't already there... &lt;/p&gt;
&lt;p&gt;Then using a Browse button (on the bottom of the screen) to see the PDF on my desktop, then seperately clicking the Upload button. Finally clicking on a "SELECT" button (at the top of the screen) to finally add it to the database (without any friendly message, just a refresh, so I scrolled through all 300+ items to make sure it was listed).&lt;/p&gt;
&lt;p&gt;Bored yet?&lt;/p&gt;
&lt;p&gt;Oh, at this point you've got the PDF selected but you still have to click ADD to actually put it in a table for that Product Family.&lt;/p&gt;
&lt;p&gt;So... where's the Javascript?&lt;/p&gt;
&lt;p&gt;Well this particular page that needs to be updated is actually a custom job that appears instead of the default... and it may even be that I did the work!&lt;/p&gt;
&lt;p&gt;So each Product Family is reached by clicking on a link on the homepage, but those links are the inscrutable type:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://protect-the-guilty/displays_products.asp?prodFamID=4148"&gt;http://protect-the-guilty/displays_products.asp?prodFamID=4148&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I "hacked" the scripts.js file (which contains all of the Javascript functions, so maybe they got one thing right)...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* MODIFIED FUNCTION TO GO TO SPECIFIC PAGE INSTEAD OF PULLING FROM DATABASE FOR CERTAIN PRODUCTS*/&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GoToProductLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prodLineID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;partOfFilePath&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prodLineID&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;4136&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prodLineID&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;4536&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;partOfFilePath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_families.asp?prodLineID=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;prodLineID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;umr.asp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So to locate the "actual" magic 4 digit ID of the PDF I had to go to the original (non redirected) webpage...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://protect-the-guilty/displays_products.asp?prodFamID=4148"&gt;http://protect-the-guilty/displays_products.asp?prodFamID=4148&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;View the Source  &lt;/p&gt;
&lt;p&gt;Find the following bit of text:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:void(0)&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;regular&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DownloadFile(1245);&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Example_Datasheet_Rev_1.0&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whew, almost there!&lt;/p&gt;
&lt;p&gt;Next, download the "customized.asp" file and save a backup copy (ALWAYS SAVE A BACKUP!).&lt;/p&gt;
&lt;p&gt;Then update the "customized.asp" file by adding your special code to the right place...  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:void(0)&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;regular&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DownloadFile(1245);&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Example_Datasheet_Rev_1.0&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you've uploaded and tested it you can look at the clock and happily say, "Uploading 1 pdf took me 2 frickin hours!"&lt;/p&gt;</summary><category term="windows"></category><category term="asp"></category><category term="javascript"></category></entry><entry><title>DOS batch file using a for loop to test a vpn with ping: 365 programming project day twenty seven</title><link href="http://blog.john-pfeiffer.com/dos-batch-file-using-a-for-loop-to-test-a-vpn-with-ping-365-programming-project-day-twenty-seven" rel="alternate"></link><updated>2010-01-27T20:58:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-27:dos-batch-file-using-a-for-loop-to-test-a-vpn-with-ping-365-programming-project-day-twenty-seven</id><summary type="html">&lt;p&gt;Once again my work demands creative programming solutions. I have a new ISP with a brand new modem and I want to know if a VPN will stay connected overnight... BUT it's not a good test without some traffic...&lt;/p&gt;
&lt;p&gt;Enter the DOS/Windows Batch file... like a linux script or VBS, a .bat file is a series of commands which allow a creative programmer to do quite a bit.&lt;/p&gt;
&lt;p&gt;Using a text editor create your first .bat file: ping-test-vpn.bat  &lt;/p&gt;
&lt;p&gt;(Yes, I realize we skipped the steps using echo "hello world", that a % sign means a variable, defining that a mapped network drive to a folder on another computer... oh well, break this one into little pieces if it's too much to swallow at once.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;REM batch program to test and log the stability/uptime of a remote
REM computer using ping and copying a file
REM is a &amp;quot;remark&amp;quot; or a comment that the computer will ignore

REM create a time stamp and append it to the end of the file
echo %date% %time% &amp;gt;&amp;gt; ping-log.txt

REM see if we can reach the remote computer and append to the log file
ping -n 1 192.168.1.30 &amp;gt;&amp;gt; ping-log.txt

REM Map network drive where we will copy files back and forth
net use z: \192.168.1.30\groups\shared

REM copy a 1.8 MB file to the remote computer (DOS overwrites by default)
copy install_flash_player.exe z:\

REM list the files in the remote directory (including timestamp) and log it
dir z:\install* &amp;gt;&amp;gt; ping-log.txt

REM remove our mapped network drive
net use z: /delete

echo &amp;quot;-------------------------------------------------------------&amp;quot; &amp;gt;&amp;gt; ping-log.txt

REM ping 6 times takes about 5 seconds - like a (324/6) *5 = 4.5 mins &amp;quot;pause&amp;quot;
REM redirect to NUL sends the output nowhere to not fill the screen
ping -n 324 127.0.0.1 &amp;gt;NUL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you've saved your .bat file, rather than just double click it (which works), I prefer to use Start -&amp;gt; Run -&amp;gt; cmd.exe to open up a DOS command line prompt. From there I cd to c:\directory\ and find the .bat file... then I type in:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping-test-vpn.bat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Watching the output can be fascinating - programming (and debugging) is certainly the most engaging when it's interactive.&lt;/p&gt;
&lt;p&gt;With the above file using the bandwidth of the VPN to copy a file and pause we then need to repeat this all night long.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;REM forloop counting variable IN (start,step,end) DO command  
FOR /L %%i IN (1,1,2) DO ping-test-vpn.bat
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;for-loop-counter.bat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;High level network testing is fundamentally the same, though they obviously want to introduce variables like large packets, lost packets,random intervals, and contention issues.&lt;/p&gt;
&lt;p&gt;Wow, another day and another program (useful even!)&lt;/p&gt;</summary><category term="DOS"></category><category term="bat"></category><category term="for loop"></category><category term="map network drive"></category><category term="windows"></category></entry><entry><title>Javascript validation of an html form: 365 programming project day twenty six</title><link href="http://blog.john-pfeiffer.com/javascript-validation-of-an-html-form-365-programming-project-day-twenty-six" rel="alternate"></link><updated>2010-01-27T20:44:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-27:javascript-validation-of-an-html-form-365-programming-project-day-twenty-six</id><summary type="html">&lt;p&gt;On the 26th I missed my 365 entry because I was being Mr. Corporate IT Hero at our annual Company Meeting but I actually have a number of things from the past that I can comment on and insert...&lt;/p&gt;
&lt;p&gt;Everybody who has an HTML form would like some software "intelligence" to guide the User to fill in the "required" fields, or help direct the User if they've not entered a valid email address, etc...&lt;/p&gt;
&lt;p&gt;I'm not a fan of Javascript if only because it runs on the client and can be a big security hole. If it's merely written poorly it can crash the browser or confuse the heck out of the user (rendering your HTML Form useless).&lt;/p&gt;
&lt;p&gt;But here's the source code on how to do the most basic user input validation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;javascript form validation&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- onSubmit tells the browser that there is a javascript function to run when the user hits the submit button --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;FORM&lt;/span&gt; &lt;span class="na"&gt;ACTION=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript-form-validation.htm&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;NAME=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;testform&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onSubmit=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;return validateMyForm()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Starting X Point: &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;startx&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    Starting Y Point: &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;starty&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    Email Address: &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;maxlength=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;  &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;language=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validateMyForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Please enter a Starting X value (integer)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Please enter a Starting Y value (integer)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;testform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Please enter your email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//if we&amp;#39;ve passed all of the above checks&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is a ton more that you can do with Javascript (including for loops on checkboxes minimum 2 out of 5, regular expressions on email addresses, etc.) so hopefully I'll get to it this year!&lt;/p&gt;
&lt;p&gt;P.S. You must have Javascript enabled on your browser to see the example and some browsers will pop up "ActiveX Warnings" - if you're paranoid only run Javascript that you've coded yourself!&lt;/p&gt;</summary><category term="javascript"></category><category term="html"></category><category term="form validation"></category></entry><entry><title>PHP User Input HTML Sanitization and Math: 365 programming project day twenty five</title><link href="http://blog.john-pfeiffer.com/php-user-input-html-sanitization-and-math-365-programming-project-day-twenty-five" rel="alternate"></link><updated>2010-01-25T22:08:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-25:php-user-input-html-sanitization-and-math-365-programming-project-day-twenty-five</id><summary type="html">&lt;p&gt;HTML forms are quick way to get user data but PHP requires a PHP server. &lt;/p&gt;
&lt;p&gt;Luckily I have one and together it's quite easy to create a page that gets some info from a user and then does some calculations (in this case nothing fancy).&lt;/p&gt;
&lt;p&gt;I've done a little more User Input Sanitization than usual - basically the rule is: "If you'll display it, clean up the HTML output, if you'll send it to a linux script, strip the slashes, and if you send it to a database, clean up any MySQL stuff"...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;form action=&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PHP_SELF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Starting X Point&amp;lt;input name=&amp;quot;startx&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Starting Y Point&amp;lt;input name=&amp;quot;starty&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;End X Point&amp;lt;input name=&amp;quot;endx&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;End Y Point&amp;lt;input name=&amp;quot;endy&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br \&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$startx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;startx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$starty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;starty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$endx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$endy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;htmlentities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;endy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$startx&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$starty&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;  &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$endx&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$endy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;width: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$endx&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$startx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;height: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$endy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$starty&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;acos(startx): &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$startx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;//end of if-else user filled in textarea&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Further reference about how easy it is to manipulate user numbers: &lt;a href="http://php.net/manual/en/book.math.php"&gt;http://php.net/manual/en/book.math.php&lt;/a&gt;&lt;/p&gt;</summary><category term="php"></category><category term="security"></category><category term="htmlentities"></category><category term="input sanitization"></category></entry><entry><title>Javascript on MS CRM Forms: 365 programming project day twenty-four</title><link href="http://blog.john-pfeiffer.com/javascript-on-ms-crm-forms-365-programming-project-day-twenty-four" rel="alternate"></link><updated>2010-01-24T19:19:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-24:javascript-on-ms-crm-forms-365-programming-project-day-twenty-four</id><summary type="html">&lt;p&gt;Programming isn't always fun and games. Here's an example from me putting in extra time on a weekend...&lt;/p&gt;
&lt;p&gt;At my work We use Microsoft Dynamics CRM 4.0 which is a customizable CRM web interface on top of MS SQL Server. While the built in functionality is pretty good a business always needs some more customization to get things "just right"...&lt;/p&gt;
&lt;p&gt;MS CRM has "onload" and "onsave" functionality for each entity that allows a developer to stick in some custom javascript.&lt;/p&gt;
&lt;p&gt;Below is the JS that controls the calculations on the Products section of a Quote for Customer Form. This improves the end user experience as user changes update the different fields instantly and automatically (though they still have to press SAVE to keep those changes).&lt;/p&gt;
&lt;p&gt;Note: Javascript isn't related to Java, it's a "client side" (runs on your computer, not the server) piece of code frequently used to modify how things look on your screen.&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// if the Tax field is null (ie a new quote is being created) we fill in a default tax&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;17.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//when Loading the Quote Form and on certain fields I have the following:&lt;/span&gt;

&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FireOnChange&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;//tells the system to pretend that the Quantity field has just changed&lt;/span&gt;
&lt;span class="c1"&gt;//(and run it&amp;#39;s jscripts)&lt;/span&gt;
&lt;span class="c1"&gt;//this allows for one central place to control all of the calculations&lt;/span&gt;

&lt;span class="o"&gt;--------------------------------------------------------------------------------&lt;/span&gt;

&lt;span class="c1"&gt;//this forces even &amp;quot;disabled&amp;quot; fields to update values&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ForceSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the BASE amount - MS CRM multicurrency required for money&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the baseamount.&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="c1"&gt;//Only calculate the discount if the user has actually filled in the discount field&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_manualdiscountpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Calculate the manual BASE discount amount.&lt;/span&gt;
        &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; 
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_manualdiscountpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//Calculate the manual discount amount.&lt;/span&gt;
        &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_manualdiscountpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Tricky piece of math with lots of ( and * and / ...&lt;/span&gt;
&lt;span class="c1"&gt;//Calculate the new BASE Tax Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
     &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the new Tax Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;priceperunit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;new_taxpercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the new Extended BASE Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendedamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Calculate the new Extended Amount&lt;/span&gt;
&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendedamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manualdiscountamount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crmForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DataValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="javascript"></category><category term="CRM"></category></entry><entry><title>VBScript Windows Shell Script (Programming) For Loop: 365 programming project day twenty three</title><link href="http://blog.john-pfeiffer.com/vbscript-windows-shell-script-programming-for-loop-365-programming-project-day-twenty-three" rel="alternate"></link><updated>2010-01-22T21:56:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-22:vbscript-windows-shell-script-programming-for-loop-365-programming-project-day-twenty-three</id><summary type="html">&lt;p&gt;Programming obviously requires logic and discipline. 
Less well known but just as important, it also requires creativity and elasticity.&lt;/p&gt;
&lt;p&gt;Windows Script programming has a significantly different syntax (rules of how the code must be written to be valid) than the previous Linux Script, C Programming, HTML, or CSS. How many people do you know who
speak multiple languages, much less create functional artificial
constructs with them?&lt;/p&gt;
&lt;!--break--&gt;

&lt;p&gt;You can copy and paste the text below into an empty notepad and save it as test.vbs&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A .vbs file can be dangerous as it is executing commands on your
computer but in this case there are no surprises as you can see all of
the commands explained in the comments.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;John&lt;/span&gt; &lt;span class="nx"&gt;Pfeiffer&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s windows vbscript 2010-01-22&lt;/span&gt;
&lt;span class="s1"&gt;REM In Visual Basic Script a REM stands for &amp;quot;remark&amp;quot;, which is a comment &lt;/span&gt;
&lt;span class="s1"&gt;REM (something ignored by the computer)&lt;/span&gt;
&lt;span class="s1"&gt;REM we must declare what variables we want but without saying what type&lt;/span&gt;
&lt;span class="s1"&gt;REM in this case we&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;ve&lt;/span&gt; &lt;span class="nx"&gt;used&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;good&lt;/span&gt; &lt;span class="nx"&gt;practice&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;naming&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;they&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;re&lt;/span&gt; &lt;span class="nx"&gt;intended&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;used&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;programming&lt;/span&gt; &lt;span class="nx"&gt;standard&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;counting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;astring&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;though&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;real&lt;/span&gt; &lt;span class="nx"&gt;program&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="nx"&gt;would&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; 
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;better&lt;/span&gt; &lt;span class="nx"&gt;named&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;address_street&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dim&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;astring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;assigning&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;literal&lt;/span&gt; &lt;span class="nx"&gt;piece&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;really&lt;/span&gt; &lt;span class="nx"&gt;easyastring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;this,should,be,interesting,csv,&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;built&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;functions&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nx"&gt;most&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;hard&lt;/span&gt; &lt;span class="nx"&gt;work&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;like&lt;/span&gt; &lt;span class="nx"&gt;splitting&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;into&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;strings&lt;/span&gt; &lt;span class="nx"&gt;based&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;splitting character&amp;quot;&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;astring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;displays&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="nx"&gt;boxes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt; &lt;span class="nx"&gt;concatenates&lt;/span&gt; &lt;span class="nx"&gt;strings&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="nx"&gt;together&lt;/span&gt;

&lt;span class="nx"&gt;wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;astring&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; BECOMES =&amp;gt; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt; &lt;span class="nx"&gt;counts&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lbound&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;uppermost&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; 
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;object oriented&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;technique&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;access&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;attributes&lt;/span&gt; 
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rather&lt;/span&gt; &lt;span class="nx"&gt;than&lt;/span&gt; &lt;span class="nx"&gt;predefined&lt;/span&gt; &lt;span class="nx"&gt;symbol&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;prevents&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;careless&lt;/span&gt; &lt;span class="nx"&gt;programmer&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;unforseen&lt;/span&gt; &lt;span class="nx"&gt;change&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;crashing&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;program&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;accessing&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;writing&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;outside&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;defined&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;Lines&lt;/span&gt; &lt;span class="nx"&gt;between&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;for&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;next&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;executed&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;many&lt;/span&gt; &lt;span class="nx"&gt;times&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt;
&lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;iteratesfor&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lbound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;ubound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="nx"&gt;wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;nextREM&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;for each&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;special&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt; &lt;span class="nx"&gt;which&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;every&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;better&lt;/span&gt; &lt;span class="nx"&gt;than&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;above&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;specific&lt;/span&gt; &lt;span class="nx"&gt;exampleREM&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;easier&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;understand&lt;/span&gt; &lt;span class="nx"&gt;what&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;doing&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;even&lt;/span&gt; &lt;span class="nx"&gt;lessREM&lt;/span&gt; &lt;span class="nx"&gt;chance&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;    &lt;span class="nx"&gt;wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;inextREM&lt;/span&gt; &lt;span class="nx"&gt;REMEMBER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;spent&lt;/span&gt; &lt;span class="nx"&gt;debugging&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;recompiling&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;REM&lt;/span&gt; &lt;span class="nx"&gt;fixing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updating&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;  &lt;span class="nx"&gt;More&lt;/span&gt; &lt;span class="nx"&gt;important&lt;/span&gt; &lt;span class="nx"&gt;than&lt;/span&gt; &lt;span class="nx"&gt;getting&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="nx"&gt;timeREM&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;making&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="nx"&gt;easy&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;figure&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="nx"&gt;where&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;why&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="nx"&gt;went&lt;/span&gt; &lt;span class="nx"&gt;wrong&lt;/span&gt;

&lt;span class="nx"&gt;wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;the end&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Script Programming, Linux expect script passwd: 365 programming project day twenty two</title><link href="http://blog.john-pfeiffer.com/script-programming-linux-expect-script-passwd-365-programming-project-day-twenty-two" rel="alternate"></link><updated>2010-01-21T22:11:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-21:script-programming-linux-expect-script-passwd-365-programming-project-day-twenty-two</id><summary type="html">
&lt;h2 id="what-the-heck-is-a-script"&gt;What the heck is a Script?&lt;/h2&gt;
&lt;p&gt;Is writing a Script still programming? &lt;/p&gt;
&lt;p&gt;A script is a written set of instructions for a platform (usually an Operating System) that makes the computer (or hardware) do something.&lt;/p&gt;
&lt;p&gt;Sounds a lot like a Program!&lt;/p&gt;
&lt;p&gt;Well... A computer software program is usually source code (written by a human) that is then "compiled" into "machine code" which a machine can
understand - except that there's also a linker and loader to figure out exactly what places in memory (and for what piece of hardware) the
Program will run - finally turning it into Object code and then an Executable (usually called binary because it's in 1's and 0's directly
in the language of the hardware).&lt;/p&gt;
&lt;p&gt;A script gives hardware a set of commands indirectly through another piece of software (it's environment/platform, e.g. DOS, Python, Windows
OS, GNU Linux OS, etc.). &lt;/p&gt;
&lt;p&gt;The software then executes those commands (which often then tell an Operating System which then tells Hardware to
to do something - like clearing the screen or adding some numbers).&lt;/p&gt;
&lt;p&gt;So maybe html is even less Programming like than a script! Since it only tells a browser (a specific application) how to format/display data!?!?!&lt;/p&gt;
&lt;p&gt;Ah, enough semanticarating!&lt;/p&gt;
&lt;h2 id="what-happens-if-youre-running-a-script-and-somewhere-it-requires-user-input"&gt;What happens if you're running a script and somewhere it requires user input?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;"Expect"&lt;/strong&gt; is a piece of software that "waits" for input from the linux operating system command line...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install expect&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;to install it on linux (ubuntu)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;yum install expect&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;to install it on linux centos/redhat&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;touch test-script.sh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;create the file  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;chmod +x test-script.sh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;make the file an executable in linux  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;nano test-script.sh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;edit the file to enter our script commands, alternatively use vim test-script.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;#!/usr/bin/expect
set timeout 1
send "passwd USER\n"
expect "Password: "
send "password\n"
sleep 1
interact
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;First we tell the operating system what program (environment platform) will actually be able to read and execute the instructions (normally linux uses BASH /bin/bash but in this case it's EXPECT).&lt;/li&gt;
&lt;li&gt;Setting the timeout means that we will wait at least and at most 1 second before a non responding command is skipped to execute the next command.&lt;/li&gt;
&lt;li&gt;Send tells the operating system something (e.g. we want to run the change USER's password program)&lt;/li&gt;
&lt;li&gt;The expect command tells the script to wait for the operating system to prompt the user to type in a password.&lt;/li&gt;
&lt;li&gt;Once the operating system responds (with exactly what we "expected") the script continues by sending (just as if a user typed it in) some predetermined password picked by the script writer.&lt;/li&gt;
&lt;li&gt;Finally we tell our script to sleep for one second after all of it's hard work.&lt;/li&gt;
&lt;li&gt;Oh, and it's very important to &lt;strong&gt;"interact"&lt;/strong&gt;, which returns the command prompt back to the user/operating system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whew... that's just the tip of the iceberg of how "expect" greatly extends the functionality of Linux scripts!&lt;/p&gt;
&lt;p&gt;Later I hope to demonstrate some VBScript (for windows) and maybe even a script on how to run a "non interactive FTP session" (as most FTP programs require "interaction" aka human at the keyboard)...&lt;/p&gt;</summary></entry><entry><title>Windows programming in WinCE on an HP IPAQ: 365 programming project day twenty one</title><link href="http://blog.john-pfeiffer.com/windows-programming-in-wince-on-an-hp-ipaq-365-programming-project-day-twenty-one" rel="alternate"></link><updated>2010-01-21T13:26:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-21:windows-programming-in-wince-on-an-hp-ipaq-365-programming-project-day-twenty-one</id><summary type="html">&lt;p&gt;As the number of portable computers (we might call them mobile phones or smart phones or pda's etc.) explodes they need software. &lt;/p&gt;
&lt;p&gt;One thing Microsoft got right is that Windows CE, the stripped down version of Windows for Mobile Devices, uses most of the same basic programming platform/language as "normal" desktop windows programming. &lt;/p&gt;
&lt;p&gt;The following is a very interesting learning experience I've had (and a useful way to pass otherwise idle waiting time in the "Tube") programming Windows Applications in WinCE.&lt;/p&gt;
&lt;h3 id="a-compiler-for-wince-pocketgcc"&gt;A Compiler for WinCE: pocketgcc&lt;/h3&gt;
&lt;p&gt;The first thing you need is a WinCE compiler - my choice was pocketgcc (even though it hasn't been updated since 2003), because a port of GCC to WinCE means a stable tool that I already know (sorta) how to use. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://pocketgcc.sourceforge.net/"&gt;http://pocketgcc.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The next hurdle after downloading and copying them onto my device (HP Ipaq) and double tapping (clicking) to install them was to use the CMD to cd \pgcc&lt;/p&gt;
&lt;p&gt;Then I used a text editor (either Word or pocketnotepad) to create a batch file (yes, technically I suppose a batch file is a program too!) with the following cryptic lines... &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\pgcc\cc1plus \pgcc\source-code.txt -o \pgcc\cwms.s -I \pgcc\include 
 -include \pgcc\fixincl.h -fms-extensions \pgcc\as \pgcc\cwms.s 
 -o \pgcc\cwmo.o \pgcc\ld \pgcc\cwmo.o -o \pgcc\cwme.exe -L \pgcc\lib 
 -l cpplib -l corelibc -l coredll -l aygshell -l runtime -l portlib
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The cc1plus.exe (compiler?) outputs the assembly code file but also includes the "fixincl.h" file and uses the -fms-extensions option (no, I haven't actually yet learned exactly why). &lt;/li&gt;
&lt;li&gt;The as.exe program turns the assembly into object code. &lt;/li&gt;
&lt;li&gt;Finally the loader turns the object code into an executable with the appropriate libraries. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following source code should look very familiar to my earlier Windows Programming examples.&lt;/p&gt;
&lt;p&gt;I've added comments here that are not in my "production" IPAQ environment source code because the screen is too small with lots of scrolling already...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#define WIN32_LEAN_AND_MEAN&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;windowsx.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;commctrl.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;aygshell.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_ExitButton 40099&lt;/span&gt;
&lt;span class="cm"&gt;/* the IDC object requires a number, I just give them high unused ones */&lt;/span&gt;

&lt;span class="cm"&gt;/* the above includes are a bit of a mystery to me but the program&lt;/span&gt;
&lt;span class="cm"&gt;doesn&amp;#39;t work without them and I figure they must be specific to WinCE */&lt;/span&gt;

&lt;span class="cm"&gt;/* instead of function stubs, main, then function declarations I do them&lt;/span&gt;
&lt;span class="cm"&gt;all before main() ... but of course I have to remember to always declare&lt;/span&gt;
&lt;span class="cm"&gt;before using... so do as I say: always declare functions (and then remember&lt;/span&gt;
&lt;span class="cm"&gt;to update them and the stub), not as I do... */&lt;/span&gt;

&lt;span class="n"&gt;VOID&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;HandlePaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to device context */&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* rectangle structure */&lt;/span&gt;
    &lt;span class="n"&gt;TCHAR&lt;/span&gt; &lt;span class="n"&gt;tszOut&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hello!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;GetClientRect&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPRECT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* the cryptic stuff below outputs a text string in a rectangle */&lt;/span&gt;
    &lt;span class="n"&gt;DrawText&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;tszOut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;_tcslen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tszOut&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPRECT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* below is the most important function after main() where the &amp;quot;large windows &lt;/span&gt;
&lt;span class="cm"&gt;switch&amp;quot; figures out what the user has done and responds */&lt;/span&gt;

&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="cm"&gt;/* w &amp;amp; l param&amp;#39;s are extra data like x,y */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              
    &lt;span class="p"&gt;{&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="cm"&gt;/* there&amp;#39;s a command from the user */&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;      &lt;span class="cm"&gt;/* to find out what command */&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="cm"&gt;/* the user pressed the button */&lt;/span&gt;   
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
            &lt;span class="p"&gt;}&lt;/span&gt;     
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* closes the program */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;HandlePaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="cm"&gt;/* calls a &amp;quot;modular&amp;quot; drawing function */&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;APIENTRY&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;LPTSTR&lt;/span&gt; &lt;span class="n"&gt;lpCmdLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ExitButton&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="cm"&gt;/* a handle to our button &amp;quot;window&amp;quot; */&lt;/span&gt;
    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;HMENU&lt;/span&gt; &lt;span class="n"&gt;hMenu&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CS_HREDRAW&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;CS_VREDRAW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WNDPROC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;MenuWndProc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WHITE_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPTSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="cm"&gt;/* WinCE seems to require strings cast as LONG? */&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;errors &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;IMPORTANT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MB_OK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* the size and placement of our program window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;L&amp;quot;Menu App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;2nd prog hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HWND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPSTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* the size and placement of our button child of hwnd &amp;quot;window&amp;quot; */&lt;/span&gt;
    &lt;span class="n"&gt;ExitButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;L&amp;quot;BUTTON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;L&amp;quot;quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 
        &lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_ExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;hInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* end WinMain */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="win ce"></category><category term="win32"></category><category term="gcc"></category><category term="pocketgcc"></category></entry><entry><title>A Simple Windows Button: 365-programming project day six</title><link href="http://blog.john-pfeiffer.com/a-simple-windows-button-365-programming-project-day-six" rel="alternate"></link><updated>2010-01-20T15:01:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-20:a-simple-windows-button-365-programming-project-day-six</id><summary type="html">&lt;p&gt;Windows programming is a bit ugly - you have to selectively ignore the stuff "you know". On the positive side I've figured out how to insert code as preformatted (Drupal Input Filter -&amp;gt; extending the "safe HTML") so this should be easier to copy paste.&lt;/p&gt;
&lt;p&gt;Also, Notepad2 has a handy "turn tabs into spaces" that I shall start using more often...&lt;/p&gt;
&lt;p&gt;I've built on the previous Windows Program that put some text on the screen so most of it should look familiar.&lt;/p&gt;
&lt;p&gt;Remember, this was compiled with a gcc port (see earlier post for the link to the binary)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OK, here's the code for an exit button, some of the old comments (which you've "learned" have been removed)...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* john pfeiffer basic MS windows program with button 2009-01-20 */&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define  IDC_MyExitButton 40001 &lt;/span&gt;&lt;span class="cm"&gt;/* case sensitive! random high number to keep windows happy */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;
&lt;span class="n"&gt;LRESULT&lt;/span&gt; &lt;span class="n"&gt;CALLBACK&lt;/span&gt; &lt;span class="nf"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="cm"&gt;/* Handle of window that received the msg */&lt;/span&gt;
    &lt;span class="n"&gt;UINT&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="cm"&gt;/* The message */&lt;/span&gt;
    &lt;span class="n"&gt;WPARAM&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* Extra parameter (e.g. mouse x) */&lt;/span&gt;
    &lt;span class="n"&gt;LPARAM&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="cm"&gt;/* Extra parameter (e.g. mouse y) */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;
    &lt;span class="n"&gt;RECT&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* a structure to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;
    &lt;span class="n"&gt;HDC&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* handle to a DC (buffer) for the screen */&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_COMMAND&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LOWORD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="cm"&gt;/* find out what&amp;#39;s been clicked */&lt;/span&gt;
           &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
               &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

               &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                  &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_PAINT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;GetClientRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;
                &lt;span class="n"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;
                &lt;span class="n"&gt;DrawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Press button to quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;        &lt;span class="cm"&gt;/* send a WM_QUIT */&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                   &lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;



&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;WINAPI&lt;/span&gt; &lt;span class="nf"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="cm"&gt;/* Handle to the current instance */&lt;/span&gt;
    &lt;span class="n"&gt;HINSTANCE&lt;/span&gt; &lt;span class="n"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="cm"&gt;/* Handle to the previous instance */&lt;/span&gt;
    &lt;span class="n"&gt;LPSTR&lt;/span&gt; &lt;span class="n"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="cm"&gt;/* pointer to command line arguments */&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               &lt;span class="cm"&gt;/* show state of the window */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;
    &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;
    &lt;span class="n"&gt;WNDCLASS&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;

    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                        &lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                        &lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                          &lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoadCursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IDC_ARROW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LTGRAY_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
    &lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;


    &lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;
    &lt;span class="n"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindowEx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Windows Title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* create button and store the handle */&lt;/span&gt;

    &lt;span class="n"&gt;ButtonPushed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                       &lt;span class="cm"&gt;/* class name */&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Push Button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* button caption */&lt;/span&gt;
        &lt;span class="n"&gt;WS_CHILD&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;WS_VISIBLE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;BS_PUSHBUTTON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* the styles */&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                            &lt;span class="cm"&gt;/* the left and top coordinates */&lt;/span&gt;
        &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                         &lt;span class="cm"&gt;/* width and height */&lt;/span&gt;
        &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="cm"&gt;/* parent window handle */&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HMENU&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IDC_MyExitButton&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="cm"&gt;/* the ID of your button */&lt;/span&gt;
        &lt;span class="n"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  &lt;span class="cm"&gt;/* the instance of your application */&lt;/span&gt;
        &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;                         &lt;span class="cm"&gt;/* unnecessary extra */&lt;/span&gt;


    &lt;span class="n"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;
        &lt;span class="n"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;

    &lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;           
    &lt;span class="n"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* Translate virtual-key messages into character messages */&lt;/span&gt;
        &lt;span class="n"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="cm"&gt;/* Send messages to WindowProcedure */&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="win32"></category><category term="gcc"></category></entry><entry><title>PHP and CSS on a radio button board: 365 programming project day five</title><link href="http://blog.john-pfeiffer.com/php-and-css-on-a-radio-button-board-365-programming-project-day-five" rel="alternate"></link><updated>2010-01-19T22:28:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-19:php-and-css-on-a-radio-button-board-365-programming-project-day-five</id><summary type="html">
&lt;h3 id="overview"&gt;Overview&lt;/h3&gt;
&lt;p&gt;I'm a little sick so this one took longer than it should have. Futher exploration of the theme of PHP + CSS + HTML as a very simple way to get user input and then do something fun with it.&lt;/p&gt;
&lt;p&gt;The beginnings of trying to "modularize" code into functions earlier in the process (in later, more complex programs it is a necessity).&lt;/p&gt;
&lt;p&gt;You may be asking, "How is this useful?" but I think it's a popular misconception that Programs should be useful...&lt;/p&gt;
&lt;p&gt;I will try to break the code into chunks (that you will have to re-assemble) but with better piece by piece explanation:&lt;/p&gt;
&lt;h3 id="defining-css-style-in-the-head"&gt;Defining CSS Style in the Head&lt;/h3&gt;
&lt;p&gt;Best practice is to have many php or html pages linked to a single CSS
definition file so that a single update is more efficient. Efficiency in this case means all of the code in one easily visible file.&lt;/p&gt;
&lt;p&gt;The CSS here removes the anchor (hyperlink) underline and makes it black BUT if hovered the text will turn red.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;removing&lt;/span&gt; &lt;span class="nt"&gt;text&lt;/span&gt; &lt;span class="nt"&gt;decoration&lt;/span&gt; &lt;span class="nt"&gt;removes&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;underlines&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nf"&gt;#chosen&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#chosen&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="body-of-php-functions"&gt;Body of PHP functions&lt;/h3&gt;
&lt;p&gt;If you have an HTML head then you should have a body. The majority of the body is the definition of a custom function called "display_board".&lt;/p&gt;
&lt;p&gt;Again I'm using the trick that if the user has entered data (and therefore something's in the $_POST) then we get to show the user that we've done something fun with what they gave us.&lt;/p&gt;
&lt;p&gt;PHP functions are easy to define and have the usual parameters and return value responsibilities (though parameters don't need any typing which allows the programmer to focus on the concepts, not the implementation - hopefully not confusing the variables up in the process).&lt;/p&gt;
&lt;p&gt;Much like a CSS you can have a file with the definitions of your php functions and include it somewhere with &lt;strong&gt;include("footer.php");&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On one hand you remove the implementation details which can make prototyping and modularization faster and easier, on the other hand you have to search through/open a number of different files (or even include definitions to functions you don't use) and of course, it's great to ignore the implentation details right until something goes wrong.&lt;/p&gt;
&lt;h3 id="function-display_board"&gt;function display_board&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;body&amp;gt;Click on one square, then submit, then hover your choice!&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;display_board&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$chosen_square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;form action="'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'PHP_SELF'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'" method="post"&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;//newline character in the HTML code for readability&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div id="chosen" align="center"\&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I don't think the indentations show up well in the blog but the nested loops and formula are just a fancy way of counting from 1 to 64 with 8 items per line.  &lt;/p&gt;
&lt;p&gt;The magic "redefined css anchor" is buried in there if the user has chosen a square.  &lt;/p&gt;
&lt;h3 id="nested-for-loops"&gt;nested for loops&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;for($x=0; $x&amp;lt;8; $x++)&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;    for($y=0; $y&amp;lt;8; $y++)  &lt;/span&gt;
&lt;span class="x"&gt;    {  &lt;/span&gt;
&lt;span class="x"&gt;        if( ((8*$x) + $y+1) == $chosen_square )&lt;/span&gt;
&lt;span class="x"&gt;        {  &lt;/span&gt;
&lt;span class="x"&gt;            print '&amp;lt;input type="radio" name="board_square" value="';&lt;/span&gt;
&lt;span class="x"&gt;            print ((8*$x) + $y+1) . '"&amp;gt;';&lt;/span&gt;
&lt;span class="x"&gt;            print '&amp;lt;a href="#"&amp;gt; ';&lt;/span&gt;
&lt;span class="x"&gt;            print ((8*$x) + $y+1);&lt;/span&gt;
&lt;span class="x"&gt;            print "&amp;lt;/a&amp;gt;\n";&lt;/span&gt;
&lt;span class="x"&gt;            //the nested for loops formula creates 64 consecutive values  &lt;/span&gt;
&lt;span class="x"&gt;        } else {&lt;/span&gt;
&lt;span class="x"&gt;            print '&amp;lt;input type="radio" name="board_square" value="';&lt;/span&gt;
&lt;span class="x"&gt;            print ((8*$x) + $y+1) . '"&amp;gt; ' . ((8*$x) + $y+1) . "\n";&lt;/span&gt;
&lt;span class="x"&gt;        }&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;    print "&amp;lt;br \&amp;gt;\n";&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;print '&amp;lt;/div&amp;gt;&amp;lt;input type="submit" value="Press Me" /&amp;gt;&amp;lt;/form&amp;gt;';&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="user-input"&gt;user input&lt;/h3&gt;
&lt;p&gt;stripslashes is best practice when dealing with user data though I'm not sure how a $_POST of a radio button value could end up as a root command; better safe than sorry.&lt;/p&gt;
&lt;p&gt;The ever present "if the $_POST variable is set AND the $chosen_square variable is NOT EMPTY" allows to only print something that exists (instead of foolishly printing non-existent stuff).&lt;/p&gt;
&lt;p&gt;Finally we call our function (with a parameter). So if the CSS and PHP function definition were other files this "program" would be very compact and very easy to read (but then again you wouldn't know what the program did unless you had those other files).  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;$chosen_square = stripslashes( $_POST['board_square'] );&lt;/span&gt;
&lt;span class="x"&gt;if( !empty( $chosen_square ) &amp;amp;&amp;amp; isset( $chosen_square ) )&lt;/span&gt;
&lt;span class="x"&gt;{&lt;/span&gt;
&lt;span class="x"&gt;    print $chosen_square;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;

&lt;span class="x"&gt;display_board( $chosen_square );  &lt;/span&gt;
&lt;span class="x"&gt;?&amp;gt;&lt;/span&gt;

&lt;span class="x"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="php"></category><category term="css"></category><category term="code structure"></category></entry><entry><title>First real Windows program: 365 programming project day four</title><link href="http://blog.john-pfeiffer.com/first-real-windows-program-365-programming-project-day-four" rel="alternate"></link><updated>2010-01-18T15:05:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-18:first-real-windows-program-365-programming-project-day-four</id><summary type="html">&lt;p&gt;Windows Programming has a steep curve in the beginning as there are many things to memorize (oops I mean learn and understand) as theoretically they've created the data structures and functions to get stuff on the screen.&lt;/p&gt;
&lt;p&gt;Again I've used gcc 2.95 windows port with the special command on my wndclass-hello.c source code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The code is extra commented as this is the foundation (of understanding) for future programs.&lt;/p&gt;
&lt;p&gt;Basically the windows program loops waiting for some input (e.g. clicking an OK button or the X to close the window)... in the mean time I've written a simple text in the middle.&lt;/p&gt;
&lt;p&gt;Most of the code is actually just trying to setup the data structure of a window (there are many options and variations that we might use later to extend our window's functionality).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* john pfeiffer basic MS windows program with comments 2009-01-18 */&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;            &lt;span class="cm"&gt;/* this includes the whole Windows API */&lt;/span&gt;

&lt;span class="cm"&gt;/* Declare the Windows procedure */&lt;/span&gt;
&lt;span class="nx"&gt;LRESULT&lt;/span&gt; &lt;span class="nx"&gt;CALLBACK&lt;/span&gt; &lt;span class="nx"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HWND&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;WPARAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LPARAM&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;WINAPI&lt;/span&gt; &lt;span class="nx"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;HINSTANCE&lt;/span&gt; &lt;span class="nx"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="cm"&gt;/* Handle to the current instance */&lt;/span&gt;
                    &lt;span class="nx"&gt;HINSTANCE&lt;/span&gt; &lt;span class="nx"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="cm"&gt;/* Handle to the previous instance */&lt;/span&gt;
                    &lt;span class="nx"&gt;LPSTR&lt;/span&gt; &lt;span class="nx"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="cm"&gt;/* pointer to command line arguments */&lt;/span&gt;
                    &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               &lt;span class="cm"&gt;/* show state of the window */&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;HWND&lt;/span&gt; &lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;               &lt;span class="cm"&gt;/* The handle for our window */&lt;/span&gt;
    &lt;span class="nx"&gt;MSG&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* Messages to the application  */&lt;/span&gt;
    &lt;span class="nx"&gt;WNDCLASS&lt;/span&gt; &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="cm"&gt;/* Data structure for our defined windowclass */&lt;/span&gt;


    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lpfnWndProc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* This function is called by windows */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cbClsExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                        &lt;span class="cm"&gt;/* No extra bytes after the window class */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cbWndExtra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                        &lt;span class="cm"&gt;/* structure or the window instance */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="cm"&gt;/* handle to the owner */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hIcon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                          &lt;span class="cm"&gt;/* no special application icon */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;LoadCursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;IDC_ARROW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* default cursor */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hbrBackground&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HBRUSH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;GetStockObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;LTGRAY_BRUSH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="cm"&gt;/* the window background color */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lpszMenuName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                   &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
    &lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lpszClassName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="cm"&gt;/* the name of the windows class */&lt;/span&gt;



    &lt;span class="cm"&gt;/* Register the window class, if fail quit the program with an error value */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;RegisterClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The class is registered, let&amp;#39;s instantiate our window */&lt;/span&gt;
    &lt;span class="nx"&gt;hwnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CreateWindowEx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                   &lt;span class="cm"&gt;/* Extended possibilites for variation */&lt;/span&gt;
           &lt;span class="s2"&gt;&amp;quot;WindowsApp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="cm"&gt;/* Classname */&lt;/span&gt;
           &lt;span class="s2"&gt;&amp;quot;Windows App&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="cm"&gt;/* Application Title Text */&lt;/span&gt;
           &lt;span class="nx"&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* default window */&lt;/span&gt;
           &lt;span class="nx"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="cm"&gt;/* default x position on the screen */&lt;/span&gt;
           &lt;span class="nx"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="cm"&gt;/* default y position on the screen */&lt;/span&gt;
           &lt;span class="nx"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="cm"&gt;/* initial window width */&lt;/span&gt;
           &lt;span class="nx"&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="cm"&gt;/* initial window height */&lt;/span&gt;
           &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                &lt;span class="cm"&gt;/* no Parent window */&lt;/span&gt;
           &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                &lt;span class="cm"&gt;/* No menu */&lt;/span&gt;
           &lt;span class="nx"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="cm"&gt;/* Program Instance handler */&lt;/span&gt;
           &lt;span class="nx"&gt;NULL&lt;/span&gt;                 &lt;span class="cm"&gt;/* No pointer for passing parameters */&lt;/span&gt;
           &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;ShowWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="cm"&gt;/* Make the window visible on the screen */&lt;/span&gt;
    &lt;span class="nx"&gt;UpdateWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="cm"&gt;/* update with changes */&lt;/span&gt;

    &lt;span class="cm"&gt;/* Run the message loop. It will run until GetMessage( ) returns 0 */&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;GetMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;           
        &lt;span class="nx"&gt;TranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* Translate virtual-key messages into character messages */&lt;/span&gt;
        &lt;span class="nx"&gt;DispatchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="cm"&gt;/* Send messages to WindowProcedure */&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* The program return-value is 0 - The value that PostQuitMessage( ) gave */&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* This function is called by the Windows function DispatchMessage( ) */&lt;/span&gt;
&lt;span class="nx"&gt;LRESULT&lt;/span&gt; &lt;span class="nx"&gt;CALLBACK&lt;/span&gt; &lt;span class="nx"&gt;WindowProcedure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                    &lt;span class="nx"&gt;HWND&lt;/span&gt; &lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="cm"&gt;/* Handle of window that received the msg */&lt;/span&gt;
                                    &lt;span class="nx"&gt;UINT&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="cm"&gt;/* The message */&lt;/span&gt;
                                    &lt;span class="nx"&gt;WPARAM&lt;/span&gt; &lt;span class="nx"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="cm"&gt;/* Extra parameter (e.g. mouse x) */&lt;/span&gt;
                                    &lt;span class="nx"&gt;LPARAM&lt;/span&gt; &lt;span class="nx"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="cm"&gt;/* Extra parameter (e.g. mouse y) */&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;PAINTSTRUCT&lt;/span&gt; &lt;span class="nx"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="cm"&gt;/* a structure for a paint job (see below */&lt;/span&gt;
    &lt;span class="nx"&gt;RECT&lt;/span&gt; &lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                  &lt;span class="cm"&gt;/* a structure to hold rectangle values (e.g. x,y coordinates) */&lt;/span&gt;
    &lt;span class="nx"&gt;HDC&lt;/span&gt; &lt;span class="nx"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                &lt;span class="cm"&gt;/*handle to a DC (buffer) for the screen */&lt;/span&gt;

    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="cm"&gt;/* handle the messages */&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;WM_PAINT&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="nx"&gt;GetClientRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="cm"&gt;/* get the size of our window */&lt;/span&gt;
            &lt;span class="nx"&gt;hdc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BeginPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;ps&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="cm"&gt;/* begin painting to the buffer */&lt;/span&gt;
            &lt;span class="nx"&gt;DrawText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;hdc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;DT_CENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;DT_VCENTER&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;DT_SINGLELINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="cm"&gt;/* the above actually draws the text, h &amp;amp; v centered on a single line, to the buffer */&lt;/span&gt;
            &lt;span class="nx"&gt;EndPaint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;ps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;WM_DESTROY&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="nx"&gt;PostQuitMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;        &lt;span class="cm"&gt;/* send a WM_QUIT to the message queue */&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                   &lt;span class="cm"&gt;/* for messages that we don&amp;#39;t deal with */&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;DefWindowProc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wParam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lParam&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt;typedef struct tagPAINTSTRUCT {&lt;/span&gt;
&lt;span class="cm"&gt;  HDC  hdc;     // A handle to the display DC to be used for painting. &lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fErase;          //Indicates whether the background must be erased.&lt;/span&gt;
&lt;span class="cm"&gt;  RECT rcPaint;         //specifies upperleft and lowerright corners where to be painted&lt;/span&gt;
&lt;span class="cm"&gt;                        //in device units relative to the upper-left corner of the client area.  &lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fRestore;&lt;/span&gt;
&lt;span class="cm"&gt;  BOOL fIncUpdate;&lt;/span&gt;
&lt;span class="cm"&gt;  BYTE rgbReserved&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="cm"&gt;;&lt;/span&gt;
&lt;span class="cm"&gt;}PAINTSTRUCT, *PPAINTSTRUCT;&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whew, another day done.&lt;/p&gt;</summary><category term="win32"></category><category term="gcc"></category></entry><entry><title>PHP is mad cool with CSS: 365 programming project day three</title><link href="http://blog.john-pfeiffer.com/php-is-mad-cool-with-css-365-programming-project-day-three" rel="alternate"></link><updated>2010-01-17T22:02:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-17:php-is-mad-cool-with-css-365-programming-project-day-three</id><summary type="html">&lt;p&gt;PHP is similar to C which makes it easy for me to do interesting things.&lt;/p&gt;
&lt;p&gt;The php manual webpage (&lt;a href="http://php.net/manual/en"&gt;http://php.net/manual/en&lt;/a&gt;) is brilliant! Don't you wish everybody had a full public API, easy menus, working examples, searchable and with the best user comments that really flesh out the bugs?&lt;/p&gt;
&lt;p&gt;CSS is so much better than HTML tables - it really revolutionizes the simplicity, maintainability, and power of displaying things on the web.&lt;/p&gt;
&lt;p&gt;Put them together and you have miracles like Drupal.&lt;/p&gt;
&lt;p&gt;The following project took a little more time than usual and it might even be useful one day, but what I really like about it is that it's FUN...&lt;/p&gt;
&lt;p&gt;I apologize about the poor formatting of the source code, I'll see if I can find a nicer way to enter into the Blog or break it up into "this is how you do" sections...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Many thanks to my debugger Bobby!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;php-list-to-diagram.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    This page takes a list of objects, one object per page, and displays them in a list using css.&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;br /&amp;gt;&amp;amp;nbsp;&amp;lt;br /&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    Please fill in the box below:&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;br /&amp;gt;&amp;amp;nbsp;&amp;lt;br /&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; 
    &lt;span class="c1"&gt;//The POST variable is an array with each form item as an item in the index&lt;/span&gt;
    &lt;span class="c1"&gt;//if the object list variable is not filled out then we ask the user to fill it in&lt;/span&gt;

    &lt;span class="cm"&gt;/* Clicking the submit button does the form action: the same page again with the POST data    the &amp;#39; quotations will ignore the &amp;quot; quotations which is useful when outputing HTML but sometimes very hard to read (or debug, along with spaces between HTML options) the &amp;quot; quotations allow the \n newline to be output to the HTML code spacing&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;       
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;form action=&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PHP_SELF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;//making extra spacing obvious improves readability and debugging&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;textarea name=&amp;quot;objectlist&amp;quot; cols=&amp;quot;40&amp;quot; rows=&amp;quot;20&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;                
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;/textarea&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* The else allows the user to see what they typed in last time BUT for security no slashes! */&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;   
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;stripslashes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/textarea&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;input type=&amp;quot;submit&amp;quot; /&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nv"&gt;$object_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;objectlist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;        &lt;span class="c1"&gt;//one string for all of the user entered items&lt;/span&gt;
        &lt;span class="nv"&gt;$object_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$object_list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//break the string into lines&lt;/span&gt;

        &lt;span class="nb"&gt;print_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$object_lines&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                 &lt;span class="c1"&gt;//dump the array for debugging&lt;/span&gt;

        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br /&amp;gt;&amp;amp;nbsp;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* the for loop takes each item in the array and copies it into the $value variable and it assigns the index to the $key variable.  rtrim() removes the newline the user entered in the form.&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
        &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$object_lines&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;div style=&amp;quot;position: absolute; left: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%; top: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;em;&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;//end of if-else user filled in textarea&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;


&lt;span class="x"&gt;&amp;lt;/body&amp;gt;   &lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="php"></category><category term="css"></category></entry><entry><title>Windows MessageBox: 365 programming project day two</title><link href="http://blog.john-pfeiffer.com/windows-messagebox-365-programming-project-day-two" rel="alternate"></link><updated>2010-01-16T13:07:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-16:windows-messagebox-365-programming-project-day-two</id><summary type="html">
&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;Programming in Windows is like building with legos. 
It can be easy and fun but at the same time very few of us have houses or cars made of legos. 
Of course, if you're writing an application for 90% of the computer users it will probably have to run on Windows.&lt;/p&gt;
&lt;p&gt;I've programmed with Borland, Mingw, Visual Studio and my favorite, GCC.&lt;/p&gt;
&lt;p&gt;The story of the GNU C Compiler (and Richard Stallman) is fascinating and reading "Free as in Freedom" really opened my eyes to the details of the shoulders of the giants that I'm standing upon.&lt;/p&gt;
&lt;p&gt;This tiny program opens up a message box that you can immediately close.
While not very useful it very often inspires new programmers with the power that they can quickly wield to get their ideas into a working program.&lt;/p&gt;
&lt;p&gt;Anyways, here's the win32 source code...  &lt;/p&gt;
&lt;h2 id="windows-text-editor"&gt;Windows Text Editor&lt;/h2&gt;
&lt;p&gt;Open up your favorite text editor (I very much like &lt;a href="http://www.flos-freeware.ch/notepad2.html"&gt;Notepad2&lt;/a&gt; or Bluefish)...&lt;/p&gt;
&lt;h2 id="windows-messagebox"&gt;Windows MessageBox&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* include all of the prebuilt Windows librarys to the fun stuff like GUI */&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;

&lt;span class="cm"&gt;/* the "main" will return a 1 or 0 depending on how the application terminates&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;WINAPI&lt;/span&gt; &lt;span class="nx"&gt;WinMain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nx"&gt;HINSTANCE&lt;/span&gt; &lt;span class="nx"&gt;hThisInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* Handle to the current instance */&lt;/span&gt;
&lt;span class="nx"&gt;HINSTANCE&lt;/span&gt; &lt;span class="nx"&gt;hPrevInstance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* Handle to the previous instance */&lt;/span&gt;
&lt;span class="nx"&gt;LPSTR&lt;/span&gt; &lt;span class="nx"&gt;lpszArgument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* pointer to command line arguments */&lt;/span&gt;
&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;ncmdshow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cm"&gt;/* show state of the window */&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/* call the messagebox function, no "parent", text to include, title bar text, and ? */&lt;/span&gt;
&lt;span class="nx"&gt;MessageBox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Yet another program by John Pfeiffer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Close by clicking X or OK"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="cm"&gt;/* the "main" function now returns a good result, 0 */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, lots of nice comments.  &lt;/p&gt;
&lt;p&gt;I compiled the above with a windows port of GCC that I like because I can zip and move it around and it still always works.&lt;/p&gt;
&lt;h2 id="gcc-compile-windows-app"&gt;gcc compile windows app&lt;/h2&gt;
&lt;p&gt;I DID have to come up with the funny batch file to actually make the GCC compile it on windows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc.exe -o %1.exe %1 -Iinclude -Llib -Wall -ansi -mwindows&lt;/code&gt;&lt;/p&gt;</summary><category term="Win32"></category><category term="gcc"></category></entry><entry><title>Translate This!</title><link href="http://blog.john-pfeiffer.com/translate-this" rel="alternate"></link><updated>2010-01-16T12:32:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-16:translate-this</id><summary type="html">&lt;p&gt;As I can speak bulgarian, french, and english (and almost speak italian and spanish) I realized that having my site entirely in english is limiting it's popularity.&lt;/p&gt;
&lt;p&gt;Therefore I recommend the following options to ensure that you can understand life, the universe, and the meaning of happiness:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://translate.google.com"&gt;http://translate.google.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.babelfish.com"&gt;http://www.babelfish.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;p.s. the above links will not only allow you to translate a website but you can write emails to people in foreign languages full of computer generated errors, WOW much more efficient!&lt;/p&gt;</summary></entry><entry><title>First Time Baking Bread, version .116</title><link href="http://blog.john-pfeiffer.com/first-time-baking-bread-version-116" rel="alternate"></link><updated>2010-01-16T12:03:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-16:first-time-baking-bread-version-116</id><summary type="html">&lt;p&gt;I can cook pancakes, cookies, and cake even... from the pre-made mixes.&lt;/p&gt;
&lt;p&gt;Just add water, eggs,stir, heat in oven, eat...&lt;/p&gt;
&lt;p&gt;I've tried making pancakes from scratch (next time I'll post the recipe) with ok results.&lt;/p&gt;
&lt;p&gt;My first "bread" attempt didn't actually make dough that you can roll so I'm not sure if it was bread...&lt;/p&gt;
&lt;p&gt;Mix the following in a bowl:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 glasses of flour (plain, none of that fancy already mixed stuff for
me!)  &lt;/li&gt;
&lt;li&gt;1 glass of sugar (granular cane sugar is all I had)  &lt;/li&gt;
&lt;li&gt;3 tsp of baking soda  &lt;/li&gt;
&lt;li&gt;4 tsp of salt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beat the following into a different bowl:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 eggs  &lt;/li&gt;
&lt;li&gt;1 cup of milk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then stir the two bowls together until mostly smooth.  &lt;/p&gt;
&lt;p&gt;Smear cooking oil in the bottom of a pan (mine was 1/2" by 7" by 9") to prevent sticking.  &lt;/p&gt;
&lt;p&gt;Pour the mixture into the pan (not really dough, eh?)&lt;/p&gt;
&lt;p&gt;Then I melted enough butter to put a tiny layer on top of everything in the pan (note there was lots of leftover "dough" for a second time on the pan).&lt;/p&gt;
&lt;p&gt;Baked at 200 degrees celsius for about 15 minutes then set to cool for another 10 minutes.&lt;/p&gt;
&lt;p&gt;VERDICT:  &lt;/p&gt;
&lt;p&gt;Light and ok for fluffiness. Good crust. &lt;/p&gt;
&lt;p&gt;Definitely too much baking soda but with apricot jam spread tastes fine. Serves 2-3 (or me over one day).  &lt;/p&gt;
&lt;p&gt;Good things: oil on the pan, butter on top, sugar is IMPORTANT.&lt;/p&gt;
&lt;p&gt;NEXT TIME I will try halving all of the ingredients, reducing the soda by yet another half tsp, and maybe some more sugar or vanilla/cinnamon.&lt;/p&gt;
&lt;p&gt;*LEGEND  &lt;/p&gt;
&lt;p&gt;1 small glass = about 200 ml ... is that a cup? (not quite 236ml...)&lt;/p&gt;
&lt;p&gt;ml = milliliter, tsp= teaspoon&lt;/p&gt;</summary><category term="cooking"></category></entry><entry><title>CSS Hover: 365 programming project day one</title><link href="http://blog.john-pfeiffer.com/css-hover-365-programming-project-day-one" rel="alternate"></link><updated>2010-01-15T17:38:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-15:css-hover-365-programming-project-day-one</id><summary type="html">
&lt;h2 id="365-days-of-programming"&gt;365 days of programming&lt;/h2&gt;
&lt;p&gt;I have been inspired by my wife's 365 day project
(&lt;a href="https://www.flickr.com/groups/love_life_art/pool/"&gt;https://www.flickr.com/groups/love_life_art/pool/&lt;/a&gt; to do a photograph a day for 2010.&lt;/p&gt;
&lt;p&gt;I spend my working days and much of my free time installing, repairing, updating, maintaining, and administering computers, servers, routers, business software, etc.&lt;/p&gt;
&lt;p&gt;Yet I have long wanted to focus more on Programming, and rather than spending my spare time reinstalling Linux (ok Stallman, GNU/Linux) and I thought that a little structure and motivation would help me channel my energies.&lt;/p&gt;
&lt;p&gt;So every day I will write a program, "A set of coded instructions that enables a machine, especially a computer, to perform a desired sequence of operations."&lt;/p&gt;
&lt;p&gt;To keep it a S.M.A.R.T. goal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Specific = 1 program,&lt;/li&gt;
&lt;li&gt;Measurable = per day,&lt;/li&gt;
&lt;li&gt;Achievable = I hope so,&lt;/li&gt;
&lt;li&gt;Relevant*,&lt;/li&gt;
&lt;li&gt;Tangible = all source code posted)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will try to utilize some fundamental good rules of programming:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;high level plan&lt;/li&gt;
&lt;li&gt;modular&lt;/li&gt;
&lt;li&gt;devise a test and desired outcome before you start coding&lt;/li&gt;
&lt;li&gt;clean, descriptive variable and function names with a minimum of parameters&lt;/li&gt;
&lt;li&gt;comments built into the code&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;*Relevant = my own rules for this are that it must be code writing that
makes something happen: e.g. coding html is ok, changing the color/theme
on a website by clicking a menu is not. Writing a script to install
something is ok, installing something by choosing menu options is not.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It can be on any platform or hardware Windows, Linux, WinCE, Android, laptop, desktop, server, virtual machine, phone, etc.&lt;/p&gt;
&lt;p&gt;Building up little pieces into a larger one is ok, in fact it's not only Programming best practice but one of the goals of the whole project &lt;/p&gt;
&lt;p&gt;(shhh... to be revealed at the end!)&lt;/p&gt;
&lt;p&gt;Building little applications: first a program to display hard coded data, then a program to take hard coded data and do something to it (e.g. add up a bunch of numbers), then a program to get input from a user, then a program to integrate all of the above!&lt;/p&gt;
&lt;p&gt;Learning by copying others is ok for just learning but my code has to be modified enough to represent my work and understanding.&lt;/p&gt;
&lt;p&gt;Enough talking, let's see some code!&lt;/p&gt;
&lt;h2 id="pseudo-code-aka-high-level-plan"&gt;Pseudo Code (aka high level plan)&lt;/h2&gt;
&lt;p&gt;I want a web page that when a user hovers their mouse over an image it changes.&lt;/p&gt;
&lt;p&gt;I will use html and css&lt;/p&gt;
&lt;p&gt;First I need to create the original image and the "hovered" image.&lt;/p&gt;
&lt;p&gt;My first "test" is that after I upload them I can actually see them (e.g. debugging that they're at the right location)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- this is embeddeding my cascading style sheet commands directly into the HTML --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- a block displays down, inline would display it to the right &lt;/span&gt;
&lt;span class="c"&gt;The width and the height of the image are important (otherwise it won't all show)&lt;/span&gt;
&lt;span class="c"&gt;We remove "text decoration" to prevent any funny "anchor link" borders  &lt;/span&gt;
&lt;span class="c"&gt;--&amp;gt;&lt;/span&gt;

#rollover {
display: block;
width: 190px;
height: 80px;
text-decoration: none;
background: url("http://kittyandbear.net/images/blog/usa-image.png") no-repeat 0 0;
}

#rollover:hover
{
width: 190px;
height: 80px;
text-decoration: none;
background:
url("http://kittyandbear.net/images/blog/usa-image-hover.png") no-repeat 0 0;
}

&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
I require 2 images, the original and a "hovered over" image:
&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"rollover"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Notice there was a delay sometimes, 
a recommended solution would be to 
use a single image and a tricky 
"only show the half that you want to see", 
e.g. normal top half, "hover" = lower half.

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Voila!  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://kittyandbear.net/john/web-tutorials/css-image-mouseover.htm"&gt;http://kittyandbear.net/john/web-tutorials/css-image-mouseover.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One down, many more to go!&lt;/p&gt;</summary><category term="css"></category><category term="html"></category><category term="365"></category></entry><entry><title>Install Virtualbox 3 on Debian 5 gui</title><link href="http://blog.john-pfeiffer.com/install-virtualbox-3-on-debian-5-gui" rel="alternate"></link><updated>2010-01-09T07:00:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-09:install-virtualbox-3-on-debian-5-gui</id><summary type="html">
&lt;p&gt;NOTE: this is a command line installation of VirtualBox 3 proprietary driver edition...&lt;/p&gt;
&lt;p&gt;The "open source edition" does not include RDP into VM's nor USB drivers for VM's to access host USB's&lt;/p&gt;
&lt;h3 id="preparation-steps"&gt;Preparation Steps&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;uname -r //find your kernel version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-cache search linux-headers //in the long list see if your version is there&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install linux-headers-$(uname -r) //failed because I have "squeeze" 2.6.32-rc8-686&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;unfortunately the rc8 headers were missing from debian website&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;apt-get install linux-headers-2.6.32-trunk-686 //manual way (instead of the fancy function returns a result)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -ahl /usr/src //ensure the folders are there, sometimes no kernel folder&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export KERN_DIR=/usr/src/kernels/2.6.32-trunk-686 //sometimes instead /usr/src/2.6.32-trunk-686&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="actual-installation"&gt;Actual Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.virtualbox.org/wiki/Linux_Downloads"&gt;http://www.virtualbox.org/wiki/Linux_Downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano /etc/apt/sources.list //add line&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://download.virtualbox.org/virtualbox/debian&lt;/span&gt; &lt;span class="kp"&gt;lenny&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;apt-get update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-cache search virtualbox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install virtualbox-3.0 //install without verification...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo addusers username vboxusers&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OR &lt;code&gt;usermod -a -G vboxusers USERNAME&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="gui-management"&gt;GUI Management&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Setting up virtualbox-3.0 (3.0.12-54655_Debian_lenny) ...
addgroup: The group \`vboxusers' already exists as a system group.
Exiting.

Messages emitted during module compilation will be logged to /var/log/vbox-install.log.
Success!

Starting VirtualBox kernel module:done..

Setting up libsdl-ttf2.0-0 (2.0.9-1) ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;type &lt;code&gt;VBoxManage -v&lt;/code&gt; to see if everything is working (shows your VirtualBox version)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VirtualBox&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this command starts the GUI interface where you can easily create/manage&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;you can test it - from the command line create and start a VM, you'll see it appear in the GUI!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBoxManage createvm --name VM1 --register&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VBoxManage startvm VM1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;VirtualBox GUI is pretty straightforward but I highly recommend that you
skim the manual and especially that you learn to play with the command line VBoxManage&lt;/p&gt;
&lt;h3 id="troubleshooting"&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/etc/init.d/vbox_drv setup&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The above command often fails, and when it fails, check the install log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;nano /var/log/vbox-install.log&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;no kernel headers installed/downloaded or export (so the OS knows where!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the user running VirtualBox needs to be in the /etc/group/vboxusers&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;if you have not installed the right headers (e.g. Virtualbox is compiling a driver specific to your kernel)&lt;/p&gt;
&lt;p&gt;So you need gcc, make... also you need the kernel-headers source&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uname -a&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;will show you exactly what kernel you have installed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ls -ahl /usr/src&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;will show you exactly what directories are there... &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;see some varations:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export KERN_DIR=/usr/src/2.6.32-trunk-686
export KERN_DIR=/usr/src/kernels/2.6.32-trunk-686
export KERN_DIR=/usr/src/kernels/2.6.18-128.4.1.el5-x86_64/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get remove virtualbox-3.0&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the easiest method to uninstall&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;do all of the fixes (e.g. in my case I had to downgrade my kernel from 2.6.32-rc8 to 2.6.32-trunk)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install linux-image-686
sudo apt-get install linux-headers-$(uname -r)
export KERN_DIR=/usr/src/2.6.32-trunk-686
sudo apt-get install virtualbox-3.0
usermod -a -G vboxusers USERNAME
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;after the reinstall hopefully you'll see:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Setting up libcurl3 (7.19.7-1) ...
Setting up virtualbox-3.0 (3.0.12-54655\_Debian\_lenny) ...
addgroup: The group \`vboxusers' already exists as a system group.
Exiting.

Messages emitted during module compilation will be logged to /var/log/vbox-install.log.
Success!

Starting VirtualBox kernel module:done..

Setting up libsdl-ttf2.0-0 (2.0.9-1) ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;type &lt;code&gt;VBoxManage -v&lt;/code&gt; to see if everything is working (shows your VirtualBox version)&lt;/p&gt;</summary><category term="virtualbox"></category><category term="debian"></category></entry><entry><title>How to use Drupal Blocks and a custom php hit counter block</title><link href="http://blog.john-pfeiffer.com/how-to-use-drupal-blocks-and-a-custom-php-hit-counter-block" rel="alternate"></link><updated>2010-01-06T14:15:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-06:how-to-use-drupal-blocks-and-a-custom-php-hit-counter-block</id><summary type="html">&lt;p&gt;Blocks control the layout of the pages, i.e. a "footer" block appears at the bottom of each page.&lt;/p&gt;
&lt;p&gt;Each theme might have a different layout (and blocks available), and of course you can add your own custom blocks.&lt;/p&gt;
&lt;p&gt;Using the WebUI you can modify the look of the site's layout pretty quickly:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Administer -&amp;gt; Blocks&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Drag and drop the "Powered by Drupal" option from &lt;strong&gt;FOOTER&lt;/strong&gt; into &lt;strong&gt;DISABLED&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ADVANCED&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;a custom php block (maybe dangerous)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;admin/build/block&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;create a new block&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;in the body (plain text!) insert (copy paste?) your code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Input Format = PHP code 
(Core Module -&amp;gt; Optional -&amp;gt; PHP Filter must be enabled)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;Home -&amp;gt; Administer -&amp;gt; Site Configuration -&amp;gt; Input Format&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;admin/settings/filters&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PHP code -&amp;gt; configure&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(the super user System Administrator ALREADY has this filter, the above only allows you to add other users which is dangerous!)&lt;/p&gt;
&lt;p&gt;IF HITFILE EXISTS:     read current count&lt;/p&gt;
&lt;p&gt;IF NOT, return error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hit-counter.txt&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a+&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//r+ = read + write, start at beginning&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_writable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test123&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;test456&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;test789&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;



&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;
&lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hit-counter.txt&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//r = read, starts at beginning  &lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;error accessing file&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;fseek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$filecontents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$filecontents&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;//the file only contains an integer&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nv"&gt;$filecontents&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//r = read, starts at beginning  &lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;error accessing file&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_writable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;fseek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;    
      &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$filecontents&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file_pointer&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="drupal"></category></entry><entry><title>Drupal Site Offline - how to login</title><link href="http://blog.john-pfeiffer.com/drupal-site-offline-how-to-login" rel="alternate"></link><updated>2010-01-06T13:53:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2010-01-06:drupal-site-offline-how-to-login</id><summary type="html">&lt;h2 id="drupal-site-is-offline-for-maintenance-message"&gt;Drupal: "Site is offline for maintenance" message&lt;/h2&gt;
&lt;p&gt;I turned my website offline for maintenance and then logged out (or wanted to work on it from another computer).&lt;/p&gt;
&lt;p&gt;All I got was the &lt;strong&gt;"Site is offline for maintenance message".&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="the-solution"&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Type the following address into your browser:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://your-drupal-website.com/user"&gt;http://your-drupal-website.com/user&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;a href="http://your-drupal-website.com/?=user"&gt;http://your-drupal-website.com/?=user&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This will take you to the user login prompt - if you are the Administrator user you can then turn the site back online.&lt;/p&gt;</summary><category term="drupal"></category></entry><entry><title>How To Install Virtualbox 3 on CentOS 5 Minimal</title><link href="http://blog.john-pfeiffer.com/how-to-install-virtualbox-3-on-centos-5-minimal" rel="alternate"></link><updated>2009-11-15T20:59:00-08:00</updated><author><name>john pfeiffer</name></author><id>tag:blog.john-pfeiffer.com,2009-11-15:how-to-install-virtualbox-3-on-centos-5-minimal</id><summary type="html">&lt;p&gt;From the install DVD:&lt;/p&gt;
&lt;p&gt;choose no packages and customize all to deselect all packages&lt;/p&gt;
&lt;p&gt;BEWARE: this is a very empty configuration so you will have to install A LOT from yum...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install wget elinks sudo which&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IF you need to do anything with "compiling"  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;yum install make gcc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install kernel&lt;/code&gt;  ? maybe necessary?  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install kernel-devel-$(uname -r)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install kernel-headers-$(uname -r)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export KERN_DIR=/usr/src/kernels/$(uname -r)-x86_64&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="to-add-a-repository-eg-virtualbox"&gt;to add a repository, e.g. VirtualBox&lt;/h2&gt;
&lt;p&gt;So create the following file (in the directory) /etc/yum.repos.d/virtualbox.repo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[virtualbox]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;RHEL/CentOS-$releasever / $basearch - VirtualBox  &lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://download.virtualbox.org/virtualbox/rpm/rhel/$releasever/$basearch  &lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1  &lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1  &lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then try&lt;/p&gt;
&lt;p&gt;yum install virtualbox&lt;/p&gt;
&lt;h2 id="download-locations"&gt;download locations&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.centos.org"&gt;http://www.centos.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://download.virtualbox.org/virtualbox/rpm/rhel/"&gt;http://download.virtualbox.org/virtualbox/rpm/rhel/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc"&gt;http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc&lt;/a&gt;&lt;/p&gt;</summary><category term="virtualbox"></category><category term="centos"></category></entry></feed>