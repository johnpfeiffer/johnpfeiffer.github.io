<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>johnpfeiffer</title><link href="/" rel="alternate"></link><link href="/feeds/john-pfeiffer.atom.xml" rel="self"></link><id>/</id><updated>2014-07-10T17:00:00Z</updated><entry><title>Docker Intro install run and port forward</title><link href="/docker-intro-install-run-and-port-forward" rel="alternate"></link><updated>2014-07-10T17:00:00Z</updated><author><name>john pfeiffer</name></author><id>tag:,2014-07-10:docker-intro-install-run-and-port-forward</id><summary type="html">&lt;p&gt;Docker is a union file system based layer system leveraging linux lxc containers for ultra lightweight virtualization/compartmentalization&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Images are the initial templates, each image has a unique ID&lt;/li&gt;
&lt;li&gt;Containers are the running virtual machines, each container has a unique ID&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="install-docker"&gt;Install Docker&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://docs.docker.com/installation/ubuntulinux/#ubuntu-trusty-1404-lts-64-bit"&gt;Docker on Ubuntu 14.04&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sh -c "echo deb https://get.docker.io/ubuntu docker main &amp;gt; /etc/apt/sources.list.d/docker.list"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install lxc-docker&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h3 id="start-a-docker-image"&gt;Start a docker image&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo docker pull ubuntu:14.04&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;From now on it is assumed you use sudo before any docker command!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --help&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -i -t ubuntu:14.04 /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;rm&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;exits&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;keep&lt;/span&gt; &lt;span class="n"&gt;stdin&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;even&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;attached&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;allocate&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;tty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attach&lt;/span&gt; &lt;span class="n"&gt;stdin&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;
&lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt; &lt;span class="mf"&gt;14.04&lt;/span&gt; &lt;span class="n"&gt;minimal&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;
&lt;span class="n"&gt;Runs&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;interactive&lt;/span&gt; &lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This will continue to exist in a stopped state once exited (see "docker ps -a")&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;f5878ed6016e&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;issue&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;f5878ed6016e&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;uname&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;f5878ed6016e&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Control-p then Control-q to detach the tty without exiting the shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run ubuntu:14.04 uname -a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker attach f5878ed6016e&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Control + C&lt;/code&gt; &lt;em&gt;(now we have exited the container and it will clean itself up)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;spun&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;another&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;enough&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;
&lt;span class="n"&gt;CONTAINER&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="n"&gt;IMAGE&lt;/span&gt;        &lt;span class="n"&gt;COMMAND&lt;/span&gt;      &lt;span class="n"&gt;CREATED&lt;/span&gt;      &lt;span class="n"&gt;STATUS&lt;/span&gt;    &lt;span class="n"&gt;PORTS&lt;/span&gt;         &lt;span class="n"&gt;NAMES&lt;/span&gt;
&lt;span class="n"&gt;e4b436320442&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;14.04&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;uname&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;              &lt;span class="n"&gt;elegant_engelbart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;docker rm e4b436320442&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alternatively: &lt;code&gt;docker rm elegant_engelbart&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="git-on-docker-ubuntu1404"&gt;Git on docker ubuntu:14.04&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker run -i -t ubuntu:14.04 /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Control + p then Control + q&lt;/code&gt; &lt;em&gt;(to detach the tty without exiting the shell)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a&lt;/code&gt; &lt;em&gt;(make a note of the ID or NAME)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker attach ID_OR_NAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get update; apt-get install git -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd /root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git --version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://johnpfeiffer@bitbucket.org/johnpfeiffer/myrepo.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;now the Container will have git installed, a repo cloned, and will be stopped&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;docker commit container_name_here johnpfeiffer_git_repo&lt;blockquote&gt;
&lt;p&gt;4a74440186d976caeccc52f5ed2bd44269beb84d472391a7ce26ee3db8ffc1e9&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;docker images&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;output
    REPOSITORY               TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
    johnpfeiffer_git_repo    latest              4a74440186d9        54 seconds ago      402 MB
    ubuntu                   14.04               e54ca5efa2e9        3 weeks ago         276.5 MB&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h3 id="add-a-port-to-an-image"&gt;Add a port to an image&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker run -i -t -p 127.0.0.1:8000:8000 --name john johnpfeiffer_git_repo:latest /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control+p then control+q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker attach john&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd /root/myrepo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican content  (assuming pelicanconf.py is here)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control+p then control+q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://127.0.0.1:8000&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h3 id="python-and-pelican-static-site-generator-on-docker-ubuntu1404"&gt;Python and Pelican static site generator on docker ubuntu:14.04&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;apt-get update; apt-get install python python-setuptools openssl wget -y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget -qO- https://raw.github.com/pypa/pip/master/contrib/get-pip.py | sudo python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install pelican Markdown beautifulsoup4&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;hr/&gt;
&lt;h3 id="dockerfile-to-automate-building-a-container"&gt;DockerFile to automate building a container&lt;/h3&gt;
&lt;p&gt;vi mydockerfile&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;14.04&lt;/span&gt;
&lt;span class="n"&gt;MAINTAINER&lt;/span&gt; &lt;span class="n"&gt;John&lt;/span&gt; &lt;span class="n"&gt;Pfeiffer&lt;/span&gt;

&lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;openssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
&lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sshd&lt;/span&gt;
&lt;span class="n"&gt;CMD&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sshd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Each&lt;/span&gt; &lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;creates&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;intermediate&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;docker build -t=newimagetag -rm=true .&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;docker run -v $HOSTDIR:$DOCKERDIR&lt;/p&gt;
&lt;h3 id="useful-commands"&gt;Useful Commands&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo docker info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker images&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker images --help&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="download-all-ubuntu-docker-images"&gt;Download all ubuntu docker images&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo docker pull ubuntu&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pulling repository ubuntu
58faa899733f: Download complete 
195eb90b5349: Download complete 
&lt;em&gt;hundreds of megabytes downloaded&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker images&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="remove-an-image"&gt;Remove an image&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker rmi 3db9c44f4520&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker search stackbrew/ubuntu&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FYI stackbrew/ubuntu is the same as ubuntu , 
&lt;a href="https://registry.hub.docker.com/u/stackbrew/ubuntu"&gt;stackbrew is the curated Docker registry&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;docker start -i -a IDORNAME&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker images --tree&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker commit --help&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run -d -p 127.0.0.1:5000:5000 training/webapp python app.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker port IDORNAME&lt;/code&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="advanced-docker-pre-built-images"&gt;Advanced Docker pre built images&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -t -i phusion/baseimage /sbin/my_init -- bash -l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -t -i phusion/passenger-full bash -l&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;root@f4b25455699c:/#&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/phusion/passenger-docker"&gt;Docker for Web app development&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;REPOSITORY               TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
phusion/passenger-full   latest              5327fda0d529        2 weeks ago         732 MB&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;https://www.phusionpassenger.com/documentation_and_support&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="more-info"&gt;More Info&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://gist.github.com/wsargent/7049221&lt;/li&gt;
&lt;li&gt;https://docs.docker.com/reference/commandline/cli/#run&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Markdown syntax cheatsheet</title><link href="/markdown-syntax-cheatsheet" rel="alternate"></link><updated>2014-07-02T20:21:00Z</updated><author><name>john pfeiffer</name></author><id>tag:,2014-07-02:markdown-syntax-cheatsheet</id><summary type="html">&lt;ul&gt;
&lt;li&gt;html &amp;lt;em&amp;gt; is markdown &lt;code&gt;*emphasis* or _italics_&lt;/code&gt; = &lt;em&gt;emphasis&lt;/em&gt; or &lt;em&gt;italics&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;html &amp;lt;strong&amp;gt; is markdown &lt;code&gt;**strong* or __bold__&lt;/code&gt; = &lt;strong&gt;strong&lt;/strong&gt; or &lt;strong&gt;bold&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;html strikethrough is not supported but can just be &lt;code&gt;&amp;lt;del&amp;gt;strikethrough&amp;lt;/del&amp;gt;&lt;/code&gt; = &lt;del&gt;strikethrough&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;blockquote&amp;gt; is markdown &lt;code&gt;&amp;gt;&lt;/code&gt; at the start of each line&lt;/li&gt;
&lt;li&gt;unordered list &lt;code&gt;- item&lt;/code&gt; or alternatives: &lt;code&gt;+ item&lt;/code&gt; , &lt;code&gt;* item&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;hr /&amp;gt; is markdown &lt;code&gt;- - -&lt;/code&gt; or alternatives: &lt;code&gt;* * *&lt;/code&gt; , &lt;code&gt;***&lt;/code&gt; , &lt;code&gt;*****&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;html &amp;lt;a href= for hyper links is:&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;[an example](http://example.com/ "ExampleTitle")&lt;/code&gt; &lt;a href="/about-john-pfeiffer" title="ExampleTitle"&gt;an example&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;both absolute and relative links are supported, as well as reference links that are defined elsewhere:
&lt;code&gt;This is [an example][someid]&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;[someid]: http://example.com/  "Optional Title Here"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;numbered list &lt;code&gt;1&lt;/code&gt; at the beginning of each line&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;any digit will do, the numbering is rendered in order&lt;/li&gt;
&lt;li&gt;ensure the numbered list is surrounded by empty lines&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Inline code&lt;/strong&gt; is markdown `backtick around the text` = &lt;code&gt;backtick around the text&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A code block&lt;/strong&gt; is markdown &lt;code&gt;indent 4 spaces or 1 tab&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;a blank line in the code block still needs to be indented&lt;/li&gt;
&lt;li&gt;ensure the code block is surrounded by empty lines&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id="h1-h1"&gt;H1  &lt;code&gt;# H1&lt;/code&gt;&lt;/h1&gt;
&lt;h6 id="h6-h6"&gt;H6  &lt;code&gt;###### H6&lt;/code&gt;&lt;/h6&gt;
&lt;p&gt;&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;more info&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Creating a static web site with Bitbucket</title><link href="/creating-a-static-web-site-with-bitbucket" rel="alternate"></link><updated>2014-06-30T20:20:00Z</updated><author><name>John Pfeiffer</name></author><id>tag:,2014-06-30:creating-a-static-web-site-with-bitbucket</id><summary type="html">&lt;p&gt;While you can use a CNAME for HTTP, (usually a subdomain like blog.example.com), it will not work with HTTPS (no option to upload your own cert).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;create a bitbucket account with username&lt;/li&gt;
&lt;li&gt;create a repo named username.bitbucket.org&lt;/li&gt;
&lt;li&gt;mkdir username.bitbucket.org&lt;/li&gt;
&lt;li&gt;cd username.bitbucket.org&lt;/li&gt;
&lt;li&gt;echo "hi" &amp;gt; index.html&lt;/li&gt;
&lt;li&gt;git init .&lt;/li&gt;
&lt;li&gt;git add&lt;/li&gt;
&lt;li&gt;git commit -m "first site index"&lt;/li&gt;
&lt;li&gt;git remote add origin git@bitbucket.org:username/username.bitbucket.org.git&lt;/li&gt;
&lt;li&gt;git push origin master&lt;/li&gt;
&lt;li&gt;git branch --set-upstream master origin/master&lt;/li&gt;
&lt;li&gt;git pull&lt;/li&gt;
&lt;li&gt;https://username.bitbucket.org&lt;/li&gt;
&lt;/ol&gt;</summary><category term="programming"></category></entry><entry><title>How to set up a Pelican static blog site</title><link href="/how-to-set-up-a-pelican-static-blog-site" rel="alternate"></link><updated>2014-06-21T20:21:00Z</updated><author><name>john pfeiffer</name></author><id>tag:,2014-06-21:how-to-set-up-a-pelican-static-blog-site</id><summary type="html">&lt;p&gt;Pelican is an open source project that converts static text files into an html site.&lt;/p&gt;
&lt;h2 id="install-pelican"&gt;Install Pelican&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sudo pip install pelican Markdown&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;installing both the pelican and the Markdown packages&lt;/li&gt;
&lt;li&gt;optionally use virtualenv venv; source venv/bin/activate&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pelican-quickstart&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Welcome to pelican-quickstart v3.3.0.
This script will help you create a new Pelican-based website.
Please answer the following questions so this script can generate the files needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.]
&amp;gt; What will be the title of this web site? johnpfeiffer.bitbucket.org
&amp;gt; Who will be the author of this web site? john pfeiffer
&amp;gt; What will be the default language of this web site? [en]
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)
&amp;gt; What is your URL prefix? (see above example; no trailing slash) https://johnpfeiffer.bitbucket.org
&amp;gt; Do you want to enable article pagination? (Y/n)
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n)
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n)
&amp;gt; Do you want to upload your website using FTP? (y/N)
&amp;gt; Do you want to upload your website using SSH? (y/N)
&amp;gt; Do you want to upload your website using Dropbox? (y/N)
&amp;gt; Do you want to upload your website using S3? (y/N)
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)
Done. Your new project is available at /home/ubuntu/BLOG
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;tree&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
├── content
├── develop_server.sh
├── fabfile.py
├── Makefile
├── output
├── pelicanconf.py
└── publishconf.py

2 directories, 5 files
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;mkdir -p images&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir -p content/pages&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi content/hello_world.md&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: My first blog post
Date: 2014-06-21 20:20
Tags: python
Slug: my-first-blog-post
Author: John Pfeiffer
Summary: Short version for index and feeds

This is the content of my first blog post.
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;make devserver&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;...Starting up Pelican and pelican.server...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;./develop_server.sh stop&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;stop the dev server (required if reloading the .conf file)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;This only works with the basic first setup, after that it is better to manually use multiple screens:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make clean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make regenerate&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;auto detects any content changes and reloads itself&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cd output; python -m SimpleHTTPServer&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Serving HTTP on 0.0.0.0 port 8000 ... (Control + C to quit)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;http://localhost:8000&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;vi pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# clean urls for pages&lt;/span&gt;
&lt;span class="n"&gt;PAGE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PAGE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="cp"&gt;# clean urls for articles&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;


&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="cp"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="cp"&gt;#RELATIVE_URLS = True&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;themes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;elegant&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;sitemap&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;extract_toc&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;tipue_search&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;MD_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;codehilite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;css_class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;headerid&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;toc&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;DIRECT_TEMPLATES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;archives&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;



&lt;span class="cp"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="cp"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;__future__&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;john&lt;/span&gt; &lt;span class="n"&gt;pfeiffer&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;johnpfeiffer&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;OUTPUT_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;-%&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;-%&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="cp"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3 id="importing-from-drupal"&gt;Importing from drupal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hack the Drupal files to allow a lot more than 10 items per feed:
&lt;code&gt;grep -r 'items per feed' .&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;learned from drupal-7.28/modules/system/system.module&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;vi modules/system/system.admin.inc&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$form['feed_default_items']&lt;/p&gt;
&lt;p&gt;Add to the dropdown choices of 10, 15, 30 etc. the option of 999&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install pandoc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pip install feedparser&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican-import -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican-import --feed http://blog.example.com/rss.xml -o output/ -m markdown&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-themes"&gt;https://github.com/getpelican/pelican-themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/getpelican/pelican-themes ~/pelican-themes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pelican.readthedocs.org/en/latest/pelican-themes.html"&gt;http://pelican.readthedocs.org/en/latest/pelican-themes.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo pelican-themes --install ~/pelican-themes/foundation-default-colours&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Installing themes...&lt;/p&gt;
&lt;p&gt;Copying /home/ubuntu/pelican-themes/foundation-default-colours to /usr/local/lib/python2.7/dist-packages/pelican/themes/foundation-default-colours...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;pelican-themes --list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;THEME = "/home/ubuntu/pelican-themes/foundation-default-colours"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tweaking default syntax highlighting: http://pygments.org/docs/lexers/&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;https://github.com/getpelican/pelican-plugins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/getpelican/pelican-plugins&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;sitemap&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;priorities&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;indexes&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;changefreqs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;monthly&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;indexes&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;daily&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;monthly&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category></entry><entry><title>Yes, Change your Password regularly</title><link href="/yes-change-your-password-regularly" rel="alternate"></link><updated>2011-12-27T17:10:00Z</updated><author><name>John Pfeiffer</name></author><id>tag:,2011-12-27:yes-change-your-password-regularly</id><summary type="html">&lt;div class="field field-name-body field-type-text-with-summary field-label-hidden"&gt;
&lt;div class="field-items"&gt;
&lt;div class="field-item even"&gt;
Security is risk management: the hundreds of articles about "changing
passwords doesn't improve security" are just hype/noise without context.

&lt;/p&gt;

While "changing the highly complex password every 90 days" is considered
inefficient and draconian... But what about changing the password once a
year?

&lt;/p&gt;

While it's likely that an external attacker or disgruntled employee will
use a compromised password immediately, it doesn't mean there isn't a
good reason to choose a frequency of password change:

&lt;/p&gt;

If a sticky note attached to a laptop sold at a garage sale is still
valid for the company's online bank account then you're in trouble.

&lt;/p&gt;

Reduce the risk, have a policy to manage that window of access to
something you're comfortable with.

&lt;/p&gt;

Plus, Dependency Visibility and the opportunity to improve your
infrastructure is well worth the cost of finding every hard coded place
that a password is embedded in your organization (e.g. you know that you
just changed the password and you quickly find something not working as
opposed to a random event like a forgotten password reset by one
individual in the organization that creates a mystery problem in mission
critical systems for IT to track down).

&lt;/p&gt;
&lt;p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="field field-name-taxonomy-vocabulary-1 field-type-taxonomy-term-reference field-label-above clearfix"&gt;&lt;/p&gt;
&lt;h3 id="tags"&gt;tags:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://john-pfeiffer.com/category/it"&gt;IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</summary></entry></feed>